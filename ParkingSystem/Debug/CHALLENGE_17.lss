
CHALLENGE_17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  0000c520  0000c5b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000c520  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000067  0080037e  0080037e  0000c832  2**0
                  ALLOC
  3 .stab         00007e30  00000000  00000000  0000c834  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00003c38  00000000  00000000  00014664  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  0001829c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000020f  00000000  00000000  0001845c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000030e2  00000000  00000000  0001866b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000156a  00000000  00000000  0001b74d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014dd  00000000  00000000  0001ccb7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  0001e194  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000376  00000000  00000000  0001e374  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000022ac  00000000  00000000  0001e6ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00020996  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 ba 2a 	jmp	0x5574	; 0x5574 <__vector_11>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 0a 2b 	jmp	0x5614	; 0x5614 <__vector_14>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 72 5c 	jmp	0xb8e4	; 0xb8e4 <__vector_16>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e0       	ldi	r17, 0x03	; 3
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e0 e2       	ldi	r30, 0x20	; 32
      a0:	f5 ec       	ldi	r31, 0xC5	; 197
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 37       	cpi	r26, 0x7E	; 126
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	13 e0       	ldi	r17, 0x03	; 3
      b4:	ae e7       	ldi	r26, 0x7E	; 126
      b6:	b3 e0       	ldi	r27, 0x03	; 3
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3e       	cpi	r26, 0xE5	; 229
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 be 5c 	call	0xb97c	; 0xb97c <main>
      c6:	0c 94 8e 62 	jmp	0xc51c	; 0xc51c <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__ashldi3>:
      ce:	ef 92       	push	r14
      d0:	ff 92       	push	r15
      d2:	0f 93       	push	r16
      d4:	df 93       	push	r29
      d6:	cf 93       	push	r28
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
      dc:	60 97       	sbiw	r28, 0x10	; 16
      de:	0f b6       	in	r0, 0x3f	; 63
      e0:	f8 94       	cli
      e2:	de bf       	out	0x3e, r29	; 62
      e4:	0f be       	out	0x3f, r0	; 63
      e6:	cd bf       	out	0x3d, r28	; 61
      e8:	a8 2f       	mov	r26, r24
      ea:	00 23       	and	r16, r16
      ec:	09 f4       	brne	.+2      	; 0xf0 <__ashldi3+0x22>
      ee:	61 c0       	rjmp	.+194    	; 0x1b2 <__ashldi3+0xe4>
      f0:	7e 01       	movw	r14, r28
      f2:	08 94       	sec
      f4:	e1 1c       	adc	r14, r1
      f6:	f1 1c       	adc	r15, r1
      f8:	88 e0       	ldi	r24, 0x08	; 8
      fa:	f7 01       	movw	r30, r14
      fc:	11 92       	st	Z+, r1
      fe:	8a 95       	dec	r24
     100:	e9 f7       	brne	.-6      	; 0xfc <__ashldi3+0x2e>
     102:	29 83       	std	Y+1, r18	; 0x01
     104:	3a 83       	std	Y+2, r19	; 0x02
     106:	4b 83       	std	Y+3, r20	; 0x03
     108:	5c 83       	std	Y+4, r21	; 0x04
     10a:	6d 83       	std	Y+5, r22	; 0x05
     10c:	7e 83       	std	Y+6, r23	; 0x06
     10e:	af 83       	std	Y+7, r26	; 0x07
     110:	98 87       	std	Y+8, r25	; 0x08
     112:	80 e2       	ldi	r24, 0x20	; 32
     114:	80 1b       	sub	r24, r16
     116:	e8 2f       	mov	r30, r24
     118:	ff 27       	eor	r31, r31
     11a:	e7 fd       	sbrc	r30, 7
     11c:	f0 95       	com	r31
     11e:	49 81       	ldd	r20, Y+1	; 0x01
     120:	5a 81       	ldd	r21, Y+2	; 0x02
     122:	6b 81       	ldd	r22, Y+3	; 0x03
     124:	7c 81       	ldd	r23, Y+4	; 0x04
     126:	18 16       	cp	r1, r24
     128:	84 f0       	brlt	.+32     	; 0x14a <__ashldi3+0x7c>
     12a:	19 86       	std	Y+9, r1	; 0x09
     12c:	1a 86       	std	Y+10, r1	; 0x0a
     12e:	1b 86       	std	Y+11, r1	; 0x0b
     130:	1c 86       	std	Y+12, r1	; 0x0c
     132:	88 27       	eor	r24, r24
     134:	99 27       	eor	r25, r25
     136:	8e 1b       	sub	r24, r30
     138:	9f 0b       	sbc	r25, r31
     13a:	04 c0       	rjmp	.+8      	; 0x144 <__ashldi3+0x76>
     13c:	44 0f       	add	r20, r20
     13e:	55 1f       	adc	r21, r21
     140:	66 1f       	adc	r22, r22
     142:	77 1f       	adc	r23, r23
     144:	8a 95       	dec	r24
     146:	d2 f7       	brpl	.-12     	; 0x13c <__ashldi3+0x6e>
     148:	28 c0       	rjmp	.+80     	; 0x19a <__ashldi3+0xcc>
     14a:	20 2f       	mov	r18, r16
     14c:	33 27       	eor	r19, r19
     14e:	27 fd       	sbrc	r18, 7
     150:	30 95       	com	r19
     152:	db 01       	movw	r26, r22
     154:	ca 01       	movw	r24, r20
     156:	02 2e       	mov	r0, r18
     158:	04 c0       	rjmp	.+8      	; 0x162 <__ashldi3+0x94>
     15a:	88 0f       	add	r24, r24
     15c:	99 1f       	adc	r25, r25
     15e:	aa 1f       	adc	r26, r26
     160:	bb 1f       	adc	r27, r27
     162:	0a 94       	dec	r0
     164:	d2 f7       	brpl	.-12     	; 0x15a <__ashldi3+0x8c>
     166:	89 87       	std	Y+9, r24	; 0x09
     168:	9a 87       	std	Y+10, r25	; 0x0a
     16a:	ab 87       	std	Y+11, r26	; 0x0b
     16c:	bc 87       	std	Y+12, r27	; 0x0c
     16e:	04 c0       	rjmp	.+8      	; 0x178 <__ashldi3+0xaa>
     170:	76 95       	lsr	r23
     172:	67 95       	ror	r22
     174:	57 95       	ror	r21
     176:	47 95       	ror	r20
     178:	ea 95       	dec	r30
     17a:	d2 f7       	brpl	.-12     	; 0x170 <__ashldi3+0xa2>
     17c:	8d 81       	ldd	r24, Y+5	; 0x05
     17e:	9e 81       	ldd	r25, Y+6	; 0x06
     180:	af 81       	ldd	r26, Y+7	; 0x07
     182:	b8 85       	ldd	r27, Y+8	; 0x08
     184:	04 c0       	rjmp	.+8      	; 0x18e <__ashldi3+0xc0>
     186:	88 0f       	add	r24, r24
     188:	99 1f       	adc	r25, r25
     18a:	aa 1f       	adc	r26, r26
     18c:	bb 1f       	adc	r27, r27
     18e:	2a 95       	dec	r18
     190:	d2 f7       	brpl	.-12     	; 0x186 <__ashldi3+0xb8>
     192:	48 2b       	or	r20, r24
     194:	59 2b       	or	r21, r25
     196:	6a 2b       	or	r22, r26
     198:	7b 2b       	or	r23, r27
     19a:	4d 87       	std	Y+13, r20	; 0x0d
     19c:	5e 87       	std	Y+14, r21	; 0x0e
     19e:	6f 87       	std	Y+15, r22	; 0x0f
     1a0:	78 8b       	std	Y+16, r23	; 0x10
     1a2:	29 85       	ldd	r18, Y+9	; 0x09
     1a4:	3a 85       	ldd	r19, Y+10	; 0x0a
     1a6:	4b 85       	ldd	r20, Y+11	; 0x0b
     1a8:	5c 85       	ldd	r21, Y+12	; 0x0c
     1aa:	6d 85       	ldd	r22, Y+13	; 0x0d
     1ac:	7e 85       	ldd	r23, Y+14	; 0x0e
     1ae:	af 85       	ldd	r26, Y+15	; 0x0f
     1b0:	98 89       	ldd	r25, Y+16	; 0x10
     1b2:	8a 2f       	mov	r24, r26
     1b4:	60 96       	adiw	r28, 0x10	; 16
     1b6:	0f b6       	in	r0, 0x3f	; 63
     1b8:	f8 94       	cli
     1ba:	de bf       	out	0x3e, r29	; 62
     1bc:	0f be       	out	0x3f, r0	; 63
     1be:	cd bf       	out	0x3d, r28	; 61
     1c0:	cf 91       	pop	r28
     1c2:	df 91       	pop	r29
     1c4:	0f 91       	pop	r16
     1c6:	ff 90       	pop	r15
     1c8:	ef 90       	pop	r14
     1ca:	08 95       	ret

000001cc <__fixunssfsi>:
     1cc:	ef 92       	push	r14
     1ce:	ff 92       	push	r15
     1d0:	0f 93       	push	r16
     1d2:	1f 93       	push	r17
     1d4:	7b 01       	movw	r14, r22
     1d6:	8c 01       	movw	r16, r24
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	40 e0       	ldi	r20, 0x00	; 0
     1de:	5f e4       	ldi	r21, 0x4F	; 79
     1e0:	0e 94 77 11 	call	0x22ee	; 0x22ee <__gesf2>
     1e4:	88 23       	and	r24, r24
     1e6:	8c f0       	brlt	.+34     	; 0x20a <__fixunssfsi+0x3e>
     1e8:	c8 01       	movw	r24, r16
     1ea:	b7 01       	movw	r22, r14
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	40 e0       	ldi	r20, 0x00	; 0
     1f2:	5f e4       	ldi	r21, 0x4F	; 79
     1f4:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <__subsf3>
     1f8:	0e 94 d7 11 	call	0x23ae	; 0x23ae <__fixsfsi>
     1fc:	9b 01       	movw	r18, r22
     1fe:	ac 01       	movw	r20, r24
     200:	20 50       	subi	r18, 0x00	; 0
     202:	30 40       	sbci	r19, 0x00	; 0
     204:	40 40       	sbci	r20, 0x00	; 0
     206:	50 48       	sbci	r21, 0x80	; 128
     208:	06 c0       	rjmp	.+12     	; 0x216 <__fixunssfsi+0x4a>
     20a:	c8 01       	movw	r24, r16
     20c:	b7 01       	movw	r22, r14
     20e:	0e 94 d7 11 	call	0x23ae	; 0x23ae <__fixsfsi>
     212:	9b 01       	movw	r18, r22
     214:	ac 01       	movw	r20, r24
     216:	b9 01       	movw	r22, r18
     218:	ca 01       	movw	r24, r20
     21a:	1f 91       	pop	r17
     21c:	0f 91       	pop	r16
     21e:	ff 90       	pop	r15
     220:	ef 90       	pop	r14
     222:	08 95       	ret

00000224 <__udivdi3>:
     224:	ae e5       	ldi	r26, 0x5E	; 94
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	e8 e1       	ldi	r30, 0x18	; 24
     22a:	f1 e0       	ldi	r31, 0x01	; 1
     22c:	0c 94 57 62 	jmp	0xc4ae	; 0xc4ae <__prologue_saves__>
     230:	a8 e0       	ldi	r26, 0x08	; 8
     232:	4e 01       	movw	r8, r28
     234:	08 94       	sec
     236:	81 1c       	adc	r8, r1
     238:	91 1c       	adc	r9, r1
     23a:	f4 01       	movw	r30, r8
     23c:	6a 2e       	mov	r6, r26
     23e:	11 92       	st	Z+, r1
     240:	6a 94       	dec	r6
     242:	e9 f7       	brne	.-6      	; 0x23e <__udivdi3+0x1a>
     244:	29 83       	std	Y+1, r18	; 0x01
     246:	3a 83       	std	Y+2, r19	; 0x02
     248:	4b 83       	std	Y+3, r20	; 0x03
     24a:	5c 83       	std	Y+4, r21	; 0x04
     24c:	6d 83       	std	Y+5, r22	; 0x05
     24e:	7e 83       	std	Y+6, r23	; 0x06
     250:	8f 83       	std	Y+7, r24	; 0x07
     252:	98 87       	std	Y+8, r25	; 0x08
     254:	ce 01       	movw	r24, r28
     256:	09 96       	adiw	r24, 0x09	; 9
     258:	fc 01       	movw	r30, r24
     25a:	11 92       	st	Z+, r1
     25c:	aa 95       	dec	r26
     25e:	e9 f7       	brne	.-6      	; 0x25a <__udivdi3+0x36>
     260:	a9 86       	std	Y+9, r10	; 0x09
     262:	ba 86       	std	Y+10, r11	; 0x0a
     264:	cb 86       	std	Y+11, r12	; 0x0b
     266:	dc 86       	std	Y+12, r13	; 0x0c
     268:	ed 86       	std	Y+13, r14	; 0x0d
     26a:	fe 86       	std	Y+14, r15	; 0x0e
     26c:	0f 87       	std	Y+15, r16	; 0x0f
     26e:	18 8b       	std	Y+16, r17	; 0x10
     270:	29 84       	ldd	r2, Y+9	; 0x09
     272:	3a 84       	ldd	r3, Y+10	; 0x0a
     274:	4b 84       	ldd	r4, Y+11	; 0x0b
     276:	5c 84       	ldd	r5, Y+12	; 0x0c
     278:	ed 84       	ldd	r14, Y+13	; 0x0d
     27a:	fe 84       	ldd	r15, Y+14	; 0x0e
     27c:	0f 85       	ldd	r16, Y+15	; 0x0f
     27e:	18 89       	ldd	r17, Y+16	; 0x10
     280:	69 80       	ldd	r6, Y+1	; 0x01
     282:	7a 80       	ldd	r7, Y+2	; 0x02
     284:	8b 80       	ldd	r8, Y+3	; 0x03
     286:	9c 80       	ldd	r9, Y+4	; 0x04
     288:	6d a6       	std	Y+45, r6	; 0x2d
     28a:	7e a6       	std	Y+46, r7	; 0x2e
     28c:	8f a6       	std	Y+47, r8	; 0x2f
     28e:	98 aa       	std	Y+48, r9	; 0x30
     290:	6d 80       	ldd	r6, Y+5	; 0x05
     292:	7e 80       	ldd	r7, Y+6	; 0x06
     294:	8f 80       	ldd	r8, Y+7	; 0x07
     296:	98 84       	ldd	r9, Y+8	; 0x08
     298:	e1 14       	cp	r14, r1
     29a:	f1 04       	cpc	r15, r1
     29c:	01 05       	cpc	r16, r1
     29e:	11 05       	cpc	r17, r1
     2a0:	09 f0       	breq	.+2      	; 0x2a4 <__udivdi3+0x80>
     2a2:	b3 c3       	rjmp	.+1894   	; 0xa0a <__udivdi3+0x7e6>
     2a4:	62 14       	cp	r6, r2
     2a6:	73 04       	cpc	r7, r3
     2a8:	84 04       	cpc	r8, r4
     2aa:	95 04       	cpc	r9, r5
     2ac:	08 f0       	brcs	.+2      	; 0x2b0 <__udivdi3+0x8c>
     2ae:	3d c1       	rjmp	.+634    	; 0x52a <__udivdi3+0x306>
     2b0:	00 e0       	ldi	r16, 0x00	; 0
     2b2:	20 16       	cp	r2, r16
     2b4:	00 e0       	ldi	r16, 0x00	; 0
     2b6:	30 06       	cpc	r3, r16
     2b8:	01 e0       	ldi	r16, 0x01	; 1
     2ba:	40 06       	cpc	r4, r16
     2bc:	00 e0       	ldi	r16, 0x00	; 0
     2be:	50 06       	cpc	r5, r16
     2c0:	88 f4       	brcc	.+34     	; 0x2e4 <__udivdi3+0xc0>
     2c2:	1f ef       	ldi	r17, 0xFF	; 255
     2c4:	21 16       	cp	r2, r17
     2c6:	31 04       	cpc	r3, r1
     2c8:	41 04       	cpc	r4, r1
     2ca:	51 04       	cpc	r5, r1
     2cc:	39 f0       	breq	.+14     	; 0x2dc <__udivdi3+0xb8>
     2ce:	30 f0       	brcs	.+12     	; 0x2dc <__udivdi3+0xb8>
     2d0:	48 e0       	ldi	r20, 0x08	; 8
     2d2:	e4 2e       	mov	r14, r20
     2d4:	f1 2c       	mov	r15, r1
     2d6:	01 2d       	mov	r16, r1
     2d8:	11 2d       	mov	r17, r1
     2da:	18 c0       	rjmp	.+48     	; 0x30c <__udivdi3+0xe8>
     2dc:	ee 24       	eor	r14, r14
     2de:	ff 24       	eor	r15, r15
     2e0:	87 01       	movw	r16, r14
     2e2:	14 c0       	rjmp	.+40     	; 0x30c <__udivdi3+0xe8>
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	22 16       	cp	r2, r18
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	32 06       	cpc	r3, r18
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	42 06       	cpc	r4, r18
     2f0:	21 e0       	ldi	r18, 0x01	; 1
     2f2:	52 06       	cpc	r5, r18
     2f4:	30 f0       	brcs	.+12     	; 0x302 <__udivdi3+0xde>
     2f6:	38 e1       	ldi	r19, 0x18	; 24
     2f8:	e3 2e       	mov	r14, r19
     2fa:	f1 2c       	mov	r15, r1
     2fc:	01 2d       	mov	r16, r1
     2fe:	11 2d       	mov	r17, r1
     300:	05 c0       	rjmp	.+10     	; 0x30c <__udivdi3+0xe8>
     302:	20 e1       	ldi	r18, 0x10	; 16
     304:	e2 2e       	mov	r14, r18
     306:	f1 2c       	mov	r15, r1
     308:	01 2d       	mov	r16, r1
     30a:	11 2d       	mov	r17, r1
     30c:	d2 01       	movw	r26, r4
     30e:	c1 01       	movw	r24, r2
     310:	0e 2c       	mov	r0, r14
     312:	04 c0       	rjmp	.+8      	; 0x31c <__udivdi3+0xf8>
     314:	b6 95       	lsr	r27
     316:	a7 95       	ror	r26
     318:	97 95       	ror	r25
     31a:	87 95       	ror	r24
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__udivdi3+0xf0>
     320:	86 58       	subi	r24, 0x86	; 134
     322:	9d 4f       	sbci	r25, 0xFD	; 253
     324:	dc 01       	movw	r26, r24
     326:	2c 91       	ld	r18, X
     328:	80 e2       	ldi	r24, 0x20	; 32
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	a0 e0       	ldi	r26, 0x00	; 0
     32e:	b0 e0       	ldi	r27, 0x00	; 0
     330:	8e 19       	sub	r24, r14
     332:	9f 09       	sbc	r25, r15
     334:	a0 0b       	sbc	r26, r16
     336:	b1 0b       	sbc	r27, r17
     338:	7c 01       	movw	r14, r24
     33a:	8d 01       	movw	r16, r26
     33c:	e2 1a       	sub	r14, r18
     33e:	f1 08       	sbc	r15, r1
     340:	01 09       	sbc	r16, r1
     342:	11 09       	sbc	r17, r1
     344:	e1 14       	cp	r14, r1
     346:	f1 04       	cpc	r15, r1
     348:	01 05       	cpc	r16, r1
     34a:	11 05       	cpc	r17, r1
     34c:	a1 f1       	breq	.+104    	; 0x3b6 <__udivdi3+0x192>
     34e:	0e 2c       	mov	r0, r14
     350:	04 c0       	rjmp	.+8      	; 0x35a <__udivdi3+0x136>
     352:	22 0c       	add	r2, r2
     354:	33 1c       	adc	r3, r3
     356:	44 1c       	adc	r4, r4
     358:	55 1c       	adc	r5, r5
     35a:	0a 94       	dec	r0
     35c:	d2 f7       	brpl	.-12     	; 0x352 <__udivdi3+0x12e>
     35e:	a4 01       	movw	r20, r8
     360:	93 01       	movw	r18, r6
     362:	0e 2c       	mov	r0, r14
     364:	04 c0       	rjmp	.+8      	; 0x36e <__udivdi3+0x14a>
     366:	22 0f       	add	r18, r18
     368:	33 1f       	adc	r19, r19
     36a:	44 1f       	adc	r20, r20
     36c:	55 1f       	adc	r21, r21
     36e:	0a 94       	dec	r0
     370:	d2 f7       	brpl	.-12     	; 0x366 <__udivdi3+0x142>
     372:	80 e2       	ldi	r24, 0x20	; 32
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	8e 19       	sub	r24, r14
     378:	9f 09       	sbc	r25, r15
     37a:	6d a4       	ldd	r6, Y+45	; 0x2d
     37c:	7e a4       	ldd	r7, Y+46	; 0x2e
     37e:	8f a4       	ldd	r8, Y+47	; 0x2f
     380:	98 a8       	ldd	r9, Y+48	; 0x30
     382:	04 c0       	rjmp	.+8      	; 0x38c <__udivdi3+0x168>
     384:	96 94       	lsr	r9
     386:	87 94       	ror	r8
     388:	77 94       	ror	r7
     38a:	67 94       	ror	r6
     38c:	8a 95       	dec	r24
     38e:	d2 f7       	brpl	.-12     	; 0x384 <__udivdi3+0x160>
     390:	62 2a       	or	r6, r18
     392:	73 2a       	or	r7, r19
     394:	84 2a       	or	r8, r20
     396:	95 2a       	or	r9, r21
     398:	ad a4       	ldd	r10, Y+45	; 0x2d
     39a:	be a4       	ldd	r11, Y+46	; 0x2e
     39c:	cf a4       	ldd	r12, Y+47	; 0x2f
     39e:	d8 a8       	ldd	r13, Y+48	; 0x30
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <__udivdi3+0x186>
     3a2:	aa 0c       	add	r10, r10
     3a4:	bb 1c       	adc	r11, r11
     3a6:	cc 1c       	adc	r12, r12
     3a8:	dd 1c       	adc	r13, r13
     3aa:	ea 94       	dec	r14
     3ac:	d2 f7       	brpl	.-12     	; 0x3a2 <__udivdi3+0x17e>
     3ae:	ad a6       	std	Y+45, r10	; 0x2d
     3b0:	be a6       	std	Y+46, r11	; 0x2e
     3b2:	cf a6       	std	Y+47, r12	; 0x2f
     3b4:	d8 aa       	std	Y+48, r13	; 0x30
     3b6:	62 01       	movw	r12, r4
     3b8:	ee 24       	eor	r14, r14
     3ba:	ff 24       	eor	r15, r15
     3bc:	cd aa       	std	Y+53, r12	; 0x35
     3be:	de aa       	std	Y+54, r13	; 0x36
     3c0:	ef aa       	std	Y+55, r14	; 0x37
     3c2:	f8 ae       	std	Y+56, r15	; 0x38
     3c4:	92 01       	movw	r18, r4
     3c6:	81 01       	movw	r16, r2
     3c8:	20 70       	andi	r18, 0x00	; 0
     3ca:	30 70       	andi	r19, 0x00	; 0
     3cc:	09 af       	std	Y+57, r16	; 0x39
     3ce:	1a af       	std	Y+58, r17	; 0x3a
     3d0:	2b af       	std	Y+59, r18	; 0x3b
     3d2:	3c af       	std	Y+60, r19	; 0x3c
     3d4:	c4 01       	movw	r24, r8
     3d6:	b3 01       	movw	r22, r6
     3d8:	a7 01       	movw	r20, r14
     3da:	96 01       	movw	r18, r12
     3dc:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     3e0:	7b 01       	movw	r14, r22
     3e2:	8c 01       	movw	r16, r24
     3e4:	c4 01       	movw	r24, r8
     3e6:	b3 01       	movw	r22, r6
     3e8:	2d a9       	ldd	r18, Y+53	; 0x35
     3ea:	3e a9       	ldd	r19, Y+54	; 0x36
     3ec:	4f a9       	ldd	r20, Y+55	; 0x37
     3ee:	58 ad       	ldd	r21, Y+56	; 0x38
     3f0:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     3f4:	c9 01       	movw	r24, r18
     3f6:	da 01       	movw	r26, r20
     3f8:	3c 01       	movw	r6, r24
     3fa:	4d 01       	movw	r8, r26
     3fc:	c4 01       	movw	r24, r8
     3fe:	b3 01       	movw	r22, r6
     400:	29 ad       	ldd	r18, Y+57	; 0x39
     402:	3a ad       	ldd	r19, Y+58	; 0x3a
     404:	4b ad       	ldd	r20, Y+59	; 0x3b
     406:	5c ad       	ldd	r21, Y+60	; 0x3c
     408:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     40c:	9b 01       	movw	r18, r22
     40e:	ac 01       	movw	r20, r24
     410:	87 01       	movw	r16, r14
     412:	ff 24       	eor	r15, r15
     414:	ee 24       	eor	r14, r14
     416:	ad a4       	ldd	r10, Y+45	; 0x2d
     418:	be a4       	ldd	r11, Y+46	; 0x2e
     41a:	cf a4       	ldd	r12, Y+47	; 0x2f
     41c:	d8 a8       	ldd	r13, Y+48	; 0x30
     41e:	c6 01       	movw	r24, r12
     420:	aa 27       	eor	r26, r26
     422:	bb 27       	eor	r27, r27
     424:	57 01       	movw	r10, r14
     426:	68 01       	movw	r12, r16
     428:	a8 2a       	or	r10, r24
     42a:	b9 2a       	or	r11, r25
     42c:	ca 2a       	or	r12, r26
     42e:	db 2a       	or	r13, r27
     430:	a2 16       	cp	r10, r18
     432:	b3 06       	cpc	r11, r19
     434:	c4 06       	cpc	r12, r20
     436:	d5 06       	cpc	r13, r21
     438:	e0 f4       	brcc	.+56     	; 0x472 <__udivdi3+0x24e>
     43a:	08 94       	sec
     43c:	61 08       	sbc	r6, r1
     43e:	71 08       	sbc	r7, r1
     440:	81 08       	sbc	r8, r1
     442:	91 08       	sbc	r9, r1
     444:	a2 0c       	add	r10, r2
     446:	b3 1c       	adc	r11, r3
     448:	c4 1c       	adc	r12, r4
     44a:	d5 1c       	adc	r13, r5
     44c:	a2 14       	cp	r10, r2
     44e:	b3 04       	cpc	r11, r3
     450:	c4 04       	cpc	r12, r4
     452:	d5 04       	cpc	r13, r5
     454:	70 f0       	brcs	.+28     	; 0x472 <__udivdi3+0x24e>
     456:	a2 16       	cp	r10, r18
     458:	b3 06       	cpc	r11, r19
     45a:	c4 06       	cpc	r12, r20
     45c:	d5 06       	cpc	r13, r21
     45e:	48 f4       	brcc	.+18     	; 0x472 <__udivdi3+0x24e>
     460:	08 94       	sec
     462:	61 08       	sbc	r6, r1
     464:	71 08       	sbc	r7, r1
     466:	81 08       	sbc	r8, r1
     468:	91 08       	sbc	r9, r1
     46a:	a2 0c       	add	r10, r2
     46c:	b3 1c       	adc	r11, r3
     46e:	c4 1c       	adc	r12, r4
     470:	d5 1c       	adc	r13, r5
     472:	a2 1a       	sub	r10, r18
     474:	b3 0a       	sbc	r11, r19
     476:	c4 0a       	sbc	r12, r20
     478:	d5 0a       	sbc	r13, r21
     47a:	c6 01       	movw	r24, r12
     47c:	b5 01       	movw	r22, r10
     47e:	2d a9       	ldd	r18, Y+53	; 0x35
     480:	3e a9       	ldd	r19, Y+54	; 0x36
     482:	4f a9       	ldd	r20, Y+55	; 0x37
     484:	58 ad       	ldd	r21, Y+56	; 0x38
     486:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     48a:	7b 01       	movw	r14, r22
     48c:	8c 01       	movw	r16, r24
     48e:	c6 01       	movw	r24, r12
     490:	b5 01       	movw	r22, r10
     492:	2d a9       	ldd	r18, Y+53	; 0x35
     494:	3e a9       	ldd	r19, Y+54	; 0x36
     496:	4f a9       	ldd	r20, Y+55	; 0x37
     498:	58 ad       	ldd	r21, Y+56	; 0x38
     49a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     49e:	c9 01       	movw	r24, r18
     4a0:	da 01       	movw	r26, r20
     4a2:	5c 01       	movw	r10, r24
     4a4:	6d 01       	movw	r12, r26
     4a6:	c6 01       	movw	r24, r12
     4a8:	b5 01       	movw	r22, r10
     4aa:	29 ad       	ldd	r18, Y+57	; 0x39
     4ac:	3a ad       	ldd	r19, Y+58	; 0x3a
     4ae:	4b ad       	ldd	r20, Y+59	; 0x3b
     4b0:	5c ad       	ldd	r21, Y+60	; 0x3c
     4b2:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     4b6:	9b 01       	movw	r18, r22
     4b8:	ac 01       	movw	r20, r24
     4ba:	87 01       	movw	r16, r14
     4bc:	ff 24       	eor	r15, r15
     4be:	ee 24       	eor	r14, r14
     4c0:	8d a5       	ldd	r24, Y+45	; 0x2d
     4c2:	9e a5       	ldd	r25, Y+46	; 0x2e
     4c4:	af a5       	ldd	r26, Y+47	; 0x2f
     4c6:	b8 a9       	ldd	r27, Y+48	; 0x30
     4c8:	a0 70       	andi	r26, 0x00	; 0
     4ca:	b0 70       	andi	r27, 0x00	; 0
     4cc:	e8 2a       	or	r14, r24
     4ce:	f9 2a       	or	r15, r25
     4d0:	0a 2b       	or	r16, r26
     4d2:	1b 2b       	or	r17, r27
     4d4:	e2 16       	cp	r14, r18
     4d6:	f3 06       	cpc	r15, r19
     4d8:	04 07       	cpc	r16, r20
     4da:	15 07       	cpc	r17, r21
     4dc:	c0 f4       	brcc	.+48     	; 0x50e <__udivdi3+0x2ea>
     4de:	08 94       	sec
     4e0:	a1 08       	sbc	r10, r1
     4e2:	b1 08       	sbc	r11, r1
     4e4:	c1 08       	sbc	r12, r1
     4e6:	d1 08       	sbc	r13, r1
     4e8:	e2 0c       	add	r14, r2
     4ea:	f3 1c       	adc	r15, r3
     4ec:	04 1d       	adc	r16, r4
     4ee:	15 1d       	adc	r17, r5
     4f0:	e2 14       	cp	r14, r2
     4f2:	f3 04       	cpc	r15, r3
     4f4:	04 05       	cpc	r16, r4
     4f6:	15 05       	cpc	r17, r5
     4f8:	50 f0       	brcs	.+20     	; 0x50e <__udivdi3+0x2ea>
     4fa:	e2 16       	cp	r14, r18
     4fc:	f3 06       	cpc	r15, r19
     4fe:	04 07       	cpc	r16, r20
     500:	15 07       	cpc	r17, r21
     502:	28 f4       	brcc	.+10     	; 0x50e <__udivdi3+0x2ea>
     504:	08 94       	sec
     506:	a1 08       	sbc	r10, r1
     508:	b1 08       	sbc	r11, r1
     50a:	c1 08       	sbc	r12, r1
     50c:	d1 08       	sbc	r13, r1
     50e:	d3 01       	movw	r26, r6
     510:	99 27       	eor	r25, r25
     512:	88 27       	eor	r24, r24
     514:	86 01       	movw	r16, r12
     516:	75 01       	movw	r14, r10
     518:	e8 2a       	or	r14, r24
     51a:	f9 2a       	or	r15, r25
     51c:	0a 2b       	or	r16, r26
     51e:	1b 2b       	or	r17, r27
     520:	e9 aa       	std	Y+49, r14	; 0x31
     522:	fa aa       	std	Y+50, r15	; 0x32
     524:	0b ab       	std	Y+51, r16	; 0x33
     526:	1c ab       	std	Y+52, r17	; 0x34
     528:	cf c4       	rjmp	.+2462   	; 0xec8 <__udivdi3+0xca4>
     52a:	21 14       	cp	r2, r1
     52c:	31 04       	cpc	r3, r1
     52e:	41 04       	cpc	r4, r1
     530:	51 04       	cpc	r5, r1
     532:	71 f4       	brne	.+28     	; 0x550 <__udivdi3+0x32c>
     534:	61 e0       	ldi	r22, 0x01	; 1
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e0       	ldi	r20, 0x00	; 0
     542:	50 e0       	ldi	r21, 0x00	; 0
     544:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     548:	c9 01       	movw	r24, r18
     54a:	da 01       	movw	r26, r20
     54c:	1c 01       	movw	r2, r24
     54e:	2d 01       	movw	r4, r26
     550:	00 e0       	ldi	r16, 0x00	; 0
     552:	20 16       	cp	r2, r16
     554:	00 e0       	ldi	r16, 0x00	; 0
     556:	30 06       	cpc	r3, r16
     558:	01 e0       	ldi	r16, 0x01	; 1
     55a:	40 06       	cpc	r4, r16
     55c:	00 e0       	ldi	r16, 0x00	; 0
     55e:	50 06       	cpc	r5, r16
     560:	88 f4       	brcc	.+34     	; 0x584 <__udivdi3+0x360>
     562:	1f ef       	ldi	r17, 0xFF	; 255
     564:	21 16       	cp	r2, r17
     566:	31 04       	cpc	r3, r1
     568:	41 04       	cpc	r4, r1
     56a:	51 04       	cpc	r5, r1
     56c:	31 f0       	breq	.+12     	; 0x57a <__udivdi3+0x356>
     56e:	28 f0       	brcs	.+10     	; 0x57a <__udivdi3+0x356>
     570:	48 e0       	ldi	r20, 0x08	; 8
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	17 c0       	rjmp	.+46     	; 0x5a8 <__udivdi3+0x384>
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	60 e0       	ldi	r22, 0x00	; 0
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	12 c0       	rjmp	.+36     	; 0x5a8 <__udivdi3+0x384>
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	22 16       	cp	r2, r18
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	32 06       	cpc	r3, r18
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	42 06       	cpc	r4, r18
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	52 06       	cpc	r5, r18
     594:	28 f0       	brcs	.+10     	; 0x5a0 <__udivdi3+0x37c>
     596:	48 e1       	ldi	r20, 0x18	; 24
     598:	50 e0       	ldi	r21, 0x00	; 0
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	04 c0       	rjmp	.+8      	; 0x5a8 <__udivdi3+0x384>
     5a0:	40 e1       	ldi	r20, 0x10	; 16
     5a2:	50 e0       	ldi	r21, 0x00	; 0
     5a4:	60 e0       	ldi	r22, 0x00	; 0
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	d2 01       	movw	r26, r4
     5aa:	c1 01       	movw	r24, r2
     5ac:	04 2e       	mov	r0, r20
     5ae:	04 c0       	rjmp	.+8      	; 0x5b8 <__udivdi3+0x394>
     5b0:	b6 95       	lsr	r27
     5b2:	a7 95       	ror	r26
     5b4:	97 95       	ror	r25
     5b6:	87 95       	ror	r24
     5b8:	0a 94       	dec	r0
     5ba:	d2 f7       	brpl	.-12     	; 0x5b0 <__udivdi3+0x38c>
     5bc:	86 58       	subi	r24, 0x86	; 134
     5be:	9d 4f       	sbci	r25, 0xFD	; 253
     5c0:	dc 01       	movw	r26, r24
     5c2:	2c 91       	ld	r18, X
     5c4:	e0 e2       	ldi	r30, 0x20	; 32
     5c6:	ee 2e       	mov	r14, r30
     5c8:	f1 2c       	mov	r15, r1
     5ca:	01 2d       	mov	r16, r1
     5cc:	11 2d       	mov	r17, r1
     5ce:	d8 01       	movw	r26, r16
     5d0:	c7 01       	movw	r24, r14
     5d2:	84 1b       	sub	r24, r20
     5d4:	95 0b       	sbc	r25, r21
     5d6:	a6 0b       	sbc	r26, r22
     5d8:	b7 0b       	sbc	r27, r23
     5da:	82 1b       	sub	r24, r18
     5dc:	91 09       	sbc	r25, r1
     5de:	a1 09       	sbc	r26, r1
     5e0:	b1 09       	sbc	r27, r1
     5e2:	00 97       	sbiw	r24, 0x00	; 0
     5e4:	a1 05       	cpc	r26, r1
     5e6:	b1 05       	cpc	r27, r1
     5e8:	61 f4       	brne	.+24     	; 0x602 <__udivdi3+0x3de>
     5ea:	64 01       	movw	r12, r8
     5ec:	53 01       	movw	r10, r6
     5ee:	a2 18       	sub	r10, r2
     5f0:	b3 08       	sbc	r11, r3
     5f2:	c4 08       	sbc	r12, r4
     5f4:	d5 08       	sbc	r13, r5
     5f6:	31 e0       	ldi	r19, 0x01	; 1
     5f8:	63 2e       	mov	r6, r19
     5fa:	71 2c       	mov	r7, r1
     5fc:	81 2c       	mov	r8, r1
     5fe:	91 2c       	mov	r9, r1
     600:	1e c1       	rjmp	.+572    	; 0x83e <__udivdi3+0x61a>
     602:	6f 96       	adiw	r28, 0x1f	; 31
     604:	8f af       	std	Y+63, r24	; 0x3f
     606:	6f 97       	sbiw	r28, 0x1f	; 31
     608:	08 2e       	mov	r0, r24
     60a:	04 c0       	rjmp	.+8      	; 0x614 <__udivdi3+0x3f0>
     60c:	22 0c       	add	r2, r2
     60e:	33 1c       	adc	r3, r3
     610:	44 1c       	adc	r4, r4
     612:	55 1c       	adc	r5, r5
     614:	0a 94       	dec	r0
     616:	d2 f7       	brpl	.-12     	; 0x60c <__udivdi3+0x3e8>
     618:	ee 2d       	mov	r30, r14
     61a:	e8 1b       	sub	r30, r24
     61c:	64 01       	movw	r12, r8
     61e:	53 01       	movw	r10, r6
     620:	0e 2e       	mov	r0, r30
     622:	04 c0       	rjmp	.+8      	; 0x62c <__udivdi3+0x408>
     624:	d6 94       	lsr	r13
     626:	c7 94       	ror	r12
     628:	b7 94       	ror	r11
     62a:	a7 94       	ror	r10
     62c:	0a 94       	dec	r0
     62e:	d2 f7       	brpl	.-12     	; 0x624 <__udivdi3+0x400>
     630:	a4 01       	movw	r20, r8
     632:	93 01       	movw	r18, r6
     634:	6f 96       	adiw	r28, 0x1f	; 31
     636:	0f ac       	ldd	r0, Y+63	; 0x3f
     638:	6f 97       	sbiw	r28, 0x1f	; 31
     63a:	04 c0       	rjmp	.+8      	; 0x644 <__udivdi3+0x420>
     63c:	22 0f       	add	r18, r18
     63e:	33 1f       	adc	r19, r19
     640:	44 1f       	adc	r20, r20
     642:	55 1f       	adc	r21, r21
     644:	0a 94       	dec	r0
     646:	d2 f7       	brpl	.-12     	; 0x63c <__udivdi3+0x418>
     648:	6d a4       	ldd	r6, Y+45	; 0x2d
     64a:	7e a4       	ldd	r7, Y+46	; 0x2e
     64c:	8f a4       	ldd	r8, Y+47	; 0x2f
     64e:	98 a8       	ldd	r9, Y+48	; 0x30
     650:	0e 2e       	mov	r0, r30
     652:	04 c0       	rjmp	.+8      	; 0x65c <__udivdi3+0x438>
     654:	96 94       	lsr	r9
     656:	87 94       	ror	r8
     658:	77 94       	ror	r7
     65a:	67 94       	ror	r6
     65c:	0a 94       	dec	r0
     65e:	d2 f7       	brpl	.-12     	; 0x654 <__udivdi3+0x430>
     660:	84 01       	movw	r16, r8
     662:	73 01       	movw	r14, r6
     664:	e2 2a       	or	r14, r18
     666:	f3 2a       	or	r15, r19
     668:	04 2b       	or	r16, r20
     66a:	15 2b       	or	r17, r21
     66c:	e9 a6       	std	Y+41, r14	; 0x29
     66e:	fa a6       	std	Y+42, r15	; 0x2a
     670:	0b a7       	std	Y+43, r16	; 0x2b
     672:	1c a7       	std	Y+44, r17	; 0x2c
     674:	32 01       	movw	r6, r4
     676:	88 24       	eor	r8, r8
     678:	99 24       	eor	r9, r9
     67a:	92 01       	movw	r18, r4
     67c:	81 01       	movw	r16, r2
     67e:	20 70       	andi	r18, 0x00	; 0
     680:	30 70       	andi	r19, 0x00	; 0
     682:	21 96       	adiw	r28, 0x01	; 1
     684:	0c af       	std	Y+60, r16	; 0x3c
     686:	1d af       	std	Y+61, r17	; 0x3d
     688:	2e af       	std	Y+62, r18	; 0x3e
     68a:	3f af       	std	Y+63, r19	; 0x3f
     68c:	21 97       	sbiw	r28, 0x01	; 1
     68e:	c6 01       	movw	r24, r12
     690:	b5 01       	movw	r22, r10
     692:	a4 01       	movw	r20, r8
     694:	93 01       	movw	r18, r6
     696:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     69a:	7b 01       	movw	r14, r22
     69c:	8c 01       	movw	r16, r24
     69e:	c6 01       	movw	r24, r12
     6a0:	b5 01       	movw	r22, r10
     6a2:	a4 01       	movw	r20, r8
     6a4:	93 01       	movw	r18, r6
     6a6:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     6aa:	c9 01       	movw	r24, r18
     6ac:	da 01       	movw	r26, r20
     6ae:	25 96       	adiw	r28, 0x05	; 5
     6b0:	8c af       	std	Y+60, r24	; 0x3c
     6b2:	9d af       	std	Y+61, r25	; 0x3d
     6b4:	ae af       	std	Y+62, r26	; 0x3e
     6b6:	bf af       	std	Y+63, r27	; 0x3f
     6b8:	25 97       	sbiw	r28, 0x05	; 5
     6ba:	bc 01       	movw	r22, r24
     6bc:	cd 01       	movw	r24, r26
     6be:	21 96       	adiw	r28, 0x01	; 1
     6c0:	2c ad       	ldd	r18, Y+60	; 0x3c
     6c2:	3d ad       	ldd	r19, Y+61	; 0x3d
     6c4:	4e ad       	ldd	r20, Y+62	; 0x3e
     6c6:	5f ad       	ldd	r21, Y+63	; 0x3f
     6c8:	21 97       	sbiw	r28, 0x01	; 1
     6ca:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     6ce:	9b 01       	movw	r18, r22
     6d0:	ac 01       	movw	r20, r24
     6d2:	87 01       	movw	r16, r14
     6d4:	ff 24       	eor	r15, r15
     6d6:	ee 24       	eor	r14, r14
     6d8:	a9 a4       	ldd	r10, Y+41	; 0x29
     6da:	ba a4       	ldd	r11, Y+42	; 0x2a
     6dc:	cb a4       	ldd	r12, Y+43	; 0x2b
     6de:	dc a4       	ldd	r13, Y+44	; 0x2c
     6e0:	c6 01       	movw	r24, r12
     6e2:	aa 27       	eor	r26, r26
     6e4:	bb 27       	eor	r27, r27
     6e6:	5c 01       	movw	r10, r24
     6e8:	6d 01       	movw	r12, r26
     6ea:	ae 28       	or	r10, r14
     6ec:	bf 28       	or	r11, r15
     6ee:	c0 2a       	or	r12, r16
     6f0:	d1 2a       	or	r13, r17
     6f2:	a2 16       	cp	r10, r18
     6f4:	b3 06       	cpc	r11, r19
     6f6:	c4 06       	cpc	r12, r20
     6f8:	d5 06       	cpc	r13, r21
     6fa:	60 f5       	brcc	.+88     	; 0x754 <__udivdi3+0x530>
     6fc:	25 96       	adiw	r28, 0x05	; 5
     6fe:	6c ad       	ldd	r22, Y+60	; 0x3c
     700:	7d ad       	ldd	r23, Y+61	; 0x3d
     702:	8e ad       	ldd	r24, Y+62	; 0x3e
     704:	9f ad       	ldd	r25, Y+63	; 0x3f
     706:	25 97       	sbiw	r28, 0x05	; 5
     708:	61 50       	subi	r22, 0x01	; 1
     70a:	70 40       	sbci	r23, 0x00	; 0
     70c:	80 40       	sbci	r24, 0x00	; 0
     70e:	90 40       	sbci	r25, 0x00	; 0
     710:	25 96       	adiw	r28, 0x05	; 5
     712:	6c af       	std	Y+60, r22	; 0x3c
     714:	7d af       	std	Y+61, r23	; 0x3d
     716:	8e af       	std	Y+62, r24	; 0x3e
     718:	9f af       	std	Y+63, r25	; 0x3f
     71a:	25 97       	sbiw	r28, 0x05	; 5
     71c:	a2 0c       	add	r10, r2
     71e:	b3 1c       	adc	r11, r3
     720:	c4 1c       	adc	r12, r4
     722:	d5 1c       	adc	r13, r5
     724:	a2 14       	cp	r10, r2
     726:	b3 04       	cpc	r11, r3
     728:	c4 04       	cpc	r12, r4
     72a:	d5 04       	cpc	r13, r5
     72c:	98 f0       	brcs	.+38     	; 0x754 <__udivdi3+0x530>
     72e:	a2 16       	cp	r10, r18
     730:	b3 06       	cpc	r11, r19
     732:	c4 06       	cpc	r12, r20
     734:	d5 06       	cpc	r13, r21
     736:	70 f4       	brcc	.+28     	; 0x754 <__udivdi3+0x530>
     738:	61 50       	subi	r22, 0x01	; 1
     73a:	70 40       	sbci	r23, 0x00	; 0
     73c:	80 40       	sbci	r24, 0x00	; 0
     73e:	90 40       	sbci	r25, 0x00	; 0
     740:	25 96       	adiw	r28, 0x05	; 5
     742:	6c af       	std	Y+60, r22	; 0x3c
     744:	7d af       	std	Y+61, r23	; 0x3d
     746:	8e af       	std	Y+62, r24	; 0x3e
     748:	9f af       	std	Y+63, r25	; 0x3f
     74a:	25 97       	sbiw	r28, 0x05	; 5
     74c:	a2 0c       	add	r10, r2
     74e:	b3 1c       	adc	r11, r3
     750:	c4 1c       	adc	r12, r4
     752:	d5 1c       	adc	r13, r5
     754:	a2 1a       	sub	r10, r18
     756:	b3 0a       	sbc	r11, r19
     758:	c4 0a       	sbc	r12, r20
     75a:	d5 0a       	sbc	r13, r21
     75c:	c6 01       	movw	r24, r12
     75e:	b5 01       	movw	r22, r10
     760:	a4 01       	movw	r20, r8
     762:	93 01       	movw	r18, r6
     764:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     768:	7b 01       	movw	r14, r22
     76a:	8c 01       	movw	r16, r24
     76c:	c6 01       	movw	r24, r12
     76e:	b5 01       	movw	r22, r10
     770:	a4 01       	movw	r20, r8
     772:	93 01       	movw	r18, r6
     774:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     778:	c9 01       	movw	r24, r18
     77a:	da 01       	movw	r26, r20
     77c:	3c 01       	movw	r6, r24
     77e:	4d 01       	movw	r8, r26
     780:	c4 01       	movw	r24, r8
     782:	b3 01       	movw	r22, r6
     784:	21 96       	adiw	r28, 0x01	; 1
     786:	2c ad       	ldd	r18, Y+60	; 0x3c
     788:	3d ad       	ldd	r19, Y+61	; 0x3d
     78a:	4e ad       	ldd	r20, Y+62	; 0x3e
     78c:	5f ad       	ldd	r21, Y+63	; 0x3f
     78e:	21 97       	sbiw	r28, 0x01	; 1
     790:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     794:	9b 01       	movw	r18, r22
     796:	ac 01       	movw	r20, r24
     798:	87 01       	movw	r16, r14
     79a:	ff 24       	eor	r15, r15
     79c:	ee 24       	eor	r14, r14
     79e:	89 a5       	ldd	r24, Y+41	; 0x29
     7a0:	9a a5       	ldd	r25, Y+42	; 0x2a
     7a2:	ab a5       	ldd	r26, Y+43	; 0x2b
     7a4:	bc a5       	ldd	r27, Y+44	; 0x2c
     7a6:	a0 70       	andi	r26, 0x00	; 0
     7a8:	b0 70       	andi	r27, 0x00	; 0
     7aa:	57 01       	movw	r10, r14
     7ac:	68 01       	movw	r12, r16
     7ae:	a8 2a       	or	r10, r24
     7b0:	b9 2a       	or	r11, r25
     7b2:	ca 2a       	or	r12, r26
     7b4:	db 2a       	or	r13, r27
     7b6:	a2 16       	cp	r10, r18
     7b8:	b3 06       	cpc	r11, r19
     7ba:	c4 06       	cpc	r12, r20
     7bc:	d5 06       	cpc	r13, r21
     7be:	e0 f4       	brcc	.+56     	; 0x7f8 <__udivdi3+0x5d4>
     7c0:	08 94       	sec
     7c2:	61 08       	sbc	r6, r1
     7c4:	71 08       	sbc	r7, r1
     7c6:	81 08       	sbc	r8, r1
     7c8:	91 08       	sbc	r9, r1
     7ca:	a2 0c       	add	r10, r2
     7cc:	b3 1c       	adc	r11, r3
     7ce:	c4 1c       	adc	r12, r4
     7d0:	d5 1c       	adc	r13, r5
     7d2:	a2 14       	cp	r10, r2
     7d4:	b3 04       	cpc	r11, r3
     7d6:	c4 04       	cpc	r12, r4
     7d8:	d5 04       	cpc	r13, r5
     7da:	70 f0       	brcs	.+28     	; 0x7f8 <__udivdi3+0x5d4>
     7dc:	a2 16       	cp	r10, r18
     7de:	b3 06       	cpc	r11, r19
     7e0:	c4 06       	cpc	r12, r20
     7e2:	d5 06       	cpc	r13, r21
     7e4:	48 f4       	brcc	.+18     	; 0x7f8 <__udivdi3+0x5d4>
     7e6:	08 94       	sec
     7e8:	61 08       	sbc	r6, r1
     7ea:	71 08       	sbc	r7, r1
     7ec:	81 08       	sbc	r8, r1
     7ee:	91 08       	sbc	r9, r1
     7f0:	a2 0c       	add	r10, r2
     7f2:	b3 1c       	adc	r11, r3
     7f4:	c4 1c       	adc	r12, r4
     7f6:	d5 1c       	adc	r13, r5
     7f8:	8d a5       	ldd	r24, Y+45	; 0x2d
     7fa:	9e a5       	ldd	r25, Y+46	; 0x2e
     7fc:	af a5       	ldd	r26, Y+47	; 0x2f
     7fe:	b8 a9       	ldd	r27, Y+48	; 0x30
     800:	6f 96       	adiw	r28, 0x1f	; 31
     802:	0f ac       	ldd	r0, Y+63	; 0x3f
     804:	6f 97       	sbiw	r28, 0x1f	; 31
     806:	04 c0       	rjmp	.+8      	; 0x810 <__udivdi3+0x5ec>
     808:	88 0f       	add	r24, r24
     80a:	99 1f       	adc	r25, r25
     80c:	aa 1f       	adc	r26, r26
     80e:	bb 1f       	adc	r27, r27
     810:	0a 94       	dec	r0
     812:	d2 f7       	brpl	.-12     	; 0x808 <__udivdi3+0x5e4>
     814:	8d a7       	std	Y+45, r24	; 0x2d
     816:	9e a7       	std	Y+46, r25	; 0x2e
     818:	af a7       	std	Y+47, r26	; 0x2f
     81a:	b8 ab       	std	Y+48, r27	; 0x30
     81c:	a2 1a       	sub	r10, r18
     81e:	b3 0a       	sbc	r11, r19
     820:	c4 0a       	sbc	r12, r20
     822:	d5 0a       	sbc	r13, r21
     824:	25 96       	adiw	r28, 0x05	; 5
     826:	ec ac       	ldd	r14, Y+60	; 0x3c
     828:	fd ac       	ldd	r15, Y+61	; 0x3d
     82a:	0e ad       	ldd	r16, Y+62	; 0x3e
     82c:	1f ad       	ldd	r17, Y+63	; 0x3f
     82e:	25 97       	sbiw	r28, 0x05	; 5
     830:	d7 01       	movw	r26, r14
     832:	99 27       	eor	r25, r25
     834:	88 27       	eor	r24, r24
     836:	68 2a       	or	r6, r24
     838:	79 2a       	or	r7, r25
     83a:	8a 2a       	or	r8, r26
     83c:	9b 2a       	or	r9, r27
     83e:	82 01       	movw	r16, r4
     840:	22 27       	eor	r18, r18
     842:	33 27       	eor	r19, r19
     844:	29 96       	adiw	r28, 0x09	; 9
     846:	0c af       	std	Y+60, r16	; 0x3c
     848:	1d af       	std	Y+61, r17	; 0x3d
     84a:	2e af       	std	Y+62, r18	; 0x3e
     84c:	3f af       	std	Y+63, r19	; 0x3f
     84e:	29 97       	sbiw	r28, 0x09	; 9
     850:	a2 01       	movw	r20, r4
     852:	91 01       	movw	r18, r2
     854:	40 70       	andi	r20, 0x00	; 0
     856:	50 70       	andi	r21, 0x00	; 0
     858:	2d 96       	adiw	r28, 0x0d	; 13
     85a:	2c af       	std	Y+60, r18	; 0x3c
     85c:	3d af       	std	Y+61, r19	; 0x3d
     85e:	4e af       	std	Y+62, r20	; 0x3e
     860:	5f af       	std	Y+63, r21	; 0x3f
     862:	2d 97       	sbiw	r28, 0x0d	; 13
     864:	c6 01       	movw	r24, r12
     866:	b5 01       	movw	r22, r10
     868:	29 96       	adiw	r28, 0x09	; 9
     86a:	2c ad       	ldd	r18, Y+60	; 0x3c
     86c:	3d ad       	ldd	r19, Y+61	; 0x3d
     86e:	4e ad       	ldd	r20, Y+62	; 0x3e
     870:	5f ad       	ldd	r21, Y+63	; 0x3f
     872:	29 97       	sbiw	r28, 0x09	; 9
     874:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     878:	7b 01       	movw	r14, r22
     87a:	8c 01       	movw	r16, r24
     87c:	c6 01       	movw	r24, r12
     87e:	b5 01       	movw	r22, r10
     880:	29 96       	adiw	r28, 0x09	; 9
     882:	2c ad       	ldd	r18, Y+60	; 0x3c
     884:	3d ad       	ldd	r19, Y+61	; 0x3d
     886:	4e ad       	ldd	r20, Y+62	; 0x3e
     888:	5f ad       	ldd	r21, Y+63	; 0x3f
     88a:	29 97       	sbiw	r28, 0x09	; 9
     88c:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     890:	c9 01       	movw	r24, r18
     892:	da 01       	movw	r26, r20
     894:	61 96       	adiw	r28, 0x11	; 17
     896:	8c af       	std	Y+60, r24	; 0x3c
     898:	9d af       	std	Y+61, r25	; 0x3d
     89a:	ae af       	std	Y+62, r26	; 0x3e
     89c:	bf af       	std	Y+63, r27	; 0x3f
     89e:	61 97       	sbiw	r28, 0x11	; 17
     8a0:	bc 01       	movw	r22, r24
     8a2:	cd 01       	movw	r24, r26
     8a4:	2d 96       	adiw	r28, 0x0d	; 13
     8a6:	2c ad       	ldd	r18, Y+60	; 0x3c
     8a8:	3d ad       	ldd	r19, Y+61	; 0x3d
     8aa:	4e ad       	ldd	r20, Y+62	; 0x3e
     8ac:	5f ad       	ldd	r21, Y+63	; 0x3f
     8ae:	2d 97       	sbiw	r28, 0x0d	; 13
     8b0:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     8b4:	9b 01       	movw	r18, r22
     8b6:	ac 01       	movw	r20, r24
     8b8:	87 01       	movw	r16, r14
     8ba:	ff 24       	eor	r15, r15
     8bc:	ee 24       	eor	r14, r14
     8be:	ad a4       	ldd	r10, Y+45	; 0x2d
     8c0:	be a4       	ldd	r11, Y+46	; 0x2e
     8c2:	cf a4       	ldd	r12, Y+47	; 0x2f
     8c4:	d8 a8       	ldd	r13, Y+48	; 0x30
     8c6:	c6 01       	movw	r24, r12
     8c8:	aa 27       	eor	r26, r26
     8ca:	bb 27       	eor	r27, r27
     8cc:	57 01       	movw	r10, r14
     8ce:	68 01       	movw	r12, r16
     8d0:	a8 2a       	or	r10, r24
     8d2:	b9 2a       	or	r11, r25
     8d4:	ca 2a       	or	r12, r26
     8d6:	db 2a       	or	r13, r27
     8d8:	a2 16       	cp	r10, r18
     8da:	b3 06       	cpc	r11, r19
     8dc:	c4 06       	cpc	r12, r20
     8de:	d5 06       	cpc	r13, r21
     8e0:	60 f5       	brcc	.+88     	; 0x93a <__udivdi3+0x716>
     8e2:	61 96       	adiw	r28, 0x11	; 17
     8e4:	6c ad       	ldd	r22, Y+60	; 0x3c
     8e6:	7d ad       	ldd	r23, Y+61	; 0x3d
     8e8:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ea:	9f ad       	ldd	r25, Y+63	; 0x3f
     8ec:	61 97       	sbiw	r28, 0x11	; 17
     8ee:	61 50       	subi	r22, 0x01	; 1
     8f0:	70 40       	sbci	r23, 0x00	; 0
     8f2:	80 40       	sbci	r24, 0x00	; 0
     8f4:	90 40       	sbci	r25, 0x00	; 0
     8f6:	61 96       	adiw	r28, 0x11	; 17
     8f8:	6c af       	std	Y+60, r22	; 0x3c
     8fa:	7d af       	std	Y+61, r23	; 0x3d
     8fc:	8e af       	std	Y+62, r24	; 0x3e
     8fe:	9f af       	std	Y+63, r25	; 0x3f
     900:	61 97       	sbiw	r28, 0x11	; 17
     902:	a2 0c       	add	r10, r2
     904:	b3 1c       	adc	r11, r3
     906:	c4 1c       	adc	r12, r4
     908:	d5 1c       	adc	r13, r5
     90a:	a2 14       	cp	r10, r2
     90c:	b3 04       	cpc	r11, r3
     90e:	c4 04       	cpc	r12, r4
     910:	d5 04       	cpc	r13, r5
     912:	98 f0       	brcs	.+38     	; 0x93a <__udivdi3+0x716>
     914:	a2 16       	cp	r10, r18
     916:	b3 06       	cpc	r11, r19
     918:	c4 06       	cpc	r12, r20
     91a:	d5 06       	cpc	r13, r21
     91c:	70 f4       	brcc	.+28     	; 0x93a <__udivdi3+0x716>
     91e:	61 50       	subi	r22, 0x01	; 1
     920:	70 40       	sbci	r23, 0x00	; 0
     922:	80 40       	sbci	r24, 0x00	; 0
     924:	90 40       	sbci	r25, 0x00	; 0
     926:	61 96       	adiw	r28, 0x11	; 17
     928:	6c af       	std	Y+60, r22	; 0x3c
     92a:	7d af       	std	Y+61, r23	; 0x3d
     92c:	8e af       	std	Y+62, r24	; 0x3e
     92e:	9f af       	std	Y+63, r25	; 0x3f
     930:	61 97       	sbiw	r28, 0x11	; 17
     932:	a2 0c       	add	r10, r2
     934:	b3 1c       	adc	r11, r3
     936:	c4 1c       	adc	r12, r4
     938:	d5 1c       	adc	r13, r5
     93a:	a2 1a       	sub	r10, r18
     93c:	b3 0a       	sbc	r11, r19
     93e:	c4 0a       	sbc	r12, r20
     940:	d5 0a       	sbc	r13, r21
     942:	c6 01       	movw	r24, r12
     944:	b5 01       	movw	r22, r10
     946:	29 96       	adiw	r28, 0x09	; 9
     948:	2c ad       	ldd	r18, Y+60	; 0x3c
     94a:	3d ad       	ldd	r19, Y+61	; 0x3d
     94c:	4e ad       	ldd	r20, Y+62	; 0x3e
     94e:	5f ad       	ldd	r21, Y+63	; 0x3f
     950:	29 97       	sbiw	r28, 0x09	; 9
     952:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     956:	7b 01       	movw	r14, r22
     958:	8c 01       	movw	r16, r24
     95a:	c6 01       	movw	r24, r12
     95c:	b5 01       	movw	r22, r10
     95e:	29 96       	adiw	r28, 0x09	; 9
     960:	2c ad       	ldd	r18, Y+60	; 0x3c
     962:	3d ad       	ldd	r19, Y+61	; 0x3d
     964:	4e ad       	ldd	r20, Y+62	; 0x3e
     966:	5f ad       	ldd	r21, Y+63	; 0x3f
     968:	29 97       	sbiw	r28, 0x09	; 9
     96a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     96e:	c9 01       	movw	r24, r18
     970:	da 01       	movw	r26, r20
     972:	5c 01       	movw	r10, r24
     974:	6d 01       	movw	r12, r26
     976:	c6 01       	movw	r24, r12
     978:	b5 01       	movw	r22, r10
     97a:	2d 96       	adiw	r28, 0x0d	; 13
     97c:	2c ad       	ldd	r18, Y+60	; 0x3c
     97e:	3d ad       	ldd	r19, Y+61	; 0x3d
     980:	4e ad       	ldd	r20, Y+62	; 0x3e
     982:	5f ad       	ldd	r21, Y+63	; 0x3f
     984:	2d 97       	sbiw	r28, 0x0d	; 13
     986:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     98a:	9b 01       	movw	r18, r22
     98c:	ac 01       	movw	r20, r24
     98e:	87 01       	movw	r16, r14
     990:	ff 24       	eor	r15, r15
     992:	ee 24       	eor	r14, r14
     994:	8d a5       	ldd	r24, Y+45	; 0x2d
     996:	9e a5       	ldd	r25, Y+46	; 0x2e
     998:	af a5       	ldd	r26, Y+47	; 0x2f
     99a:	b8 a9       	ldd	r27, Y+48	; 0x30
     99c:	a0 70       	andi	r26, 0x00	; 0
     99e:	b0 70       	andi	r27, 0x00	; 0
     9a0:	e8 2a       	or	r14, r24
     9a2:	f9 2a       	or	r15, r25
     9a4:	0a 2b       	or	r16, r26
     9a6:	1b 2b       	or	r17, r27
     9a8:	e2 16       	cp	r14, r18
     9aa:	f3 06       	cpc	r15, r19
     9ac:	04 07       	cpc	r16, r20
     9ae:	15 07       	cpc	r17, r21
     9b0:	c0 f4       	brcc	.+48     	; 0x9e2 <__udivdi3+0x7be>
     9b2:	08 94       	sec
     9b4:	a1 08       	sbc	r10, r1
     9b6:	b1 08       	sbc	r11, r1
     9b8:	c1 08       	sbc	r12, r1
     9ba:	d1 08       	sbc	r13, r1
     9bc:	e2 0c       	add	r14, r2
     9be:	f3 1c       	adc	r15, r3
     9c0:	04 1d       	adc	r16, r4
     9c2:	15 1d       	adc	r17, r5
     9c4:	e2 14       	cp	r14, r2
     9c6:	f3 04       	cpc	r15, r3
     9c8:	04 05       	cpc	r16, r4
     9ca:	15 05       	cpc	r17, r5
     9cc:	50 f0       	brcs	.+20     	; 0x9e2 <__udivdi3+0x7be>
     9ce:	e2 16       	cp	r14, r18
     9d0:	f3 06       	cpc	r15, r19
     9d2:	04 07       	cpc	r16, r20
     9d4:	15 07       	cpc	r17, r21
     9d6:	28 f4       	brcc	.+10     	; 0x9e2 <__udivdi3+0x7be>
     9d8:	08 94       	sec
     9da:	a1 08       	sbc	r10, r1
     9dc:	b1 08       	sbc	r11, r1
     9de:	c1 08       	sbc	r12, r1
     9e0:	d1 08       	sbc	r13, r1
     9e2:	61 96       	adiw	r28, 0x11	; 17
     9e4:	ec ac       	ldd	r14, Y+60	; 0x3c
     9e6:	fd ac       	ldd	r15, Y+61	; 0x3d
     9e8:	0e ad       	ldd	r16, Y+62	; 0x3e
     9ea:	1f ad       	ldd	r17, Y+63	; 0x3f
     9ec:	61 97       	sbiw	r28, 0x11	; 17
     9ee:	d7 01       	movw	r26, r14
     9f0:	99 27       	eor	r25, r25
     9f2:	88 27       	eor	r24, r24
     9f4:	96 01       	movw	r18, r12
     9f6:	85 01       	movw	r16, r10
     9f8:	08 2b       	or	r16, r24
     9fa:	19 2b       	or	r17, r25
     9fc:	2a 2b       	or	r18, r26
     9fe:	3b 2b       	or	r19, r27
     a00:	09 ab       	std	Y+49, r16	; 0x31
     a02:	1a ab       	std	Y+50, r17	; 0x32
     a04:	2b ab       	std	Y+51, r18	; 0x33
     a06:	3c ab       	std	Y+52, r19	; 0x34
     a08:	62 c2       	rjmp	.+1220   	; 0xece <__udivdi3+0xcaa>
     a0a:	6e 14       	cp	r6, r14
     a0c:	7f 04       	cpc	r7, r15
     a0e:	80 06       	cpc	r8, r16
     a10:	91 06       	cpc	r9, r17
     a12:	08 f4       	brcc	.+2      	; 0xa16 <__udivdi3+0x7f2>
     a14:	51 c2       	rjmp	.+1186   	; 0xeb8 <__udivdi3+0xc94>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	e2 16       	cp	r14, r18
     a1a:	20 e0       	ldi	r18, 0x00	; 0
     a1c:	f2 06       	cpc	r15, r18
     a1e:	21 e0       	ldi	r18, 0x01	; 1
     a20:	02 07       	cpc	r16, r18
     a22:	20 e0       	ldi	r18, 0x00	; 0
     a24:	12 07       	cpc	r17, r18
     a26:	88 f4       	brcc	.+34     	; 0xa4a <__udivdi3+0x826>
     a28:	3f ef       	ldi	r19, 0xFF	; 255
     a2a:	e3 16       	cp	r14, r19
     a2c:	f1 04       	cpc	r15, r1
     a2e:	01 05       	cpc	r16, r1
     a30:	11 05       	cpc	r17, r1
     a32:	31 f0       	breq	.+12     	; 0xa40 <__udivdi3+0x81c>
     a34:	28 f0       	brcs	.+10     	; 0xa40 <__udivdi3+0x81c>
     a36:	48 e0       	ldi	r20, 0x08	; 8
     a38:	50 e0       	ldi	r21, 0x00	; 0
     a3a:	60 e0       	ldi	r22, 0x00	; 0
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	17 c0       	rjmp	.+46     	; 0xa6e <__udivdi3+0x84a>
     a40:	40 e0       	ldi	r20, 0x00	; 0
     a42:	50 e0       	ldi	r21, 0x00	; 0
     a44:	60 e0       	ldi	r22, 0x00	; 0
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	12 c0       	rjmp	.+36     	; 0xa6e <__udivdi3+0x84a>
     a4a:	40 e0       	ldi	r20, 0x00	; 0
     a4c:	e4 16       	cp	r14, r20
     a4e:	40 e0       	ldi	r20, 0x00	; 0
     a50:	f4 06       	cpc	r15, r20
     a52:	40 e0       	ldi	r20, 0x00	; 0
     a54:	04 07       	cpc	r16, r20
     a56:	41 e0       	ldi	r20, 0x01	; 1
     a58:	14 07       	cpc	r17, r20
     a5a:	28 f0       	brcs	.+10     	; 0xa66 <__udivdi3+0x842>
     a5c:	48 e1       	ldi	r20, 0x18	; 24
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	04 c0       	rjmp	.+8      	; 0xa6e <__udivdi3+0x84a>
     a66:	40 e1       	ldi	r20, 0x10	; 16
     a68:	50 e0       	ldi	r21, 0x00	; 0
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	d8 01       	movw	r26, r16
     a70:	c7 01       	movw	r24, r14
     a72:	04 2e       	mov	r0, r20
     a74:	04 c0       	rjmp	.+8      	; 0xa7e <__udivdi3+0x85a>
     a76:	b6 95       	lsr	r27
     a78:	a7 95       	ror	r26
     a7a:	97 95       	ror	r25
     a7c:	87 95       	ror	r24
     a7e:	0a 94       	dec	r0
     a80:	d2 f7       	brpl	.-12     	; 0xa76 <__udivdi3+0x852>
     a82:	86 58       	subi	r24, 0x86	; 134
     a84:	9d 4f       	sbci	r25, 0xFD	; 253
     a86:	dc 01       	movw	r26, r24
     a88:	2c 91       	ld	r18, X
     a8a:	30 e2       	ldi	r19, 0x20	; 32
     a8c:	a3 2e       	mov	r10, r19
     a8e:	b1 2c       	mov	r11, r1
     a90:	c1 2c       	mov	r12, r1
     a92:	d1 2c       	mov	r13, r1
     a94:	d6 01       	movw	r26, r12
     a96:	c5 01       	movw	r24, r10
     a98:	84 1b       	sub	r24, r20
     a9a:	95 0b       	sbc	r25, r21
     a9c:	a6 0b       	sbc	r26, r22
     a9e:	b7 0b       	sbc	r27, r23
     aa0:	82 1b       	sub	r24, r18
     aa2:	91 09       	sbc	r25, r1
     aa4:	a1 09       	sbc	r26, r1
     aa6:	b1 09       	sbc	r27, r1
     aa8:	00 97       	sbiw	r24, 0x00	; 0
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	89 f4       	brne	.+34     	; 0xad2 <__udivdi3+0x8ae>
     ab0:	e6 14       	cp	r14, r6
     ab2:	f7 04       	cpc	r15, r7
     ab4:	08 05       	cpc	r16, r8
     ab6:	19 05       	cpc	r17, r9
     ab8:	08 f4       	brcc	.+2      	; 0xabc <__udivdi3+0x898>
     aba:	f2 c1       	rjmp	.+996    	; 0xea0 <__udivdi3+0xc7c>
     abc:	6d a4       	ldd	r6, Y+45	; 0x2d
     abe:	7e a4       	ldd	r7, Y+46	; 0x2e
     ac0:	8f a4       	ldd	r8, Y+47	; 0x2f
     ac2:	98 a8       	ldd	r9, Y+48	; 0x30
     ac4:	62 14       	cp	r6, r2
     ac6:	73 04       	cpc	r7, r3
     ac8:	84 04       	cpc	r8, r4
     aca:	95 04       	cpc	r9, r5
     acc:	08 f0       	brcs	.+2      	; 0xad0 <__udivdi3+0x8ac>
     ace:	e8 c1       	rjmp	.+976    	; 0xea0 <__udivdi3+0xc7c>
     ad0:	f3 c1       	rjmp	.+998    	; 0xeb8 <__udivdi3+0xc94>
     ad2:	6e 96       	adiw	r28, 0x1e	; 30
     ad4:	8f af       	std	Y+63, r24	; 0x3f
     ad6:	6e 97       	sbiw	r28, 0x1e	; 30
     ad8:	08 2e       	mov	r0, r24
     ada:	04 c0       	rjmp	.+8      	; 0xae4 <__udivdi3+0x8c0>
     adc:	ee 0c       	add	r14, r14
     ade:	ff 1c       	adc	r15, r15
     ae0:	00 1f       	adc	r16, r16
     ae2:	11 1f       	adc	r17, r17
     ae4:	0a 94       	dec	r0
     ae6:	d2 f7       	brpl	.-12     	; 0xadc <__udivdi3+0x8b8>
     ae8:	6a 2d       	mov	r22, r10
     aea:	68 1b       	sub	r22, r24
     aec:	d2 01       	movw	r26, r4
     aee:	c1 01       	movw	r24, r2
     af0:	06 2e       	mov	r0, r22
     af2:	04 c0       	rjmp	.+8      	; 0xafc <__udivdi3+0x8d8>
     af4:	b6 95       	lsr	r27
     af6:	a7 95       	ror	r26
     af8:	97 95       	ror	r25
     afa:	87 95       	ror	r24
     afc:	0a 94       	dec	r0
     afe:	d2 f7       	brpl	.-12     	; 0xaf4 <__udivdi3+0x8d0>
     b00:	5c 01       	movw	r10, r24
     b02:	6d 01       	movw	r12, r26
     b04:	ae 28       	or	r10, r14
     b06:	bf 28       	or	r11, r15
     b08:	c0 2a       	or	r12, r16
     b0a:	d1 2a       	or	r13, r17
     b0c:	ad a2       	std	Y+37, r10	; 0x25
     b0e:	be a2       	std	Y+38, r11	; 0x26
     b10:	cf a2       	std	Y+39, r12	; 0x27
     b12:	d8 a6       	std	Y+40, r13	; 0x28
     b14:	72 01       	movw	r14, r4
     b16:	61 01       	movw	r12, r2
     b18:	6e 96       	adiw	r28, 0x1e	; 30
     b1a:	0f ac       	ldd	r0, Y+63	; 0x3f
     b1c:	6e 97       	sbiw	r28, 0x1e	; 30
     b1e:	04 c0       	rjmp	.+8      	; 0xb28 <__udivdi3+0x904>
     b20:	cc 0c       	add	r12, r12
     b22:	dd 1c       	adc	r13, r13
     b24:	ee 1c       	adc	r14, r14
     b26:	ff 1c       	adc	r15, r15
     b28:	0a 94       	dec	r0
     b2a:	d2 f7       	brpl	.-12     	; 0xb20 <__udivdi3+0x8fc>
     b2c:	c9 a2       	std	Y+33, r12	; 0x21
     b2e:	da a2       	std	Y+34, r13	; 0x22
     b30:	eb a2       	std	Y+35, r14	; 0x23
     b32:	fc a2       	std	Y+36, r15	; 0x24
     b34:	64 01       	movw	r12, r8
     b36:	53 01       	movw	r10, r6
     b38:	06 2e       	mov	r0, r22
     b3a:	04 c0       	rjmp	.+8      	; 0xb44 <__udivdi3+0x920>
     b3c:	d6 94       	lsr	r13
     b3e:	c7 94       	ror	r12
     b40:	b7 94       	ror	r11
     b42:	a7 94       	ror	r10
     b44:	0a 94       	dec	r0
     b46:	d2 f7       	brpl	.-12     	; 0xb3c <__udivdi3+0x918>
     b48:	d4 01       	movw	r26, r8
     b4a:	c3 01       	movw	r24, r6
     b4c:	6e 96       	adiw	r28, 0x1e	; 30
     b4e:	0f ac       	ldd	r0, Y+63	; 0x3f
     b50:	6e 97       	sbiw	r28, 0x1e	; 30
     b52:	04 c0       	rjmp	.+8      	; 0xb5c <__udivdi3+0x938>
     b54:	88 0f       	add	r24, r24
     b56:	99 1f       	adc	r25, r25
     b58:	aa 1f       	adc	r26, r26
     b5a:	bb 1f       	adc	r27, r27
     b5c:	0a 94       	dec	r0
     b5e:	d2 f7       	brpl	.-12     	; 0xb54 <__udivdi3+0x930>
     b60:	ed a4       	ldd	r14, Y+45	; 0x2d
     b62:	fe a4       	ldd	r15, Y+46	; 0x2e
     b64:	0f a5       	ldd	r16, Y+47	; 0x2f
     b66:	18 a9       	ldd	r17, Y+48	; 0x30
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__udivdi3+0x94e>
     b6a:	16 95       	lsr	r17
     b6c:	07 95       	ror	r16
     b6e:	f7 94       	ror	r15
     b70:	e7 94       	ror	r14
     b72:	6a 95       	dec	r22
     b74:	d2 f7       	brpl	.-12     	; 0xb6a <__udivdi3+0x946>
     b76:	37 01       	movw	r6, r14
     b78:	48 01       	movw	r8, r16
     b7a:	68 2a       	or	r6, r24
     b7c:	79 2a       	or	r7, r25
     b7e:	8a 2a       	or	r8, r26
     b80:	9b 2a       	or	r9, r27
     b82:	6d 8e       	std	Y+29, r6	; 0x1d
     b84:	7e 8e       	std	Y+30, r7	; 0x1e
     b86:	8f 8e       	std	Y+31, r8	; 0x1f
     b88:	98 a2       	std	Y+32, r9	; 0x20
     b8a:	ed a0       	ldd	r14, Y+37	; 0x25
     b8c:	fe a0       	ldd	r15, Y+38	; 0x26
     b8e:	0f a1       	ldd	r16, Y+39	; 0x27
     b90:	18 a5       	ldd	r17, Y+40	; 0x28
     b92:	38 01       	movw	r6, r16
     b94:	88 24       	eor	r8, r8
     b96:	99 24       	eor	r9, r9
     b98:	98 01       	movw	r18, r16
     b9a:	87 01       	movw	r16, r14
     b9c:	20 70       	andi	r18, 0x00	; 0
     b9e:	30 70       	andi	r19, 0x00	; 0
     ba0:	65 96       	adiw	r28, 0x15	; 21
     ba2:	0c af       	std	Y+60, r16	; 0x3c
     ba4:	1d af       	std	Y+61, r17	; 0x3d
     ba6:	2e af       	std	Y+62, r18	; 0x3e
     ba8:	3f af       	std	Y+63, r19	; 0x3f
     baa:	65 97       	sbiw	r28, 0x15	; 21
     bac:	c6 01       	movw	r24, r12
     bae:	b5 01       	movw	r22, r10
     bb0:	a4 01       	movw	r20, r8
     bb2:	93 01       	movw	r18, r6
     bb4:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     bb8:	7b 01       	movw	r14, r22
     bba:	8c 01       	movw	r16, r24
     bbc:	c6 01       	movw	r24, r12
     bbe:	b5 01       	movw	r22, r10
     bc0:	a4 01       	movw	r20, r8
     bc2:	93 01       	movw	r18, r6
     bc4:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     bc8:	c9 01       	movw	r24, r18
     bca:	da 01       	movw	r26, r20
     bcc:	1c 01       	movw	r2, r24
     bce:	2d 01       	movw	r4, r26
     bd0:	c2 01       	movw	r24, r4
     bd2:	b1 01       	movw	r22, r2
     bd4:	65 96       	adiw	r28, 0x15	; 21
     bd6:	2c ad       	ldd	r18, Y+60	; 0x3c
     bd8:	3d ad       	ldd	r19, Y+61	; 0x3d
     bda:	4e ad       	ldd	r20, Y+62	; 0x3e
     bdc:	5f ad       	ldd	r21, Y+63	; 0x3f
     bde:	65 97       	sbiw	r28, 0x15	; 21
     be0:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     be4:	9b 01       	movw	r18, r22
     be6:	ac 01       	movw	r20, r24
     be8:	87 01       	movw	r16, r14
     bea:	ff 24       	eor	r15, r15
     bec:	ee 24       	eor	r14, r14
     bee:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bf0:	be 8c       	ldd	r11, Y+30	; 0x1e
     bf2:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bf4:	d8 a0       	ldd	r13, Y+32	; 0x20
     bf6:	c6 01       	movw	r24, r12
     bf8:	aa 27       	eor	r26, r26
     bfa:	bb 27       	eor	r27, r27
     bfc:	57 01       	movw	r10, r14
     bfe:	68 01       	movw	r12, r16
     c00:	a8 2a       	or	r10, r24
     c02:	b9 2a       	or	r11, r25
     c04:	ca 2a       	or	r12, r26
     c06:	db 2a       	or	r13, r27
     c08:	a2 16       	cp	r10, r18
     c0a:	b3 06       	cpc	r11, r19
     c0c:	c4 06       	cpc	r12, r20
     c0e:	d5 06       	cpc	r13, r21
     c10:	00 f5       	brcc	.+64     	; 0xc52 <__udivdi3+0xa2e>
     c12:	08 94       	sec
     c14:	21 08       	sbc	r2, r1
     c16:	31 08       	sbc	r3, r1
     c18:	41 08       	sbc	r4, r1
     c1a:	51 08       	sbc	r5, r1
     c1c:	ed a0       	ldd	r14, Y+37	; 0x25
     c1e:	fe a0       	ldd	r15, Y+38	; 0x26
     c20:	0f a1       	ldd	r16, Y+39	; 0x27
     c22:	18 a5       	ldd	r17, Y+40	; 0x28
     c24:	ae 0c       	add	r10, r14
     c26:	bf 1c       	adc	r11, r15
     c28:	c0 1e       	adc	r12, r16
     c2a:	d1 1e       	adc	r13, r17
     c2c:	ae 14       	cp	r10, r14
     c2e:	bf 04       	cpc	r11, r15
     c30:	c0 06       	cpc	r12, r16
     c32:	d1 06       	cpc	r13, r17
     c34:	70 f0       	brcs	.+28     	; 0xc52 <__udivdi3+0xa2e>
     c36:	a2 16       	cp	r10, r18
     c38:	b3 06       	cpc	r11, r19
     c3a:	c4 06       	cpc	r12, r20
     c3c:	d5 06       	cpc	r13, r21
     c3e:	48 f4       	brcc	.+18     	; 0xc52 <__udivdi3+0xa2e>
     c40:	08 94       	sec
     c42:	21 08       	sbc	r2, r1
     c44:	31 08       	sbc	r3, r1
     c46:	41 08       	sbc	r4, r1
     c48:	51 08       	sbc	r5, r1
     c4a:	ae 0c       	add	r10, r14
     c4c:	bf 1c       	adc	r11, r15
     c4e:	c0 1e       	adc	r12, r16
     c50:	d1 1e       	adc	r13, r17
     c52:	a2 1a       	sub	r10, r18
     c54:	b3 0a       	sbc	r11, r19
     c56:	c4 0a       	sbc	r12, r20
     c58:	d5 0a       	sbc	r13, r21
     c5a:	c6 01       	movw	r24, r12
     c5c:	b5 01       	movw	r22, r10
     c5e:	a4 01       	movw	r20, r8
     c60:	93 01       	movw	r18, r6
     c62:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     c66:	7b 01       	movw	r14, r22
     c68:	8c 01       	movw	r16, r24
     c6a:	c6 01       	movw	r24, r12
     c6c:	b5 01       	movw	r22, r10
     c6e:	a4 01       	movw	r20, r8
     c70:	93 01       	movw	r18, r6
     c72:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
     c76:	c9 01       	movw	r24, r18
     c78:	da 01       	movw	r26, r20
     c7a:	3c 01       	movw	r6, r24
     c7c:	4d 01       	movw	r8, r26
     c7e:	c4 01       	movw	r24, r8
     c80:	b3 01       	movw	r22, r6
     c82:	65 96       	adiw	r28, 0x15	; 21
     c84:	2c ad       	ldd	r18, Y+60	; 0x3c
     c86:	3d ad       	ldd	r19, Y+61	; 0x3d
     c88:	4e ad       	ldd	r20, Y+62	; 0x3e
     c8a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c8c:	65 97       	sbiw	r28, 0x15	; 21
     c8e:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     c92:	9b 01       	movw	r18, r22
     c94:	ac 01       	movw	r20, r24
     c96:	87 01       	movw	r16, r14
     c98:	ff 24       	eor	r15, r15
     c9a:	ee 24       	eor	r14, r14
     c9c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c9e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ca0:	af 8d       	ldd	r26, Y+31	; 0x1f
     ca2:	b8 a1       	ldd	r27, Y+32	; 0x20
     ca4:	a0 70       	andi	r26, 0x00	; 0
     ca6:	b0 70       	andi	r27, 0x00	; 0
     ca8:	57 01       	movw	r10, r14
     caa:	68 01       	movw	r12, r16
     cac:	a8 2a       	or	r10, r24
     cae:	b9 2a       	or	r11, r25
     cb0:	ca 2a       	or	r12, r26
     cb2:	db 2a       	or	r13, r27
     cb4:	a2 16       	cp	r10, r18
     cb6:	b3 06       	cpc	r11, r19
     cb8:	c4 06       	cpc	r12, r20
     cba:	d5 06       	cpc	r13, r21
     cbc:	00 f5       	brcc	.+64     	; 0xcfe <__udivdi3+0xada>
     cbe:	08 94       	sec
     cc0:	61 08       	sbc	r6, r1
     cc2:	71 08       	sbc	r7, r1
     cc4:	81 08       	sbc	r8, r1
     cc6:	91 08       	sbc	r9, r1
     cc8:	6d a1       	ldd	r22, Y+37	; 0x25
     cca:	7e a1       	ldd	r23, Y+38	; 0x26
     ccc:	8f a1       	ldd	r24, Y+39	; 0x27
     cce:	98 a5       	ldd	r25, Y+40	; 0x28
     cd0:	a6 0e       	add	r10, r22
     cd2:	b7 1e       	adc	r11, r23
     cd4:	c8 1e       	adc	r12, r24
     cd6:	d9 1e       	adc	r13, r25
     cd8:	a6 16       	cp	r10, r22
     cda:	b7 06       	cpc	r11, r23
     cdc:	c8 06       	cpc	r12, r24
     cde:	d9 06       	cpc	r13, r25
     ce0:	70 f0       	brcs	.+28     	; 0xcfe <__udivdi3+0xada>
     ce2:	a2 16       	cp	r10, r18
     ce4:	b3 06       	cpc	r11, r19
     ce6:	c4 06       	cpc	r12, r20
     ce8:	d5 06       	cpc	r13, r21
     cea:	48 f4       	brcc	.+18     	; 0xcfe <__udivdi3+0xada>
     cec:	08 94       	sec
     cee:	61 08       	sbc	r6, r1
     cf0:	71 08       	sbc	r7, r1
     cf2:	81 08       	sbc	r8, r1
     cf4:	91 08       	sbc	r9, r1
     cf6:	a6 0e       	add	r10, r22
     cf8:	b7 1e       	adc	r11, r23
     cfa:	c8 1e       	adc	r12, r24
     cfc:	d9 1e       	adc	r13, r25
     cfe:	d6 01       	movw	r26, r12
     d00:	c5 01       	movw	r24, r10
     d02:	82 1b       	sub	r24, r18
     d04:	93 0b       	sbc	r25, r19
     d06:	a4 0b       	sbc	r26, r20
     d08:	b5 0b       	sbc	r27, r21
     d0a:	89 8f       	std	Y+25, r24	; 0x19
     d0c:	9a 8f       	std	Y+26, r25	; 0x1a
     d0e:	ab 8f       	std	Y+27, r26	; 0x1b
     d10:	bc 8f       	std	Y+28, r27	; 0x1c
     d12:	d1 01       	movw	r26, r2
     d14:	99 27       	eor	r25, r25
     d16:	88 27       	eor	r24, r24
     d18:	64 01       	movw	r12, r8
     d1a:	53 01       	movw	r10, r6
     d1c:	a8 2a       	or	r10, r24
     d1e:	b9 2a       	or	r11, r25
     d20:	ca 2a       	or	r12, r26
     d22:	db 2a       	or	r13, r27
     d24:	a9 aa       	std	Y+49, r10	; 0x31
     d26:	ba aa       	std	Y+50, r11	; 0x32
     d28:	cb aa       	std	Y+51, r12	; 0x33
     d2a:	dc aa       	std	Y+52, r13	; 0x34
     d2c:	86 01       	movw	r16, r12
     d2e:	75 01       	movw	r14, r10
     d30:	2f ef       	ldi	r18, 0xFF	; 255
     d32:	3f ef       	ldi	r19, 0xFF	; 255
     d34:	40 e0       	ldi	r20, 0x00	; 0
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	e2 22       	and	r14, r18
     d3a:	f3 22       	and	r15, r19
     d3c:	04 23       	and	r16, r20
     d3e:	15 23       	and	r17, r21
     d40:	a6 01       	movw	r20, r12
     d42:	66 27       	eor	r22, r22
     d44:	77 27       	eor	r23, r23
     d46:	6d 96       	adiw	r28, 0x1d	; 29
     d48:	4c af       	std	Y+60, r20	; 0x3c
     d4a:	5d af       	std	Y+61, r21	; 0x3d
     d4c:	6e af       	std	Y+62, r22	; 0x3e
     d4e:	7f af       	std	Y+63, r23	; 0x3f
     d50:	6d 97       	sbiw	r28, 0x1d	; 29
     d52:	a9 a0       	ldd	r10, Y+33	; 0x21
     d54:	ba a0       	ldd	r11, Y+34	; 0x22
     d56:	cb a0       	ldd	r12, Y+35	; 0x23
     d58:	dc a0       	ldd	r13, Y+36	; 0x24
     d5a:	6f ef       	ldi	r22, 0xFF	; 255
     d5c:	7f ef       	ldi	r23, 0xFF	; 255
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	a6 22       	and	r10, r22
     d64:	b7 22       	and	r11, r23
     d66:	c8 22       	and	r12, r24
     d68:	d9 22       	and	r13, r25
     d6a:	89 a1       	ldd	r24, Y+33	; 0x21
     d6c:	9a a1       	ldd	r25, Y+34	; 0x22
     d6e:	ab a1       	ldd	r26, Y+35	; 0x23
     d70:	bc a1       	ldd	r27, Y+36	; 0x24
     d72:	1d 01       	movw	r2, r26
     d74:	44 24       	eor	r4, r4
     d76:	55 24       	eor	r5, r5
     d78:	c8 01       	movw	r24, r16
     d7a:	b7 01       	movw	r22, r14
     d7c:	a6 01       	movw	r20, r12
     d7e:	95 01       	movw	r18, r10
     d80:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     d84:	69 96       	adiw	r28, 0x19	; 25
     d86:	6c af       	std	Y+60, r22	; 0x3c
     d88:	7d af       	std	Y+61, r23	; 0x3d
     d8a:	8e af       	std	Y+62, r24	; 0x3e
     d8c:	9f af       	std	Y+63, r25	; 0x3f
     d8e:	69 97       	sbiw	r28, 0x19	; 25
     d90:	c8 01       	movw	r24, r16
     d92:	b7 01       	movw	r22, r14
     d94:	a2 01       	movw	r20, r4
     d96:	91 01       	movw	r18, r2
     d98:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     d9c:	3b 01       	movw	r6, r22
     d9e:	4c 01       	movw	r8, r24
     da0:	6d 96       	adiw	r28, 0x1d	; 29
     da2:	6c ad       	ldd	r22, Y+60	; 0x3c
     da4:	7d ad       	ldd	r23, Y+61	; 0x3d
     da6:	8e ad       	ldd	r24, Y+62	; 0x3e
     da8:	9f ad       	ldd	r25, Y+63	; 0x3f
     daa:	6d 97       	sbiw	r28, 0x1d	; 29
     dac:	a6 01       	movw	r20, r12
     dae:	95 01       	movw	r18, r10
     db0:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     db4:	7b 01       	movw	r14, r22
     db6:	8c 01       	movw	r16, r24
     db8:	6d 96       	adiw	r28, 0x1d	; 29
     dba:	6c ad       	ldd	r22, Y+60	; 0x3c
     dbc:	7d ad       	ldd	r23, Y+61	; 0x3d
     dbe:	8e ad       	ldd	r24, Y+62	; 0x3e
     dc0:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc2:	6d 97       	sbiw	r28, 0x1d	; 29
     dc4:	a2 01       	movw	r20, r4
     dc6:	91 01       	movw	r18, r2
     dc8:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
     dcc:	5b 01       	movw	r10, r22
     dce:	6c 01       	movw	r12, r24
     dd0:	a8 01       	movw	r20, r16
     dd2:	97 01       	movw	r18, r14
     dd4:	26 0d       	add	r18, r6
     dd6:	37 1d       	adc	r19, r7
     dd8:	48 1d       	adc	r20, r8
     dda:	59 1d       	adc	r21, r9
     ddc:	69 96       	adiw	r28, 0x19	; 25
     dde:	6c ac       	ldd	r6, Y+60	; 0x3c
     de0:	7d ac       	ldd	r7, Y+61	; 0x3d
     de2:	8e ac       	ldd	r8, Y+62	; 0x3e
     de4:	9f ac       	ldd	r9, Y+63	; 0x3f
     de6:	69 97       	sbiw	r28, 0x19	; 25
     de8:	c4 01       	movw	r24, r8
     dea:	aa 27       	eor	r26, r26
     dec:	bb 27       	eor	r27, r27
     dee:	28 0f       	add	r18, r24
     df0:	39 1f       	adc	r19, r25
     df2:	4a 1f       	adc	r20, r26
     df4:	5b 1f       	adc	r21, r27
     df6:	2e 15       	cp	r18, r14
     df8:	3f 05       	cpc	r19, r15
     dfa:	40 07       	cpc	r20, r16
     dfc:	51 07       	cpc	r21, r17
     dfe:	48 f4       	brcc	.+18     	; 0xe12 <__udivdi3+0xbee>
     e00:	e1 2c       	mov	r14, r1
     e02:	f1 2c       	mov	r15, r1
     e04:	61 e0       	ldi	r22, 0x01	; 1
     e06:	06 2f       	mov	r16, r22
     e08:	11 2d       	mov	r17, r1
     e0a:	ae 0c       	add	r10, r14
     e0c:	bf 1c       	adc	r11, r15
     e0e:	c0 1e       	adc	r12, r16
     e10:	d1 1e       	adc	r13, r17
     e12:	ca 01       	movw	r24, r20
     e14:	aa 27       	eor	r26, r26
     e16:	bb 27       	eor	r27, r27
     e18:	bc 01       	movw	r22, r24
     e1a:	cd 01       	movw	r24, r26
     e1c:	6a 0d       	add	r22, r10
     e1e:	7b 1d       	adc	r23, r11
     e20:	8c 1d       	adc	r24, r12
     e22:	9d 1d       	adc	r25, r13
     e24:	69 8c       	ldd	r6, Y+25	; 0x19
     e26:	7a 8c       	ldd	r7, Y+26	; 0x1a
     e28:	8b 8c       	ldd	r8, Y+27	; 0x1b
     e2a:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e2c:	66 16       	cp	r6, r22
     e2e:	77 06       	cpc	r7, r23
     e30:	88 06       	cpc	r8, r24
     e32:	99 06       	cpc	r9, r25
     e34:	40 f1       	brcs	.+80     	; 0xe86 <__udivdi3+0xc62>
     e36:	66 15       	cp	r22, r6
     e38:	77 05       	cpc	r23, r7
     e3a:	88 05       	cpc	r24, r8
     e3c:	99 05       	cpc	r25, r9
     e3e:	09 f0       	breq	.+2      	; 0xe42 <__udivdi3+0xc1e>
     e40:	43 c0       	rjmp	.+134    	; 0xec8 <__udivdi3+0xca4>
     e42:	d9 01       	movw	r26, r18
     e44:	99 27       	eor	r25, r25
     e46:	88 27       	eor	r24, r24
     e48:	69 96       	adiw	r28, 0x19	; 25
     e4a:	2c ad       	ldd	r18, Y+60	; 0x3c
     e4c:	3d ad       	ldd	r19, Y+61	; 0x3d
     e4e:	4e ad       	ldd	r20, Y+62	; 0x3e
     e50:	5f ad       	ldd	r21, Y+63	; 0x3f
     e52:	69 97       	sbiw	r28, 0x19	; 25
     e54:	40 70       	andi	r20, 0x00	; 0
     e56:	50 70       	andi	r21, 0x00	; 0
     e58:	82 0f       	add	r24, r18
     e5a:	93 1f       	adc	r25, r19
     e5c:	a4 1f       	adc	r26, r20
     e5e:	b5 1f       	adc	r27, r21
     e60:	2d a5       	ldd	r18, Y+45	; 0x2d
     e62:	3e a5       	ldd	r19, Y+46	; 0x2e
     e64:	4f a5       	ldd	r20, Y+47	; 0x2f
     e66:	58 a9       	ldd	r21, Y+48	; 0x30
     e68:	6e 96       	adiw	r28, 0x1e	; 30
     e6a:	0f ac       	ldd	r0, Y+63	; 0x3f
     e6c:	6e 97       	sbiw	r28, 0x1e	; 30
     e6e:	04 c0       	rjmp	.+8      	; 0xe78 <__udivdi3+0xc54>
     e70:	22 0f       	add	r18, r18
     e72:	33 1f       	adc	r19, r19
     e74:	44 1f       	adc	r20, r20
     e76:	55 1f       	adc	r21, r21
     e78:	0a 94       	dec	r0
     e7a:	d2 f7       	brpl	.-12     	; 0xe70 <__udivdi3+0xc4c>
     e7c:	28 17       	cp	r18, r24
     e7e:	39 07       	cpc	r19, r25
     e80:	4a 07       	cpc	r20, r26
     e82:	5b 07       	cpc	r21, r27
     e84:	08 f5       	brcc	.+66     	; 0xec8 <__udivdi3+0xca4>
     e86:	09 a9       	ldd	r16, Y+49	; 0x31
     e88:	1a a9       	ldd	r17, Y+50	; 0x32
     e8a:	2b a9       	ldd	r18, Y+51	; 0x33
     e8c:	3c a9       	ldd	r19, Y+52	; 0x34
     e8e:	01 50       	subi	r16, 0x01	; 1
     e90:	10 40       	sbci	r17, 0x00	; 0
     e92:	20 40       	sbci	r18, 0x00	; 0
     e94:	30 40       	sbci	r19, 0x00	; 0
     e96:	09 ab       	std	Y+49, r16	; 0x31
     e98:	1a ab       	std	Y+50, r17	; 0x32
     e9a:	2b ab       	std	Y+51, r18	; 0x33
     e9c:	3c ab       	std	Y+52, r19	; 0x34
     e9e:	14 c0       	rjmp	.+40     	; 0xec8 <__udivdi3+0xca4>
     ea0:	66 24       	eor	r6, r6
     ea2:	77 24       	eor	r7, r7
     ea4:	43 01       	movw	r8, r6
     ea6:	21 e0       	ldi	r18, 0x01	; 1
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	40 e0       	ldi	r20, 0x00	; 0
     eac:	50 e0       	ldi	r21, 0x00	; 0
     eae:	29 ab       	std	Y+49, r18	; 0x31
     eb0:	3a ab       	std	Y+50, r19	; 0x32
     eb2:	4b ab       	std	Y+51, r20	; 0x33
     eb4:	5c ab       	std	Y+52, r21	; 0x34
     eb6:	0b c0       	rjmp	.+22     	; 0xece <__udivdi3+0xcaa>
     eb8:	66 24       	eor	r6, r6
     eba:	77 24       	eor	r7, r7
     ebc:	43 01       	movw	r8, r6
     ebe:	19 aa       	std	Y+49, r1	; 0x31
     ec0:	1a aa       	std	Y+50, r1	; 0x32
     ec2:	1b aa       	std	Y+51, r1	; 0x33
     ec4:	1c aa       	std	Y+52, r1	; 0x34
     ec6:	03 c0       	rjmp	.+6      	; 0xece <__udivdi3+0xcaa>
     ec8:	66 24       	eor	r6, r6
     eca:	77 24       	eor	r7, r7
     ecc:	43 01       	movw	r8, r6
     ece:	fe 01       	movw	r30, r28
     ed0:	71 96       	adiw	r30, 0x11	; 17
     ed2:	88 e0       	ldi	r24, 0x08	; 8
     ed4:	df 01       	movw	r26, r30
     ed6:	1d 92       	st	X+, r1
     ed8:	8a 95       	dec	r24
     eda:	e9 f7       	brne	.-6      	; 0xed6 <__udivdi3+0xcb2>
     edc:	a9 a8       	ldd	r10, Y+49	; 0x31
     ede:	ba a8       	ldd	r11, Y+50	; 0x32
     ee0:	cb a8       	ldd	r12, Y+51	; 0x33
     ee2:	dc a8       	ldd	r13, Y+52	; 0x34
     ee4:	a9 8a       	std	Y+17, r10	; 0x11
     ee6:	ba 8a       	std	Y+18, r11	; 0x12
     ee8:	cb 8a       	std	Y+19, r12	; 0x13
     eea:	dc 8a       	std	Y+20, r13	; 0x14
     eec:	6d 8a       	std	Y+21, r6	; 0x15
     eee:	7e 8a       	std	Y+22, r7	; 0x16
     ef0:	8f 8a       	std	Y+23, r8	; 0x17
     ef2:	98 8e       	std	Y+24, r9	; 0x18
     ef4:	29 a9       	ldd	r18, Y+49	; 0x31
     ef6:	3a 89       	ldd	r19, Y+18	; 0x12
     ef8:	4b 89       	ldd	r20, Y+19	; 0x13
     efa:	5c 89       	ldd	r21, Y+20	; 0x14
     efc:	66 2d       	mov	r22, r6
     efe:	7e 89       	ldd	r23, Y+22	; 0x16
     f00:	8f 89       	ldd	r24, Y+23	; 0x17
     f02:	98 8d       	ldd	r25, Y+24	; 0x18
     f04:	c2 5a       	subi	r28, 0xA2	; 162
     f06:	df 4f       	sbci	r29, 0xFF	; 255
     f08:	e2 e1       	ldi	r30, 0x12	; 18
     f0a:	0c 94 73 62 	jmp	0xc4e6	; 0xc4e6 <__epilogue_restores__>

00000f0e <__umoddi3>:
     f0e:	ab e5       	ldi	r26, 0x5B	; 91
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	ed e8       	ldi	r30, 0x8D	; 141
     f14:	f7 e0       	ldi	r31, 0x07	; 7
     f16:	0c 94 57 62 	jmp	0xc4ae	; 0xc4ae <__prologue_saves__>
     f1a:	a8 e0       	ldi	r26, 0x08	; 8
     f1c:	4e 01       	movw	r8, r28
     f1e:	08 94       	sec
     f20:	81 1c       	adc	r8, r1
     f22:	91 1c       	adc	r9, r1
     f24:	f4 01       	movw	r30, r8
     f26:	6a 2e       	mov	r6, r26
     f28:	11 92       	st	Z+, r1
     f2a:	6a 94       	dec	r6
     f2c:	e9 f7       	brne	.-6      	; 0xf28 <__umoddi3+0x1a>
     f2e:	29 83       	std	Y+1, r18	; 0x01
     f30:	3a 83       	std	Y+2, r19	; 0x02
     f32:	4b 83       	std	Y+3, r20	; 0x03
     f34:	5c 83       	std	Y+4, r21	; 0x04
     f36:	6d 83       	std	Y+5, r22	; 0x05
     f38:	7e 83       	std	Y+6, r23	; 0x06
     f3a:	8f 83       	std	Y+7, r24	; 0x07
     f3c:	98 87       	std	Y+8, r25	; 0x08
     f3e:	ce 01       	movw	r24, r28
     f40:	09 96       	adiw	r24, 0x09	; 9
     f42:	fc 01       	movw	r30, r24
     f44:	11 92       	st	Z+, r1
     f46:	aa 95       	dec	r26
     f48:	e9 f7       	brne	.-6      	; 0xf44 <__umoddi3+0x36>
     f4a:	a9 86       	std	Y+9, r10	; 0x09
     f4c:	ba 86       	std	Y+10, r11	; 0x0a
     f4e:	cb 86       	std	Y+11, r12	; 0x0b
     f50:	dc 86       	std	Y+12, r13	; 0x0c
     f52:	ed 86       	std	Y+13, r14	; 0x0d
     f54:	fe 86       	std	Y+14, r15	; 0x0e
     f56:	0f 87       	std	Y+15, r16	; 0x0f
     f58:	18 8b       	std	Y+16, r17	; 0x10
     f5a:	29 84       	ldd	r2, Y+9	; 0x09
     f5c:	3a 84       	ldd	r3, Y+10	; 0x0a
     f5e:	4b 84       	ldd	r4, Y+11	; 0x0b
     f60:	5c 84       	ldd	r5, Y+12	; 0x0c
     f62:	ad 84       	ldd	r10, Y+13	; 0x0d
     f64:	be 84       	ldd	r11, Y+14	; 0x0e
     f66:	cf 84       	ldd	r12, Y+15	; 0x0f
     f68:	d8 88       	ldd	r13, Y+16	; 0x10
     f6a:	29 81       	ldd	r18, Y+1	; 0x01
     f6c:	3a 81       	ldd	r19, Y+2	; 0x02
     f6e:	4b 81       	ldd	r20, Y+3	; 0x03
     f70:	5c 81       	ldd	r21, Y+4	; 0x04
     f72:	69 96       	adiw	r28, 0x19	; 25
     f74:	2f af       	std	Y+63, r18	; 0x3f
     f76:	69 97       	sbiw	r28, 0x19	; 25
     f78:	6a 96       	adiw	r28, 0x1a	; 26
     f7a:	3f af       	std	Y+63, r19	; 0x3f
     f7c:	6a 97       	sbiw	r28, 0x1a	; 26
     f7e:	6b 96       	adiw	r28, 0x1b	; 27
     f80:	4f af       	std	Y+63, r20	; 0x3f
     f82:	6b 97       	sbiw	r28, 0x1b	; 27
     f84:	6c 96       	adiw	r28, 0x1c	; 28
     f86:	5f af       	std	Y+63, r21	; 0x3f
     f88:	6c 97       	sbiw	r28, 0x1c	; 28
     f8a:	6c 96       	adiw	r28, 0x1c	; 28
     f8c:	6c ac       	ldd	r6, Y+60	; 0x3c
     f8e:	7d ac       	ldd	r7, Y+61	; 0x3d
     f90:	8e ac       	ldd	r8, Y+62	; 0x3e
     f92:	9f ac       	ldd	r9, Y+63	; 0x3f
     f94:	6c 97       	sbiw	r28, 0x1c	; 28
     f96:	69 aa       	std	Y+49, r6	; 0x31
     f98:	7a aa       	std	Y+50, r7	; 0x32
     f9a:	8b aa       	std	Y+51, r8	; 0x33
     f9c:	9c aa       	std	Y+52, r9	; 0x34
     f9e:	6d 81       	ldd	r22, Y+5	; 0x05
     fa0:	7e 81       	ldd	r23, Y+6	; 0x06
     fa2:	8f 81       	ldd	r24, Y+7	; 0x07
     fa4:	98 85       	ldd	r25, Y+8	; 0x08
     fa6:	3b 01       	movw	r6, r22
     fa8:	4c 01       	movw	r8, r24
     faa:	6d aa       	std	Y+53, r6	; 0x35
     fac:	7e aa       	std	Y+54, r7	; 0x36
     fae:	8f aa       	std	Y+55, r8	; 0x37
     fb0:	98 ae       	std	Y+56, r9	; 0x38
     fb2:	a1 14       	cp	r10, r1
     fb4:	b1 04       	cpc	r11, r1
     fb6:	c1 04       	cpc	r12, r1
     fb8:	d1 04       	cpc	r13, r1
     fba:	09 f0       	breq	.+2      	; 0xfbe <__umoddi3+0xb0>
     fbc:	04 c3       	rjmp	.+1544   	; 0x15c6 <__stack+0x4c7>
     fbe:	62 14       	cp	r6, r2
     fc0:	73 04       	cpc	r7, r3
     fc2:	84 04       	cpc	r8, r4
     fc4:	95 04       	cpc	r9, r5
     fc6:	08 f0       	brcs	.+2      	; 0xfca <__umoddi3+0xbc>
     fc8:	00 c1       	rjmp	.+512    	; 0x11ca <__stack+0xcb>
     fca:	00 e0       	ldi	r16, 0x00	; 0
     fcc:	20 16       	cp	r2, r16
     fce:	00 e0       	ldi	r16, 0x00	; 0
     fd0:	30 06       	cpc	r3, r16
     fd2:	01 e0       	ldi	r16, 0x01	; 1
     fd4:	40 06       	cpc	r4, r16
     fd6:	00 e0       	ldi	r16, 0x00	; 0
     fd8:	50 06       	cpc	r5, r16
     fda:	88 f4       	brcc	.+34     	; 0xffe <__umoddi3+0xf0>
     fdc:	1f ef       	ldi	r17, 0xFF	; 255
     fde:	21 16       	cp	r2, r17
     fe0:	31 04       	cpc	r3, r1
     fe2:	41 04       	cpc	r4, r1
     fe4:	51 04       	cpc	r5, r1
     fe6:	39 f0       	breq	.+14     	; 0xff6 <__umoddi3+0xe8>
     fe8:	30 f0       	brcs	.+12     	; 0xff6 <__umoddi3+0xe8>
     fea:	88 e0       	ldi	r24, 0x08	; 8
     fec:	e8 2e       	mov	r14, r24
     fee:	f1 2c       	mov	r15, r1
     ff0:	01 2d       	mov	r16, r1
     ff2:	11 2d       	mov	r17, r1
     ff4:	18 c0       	rjmp	.+48     	; 0x1026 <__umoddi3+0x118>
     ff6:	ee 24       	eor	r14, r14
     ff8:	ff 24       	eor	r15, r15
     ffa:	87 01       	movw	r16, r14
     ffc:	14 c0       	rjmp	.+40     	; 0x1026 <__umoddi3+0x118>
     ffe:	40 e0       	ldi	r20, 0x00	; 0
    1000:	24 16       	cp	r2, r20
    1002:	40 e0       	ldi	r20, 0x00	; 0
    1004:	34 06       	cpc	r3, r20
    1006:	40 e0       	ldi	r20, 0x00	; 0
    1008:	44 06       	cpc	r4, r20
    100a:	41 e0       	ldi	r20, 0x01	; 1
    100c:	54 06       	cpc	r5, r20
    100e:	30 f0       	brcs	.+12     	; 0x101c <__umoddi3+0x10e>
    1010:	b8 e1       	ldi	r27, 0x18	; 24
    1012:	eb 2e       	mov	r14, r27
    1014:	f1 2c       	mov	r15, r1
    1016:	01 2d       	mov	r16, r1
    1018:	11 2d       	mov	r17, r1
    101a:	05 c0       	rjmp	.+10     	; 0x1026 <__umoddi3+0x118>
    101c:	a0 e1       	ldi	r26, 0x10	; 16
    101e:	ea 2e       	mov	r14, r26
    1020:	f1 2c       	mov	r15, r1
    1022:	01 2d       	mov	r16, r1
    1024:	11 2d       	mov	r17, r1
    1026:	d2 01       	movw	r26, r4
    1028:	c1 01       	movw	r24, r2
    102a:	0e 2c       	mov	r0, r14
    102c:	04 c0       	rjmp	.+8      	; 0x1036 <__umoddi3+0x128>
    102e:	b6 95       	lsr	r27
    1030:	a7 95       	ror	r26
    1032:	97 95       	ror	r25
    1034:	87 95       	ror	r24
    1036:	0a 94       	dec	r0
    1038:	d2 f7       	brpl	.-12     	; 0x102e <__umoddi3+0x120>
    103a:	86 58       	subi	r24, 0x86	; 134
    103c:	9d 4f       	sbci	r25, 0xFD	; 253
    103e:	dc 01       	movw	r26, r24
    1040:	2c 91       	ld	r18, X
    1042:	80 e2       	ldi	r24, 0x20	; 32
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	8e 19       	sub	r24, r14
    104c:	9f 09       	sbc	r25, r15
    104e:	a0 0b       	sbc	r26, r16
    1050:	b1 0b       	sbc	r27, r17
    1052:	5c 01       	movw	r10, r24
    1054:	6d 01       	movw	r12, r26
    1056:	a2 1a       	sub	r10, r18
    1058:	b1 08       	sbc	r11, r1
    105a:	c1 08       	sbc	r12, r1
    105c:	d1 08       	sbc	r13, r1
    105e:	a9 ae       	std	Y+57, r10	; 0x39
    1060:	ba ae       	std	Y+58, r11	; 0x3a
    1062:	cb ae       	std	Y+59, r12	; 0x3b
    1064:	dc ae       	std	Y+60, r13	; 0x3c
    1066:	a1 14       	cp	r10, r1
    1068:	b1 04       	cpc	r11, r1
    106a:	c1 04       	cpc	r12, r1
    106c:	d1 04       	cpc	r13, r1
    106e:	09 f4       	brne	.+2      	; 0x1072 <__umoddi3+0x164>
    1070:	3f c0       	rjmp	.+126    	; 0x10f0 <__umoddi3+0x1e2>
    1072:	69 ad       	ldd	r22, Y+57	; 0x39
    1074:	06 2e       	mov	r0, r22
    1076:	04 c0       	rjmp	.+8      	; 0x1080 <__umoddi3+0x172>
    1078:	22 0c       	add	r2, r2
    107a:	33 1c       	adc	r3, r3
    107c:	44 1c       	adc	r4, r4
    107e:	55 1c       	adc	r5, r5
    1080:	0a 94       	dec	r0
    1082:	d2 f7       	brpl	.-12     	; 0x1078 <__umoddi3+0x16a>
    1084:	a4 01       	movw	r20, r8
    1086:	93 01       	movw	r18, r6
    1088:	06 2e       	mov	r0, r22
    108a:	04 c0       	rjmp	.+8      	; 0x1094 <__umoddi3+0x186>
    108c:	22 0f       	add	r18, r18
    108e:	33 1f       	adc	r19, r19
    1090:	44 1f       	adc	r20, r20
    1092:	55 1f       	adc	r21, r21
    1094:	0a 94       	dec	r0
    1096:	d2 f7       	brpl	.-12     	; 0x108c <__umoddi3+0x17e>
    1098:	80 e2       	ldi	r24, 0x20	; 32
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	8a 19       	sub	r24, r10
    109e:	9b 09       	sbc	r25, r11
    10a0:	6c 96       	adiw	r28, 0x1c	; 28
    10a2:	cc ac       	ldd	r12, Y+60	; 0x3c
    10a4:	dd ac       	ldd	r13, Y+61	; 0x3d
    10a6:	ee ac       	ldd	r14, Y+62	; 0x3e
    10a8:	ff ac       	ldd	r15, Y+63	; 0x3f
    10aa:	6c 97       	sbiw	r28, 0x1c	; 28
    10ac:	04 c0       	rjmp	.+8      	; 0x10b6 <__umoddi3+0x1a8>
    10ae:	f6 94       	lsr	r15
    10b0:	e7 94       	ror	r14
    10b2:	d7 94       	ror	r13
    10b4:	c7 94       	ror	r12
    10b6:	8a 95       	dec	r24
    10b8:	d2 f7       	brpl	.-12     	; 0x10ae <__umoddi3+0x1a0>
    10ba:	87 01       	movw	r16, r14
    10bc:	76 01       	movw	r14, r12
    10be:	e2 2a       	or	r14, r18
    10c0:	f3 2a       	or	r15, r19
    10c2:	04 2b       	or	r16, r20
    10c4:	15 2b       	or	r17, r21
    10c6:	ed aa       	std	Y+53, r14	; 0x35
    10c8:	fe aa       	std	Y+54, r15	; 0x36
    10ca:	0f ab       	std	Y+55, r16	; 0x37
    10cc:	18 af       	std	Y+56, r17	; 0x38
    10ce:	6c 96       	adiw	r28, 0x1c	; 28
    10d0:	8c ad       	ldd	r24, Y+60	; 0x3c
    10d2:	9d ad       	ldd	r25, Y+61	; 0x3d
    10d4:	ae ad       	ldd	r26, Y+62	; 0x3e
    10d6:	bf ad       	ldd	r27, Y+63	; 0x3f
    10d8:	6c 97       	sbiw	r28, 0x1c	; 28
    10da:	04 c0       	rjmp	.+8      	; 0x10e4 <__umoddi3+0x1d6>
    10dc:	88 0f       	add	r24, r24
    10de:	99 1f       	adc	r25, r25
    10e0:	aa 1f       	adc	r26, r26
    10e2:	bb 1f       	adc	r27, r27
    10e4:	6a 95       	dec	r22
    10e6:	d2 f7       	brpl	.-12     	; 0x10dc <__umoddi3+0x1ce>
    10e8:	89 ab       	std	Y+49, r24	; 0x31
    10ea:	9a ab       	std	Y+50, r25	; 0x32
    10ec:	ab ab       	std	Y+51, r26	; 0x33
    10ee:	bc ab       	std	Y+52, r27	; 0x34
    10f0:	32 01       	movw	r6, r4
    10f2:	88 24       	eor	r8, r8
    10f4:	99 24       	eor	r9, r9
    10f6:	b2 01       	movw	r22, r4
    10f8:	a1 01       	movw	r20, r2
    10fa:	60 70       	andi	r22, 0x00	; 0
    10fc:	70 70       	andi	r23, 0x00	; 0
    10fe:	21 96       	adiw	r28, 0x01	; 1
    1100:	4c af       	std	Y+60, r20	; 0x3c
    1102:	5d af       	std	Y+61, r21	; 0x3d
    1104:	6e af       	std	Y+62, r22	; 0x3e
    1106:	7f af       	std	Y+63, r23	; 0x3f
    1108:	21 97       	sbiw	r28, 0x01	; 1
    110a:	6d a9       	ldd	r22, Y+53	; 0x35
    110c:	7e a9       	ldd	r23, Y+54	; 0x36
    110e:	8f a9       	ldd	r24, Y+55	; 0x37
    1110:	98 ad       	ldd	r25, Y+56	; 0x38
    1112:	a4 01       	movw	r20, r8
    1114:	93 01       	movw	r18, r6
    1116:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    111a:	7b 01       	movw	r14, r22
    111c:	8c 01       	movw	r16, r24
    111e:	6d a9       	ldd	r22, Y+53	; 0x35
    1120:	7e a9       	ldd	r23, Y+54	; 0x36
    1122:	8f a9       	ldd	r24, Y+55	; 0x37
    1124:	98 ad       	ldd	r25, Y+56	; 0x38
    1126:	a4 01       	movw	r20, r8
    1128:	93 01       	movw	r18, r6
    112a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    112e:	ca 01       	movw	r24, r20
    1130:	b9 01       	movw	r22, r18
    1132:	21 96       	adiw	r28, 0x01	; 1
    1134:	2c ad       	ldd	r18, Y+60	; 0x3c
    1136:	3d ad       	ldd	r19, Y+61	; 0x3d
    1138:	4e ad       	ldd	r20, Y+62	; 0x3e
    113a:	5f ad       	ldd	r21, Y+63	; 0x3f
    113c:	21 97       	sbiw	r28, 0x01	; 1
    113e:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1142:	9b 01       	movw	r18, r22
    1144:	ac 01       	movw	r20, r24
    1146:	87 01       	movw	r16, r14
    1148:	ff 24       	eor	r15, r15
    114a:	ee 24       	eor	r14, r14
    114c:	a9 a8       	ldd	r10, Y+49	; 0x31
    114e:	ba a8       	ldd	r11, Y+50	; 0x32
    1150:	cb a8       	ldd	r12, Y+51	; 0x33
    1152:	dc a8       	ldd	r13, Y+52	; 0x34
    1154:	c6 01       	movw	r24, r12
    1156:	aa 27       	eor	r26, r26
    1158:	bb 27       	eor	r27, r27
    115a:	57 01       	movw	r10, r14
    115c:	68 01       	movw	r12, r16
    115e:	a8 2a       	or	r10, r24
    1160:	b9 2a       	or	r11, r25
    1162:	ca 2a       	or	r12, r26
    1164:	db 2a       	or	r13, r27
    1166:	a2 16       	cp	r10, r18
    1168:	b3 06       	cpc	r11, r19
    116a:	c4 06       	cpc	r12, r20
    116c:	d5 06       	cpc	r13, r21
    116e:	90 f4       	brcc	.+36     	; 0x1194 <__stack+0x95>
    1170:	a2 0c       	add	r10, r2
    1172:	b3 1c       	adc	r11, r3
    1174:	c4 1c       	adc	r12, r4
    1176:	d5 1c       	adc	r13, r5
    1178:	a2 14       	cp	r10, r2
    117a:	b3 04       	cpc	r11, r3
    117c:	c4 04       	cpc	r12, r4
    117e:	d5 04       	cpc	r13, r5
    1180:	48 f0       	brcs	.+18     	; 0x1194 <__stack+0x95>
    1182:	a2 16       	cp	r10, r18
    1184:	b3 06       	cpc	r11, r19
    1186:	c4 06       	cpc	r12, r20
    1188:	d5 06       	cpc	r13, r21
    118a:	20 f4       	brcc	.+8      	; 0x1194 <__stack+0x95>
    118c:	a2 0c       	add	r10, r2
    118e:	b3 1c       	adc	r11, r3
    1190:	c4 1c       	adc	r12, r4
    1192:	d5 1c       	adc	r13, r5
    1194:	a2 1a       	sub	r10, r18
    1196:	b3 0a       	sbc	r11, r19
    1198:	c4 0a       	sbc	r12, r20
    119a:	d5 0a       	sbc	r13, r21
    119c:	c6 01       	movw	r24, r12
    119e:	b5 01       	movw	r22, r10
    11a0:	a4 01       	movw	r20, r8
    11a2:	93 01       	movw	r18, r6
    11a4:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    11a8:	7b 01       	movw	r14, r22
    11aa:	8c 01       	movw	r16, r24
    11ac:	c6 01       	movw	r24, r12
    11ae:	b5 01       	movw	r22, r10
    11b0:	a4 01       	movw	r20, r8
    11b2:	93 01       	movw	r18, r6
    11b4:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    11b8:	ca 01       	movw	r24, r20
    11ba:	b9 01       	movw	r22, r18
    11bc:	21 96       	adiw	r28, 0x01	; 1
    11be:	2c ad       	ldd	r18, Y+60	; 0x3c
    11c0:	3d ad       	ldd	r19, Y+61	; 0x3d
    11c2:	4e ad       	ldd	r20, Y+62	; 0x3e
    11c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    11c6:	21 97       	sbiw	r28, 0x01	; 1
    11c8:	ba c1       	rjmp	.+884    	; 0x153e <__stack+0x43f>
    11ca:	21 14       	cp	r2, r1
    11cc:	31 04       	cpc	r3, r1
    11ce:	41 04       	cpc	r4, r1
    11d0:	51 04       	cpc	r5, r1
    11d2:	71 f4       	brne	.+28     	; 0x11f0 <__stack+0xf1>
    11d4:	61 e0       	ldi	r22, 0x01	; 1
    11d6:	70 e0       	ldi	r23, 0x00	; 0
    11d8:	80 e0       	ldi	r24, 0x00	; 0
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	50 e0       	ldi	r21, 0x00	; 0
    11e4:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    11e8:	c9 01       	movw	r24, r18
    11ea:	da 01       	movw	r26, r20
    11ec:	1c 01       	movw	r2, r24
    11ee:	2d 01       	movw	r4, r26
    11f0:	00 e0       	ldi	r16, 0x00	; 0
    11f2:	20 16       	cp	r2, r16
    11f4:	00 e0       	ldi	r16, 0x00	; 0
    11f6:	30 06       	cpc	r3, r16
    11f8:	01 e0       	ldi	r16, 0x01	; 1
    11fa:	40 06       	cpc	r4, r16
    11fc:	00 e0       	ldi	r16, 0x00	; 0
    11fe:	50 06       	cpc	r5, r16
    1200:	88 f4       	brcc	.+34     	; 0x1224 <__stack+0x125>
    1202:	1f ef       	ldi	r17, 0xFF	; 255
    1204:	21 16       	cp	r2, r17
    1206:	31 04       	cpc	r3, r1
    1208:	41 04       	cpc	r4, r1
    120a:	51 04       	cpc	r5, r1
    120c:	39 f0       	breq	.+14     	; 0x121c <__stack+0x11d>
    120e:	30 f0       	brcs	.+12     	; 0x121c <__stack+0x11d>
    1210:	68 e0       	ldi	r22, 0x08	; 8
    1212:	e6 2e       	mov	r14, r22
    1214:	f1 2c       	mov	r15, r1
    1216:	01 2d       	mov	r16, r1
    1218:	11 2d       	mov	r17, r1
    121a:	18 c0       	rjmp	.+48     	; 0x124c <__stack+0x14d>
    121c:	ee 24       	eor	r14, r14
    121e:	ff 24       	eor	r15, r15
    1220:	87 01       	movw	r16, r14
    1222:	14 c0       	rjmp	.+40     	; 0x124c <__stack+0x14d>
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	24 16       	cp	r2, r20
    1228:	40 e0       	ldi	r20, 0x00	; 0
    122a:	34 06       	cpc	r3, r20
    122c:	40 e0       	ldi	r20, 0x00	; 0
    122e:	44 06       	cpc	r4, r20
    1230:	41 e0       	ldi	r20, 0x01	; 1
    1232:	54 06       	cpc	r5, r20
    1234:	30 f0       	brcs	.+12     	; 0x1242 <__stack+0x143>
    1236:	58 e1       	ldi	r21, 0x18	; 24
    1238:	e5 2e       	mov	r14, r21
    123a:	f1 2c       	mov	r15, r1
    123c:	01 2d       	mov	r16, r1
    123e:	11 2d       	mov	r17, r1
    1240:	05 c0       	rjmp	.+10     	; 0x124c <__stack+0x14d>
    1242:	40 e1       	ldi	r20, 0x10	; 16
    1244:	e4 2e       	mov	r14, r20
    1246:	f1 2c       	mov	r15, r1
    1248:	01 2d       	mov	r16, r1
    124a:	11 2d       	mov	r17, r1
    124c:	d2 01       	movw	r26, r4
    124e:	c1 01       	movw	r24, r2
    1250:	0e 2c       	mov	r0, r14
    1252:	04 c0       	rjmp	.+8      	; 0x125c <__stack+0x15d>
    1254:	b6 95       	lsr	r27
    1256:	a7 95       	ror	r26
    1258:	97 95       	ror	r25
    125a:	87 95       	ror	r24
    125c:	0a 94       	dec	r0
    125e:	d2 f7       	brpl	.-12     	; 0x1254 <__stack+0x155>
    1260:	86 58       	subi	r24, 0x86	; 134
    1262:	9d 4f       	sbci	r25, 0xFD	; 253
    1264:	dc 01       	movw	r26, r24
    1266:	2c 91       	ld	r18, X
    1268:	30 e2       	ldi	r19, 0x20	; 32
    126a:	a3 2e       	mov	r10, r19
    126c:	b1 2c       	mov	r11, r1
    126e:	c1 2c       	mov	r12, r1
    1270:	d1 2c       	mov	r13, r1
    1272:	d6 01       	movw	r26, r12
    1274:	c5 01       	movw	r24, r10
    1276:	8e 19       	sub	r24, r14
    1278:	9f 09       	sbc	r25, r15
    127a:	a0 0b       	sbc	r26, r16
    127c:	b1 0b       	sbc	r27, r17
    127e:	7c 01       	movw	r14, r24
    1280:	8d 01       	movw	r16, r26
    1282:	e2 1a       	sub	r14, r18
    1284:	f1 08       	sbc	r15, r1
    1286:	01 09       	sbc	r16, r1
    1288:	11 09       	sbc	r17, r1
    128a:	e9 ae       	std	Y+57, r14	; 0x39
    128c:	fa ae       	std	Y+58, r15	; 0x3a
    128e:	0b af       	std	Y+59, r16	; 0x3b
    1290:	1c af       	std	Y+60, r17	; 0x3c
    1292:	e1 14       	cp	r14, r1
    1294:	f1 04       	cpc	r15, r1
    1296:	01 05       	cpc	r16, r1
    1298:	11 05       	cpc	r17, r1
    129a:	39 f4       	brne	.+14     	; 0x12aa <__stack+0x1ab>
    129c:	64 01       	movw	r12, r8
    129e:	53 01       	movw	r10, r6
    12a0:	a2 18       	sub	r10, r2
    12a2:	b3 08       	sbc	r11, r3
    12a4:	c4 08       	sbc	r12, r4
    12a6:	d5 08       	sbc	r13, r5
    12a8:	e2 c0       	rjmp	.+452    	; 0x146e <__stack+0x36f>
    12aa:	f9 ac       	ldd	r15, Y+57	; 0x39
    12ac:	68 96       	adiw	r28, 0x18	; 24
    12ae:	ff ae       	std	Y+63, r15	; 0x3f
    12b0:	68 97       	sbiw	r28, 0x18	; 24
    12b2:	0f 2c       	mov	r0, r15
    12b4:	04 c0       	rjmp	.+8      	; 0x12be <__stack+0x1bf>
    12b6:	22 0c       	add	r2, r2
    12b8:	33 1c       	adc	r3, r3
    12ba:	44 1c       	adc	r4, r4
    12bc:	55 1c       	adc	r5, r5
    12be:	0a 94       	dec	r0
    12c0:	d2 f7       	brpl	.-12     	; 0x12b6 <__stack+0x1b7>
    12c2:	8a 2d       	mov	r24, r10
    12c4:	8f 19       	sub	r24, r15
    12c6:	64 01       	movw	r12, r8
    12c8:	53 01       	movw	r10, r6
    12ca:	08 2e       	mov	r0, r24
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <__stack+0x1d7>
    12ce:	d6 94       	lsr	r13
    12d0:	c7 94       	ror	r12
    12d2:	b7 94       	ror	r11
    12d4:	a7 94       	ror	r10
    12d6:	0a 94       	dec	r0
    12d8:	d2 f7       	brpl	.-12     	; 0x12ce <__stack+0x1cf>
    12da:	a4 01       	movw	r20, r8
    12dc:	93 01       	movw	r18, r6
    12de:	04 c0       	rjmp	.+8      	; 0x12e8 <__stack+0x1e9>
    12e0:	22 0f       	add	r18, r18
    12e2:	33 1f       	adc	r19, r19
    12e4:	44 1f       	adc	r20, r20
    12e6:	55 1f       	adc	r21, r21
    12e8:	fa 94       	dec	r15
    12ea:	d2 f7       	brpl	.-12     	; 0x12e0 <__stack+0x1e1>
    12ec:	6c 96       	adiw	r28, 0x1c	; 28
    12ee:	6c ac       	ldd	r6, Y+60	; 0x3c
    12f0:	7d ac       	ldd	r7, Y+61	; 0x3d
    12f2:	8e ac       	ldd	r8, Y+62	; 0x3e
    12f4:	9f ac       	ldd	r9, Y+63	; 0x3f
    12f6:	6c 97       	sbiw	r28, 0x1c	; 28
    12f8:	04 c0       	rjmp	.+8      	; 0x1302 <__stack+0x203>
    12fa:	96 94       	lsr	r9
    12fc:	87 94       	ror	r8
    12fe:	77 94       	ror	r7
    1300:	67 94       	ror	r6
    1302:	8a 95       	dec	r24
    1304:	d2 f7       	brpl	.-12     	; 0x12fa <__stack+0x1fb>
    1306:	84 01       	movw	r16, r8
    1308:	73 01       	movw	r14, r6
    130a:	e2 2a       	or	r14, r18
    130c:	f3 2a       	or	r15, r19
    130e:	04 2b       	or	r16, r20
    1310:	15 2b       	or	r17, r21
    1312:	ed a6       	std	Y+45, r14	; 0x2d
    1314:	fe a6       	std	Y+46, r15	; 0x2e
    1316:	0f a7       	std	Y+47, r16	; 0x2f
    1318:	18 ab       	std	Y+48, r17	; 0x30
    131a:	32 01       	movw	r6, r4
    131c:	88 24       	eor	r8, r8
    131e:	99 24       	eor	r9, r9
    1320:	b2 01       	movw	r22, r4
    1322:	a1 01       	movw	r20, r2
    1324:	60 70       	andi	r22, 0x00	; 0
    1326:	70 70       	andi	r23, 0x00	; 0
    1328:	25 96       	adiw	r28, 0x05	; 5
    132a:	4c af       	std	Y+60, r20	; 0x3c
    132c:	5d af       	std	Y+61, r21	; 0x3d
    132e:	6e af       	std	Y+62, r22	; 0x3e
    1330:	7f af       	std	Y+63, r23	; 0x3f
    1332:	25 97       	sbiw	r28, 0x05	; 5
    1334:	c6 01       	movw	r24, r12
    1336:	b5 01       	movw	r22, r10
    1338:	a4 01       	movw	r20, r8
    133a:	93 01       	movw	r18, r6
    133c:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    1340:	7b 01       	movw	r14, r22
    1342:	8c 01       	movw	r16, r24
    1344:	c6 01       	movw	r24, r12
    1346:	b5 01       	movw	r22, r10
    1348:	a4 01       	movw	r20, r8
    134a:	93 01       	movw	r18, r6
    134c:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    1350:	ca 01       	movw	r24, r20
    1352:	b9 01       	movw	r22, r18
    1354:	25 96       	adiw	r28, 0x05	; 5
    1356:	2c ad       	ldd	r18, Y+60	; 0x3c
    1358:	3d ad       	ldd	r19, Y+61	; 0x3d
    135a:	4e ad       	ldd	r20, Y+62	; 0x3e
    135c:	5f ad       	ldd	r21, Y+63	; 0x3f
    135e:	25 97       	sbiw	r28, 0x05	; 5
    1360:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1364:	9b 01       	movw	r18, r22
    1366:	ac 01       	movw	r20, r24
    1368:	87 01       	movw	r16, r14
    136a:	ff 24       	eor	r15, r15
    136c:	ee 24       	eor	r14, r14
    136e:	ad a4       	ldd	r10, Y+45	; 0x2d
    1370:	be a4       	ldd	r11, Y+46	; 0x2e
    1372:	cf a4       	ldd	r12, Y+47	; 0x2f
    1374:	d8 a8       	ldd	r13, Y+48	; 0x30
    1376:	c6 01       	movw	r24, r12
    1378:	aa 27       	eor	r26, r26
    137a:	bb 27       	eor	r27, r27
    137c:	5c 01       	movw	r10, r24
    137e:	6d 01       	movw	r12, r26
    1380:	ae 28       	or	r10, r14
    1382:	bf 28       	or	r11, r15
    1384:	c0 2a       	or	r12, r16
    1386:	d1 2a       	or	r13, r17
    1388:	a2 16       	cp	r10, r18
    138a:	b3 06       	cpc	r11, r19
    138c:	c4 06       	cpc	r12, r20
    138e:	d5 06       	cpc	r13, r21
    1390:	90 f4       	brcc	.+36     	; 0x13b6 <__stack+0x2b7>
    1392:	a2 0c       	add	r10, r2
    1394:	b3 1c       	adc	r11, r3
    1396:	c4 1c       	adc	r12, r4
    1398:	d5 1c       	adc	r13, r5
    139a:	a2 14       	cp	r10, r2
    139c:	b3 04       	cpc	r11, r3
    139e:	c4 04       	cpc	r12, r4
    13a0:	d5 04       	cpc	r13, r5
    13a2:	48 f0       	brcs	.+18     	; 0x13b6 <__stack+0x2b7>
    13a4:	a2 16       	cp	r10, r18
    13a6:	b3 06       	cpc	r11, r19
    13a8:	c4 06       	cpc	r12, r20
    13aa:	d5 06       	cpc	r13, r21
    13ac:	20 f4       	brcc	.+8      	; 0x13b6 <__stack+0x2b7>
    13ae:	a2 0c       	add	r10, r2
    13b0:	b3 1c       	adc	r11, r3
    13b2:	c4 1c       	adc	r12, r4
    13b4:	d5 1c       	adc	r13, r5
    13b6:	a2 1a       	sub	r10, r18
    13b8:	b3 0a       	sbc	r11, r19
    13ba:	c4 0a       	sbc	r12, r20
    13bc:	d5 0a       	sbc	r13, r21
    13be:	c6 01       	movw	r24, r12
    13c0:	b5 01       	movw	r22, r10
    13c2:	a4 01       	movw	r20, r8
    13c4:	93 01       	movw	r18, r6
    13c6:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    13ca:	7b 01       	movw	r14, r22
    13cc:	8c 01       	movw	r16, r24
    13ce:	c6 01       	movw	r24, r12
    13d0:	b5 01       	movw	r22, r10
    13d2:	a4 01       	movw	r20, r8
    13d4:	93 01       	movw	r18, r6
    13d6:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    13da:	ca 01       	movw	r24, r20
    13dc:	b9 01       	movw	r22, r18
    13de:	25 96       	adiw	r28, 0x05	; 5
    13e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    13e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    13e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    13e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    13e8:	25 97       	sbiw	r28, 0x05	; 5
    13ea:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    13ee:	9b 01       	movw	r18, r22
    13f0:	ac 01       	movw	r20, r24
    13f2:	87 01       	movw	r16, r14
    13f4:	ff 24       	eor	r15, r15
    13f6:	ee 24       	eor	r14, r14
    13f8:	8d a5       	ldd	r24, Y+45	; 0x2d
    13fa:	9e a5       	ldd	r25, Y+46	; 0x2e
    13fc:	af a5       	ldd	r26, Y+47	; 0x2f
    13fe:	b8 a9       	ldd	r27, Y+48	; 0x30
    1400:	a0 70       	andi	r26, 0x00	; 0
    1402:	b0 70       	andi	r27, 0x00	; 0
    1404:	57 01       	movw	r10, r14
    1406:	68 01       	movw	r12, r16
    1408:	a8 2a       	or	r10, r24
    140a:	b9 2a       	or	r11, r25
    140c:	ca 2a       	or	r12, r26
    140e:	db 2a       	or	r13, r27
    1410:	a2 16       	cp	r10, r18
    1412:	b3 06       	cpc	r11, r19
    1414:	c4 06       	cpc	r12, r20
    1416:	d5 06       	cpc	r13, r21
    1418:	90 f4       	brcc	.+36     	; 0x143e <__stack+0x33f>
    141a:	a2 0c       	add	r10, r2
    141c:	b3 1c       	adc	r11, r3
    141e:	c4 1c       	adc	r12, r4
    1420:	d5 1c       	adc	r13, r5
    1422:	a2 14       	cp	r10, r2
    1424:	b3 04       	cpc	r11, r3
    1426:	c4 04       	cpc	r12, r4
    1428:	d5 04       	cpc	r13, r5
    142a:	48 f0       	brcs	.+18     	; 0x143e <__stack+0x33f>
    142c:	a2 16       	cp	r10, r18
    142e:	b3 06       	cpc	r11, r19
    1430:	c4 06       	cpc	r12, r20
    1432:	d5 06       	cpc	r13, r21
    1434:	20 f4       	brcc	.+8      	; 0x143e <__stack+0x33f>
    1436:	a2 0c       	add	r10, r2
    1438:	b3 1c       	adc	r11, r3
    143a:	c4 1c       	adc	r12, r4
    143c:	d5 1c       	adc	r13, r5
    143e:	6c 96       	adiw	r28, 0x1c	; 28
    1440:	ec ac       	ldd	r14, Y+60	; 0x3c
    1442:	fd ac       	ldd	r15, Y+61	; 0x3d
    1444:	0e ad       	ldd	r16, Y+62	; 0x3e
    1446:	1f ad       	ldd	r17, Y+63	; 0x3f
    1448:	6c 97       	sbiw	r28, 0x1c	; 28
    144a:	68 96       	adiw	r28, 0x18	; 24
    144c:	0f ac       	ldd	r0, Y+63	; 0x3f
    144e:	68 97       	sbiw	r28, 0x18	; 24
    1450:	04 c0       	rjmp	.+8      	; 0x145a <__stack+0x35b>
    1452:	ee 0c       	add	r14, r14
    1454:	ff 1c       	adc	r15, r15
    1456:	00 1f       	adc	r16, r16
    1458:	11 1f       	adc	r17, r17
    145a:	0a 94       	dec	r0
    145c:	d2 f7       	brpl	.-12     	; 0x1452 <__stack+0x353>
    145e:	e9 aa       	std	Y+49, r14	; 0x31
    1460:	fa aa       	std	Y+50, r15	; 0x32
    1462:	0b ab       	std	Y+51, r16	; 0x33
    1464:	1c ab       	std	Y+52, r17	; 0x34
    1466:	a2 1a       	sub	r10, r18
    1468:	b3 0a       	sbc	r11, r19
    146a:	c4 0a       	sbc	r12, r20
    146c:	d5 0a       	sbc	r13, r21
    146e:	32 01       	movw	r6, r4
    1470:	88 24       	eor	r8, r8
    1472:	99 24       	eor	r9, r9
    1474:	b2 01       	movw	r22, r4
    1476:	a1 01       	movw	r20, r2
    1478:	60 70       	andi	r22, 0x00	; 0
    147a:	70 70       	andi	r23, 0x00	; 0
    147c:	29 96       	adiw	r28, 0x09	; 9
    147e:	4c af       	std	Y+60, r20	; 0x3c
    1480:	5d af       	std	Y+61, r21	; 0x3d
    1482:	6e af       	std	Y+62, r22	; 0x3e
    1484:	7f af       	std	Y+63, r23	; 0x3f
    1486:	29 97       	sbiw	r28, 0x09	; 9
    1488:	c6 01       	movw	r24, r12
    148a:	b5 01       	movw	r22, r10
    148c:	a4 01       	movw	r20, r8
    148e:	93 01       	movw	r18, r6
    1490:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    1494:	7b 01       	movw	r14, r22
    1496:	8c 01       	movw	r16, r24
    1498:	c6 01       	movw	r24, r12
    149a:	b5 01       	movw	r22, r10
    149c:	a4 01       	movw	r20, r8
    149e:	93 01       	movw	r18, r6
    14a0:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    14a4:	ca 01       	movw	r24, r20
    14a6:	b9 01       	movw	r22, r18
    14a8:	29 96       	adiw	r28, 0x09	; 9
    14aa:	2c ad       	ldd	r18, Y+60	; 0x3c
    14ac:	3d ad       	ldd	r19, Y+61	; 0x3d
    14ae:	4e ad       	ldd	r20, Y+62	; 0x3e
    14b0:	5f ad       	ldd	r21, Y+63	; 0x3f
    14b2:	29 97       	sbiw	r28, 0x09	; 9
    14b4:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    14b8:	9b 01       	movw	r18, r22
    14ba:	ac 01       	movw	r20, r24
    14bc:	87 01       	movw	r16, r14
    14be:	ff 24       	eor	r15, r15
    14c0:	ee 24       	eor	r14, r14
    14c2:	a9 a8       	ldd	r10, Y+49	; 0x31
    14c4:	ba a8       	ldd	r11, Y+50	; 0x32
    14c6:	cb a8       	ldd	r12, Y+51	; 0x33
    14c8:	dc a8       	ldd	r13, Y+52	; 0x34
    14ca:	c6 01       	movw	r24, r12
    14cc:	aa 27       	eor	r26, r26
    14ce:	bb 27       	eor	r27, r27
    14d0:	57 01       	movw	r10, r14
    14d2:	68 01       	movw	r12, r16
    14d4:	a8 2a       	or	r10, r24
    14d6:	b9 2a       	or	r11, r25
    14d8:	ca 2a       	or	r12, r26
    14da:	db 2a       	or	r13, r27
    14dc:	a2 16       	cp	r10, r18
    14de:	b3 06       	cpc	r11, r19
    14e0:	c4 06       	cpc	r12, r20
    14e2:	d5 06       	cpc	r13, r21
    14e4:	90 f4       	brcc	.+36     	; 0x150a <__stack+0x40b>
    14e6:	a2 0c       	add	r10, r2
    14e8:	b3 1c       	adc	r11, r3
    14ea:	c4 1c       	adc	r12, r4
    14ec:	d5 1c       	adc	r13, r5
    14ee:	a2 14       	cp	r10, r2
    14f0:	b3 04       	cpc	r11, r3
    14f2:	c4 04       	cpc	r12, r4
    14f4:	d5 04       	cpc	r13, r5
    14f6:	48 f0       	brcs	.+18     	; 0x150a <__stack+0x40b>
    14f8:	a2 16       	cp	r10, r18
    14fa:	b3 06       	cpc	r11, r19
    14fc:	c4 06       	cpc	r12, r20
    14fe:	d5 06       	cpc	r13, r21
    1500:	20 f4       	brcc	.+8      	; 0x150a <__stack+0x40b>
    1502:	a2 0c       	add	r10, r2
    1504:	b3 1c       	adc	r11, r3
    1506:	c4 1c       	adc	r12, r4
    1508:	d5 1c       	adc	r13, r5
    150a:	a2 1a       	sub	r10, r18
    150c:	b3 0a       	sbc	r11, r19
    150e:	c4 0a       	sbc	r12, r20
    1510:	d5 0a       	sbc	r13, r21
    1512:	c6 01       	movw	r24, r12
    1514:	b5 01       	movw	r22, r10
    1516:	a4 01       	movw	r20, r8
    1518:	93 01       	movw	r18, r6
    151a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    151e:	7b 01       	movw	r14, r22
    1520:	8c 01       	movw	r16, r24
    1522:	c6 01       	movw	r24, r12
    1524:	b5 01       	movw	r22, r10
    1526:	a4 01       	movw	r20, r8
    1528:	93 01       	movw	r18, r6
    152a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    152e:	ca 01       	movw	r24, r20
    1530:	b9 01       	movw	r22, r18
    1532:	29 96       	adiw	r28, 0x09	; 9
    1534:	2c ad       	ldd	r18, Y+60	; 0x3c
    1536:	3d ad       	ldd	r19, Y+61	; 0x3d
    1538:	4e ad       	ldd	r20, Y+62	; 0x3e
    153a:	5f ad       	ldd	r21, Y+63	; 0x3f
    153c:	29 97       	sbiw	r28, 0x09	; 9
    153e:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1542:	9b 01       	movw	r18, r22
    1544:	ac 01       	movw	r20, r24
    1546:	87 01       	movw	r16, r14
    1548:	ff 24       	eor	r15, r15
    154a:	ee 24       	eor	r14, r14
    154c:	89 a9       	ldd	r24, Y+49	; 0x31
    154e:	9a a9       	ldd	r25, Y+50	; 0x32
    1550:	ab a9       	ldd	r26, Y+51	; 0x33
    1552:	bc a9       	ldd	r27, Y+52	; 0x34
    1554:	a0 70       	andi	r26, 0x00	; 0
    1556:	b0 70       	andi	r27, 0x00	; 0
    1558:	e8 2a       	or	r14, r24
    155a:	f9 2a       	or	r15, r25
    155c:	0a 2b       	or	r16, r26
    155e:	1b 2b       	or	r17, r27
    1560:	e2 16       	cp	r14, r18
    1562:	f3 06       	cpc	r15, r19
    1564:	04 07       	cpc	r16, r20
    1566:	15 07       	cpc	r17, r21
    1568:	90 f4       	brcc	.+36     	; 0x158e <__stack+0x48f>
    156a:	e2 0c       	add	r14, r2
    156c:	f3 1c       	adc	r15, r3
    156e:	04 1d       	adc	r16, r4
    1570:	15 1d       	adc	r17, r5
    1572:	e2 14       	cp	r14, r2
    1574:	f3 04       	cpc	r15, r3
    1576:	04 05       	cpc	r16, r4
    1578:	15 05       	cpc	r17, r5
    157a:	48 f0       	brcs	.+18     	; 0x158e <__stack+0x48f>
    157c:	e2 16       	cp	r14, r18
    157e:	f3 06       	cpc	r15, r19
    1580:	04 07       	cpc	r16, r20
    1582:	15 07       	cpc	r17, r21
    1584:	20 f4       	brcc	.+8      	; 0x158e <__stack+0x48f>
    1586:	e2 0c       	add	r14, r2
    1588:	f3 1c       	adc	r15, r3
    158a:	04 1d       	adc	r16, r4
    158c:	15 1d       	adc	r17, r5
    158e:	e2 1a       	sub	r14, r18
    1590:	f3 0a       	sbc	r15, r19
    1592:	04 0b       	sbc	r16, r20
    1594:	15 0b       	sbc	r17, r21
    1596:	d8 01       	movw	r26, r16
    1598:	c7 01       	movw	r24, r14
    159a:	09 ac       	ldd	r0, Y+57	; 0x39
    159c:	04 c0       	rjmp	.+8      	; 0x15a6 <__stack+0x4a7>
    159e:	b6 95       	lsr	r27
    15a0:	a7 95       	ror	r26
    15a2:	97 95       	ror	r25
    15a4:	87 95       	ror	r24
    15a6:	0a 94       	dec	r0
    15a8:	d2 f7       	brpl	.-12     	; 0x159e <__stack+0x49f>
    15aa:	89 8b       	std	Y+17, r24	; 0x11
    15ac:	9a 8b       	std	Y+18, r25	; 0x12
    15ae:	ab 8b       	std	Y+19, r26	; 0x13
    15b0:	bc 8b       	std	Y+20, r27	; 0x14
    15b2:	1d 8a       	std	Y+21, r1	; 0x15
    15b4:	1e 8a       	std	Y+22, r1	; 0x16
    15b6:	1f 8a       	std	Y+23, r1	; 0x17
    15b8:	18 8e       	std	Y+24, r1	; 0x18
    15ba:	28 2f       	mov	r18, r24
    15bc:	3a 89       	ldd	r19, Y+18	; 0x12
    15be:	4b 89       	ldd	r20, Y+19	; 0x13
    15c0:	5c 89       	ldd	r21, Y+20	; 0x14
    15c2:	6d 89       	ldd	r22, Y+21	; 0x15
    15c4:	0c c3       	rjmp	.+1560   	; 0x1bde <__stack+0xadf>
    15c6:	6a 14       	cp	r6, r10
    15c8:	7b 04       	cpc	r7, r11
    15ca:	8c 04       	cpc	r8, r12
    15cc:	9d 04       	cpc	r9, r13
    15ce:	08 f4       	brcc	.+2      	; 0x15d2 <__stack+0x4d3>
    15d0:	09 c3       	rjmp	.+1554   	; 0x1be4 <__stack+0xae5>
    15d2:	00 e0       	ldi	r16, 0x00	; 0
    15d4:	a0 16       	cp	r10, r16
    15d6:	00 e0       	ldi	r16, 0x00	; 0
    15d8:	b0 06       	cpc	r11, r16
    15da:	01 e0       	ldi	r16, 0x01	; 1
    15dc:	c0 06       	cpc	r12, r16
    15de:	00 e0       	ldi	r16, 0x00	; 0
    15e0:	d0 06       	cpc	r13, r16
    15e2:	88 f4       	brcc	.+34     	; 0x1606 <__stack+0x507>
    15e4:	1f ef       	ldi	r17, 0xFF	; 255
    15e6:	a1 16       	cp	r10, r17
    15e8:	b1 04       	cpc	r11, r1
    15ea:	c1 04       	cpc	r12, r1
    15ec:	d1 04       	cpc	r13, r1
    15ee:	39 f0       	breq	.+14     	; 0x15fe <__stack+0x4ff>
    15f0:	30 f0       	brcs	.+12     	; 0x15fe <__stack+0x4ff>
    15f2:	28 e0       	ldi	r18, 0x08	; 8
    15f4:	e2 2e       	mov	r14, r18
    15f6:	f1 2c       	mov	r15, r1
    15f8:	01 2d       	mov	r16, r1
    15fa:	11 2d       	mov	r17, r1
    15fc:	18 c0       	rjmp	.+48     	; 0x162e <__stack+0x52f>
    15fe:	ee 24       	eor	r14, r14
    1600:	ff 24       	eor	r15, r15
    1602:	87 01       	movw	r16, r14
    1604:	14 c0       	rjmp	.+40     	; 0x162e <__stack+0x52f>
    1606:	40 e0       	ldi	r20, 0x00	; 0
    1608:	a4 16       	cp	r10, r20
    160a:	40 e0       	ldi	r20, 0x00	; 0
    160c:	b4 06       	cpc	r11, r20
    160e:	40 e0       	ldi	r20, 0x00	; 0
    1610:	c4 06       	cpc	r12, r20
    1612:	41 e0       	ldi	r20, 0x01	; 1
    1614:	d4 06       	cpc	r13, r20
    1616:	30 f0       	brcs	.+12     	; 0x1624 <__stack+0x525>
    1618:	98 e1       	ldi	r25, 0x18	; 24
    161a:	e9 2e       	mov	r14, r25
    161c:	f1 2c       	mov	r15, r1
    161e:	01 2d       	mov	r16, r1
    1620:	11 2d       	mov	r17, r1
    1622:	05 c0       	rjmp	.+10     	; 0x162e <__stack+0x52f>
    1624:	80 e1       	ldi	r24, 0x10	; 16
    1626:	e8 2e       	mov	r14, r24
    1628:	f1 2c       	mov	r15, r1
    162a:	01 2d       	mov	r16, r1
    162c:	11 2d       	mov	r17, r1
    162e:	d6 01       	movw	r26, r12
    1630:	c5 01       	movw	r24, r10
    1632:	0e 2c       	mov	r0, r14
    1634:	04 c0       	rjmp	.+8      	; 0x163e <__stack+0x53f>
    1636:	b6 95       	lsr	r27
    1638:	a7 95       	ror	r26
    163a:	97 95       	ror	r25
    163c:	87 95       	ror	r24
    163e:	0a 94       	dec	r0
    1640:	d2 f7       	brpl	.-12     	; 0x1636 <__stack+0x537>
    1642:	86 58       	subi	r24, 0x86	; 134
    1644:	9d 4f       	sbci	r25, 0xFD	; 253
    1646:	dc 01       	movw	r26, r24
    1648:	2c 91       	ld	r18, X
    164a:	80 e2       	ldi	r24, 0x20	; 32
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	a0 e0       	ldi	r26, 0x00	; 0
    1650:	b0 e0       	ldi	r27, 0x00	; 0
    1652:	8e 19       	sub	r24, r14
    1654:	9f 09       	sbc	r25, r15
    1656:	a0 0b       	sbc	r26, r16
    1658:	b1 0b       	sbc	r27, r17
    165a:	82 1b       	sub	r24, r18
    165c:	91 09       	sbc	r25, r1
    165e:	a1 09       	sbc	r26, r1
    1660:	b1 09       	sbc	r27, r1
    1662:	00 97       	sbiw	r24, 0x00	; 0
    1664:	a1 05       	cpc	r26, r1
    1666:	b1 05       	cpc	r27, r1
    1668:	09 f0       	breq	.+2      	; 0x166c <__stack+0x56d>
    166a:	4f c0       	rjmp	.+158    	; 0x170a <__stack+0x60b>
    166c:	a6 14       	cp	r10, r6
    166e:	b7 04       	cpc	r11, r7
    1670:	c8 04       	cpc	r12, r8
    1672:	d9 04       	cpc	r13, r9
    1674:	58 f0       	brcs	.+22     	; 0x168c <__stack+0x58d>
    1676:	6c 96       	adiw	r28, 0x1c	; 28
    1678:	ec ac       	ldd	r14, Y+60	; 0x3c
    167a:	fd ac       	ldd	r15, Y+61	; 0x3d
    167c:	0e ad       	ldd	r16, Y+62	; 0x3e
    167e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1680:	6c 97       	sbiw	r28, 0x1c	; 28
    1682:	e2 14       	cp	r14, r2
    1684:	f3 04       	cpc	r15, r3
    1686:	04 05       	cpc	r16, r4
    1688:	15 05       	cpc	r17, r5
    168a:	68 f1       	brcs	.+90     	; 0x16e6 <__stack+0x5e7>
    168c:	6c 96       	adiw	r28, 0x1c	; 28
    168e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1690:	fd ac       	ldd	r15, Y+61	; 0x3d
    1692:	0e ad       	ldd	r16, Y+62	; 0x3e
    1694:	1f ad       	ldd	r17, Y+63	; 0x3f
    1696:	6c 97       	sbiw	r28, 0x1c	; 28
    1698:	e2 18       	sub	r14, r2
    169a:	f3 08       	sbc	r15, r3
    169c:	04 09       	sbc	r16, r4
    169e:	15 09       	sbc	r17, r5
    16a0:	a4 01       	movw	r20, r8
    16a2:	93 01       	movw	r18, r6
    16a4:	2a 19       	sub	r18, r10
    16a6:	3b 09       	sbc	r19, r11
    16a8:	4c 09       	sbc	r20, r12
    16aa:	5d 09       	sbc	r21, r13
    16ac:	aa 24       	eor	r10, r10
    16ae:	bb 24       	eor	r11, r11
    16b0:	65 01       	movw	r12, r10
    16b2:	6c 96       	adiw	r28, 0x1c	; 28
    16b4:	6c ad       	ldd	r22, Y+60	; 0x3c
    16b6:	7d ad       	ldd	r23, Y+61	; 0x3d
    16b8:	8e ad       	ldd	r24, Y+62	; 0x3e
    16ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    16bc:	6c 97       	sbiw	r28, 0x1c	; 28
    16be:	6e 15       	cp	r22, r14
    16c0:	7f 05       	cpc	r23, r15
    16c2:	80 07       	cpc	r24, r16
    16c4:	91 07       	cpc	r25, r17
    16c6:	28 f4       	brcc	.+10     	; 0x16d2 <__stack+0x5d3>
    16c8:	b1 e0       	ldi	r27, 0x01	; 1
    16ca:	ab 2e       	mov	r10, r27
    16cc:	b1 2c       	mov	r11, r1
    16ce:	c1 2c       	mov	r12, r1
    16d0:	d1 2c       	mov	r13, r1
    16d2:	da 01       	movw	r26, r20
    16d4:	c9 01       	movw	r24, r18
    16d6:	8a 19       	sub	r24, r10
    16d8:	9b 09       	sbc	r25, r11
    16da:	ac 09       	sbc	r26, r12
    16dc:	bd 09       	sbc	r27, r13
    16de:	8d ab       	std	Y+53, r24	; 0x35
    16e0:	9e ab       	std	Y+54, r25	; 0x36
    16e2:	af ab       	std	Y+55, r26	; 0x37
    16e4:	b8 af       	std	Y+56, r27	; 0x38
    16e6:	e9 8a       	std	Y+17, r14	; 0x11
    16e8:	fa 8a       	std	Y+18, r15	; 0x12
    16ea:	0b 8b       	std	Y+19, r16	; 0x13
    16ec:	1c 8b       	std	Y+20, r17	; 0x14
    16ee:	6d a8       	ldd	r6, Y+53	; 0x35
    16f0:	7e a8       	ldd	r7, Y+54	; 0x36
    16f2:	8f a8       	ldd	r8, Y+55	; 0x37
    16f4:	98 ac       	ldd	r9, Y+56	; 0x38
    16f6:	6d 8a       	std	Y+21, r6	; 0x15
    16f8:	7e 8a       	std	Y+22, r7	; 0x16
    16fa:	8f 8a       	std	Y+23, r8	; 0x17
    16fc:	98 8e       	std	Y+24, r9	; 0x18
    16fe:	2e 2d       	mov	r18, r14
    1700:	3a 89       	ldd	r19, Y+18	; 0x12
    1702:	4b 89       	ldd	r20, Y+19	; 0x13
    1704:	5c 89       	ldd	r21, Y+20	; 0x14
    1706:	6d a9       	ldd	r22, Y+53	; 0x35
    1708:	6a c2       	rjmp	.+1236   	; 0x1bde <__stack+0xadf>
    170a:	67 96       	adiw	r28, 0x17	; 23
    170c:	8f af       	std	Y+63, r24	; 0x3f
    170e:	67 97       	sbiw	r28, 0x17	; 23
    1710:	a6 01       	movw	r20, r12
    1712:	95 01       	movw	r18, r10
    1714:	08 2e       	mov	r0, r24
    1716:	04 c0       	rjmp	.+8      	; 0x1720 <__stack+0x621>
    1718:	22 0f       	add	r18, r18
    171a:	33 1f       	adc	r19, r19
    171c:	44 1f       	adc	r20, r20
    171e:	55 1f       	adc	r21, r21
    1720:	0a 94       	dec	r0
    1722:	d2 f7       	brpl	.-12     	; 0x1718 <__stack+0x619>
    1724:	a0 e2       	ldi	r26, 0x20	; 32
    1726:	aa 2e       	mov	r10, r26
    1728:	a8 1a       	sub	r10, r24
    172a:	66 96       	adiw	r28, 0x16	; 22
    172c:	af ae       	std	Y+63, r10	; 0x3f
    172e:	66 97       	sbiw	r28, 0x16	; 22
    1730:	d2 01       	movw	r26, r4
    1732:	c1 01       	movw	r24, r2
    1734:	04 c0       	rjmp	.+8      	; 0x173e <__stack+0x63f>
    1736:	b6 95       	lsr	r27
    1738:	a7 95       	ror	r26
    173a:	97 95       	ror	r25
    173c:	87 95       	ror	r24
    173e:	aa 94       	dec	r10
    1740:	d2 f7       	brpl	.-12     	; 0x1736 <__stack+0x637>
    1742:	6c 01       	movw	r12, r24
    1744:	7d 01       	movw	r14, r26
    1746:	c2 2a       	or	r12, r18
    1748:	d3 2a       	or	r13, r19
    174a:	e4 2a       	or	r14, r20
    174c:	f5 2a       	or	r15, r21
    174e:	c9 a6       	std	Y+41, r12	; 0x29
    1750:	da a6       	std	Y+42, r13	; 0x2a
    1752:	eb a6       	std	Y+43, r14	; 0x2b
    1754:	fc a6       	std	Y+44, r15	; 0x2c
    1756:	82 01       	movw	r16, r4
    1758:	71 01       	movw	r14, r2
    175a:	67 96       	adiw	r28, 0x17	; 23
    175c:	0f ac       	ldd	r0, Y+63	; 0x3f
    175e:	67 97       	sbiw	r28, 0x17	; 23
    1760:	04 c0       	rjmp	.+8      	; 0x176a <__stack+0x66b>
    1762:	ee 0c       	add	r14, r14
    1764:	ff 1c       	adc	r15, r15
    1766:	00 1f       	adc	r16, r16
    1768:	11 1f       	adc	r17, r17
    176a:	0a 94       	dec	r0
    176c:	d2 f7       	brpl	.-12     	; 0x1762 <__stack+0x663>
    176e:	ed a2       	std	Y+37, r14	; 0x25
    1770:	fe a2       	std	Y+38, r15	; 0x26
    1772:	0f a3       	std	Y+39, r16	; 0x27
    1774:	18 a7       	std	Y+40, r17	; 0x28
    1776:	64 01       	movw	r12, r8
    1778:	53 01       	movw	r10, r6
    177a:	66 96       	adiw	r28, 0x16	; 22
    177c:	0f ac       	ldd	r0, Y+63	; 0x3f
    177e:	66 97       	sbiw	r28, 0x16	; 22
    1780:	04 c0       	rjmp	.+8      	; 0x178a <__stack+0x68b>
    1782:	d6 94       	lsr	r13
    1784:	c7 94       	ror	r12
    1786:	b7 94       	ror	r11
    1788:	a7 94       	ror	r10
    178a:	0a 94       	dec	r0
    178c:	d2 f7       	brpl	.-12     	; 0x1782 <__stack+0x683>
    178e:	a4 01       	movw	r20, r8
    1790:	93 01       	movw	r18, r6
    1792:	67 96       	adiw	r28, 0x17	; 23
    1794:	0f ac       	ldd	r0, Y+63	; 0x3f
    1796:	67 97       	sbiw	r28, 0x17	; 23
    1798:	04 c0       	rjmp	.+8      	; 0x17a2 <__stack+0x6a3>
    179a:	22 0f       	add	r18, r18
    179c:	33 1f       	adc	r19, r19
    179e:	44 1f       	adc	r20, r20
    17a0:	55 1f       	adc	r21, r21
    17a2:	0a 94       	dec	r0
    17a4:	d2 f7       	brpl	.-12     	; 0x179a <__stack+0x69b>
    17a6:	6c 96       	adiw	r28, 0x1c	; 28
    17a8:	8c ad       	ldd	r24, Y+60	; 0x3c
    17aa:	9d ad       	ldd	r25, Y+61	; 0x3d
    17ac:	ae ad       	ldd	r26, Y+62	; 0x3e
    17ae:	bf ad       	ldd	r27, Y+63	; 0x3f
    17b0:	6c 97       	sbiw	r28, 0x1c	; 28
    17b2:	66 96       	adiw	r28, 0x16	; 22
    17b4:	0f ac       	ldd	r0, Y+63	; 0x3f
    17b6:	66 97       	sbiw	r28, 0x16	; 22
    17b8:	04 c0       	rjmp	.+8      	; 0x17c2 <__stack+0x6c3>
    17ba:	b6 95       	lsr	r27
    17bc:	a7 95       	ror	r26
    17be:	97 95       	ror	r25
    17c0:	87 95       	ror	r24
    17c2:	0a 94       	dec	r0
    17c4:	d2 f7       	brpl	.-12     	; 0x17ba <__stack+0x6bb>
    17c6:	3c 01       	movw	r6, r24
    17c8:	4d 01       	movw	r8, r26
    17ca:	62 2a       	or	r6, r18
    17cc:	73 2a       	or	r7, r19
    17ce:	84 2a       	or	r8, r20
    17d0:	95 2a       	or	r9, r21
    17d2:	69 a2       	std	Y+33, r6	; 0x21
    17d4:	7a a2       	std	Y+34, r7	; 0x22
    17d6:	8b a2       	std	Y+35, r8	; 0x23
    17d8:	9c a2       	std	Y+36, r9	; 0x24
    17da:	6c 96       	adiw	r28, 0x1c	; 28
    17dc:	ec ac       	ldd	r14, Y+60	; 0x3c
    17de:	fd ac       	ldd	r15, Y+61	; 0x3d
    17e0:	0e ad       	ldd	r16, Y+62	; 0x3e
    17e2:	1f ad       	ldd	r17, Y+63	; 0x3f
    17e4:	6c 97       	sbiw	r28, 0x1c	; 28
    17e6:	67 96       	adiw	r28, 0x17	; 23
    17e8:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ea:	67 97       	sbiw	r28, 0x17	; 23
    17ec:	04 c0       	rjmp	.+8      	; 0x17f6 <__stack+0x6f7>
    17ee:	ee 0c       	add	r14, r14
    17f0:	ff 1c       	adc	r15, r15
    17f2:	00 1f       	adc	r16, r16
    17f4:	11 1f       	adc	r17, r17
    17f6:	0a 94       	dec	r0
    17f8:	d2 f7       	brpl	.-12     	; 0x17ee <__stack+0x6ef>
    17fa:	ed 8e       	std	Y+29, r14	; 0x1d
    17fc:	fe 8e       	std	Y+30, r15	; 0x1e
    17fe:	0f 8f       	std	Y+31, r16	; 0x1f
    1800:	18 a3       	std	Y+32, r17	; 0x20
    1802:	49 a5       	ldd	r20, Y+41	; 0x29
    1804:	5a a5       	ldd	r21, Y+42	; 0x2a
    1806:	6b a5       	ldd	r22, Y+43	; 0x2b
    1808:	7c a5       	ldd	r23, Y+44	; 0x2c
    180a:	3b 01       	movw	r6, r22
    180c:	88 24       	eor	r8, r8
    180e:	99 24       	eor	r9, r9
    1810:	60 70       	andi	r22, 0x00	; 0
    1812:	70 70       	andi	r23, 0x00	; 0
    1814:	2d 96       	adiw	r28, 0x0d	; 13
    1816:	4c af       	std	Y+60, r20	; 0x3c
    1818:	5d af       	std	Y+61, r21	; 0x3d
    181a:	6e af       	std	Y+62, r22	; 0x3e
    181c:	7f af       	std	Y+63, r23	; 0x3f
    181e:	2d 97       	sbiw	r28, 0x0d	; 13
    1820:	c6 01       	movw	r24, r12
    1822:	b5 01       	movw	r22, r10
    1824:	a4 01       	movw	r20, r8
    1826:	93 01       	movw	r18, r6
    1828:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    182c:	7b 01       	movw	r14, r22
    182e:	8c 01       	movw	r16, r24
    1830:	c6 01       	movw	r24, r12
    1832:	b5 01       	movw	r22, r10
    1834:	a4 01       	movw	r20, r8
    1836:	93 01       	movw	r18, r6
    1838:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    183c:	c9 01       	movw	r24, r18
    183e:	da 01       	movw	r26, r20
    1840:	1c 01       	movw	r2, r24
    1842:	2d 01       	movw	r4, r26
    1844:	c2 01       	movw	r24, r4
    1846:	b1 01       	movw	r22, r2
    1848:	2d 96       	adiw	r28, 0x0d	; 13
    184a:	2c ad       	ldd	r18, Y+60	; 0x3c
    184c:	3d ad       	ldd	r19, Y+61	; 0x3d
    184e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1850:	5f ad       	ldd	r21, Y+63	; 0x3f
    1852:	2d 97       	sbiw	r28, 0x0d	; 13
    1854:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1858:	9b 01       	movw	r18, r22
    185a:	ac 01       	movw	r20, r24
    185c:	87 01       	movw	r16, r14
    185e:	ff 24       	eor	r15, r15
    1860:	ee 24       	eor	r14, r14
    1862:	a9 a0       	ldd	r10, Y+33	; 0x21
    1864:	ba a0       	ldd	r11, Y+34	; 0x22
    1866:	cb a0       	ldd	r12, Y+35	; 0x23
    1868:	dc a0       	ldd	r13, Y+36	; 0x24
    186a:	c6 01       	movw	r24, r12
    186c:	aa 27       	eor	r26, r26
    186e:	bb 27       	eor	r27, r27
    1870:	57 01       	movw	r10, r14
    1872:	68 01       	movw	r12, r16
    1874:	a8 2a       	or	r10, r24
    1876:	b9 2a       	or	r11, r25
    1878:	ca 2a       	or	r12, r26
    187a:	db 2a       	or	r13, r27
    187c:	a2 16       	cp	r10, r18
    187e:	b3 06       	cpc	r11, r19
    1880:	c4 06       	cpc	r12, r20
    1882:	d5 06       	cpc	r13, r21
    1884:	00 f5       	brcc	.+64     	; 0x18c6 <__stack+0x7c7>
    1886:	08 94       	sec
    1888:	21 08       	sbc	r2, r1
    188a:	31 08       	sbc	r3, r1
    188c:	41 08       	sbc	r4, r1
    188e:	51 08       	sbc	r5, r1
    1890:	e9 a4       	ldd	r14, Y+41	; 0x29
    1892:	fa a4       	ldd	r15, Y+42	; 0x2a
    1894:	0b a5       	ldd	r16, Y+43	; 0x2b
    1896:	1c a5       	ldd	r17, Y+44	; 0x2c
    1898:	ae 0c       	add	r10, r14
    189a:	bf 1c       	adc	r11, r15
    189c:	c0 1e       	adc	r12, r16
    189e:	d1 1e       	adc	r13, r17
    18a0:	ae 14       	cp	r10, r14
    18a2:	bf 04       	cpc	r11, r15
    18a4:	c0 06       	cpc	r12, r16
    18a6:	d1 06       	cpc	r13, r17
    18a8:	70 f0       	brcs	.+28     	; 0x18c6 <__stack+0x7c7>
    18aa:	a2 16       	cp	r10, r18
    18ac:	b3 06       	cpc	r11, r19
    18ae:	c4 06       	cpc	r12, r20
    18b0:	d5 06       	cpc	r13, r21
    18b2:	48 f4       	brcc	.+18     	; 0x18c6 <__stack+0x7c7>
    18b4:	08 94       	sec
    18b6:	21 08       	sbc	r2, r1
    18b8:	31 08       	sbc	r3, r1
    18ba:	41 08       	sbc	r4, r1
    18bc:	51 08       	sbc	r5, r1
    18be:	ae 0c       	add	r10, r14
    18c0:	bf 1c       	adc	r11, r15
    18c2:	c0 1e       	adc	r12, r16
    18c4:	d1 1e       	adc	r13, r17
    18c6:	a2 1a       	sub	r10, r18
    18c8:	b3 0a       	sbc	r11, r19
    18ca:	c4 0a       	sbc	r12, r20
    18cc:	d5 0a       	sbc	r13, r21
    18ce:	c6 01       	movw	r24, r12
    18d0:	b5 01       	movw	r22, r10
    18d2:	a4 01       	movw	r20, r8
    18d4:	93 01       	movw	r18, r6
    18d6:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    18da:	7b 01       	movw	r14, r22
    18dc:	8c 01       	movw	r16, r24
    18de:	c6 01       	movw	r24, r12
    18e0:	b5 01       	movw	r22, r10
    18e2:	a4 01       	movw	r20, r8
    18e4:	93 01       	movw	r18, r6
    18e6:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    18ea:	c9 01       	movw	r24, r18
    18ec:	da 01       	movw	r26, r20
    18ee:	3c 01       	movw	r6, r24
    18f0:	4d 01       	movw	r8, r26
    18f2:	c4 01       	movw	r24, r8
    18f4:	b3 01       	movw	r22, r6
    18f6:	2d 96       	adiw	r28, 0x0d	; 13
    18f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    18fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    18fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    18fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1900:	2d 97       	sbiw	r28, 0x0d	; 13
    1902:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1906:	9b 01       	movw	r18, r22
    1908:	ac 01       	movw	r20, r24
    190a:	87 01       	movw	r16, r14
    190c:	ff 24       	eor	r15, r15
    190e:	ee 24       	eor	r14, r14
    1910:	89 a1       	ldd	r24, Y+33	; 0x21
    1912:	9a a1       	ldd	r25, Y+34	; 0x22
    1914:	ab a1       	ldd	r26, Y+35	; 0x23
    1916:	bc a1       	ldd	r27, Y+36	; 0x24
    1918:	a0 70       	andi	r26, 0x00	; 0
    191a:	b0 70       	andi	r27, 0x00	; 0
    191c:	57 01       	movw	r10, r14
    191e:	68 01       	movw	r12, r16
    1920:	a8 2a       	or	r10, r24
    1922:	b9 2a       	or	r11, r25
    1924:	ca 2a       	or	r12, r26
    1926:	db 2a       	or	r13, r27
    1928:	a2 16       	cp	r10, r18
    192a:	b3 06       	cpc	r11, r19
    192c:	c4 06       	cpc	r12, r20
    192e:	d5 06       	cpc	r13, r21
    1930:	00 f5       	brcc	.+64     	; 0x1972 <__stack+0x873>
    1932:	08 94       	sec
    1934:	61 08       	sbc	r6, r1
    1936:	71 08       	sbc	r7, r1
    1938:	81 08       	sbc	r8, r1
    193a:	91 08       	sbc	r9, r1
    193c:	69 a5       	ldd	r22, Y+41	; 0x29
    193e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1940:	8b a5       	ldd	r24, Y+43	; 0x2b
    1942:	9c a5       	ldd	r25, Y+44	; 0x2c
    1944:	a6 0e       	add	r10, r22
    1946:	b7 1e       	adc	r11, r23
    1948:	c8 1e       	adc	r12, r24
    194a:	d9 1e       	adc	r13, r25
    194c:	a6 16       	cp	r10, r22
    194e:	b7 06       	cpc	r11, r23
    1950:	c8 06       	cpc	r12, r24
    1952:	d9 06       	cpc	r13, r25
    1954:	70 f0       	brcs	.+28     	; 0x1972 <__stack+0x873>
    1956:	a2 16       	cp	r10, r18
    1958:	b3 06       	cpc	r11, r19
    195a:	c4 06       	cpc	r12, r20
    195c:	d5 06       	cpc	r13, r21
    195e:	48 f4       	brcc	.+18     	; 0x1972 <__stack+0x873>
    1960:	08 94       	sec
    1962:	61 08       	sbc	r6, r1
    1964:	71 08       	sbc	r7, r1
    1966:	81 08       	sbc	r8, r1
    1968:	91 08       	sbc	r9, r1
    196a:	a6 0e       	add	r10, r22
    196c:	b7 1e       	adc	r11, r23
    196e:	c8 1e       	adc	r12, r24
    1970:	d9 1e       	adc	r13, r25
    1972:	d6 01       	movw	r26, r12
    1974:	c5 01       	movw	r24, r10
    1976:	82 1b       	sub	r24, r18
    1978:	93 0b       	sbc	r25, r19
    197a:	a4 0b       	sbc	r26, r20
    197c:	b5 0b       	sbc	r27, r21
    197e:	89 8f       	std	Y+25, r24	; 0x19
    1980:	9a 8f       	std	Y+26, r25	; 0x1a
    1982:	ab 8f       	std	Y+27, r26	; 0x1b
    1984:	bc 8f       	std	Y+28, r27	; 0x1c
    1986:	d1 01       	movw	r26, r2
    1988:	99 27       	eor	r25, r25
    198a:	88 27       	eor	r24, r24
    198c:	84 01       	movw	r16, r8
    198e:	73 01       	movw	r14, r6
    1990:	e8 2a       	or	r14, r24
    1992:	f9 2a       	or	r15, r25
    1994:	0a 2b       	or	r16, r26
    1996:	1b 2b       	or	r17, r27
    1998:	4f ef       	ldi	r20, 0xFF	; 255
    199a:	a4 2e       	mov	r10, r20
    199c:	4f ef       	ldi	r20, 0xFF	; 255
    199e:	b4 2e       	mov	r11, r20
    19a0:	c1 2c       	mov	r12, r1
    19a2:	d1 2c       	mov	r13, r1
    19a4:	ae 20       	and	r10, r14
    19a6:	bf 20       	and	r11, r15
    19a8:	c0 22       	and	r12, r16
    19aa:	d1 22       	and	r13, r17
    19ac:	78 01       	movw	r14, r16
    19ae:	00 27       	eor	r16, r16
    19b0:	11 27       	eor	r17, r17
    19b2:	6d a0       	ldd	r6, Y+37	; 0x25
    19b4:	7e a0       	ldd	r7, Y+38	; 0x26
    19b6:	8f a0       	ldd	r8, Y+39	; 0x27
    19b8:	98 a4       	ldd	r9, Y+40	; 0x28
    19ba:	4f ef       	ldi	r20, 0xFF	; 255
    19bc:	5f ef       	ldi	r21, 0xFF	; 255
    19be:	60 e0       	ldi	r22, 0x00	; 0
    19c0:	70 e0       	ldi	r23, 0x00	; 0
    19c2:	64 22       	and	r6, r20
    19c4:	75 22       	and	r7, r21
    19c6:	86 22       	and	r8, r22
    19c8:	97 22       	and	r9, r23
    19ca:	8d a1       	ldd	r24, Y+37	; 0x25
    19cc:	9e a1       	ldd	r25, Y+38	; 0x26
    19ce:	af a1       	ldd	r26, Y+39	; 0x27
    19d0:	b8 a5       	ldd	r27, Y+40	; 0x28
    19d2:	bd 01       	movw	r22, r26
    19d4:	88 27       	eor	r24, r24
    19d6:	99 27       	eor	r25, r25
    19d8:	65 96       	adiw	r28, 0x15	; 21
    19da:	6c af       	std	Y+60, r22	; 0x3c
    19dc:	7d af       	std	Y+61, r23	; 0x3d
    19de:	8e af       	std	Y+62, r24	; 0x3e
    19e0:	9f af       	std	Y+63, r25	; 0x3f
    19e2:	65 97       	sbiw	r28, 0x15	; 21
    19e4:	c6 01       	movw	r24, r12
    19e6:	b5 01       	movw	r22, r10
    19e8:	a4 01       	movw	r20, r8
    19ea:	93 01       	movw	r18, r6
    19ec:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    19f0:	61 96       	adiw	r28, 0x11	; 17
    19f2:	6c af       	std	Y+60, r22	; 0x3c
    19f4:	7d af       	std	Y+61, r23	; 0x3d
    19f6:	8e af       	std	Y+62, r24	; 0x3e
    19f8:	9f af       	std	Y+63, r25	; 0x3f
    19fa:	61 97       	sbiw	r28, 0x11	; 17
    19fc:	c6 01       	movw	r24, r12
    19fe:	b5 01       	movw	r22, r10
    1a00:	65 96       	adiw	r28, 0x15	; 21
    1a02:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a04:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a06:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a08:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a0a:	65 97       	sbiw	r28, 0x15	; 21
    1a0c:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1a10:	1b 01       	movw	r2, r22
    1a12:	2c 01       	movw	r4, r24
    1a14:	c8 01       	movw	r24, r16
    1a16:	b7 01       	movw	r22, r14
    1a18:	a4 01       	movw	r20, r8
    1a1a:	93 01       	movw	r18, r6
    1a1c:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1a20:	5b 01       	movw	r10, r22
    1a22:	6c 01       	movw	r12, r24
    1a24:	c8 01       	movw	r24, r16
    1a26:	b7 01       	movw	r22, r14
    1a28:	65 96       	adiw	r28, 0x15	; 21
    1a2a:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a2c:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a2e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a30:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a32:	65 97       	sbiw	r28, 0x15	; 21
    1a34:	0e 94 38 62 	call	0xc470	; 0xc470 <__mulsi3>
    1a38:	7b 01       	movw	r14, r22
    1a3a:	8c 01       	movw	r16, r24
    1a3c:	a6 01       	movw	r20, r12
    1a3e:	95 01       	movw	r18, r10
    1a40:	22 0d       	add	r18, r2
    1a42:	33 1d       	adc	r19, r3
    1a44:	44 1d       	adc	r20, r4
    1a46:	55 1d       	adc	r21, r5
    1a48:	61 96       	adiw	r28, 0x11	; 17
    1a4a:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a4c:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a4e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a50:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a52:	61 97       	sbiw	r28, 0x11	; 17
    1a54:	c4 01       	movw	r24, r8
    1a56:	aa 27       	eor	r26, r26
    1a58:	bb 27       	eor	r27, r27
    1a5a:	28 0f       	add	r18, r24
    1a5c:	39 1f       	adc	r19, r25
    1a5e:	4a 1f       	adc	r20, r26
    1a60:	5b 1f       	adc	r21, r27
    1a62:	2a 15       	cp	r18, r10
    1a64:	3b 05       	cpc	r19, r11
    1a66:	4c 05       	cpc	r20, r12
    1a68:	5d 05       	cpc	r21, r13
    1a6a:	48 f4       	brcc	.+18     	; 0x1a7e <__stack+0x97f>
    1a6c:	81 2c       	mov	r8, r1
    1a6e:	91 2c       	mov	r9, r1
    1a70:	e1 e0       	ldi	r30, 0x01	; 1
    1a72:	ae 2e       	mov	r10, r30
    1a74:	b1 2c       	mov	r11, r1
    1a76:	e8 0c       	add	r14, r8
    1a78:	f9 1c       	adc	r15, r9
    1a7a:	0a 1d       	adc	r16, r10
    1a7c:	1b 1d       	adc	r17, r11
    1a7e:	ca 01       	movw	r24, r20
    1a80:	aa 27       	eor	r26, r26
    1a82:	bb 27       	eor	r27, r27
    1a84:	57 01       	movw	r10, r14
    1a86:	68 01       	movw	r12, r16
    1a88:	a8 0e       	add	r10, r24
    1a8a:	b9 1e       	adc	r11, r25
    1a8c:	ca 1e       	adc	r12, r26
    1a8e:	db 1e       	adc	r13, r27
    1a90:	a9 01       	movw	r20, r18
    1a92:	33 27       	eor	r19, r19
    1a94:	22 27       	eor	r18, r18
    1a96:	61 96       	adiw	r28, 0x11	; 17
    1a98:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a9a:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a9c:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a9e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1aa0:	61 97       	sbiw	r28, 0x11	; 17
    1aa2:	a0 70       	andi	r26, 0x00	; 0
    1aa4:	b0 70       	andi	r27, 0x00	; 0
    1aa6:	28 0f       	add	r18, r24
    1aa8:	39 1f       	adc	r19, r25
    1aaa:	4a 1f       	adc	r20, r26
    1aac:	5b 1f       	adc	r21, r27
    1aae:	e9 8c       	ldd	r14, Y+25	; 0x19
    1ab0:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1ab2:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1ab4:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1ab6:	ea 14       	cp	r14, r10
    1ab8:	fb 04       	cpc	r15, r11
    1aba:	0c 05       	cpc	r16, r12
    1abc:	1d 05       	cpc	r17, r13
    1abe:	70 f0       	brcs	.+28     	; 0x1adc <__stack+0x9dd>
    1ac0:	ae 14       	cp	r10, r14
    1ac2:	bf 04       	cpc	r11, r15
    1ac4:	c0 06       	cpc	r12, r16
    1ac6:	d1 06       	cpc	r13, r17
    1ac8:	69 f5       	brne	.+90     	; 0x1b24 <__stack+0xa25>
    1aca:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1acc:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ace:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ad0:	98 a1       	ldd	r25, Y+32	; 0x20
    1ad2:	62 17       	cp	r22, r18
    1ad4:	73 07       	cpc	r23, r19
    1ad6:	84 07       	cpc	r24, r20
    1ad8:	95 07       	cpc	r25, r21
    1ada:	20 f5       	brcc	.+72     	; 0x1b24 <__stack+0xa25>
    1adc:	da 01       	movw	r26, r20
    1ade:	c9 01       	movw	r24, r18
    1ae0:	6d a0       	ldd	r6, Y+37	; 0x25
    1ae2:	7e a0       	ldd	r7, Y+38	; 0x26
    1ae4:	8f a0       	ldd	r8, Y+39	; 0x27
    1ae6:	98 a4       	ldd	r9, Y+40	; 0x28
    1ae8:	86 19       	sub	r24, r6
    1aea:	97 09       	sbc	r25, r7
    1aec:	a8 09       	sbc	r26, r8
    1aee:	b9 09       	sbc	r27, r9
    1af0:	e9 a4       	ldd	r14, Y+41	; 0x29
    1af2:	fa a4       	ldd	r15, Y+42	; 0x2a
    1af4:	0b a5       	ldd	r16, Y+43	; 0x2b
    1af6:	1c a5       	ldd	r17, Y+44	; 0x2c
    1af8:	ae 18       	sub	r10, r14
    1afa:	bf 08       	sbc	r11, r15
    1afc:	c0 0a       	sbc	r12, r16
    1afe:	d1 0a       	sbc	r13, r17
    1b00:	ee 24       	eor	r14, r14
    1b02:	ff 24       	eor	r15, r15
    1b04:	87 01       	movw	r16, r14
    1b06:	28 17       	cp	r18, r24
    1b08:	39 07       	cpc	r19, r25
    1b0a:	4a 07       	cpc	r20, r26
    1b0c:	5b 07       	cpc	r21, r27
    1b0e:	28 f4       	brcc	.+10     	; 0x1b1a <__stack+0xa1b>
    1b10:	21 e0       	ldi	r18, 0x01	; 1
    1b12:	e2 2e       	mov	r14, r18
    1b14:	f1 2c       	mov	r15, r1
    1b16:	01 2d       	mov	r16, r1
    1b18:	11 2d       	mov	r17, r1
    1b1a:	ae 18       	sub	r10, r14
    1b1c:	bf 08       	sbc	r11, r15
    1b1e:	c0 0a       	sbc	r12, r16
    1b20:	d1 0a       	sbc	r13, r17
    1b22:	02 c0       	rjmp	.+4      	; 0x1b28 <__stack+0xa29>
    1b24:	da 01       	movw	r26, r20
    1b26:	c9 01       	movw	r24, r18
    1b28:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b2a:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b2c:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1b2e:	98 a0       	ldd	r9, Y+32	; 0x20
    1b30:	68 1a       	sub	r6, r24
    1b32:	79 0a       	sbc	r7, r25
    1b34:	8a 0a       	sbc	r8, r26
    1b36:	9b 0a       	sbc	r9, r27
    1b38:	49 8d       	ldd	r20, Y+25	; 0x19
    1b3a:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b3c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b3e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b40:	4a 19       	sub	r20, r10
    1b42:	5b 09       	sbc	r21, r11
    1b44:	6c 09       	sbc	r22, r12
    1b46:	7d 09       	sbc	r23, r13
    1b48:	5a 01       	movw	r10, r20
    1b4a:	6b 01       	movw	r12, r22
    1b4c:	22 24       	eor	r2, r2
    1b4e:	33 24       	eor	r3, r3
    1b50:	21 01       	movw	r4, r2
    1b52:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b54:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b58:	98 a1       	ldd	r25, Y+32	; 0x20
    1b5a:	66 15       	cp	r22, r6
    1b5c:	77 05       	cpc	r23, r7
    1b5e:	88 05       	cpc	r24, r8
    1b60:	99 05       	cpc	r25, r9
    1b62:	28 f4       	brcc	.+10     	; 0x1b6e <__stack+0xa6f>
    1b64:	81 e0       	ldi	r24, 0x01	; 1
    1b66:	28 2e       	mov	r2, r24
    1b68:	31 2c       	mov	r3, r1
    1b6a:	41 2c       	mov	r4, r1
    1b6c:	51 2c       	mov	r5, r1
    1b6e:	86 01       	movw	r16, r12
    1b70:	75 01       	movw	r14, r10
    1b72:	e2 18       	sub	r14, r2
    1b74:	f3 08       	sbc	r15, r3
    1b76:	04 09       	sbc	r16, r4
    1b78:	15 09       	sbc	r17, r5
    1b7a:	a8 01       	movw	r20, r16
    1b7c:	97 01       	movw	r18, r14
    1b7e:	66 96       	adiw	r28, 0x16	; 22
    1b80:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b82:	66 97       	sbiw	r28, 0x16	; 22
    1b84:	04 c0       	rjmp	.+8      	; 0x1b8e <__stack+0xa8f>
    1b86:	22 0f       	add	r18, r18
    1b88:	33 1f       	adc	r19, r19
    1b8a:	44 1f       	adc	r20, r20
    1b8c:	55 1f       	adc	r21, r21
    1b8e:	0a 94       	dec	r0
    1b90:	d2 f7       	brpl	.-12     	; 0x1b86 <__stack+0xa87>
    1b92:	d4 01       	movw	r26, r8
    1b94:	c3 01       	movw	r24, r6
    1b96:	67 96       	adiw	r28, 0x17	; 23
    1b98:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b9a:	67 97       	sbiw	r28, 0x17	; 23
    1b9c:	04 c0       	rjmp	.+8      	; 0x1ba6 <__stack+0xaa7>
    1b9e:	b6 95       	lsr	r27
    1ba0:	a7 95       	ror	r26
    1ba2:	97 95       	ror	r25
    1ba4:	87 95       	ror	r24
    1ba6:	0a 94       	dec	r0
    1ba8:	d2 f7       	brpl	.-12     	; 0x1b9e <__stack+0xa9f>
    1baa:	28 2b       	or	r18, r24
    1bac:	39 2b       	or	r19, r25
    1bae:	4a 2b       	or	r20, r26
    1bb0:	5b 2b       	or	r21, r27
    1bb2:	29 8b       	std	Y+17, r18	; 0x11
    1bb4:	3a 8b       	std	Y+18, r19	; 0x12
    1bb6:	4b 8b       	std	Y+19, r20	; 0x13
    1bb8:	5c 8b       	std	Y+20, r21	; 0x14
    1bba:	67 96       	adiw	r28, 0x17	; 23
    1bbc:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bbe:	67 97       	sbiw	r28, 0x17	; 23
    1bc0:	04 c0       	rjmp	.+8      	; 0x1bca <__stack+0xacb>
    1bc2:	16 95       	lsr	r17
    1bc4:	07 95       	ror	r16
    1bc6:	f7 94       	ror	r15
    1bc8:	e7 94       	ror	r14
    1bca:	0a 94       	dec	r0
    1bcc:	d2 f7       	brpl	.-12     	; 0x1bc2 <__stack+0xac3>
    1bce:	ed 8a       	std	Y+21, r14	; 0x15
    1bd0:	fe 8a       	std	Y+22, r15	; 0x16
    1bd2:	0f 8b       	std	Y+23, r16	; 0x17
    1bd4:	18 8f       	std	Y+24, r17	; 0x18
    1bd6:	3a 89       	ldd	r19, Y+18	; 0x12
    1bd8:	4b 89       	ldd	r20, Y+19	; 0x13
    1bda:	5c 89       	ldd	r21, Y+20	; 0x14
    1bdc:	6e 2d       	mov	r22, r14
    1bde:	7e 89       	ldd	r23, Y+22	; 0x16
    1be0:	8f 89       	ldd	r24, Y+23	; 0x17
    1be2:	98 8d       	ldd	r25, Y+24	; 0x18
    1be4:	c5 5a       	subi	r28, 0xA5	; 165
    1be6:	df 4f       	sbci	r29, 0xFF	; 255
    1be8:	e2 e1       	ldi	r30, 0x12	; 18
    1bea:	0c 94 73 62 	jmp	0xc4e6	; 0xc4e6 <__epilogue_restores__>

00001bee <_fpadd_parts>:
    1bee:	a0 e0       	ldi	r26, 0x00	; 0
    1bf0:	b0 e0       	ldi	r27, 0x00	; 0
    1bf2:	ed ef       	ldi	r30, 0xFD	; 253
    1bf4:	fd e0       	ldi	r31, 0x0D	; 13
    1bf6:	0c 94 57 62 	jmp	0xc4ae	; 0xc4ae <__prologue_saves__>
    1bfa:	dc 01       	movw	r26, r24
    1bfc:	2b 01       	movw	r4, r22
    1bfe:	fa 01       	movw	r30, r20
    1c00:	9c 91       	ld	r25, X
    1c02:	92 30       	cpi	r25, 0x02	; 2
    1c04:	08 f4       	brcc	.+2      	; 0x1c08 <_fpadd_parts+0x1a>
    1c06:	39 c1       	rjmp	.+626    	; 0x1e7a <_fpadd_parts+0x28c>
    1c08:	eb 01       	movw	r28, r22
    1c0a:	88 81       	ld	r24, Y
    1c0c:	82 30       	cpi	r24, 0x02	; 2
    1c0e:	08 f4       	brcc	.+2      	; 0x1c12 <_fpadd_parts+0x24>
    1c10:	33 c1       	rjmp	.+614    	; 0x1e78 <_fpadd_parts+0x28a>
    1c12:	94 30       	cpi	r25, 0x04	; 4
    1c14:	69 f4       	brne	.+26     	; 0x1c30 <_fpadd_parts+0x42>
    1c16:	84 30       	cpi	r24, 0x04	; 4
    1c18:	09 f0       	breq	.+2      	; 0x1c1c <_fpadd_parts+0x2e>
    1c1a:	2f c1       	rjmp	.+606    	; 0x1e7a <_fpadd_parts+0x28c>
    1c1c:	11 96       	adiw	r26, 0x01	; 1
    1c1e:	9c 91       	ld	r25, X
    1c20:	11 97       	sbiw	r26, 0x01	; 1
    1c22:	89 81       	ldd	r24, Y+1	; 0x01
    1c24:	98 17       	cp	r25, r24
    1c26:	09 f4       	brne	.+2      	; 0x1c2a <_fpadd_parts+0x3c>
    1c28:	28 c1       	rjmp	.+592    	; 0x1e7a <_fpadd_parts+0x28c>
    1c2a:	a2 e7       	ldi	r26, 0x72	; 114
    1c2c:	b2 e0       	ldi	r27, 0x02	; 2
    1c2e:	25 c1       	rjmp	.+586    	; 0x1e7a <_fpadd_parts+0x28c>
    1c30:	84 30       	cpi	r24, 0x04	; 4
    1c32:	09 f4       	brne	.+2      	; 0x1c36 <_fpadd_parts+0x48>
    1c34:	21 c1       	rjmp	.+578    	; 0x1e78 <_fpadd_parts+0x28a>
    1c36:	82 30       	cpi	r24, 0x02	; 2
    1c38:	a9 f4       	brne	.+42     	; 0x1c64 <_fpadd_parts+0x76>
    1c3a:	92 30       	cpi	r25, 0x02	; 2
    1c3c:	09 f0       	breq	.+2      	; 0x1c40 <_fpadd_parts+0x52>
    1c3e:	1d c1       	rjmp	.+570    	; 0x1e7a <_fpadd_parts+0x28c>
    1c40:	9a 01       	movw	r18, r20
    1c42:	ad 01       	movw	r20, r26
    1c44:	88 e0       	ldi	r24, 0x08	; 8
    1c46:	ea 01       	movw	r28, r20
    1c48:	09 90       	ld	r0, Y+
    1c4a:	ae 01       	movw	r20, r28
    1c4c:	e9 01       	movw	r28, r18
    1c4e:	09 92       	st	Y+, r0
    1c50:	9e 01       	movw	r18, r28
    1c52:	81 50       	subi	r24, 0x01	; 1
    1c54:	c1 f7       	brne	.-16     	; 0x1c46 <_fpadd_parts+0x58>
    1c56:	e2 01       	movw	r28, r4
    1c58:	89 81       	ldd	r24, Y+1	; 0x01
    1c5a:	11 96       	adiw	r26, 0x01	; 1
    1c5c:	9c 91       	ld	r25, X
    1c5e:	89 23       	and	r24, r25
    1c60:	81 83       	std	Z+1, r24	; 0x01
    1c62:	08 c1       	rjmp	.+528    	; 0x1e74 <_fpadd_parts+0x286>
    1c64:	92 30       	cpi	r25, 0x02	; 2
    1c66:	09 f4       	brne	.+2      	; 0x1c6a <_fpadd_parts+0x7c>
    1c68:	07 c1       	rjmp	.+526    	; 0x1e78 <_fpadd_parts+0x28a>
    1c6a:	12 96       	adiw	r26, 0x02	; 2
    1c6c:	2d 90       	ld	r2, X+
    1c6e:	3c 90       	ld	r3, X
    1c70:	13 97       	sbiw	r26, 0x03	; 3
    1c72:	eb 01       	movw	r28, r22
    1c74:	8a 81       	ldd	r24, Y+2	; 0x02
    1c76:	9b 81       	ldd	r25, Y+3	; 0x03
    1c78:	14 96       	adiw	r26, 0x04	; 4
    1c7a:	ad 90       	ld	r10, X+
    1c7c:	bd 90       	ld	r11, X+
    1c7e:	cd 90       	ld	r12, X+
    1c80:	dc 90       	ld	r13, X
    1c82:	17 97       	sbiw	r26, 0x07	; 7
    1c84:	ec 80       	ldd	r14, Y+4	; 0x04
    1c86:	fd 80       	ldd	r15, Y+5	; 0x05
    1c88:	0e 81       	ldd	r16, Y+6	; 0x06
    1c8a:	1f 81       	ldd	r17, Y+7	; 0x07
    1c8c:	91 01       	movw	r18, r2
    1c8e:	28 1b       	sub	r18, r24
    1c90:	39 0b       	sbc	r19, r25
    1c92:	b9 01       	movw	r22, r18
    1c94:	37 ff       	sbrs	r19, 7
    1c96:	04 c0       	rjmp	.+8      	; 0x1ca0 <_fpadd_parts+0xb2>
    1c98:	66 27       	eor	r22, r22
    1c9a:	77 27       	eor	r23, r23
    1c9c:	62 1b       	sub	r22, r18
    1c9e:	73 0b       	sbc	r23, r19
    1ca0:	60 32       	cpi	r22, 0x20	; 32
    1ca2:	71 05       	cpc	r23, r1
    1ca4:	0c f0       	brlt	.+2      	; 0x1ca8 <_fpadd_parts+0xba>
    1ca6:	61 c0       	rjmp	.+194    	; 0x1d6a <_fpadd_parts+0x17c>
    1ca8:	12 16       	cp	r1, r18
    1caa:	13 06       	cpc	r1, r19
    1cac:	6c f5       	brge	.+90     	; 0x1d08 <_fpadd_parts+0x11a>
    1cae:	37 01       	movw	r6, r14
    1cb0:	48 01       	movw	r8, r16
    1cb2:	06 2e       	mov	r0, r22
    1cb4:	04 c0       	rjmp	.+8      	; 0x1cbe <_fpadd_parts+0xd0>
    1cb6:	96 94       	lsr	r9
    1cb8:	87 94       	ror	r8
    1cba:	77 94       	ror	r7
    1cbc:	67 94       	ror	r6
    1cbe:	0a 94       	dec	r0
    1cc0:	d2 f7       	brpl	.-12     	; 0x1cb6 <_fpadd_parts+0xc8>
    1cc2:	21 e0       	ldi	r18, 0x01	; 1
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	40 e0       	ldi	r20, 0x00	; 0
    1cc8:	50 e0       	ldi	r21, 0x00	; 0
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <_fpadd_parts+0xe6>
    1ccc:	22 0f       	add	r18, r18
    1cce:	33 1f       	adc	r19, r19
    1cd0:	44 1f       	adc	r20, r20
    1cd2:	55 1f       	adc	r21, r21
    1cd4:	6a 95       	dec	r22
    1cd6:	d2 f7       	brpl	.-12     	; 0x1ccc <_fpadd_parts+0xde>
    1cd8:	21 50       	subi	r18, 0x01	; 1
    1cda:	30 40       	sbci	r19, 0x00	; 0
    1cdc:	40 40       	sbci	r20, 0x00	; 0
    1cde:	50 40       	sbci	r21, 0x00	; 0
    1ce0:	2e 21       	and	r18, r14
    1ce2:	3f 21       	and	r19, r15
    1ce4:	40 23       	and	r20, r16
    1ce6:	51 23       	and	r21, r17
    1ce8:	21 15       	cp	r18, r1
    1cea:	31 05       	cpc	r19, r1
    1cec:	41 05       	cpc	r20, r1
    1cee:	51 05       	cpc	r21, r1
    1cf0:	21 f0       	breq	.+8      	; 0x1cfa <_fpadd_parts+0x10c>
    1cf2:	21 e0       	ldi	r18, 0x01	; 1
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	40 e0       	ldi	r20, 0x00	; 0
    1cf8:	50 e0       	ldi	r21, 0x00	; 0
    1cfa:	79 01       	movw	r14, r18
    1cfc:	8a 01       	movw	r16, r20
    1cfe:	e6 28       	or	r14, r6
    1d00:	f7 28       	or	r15, r7
    1d02:	08 29       	or	r16, r8
    1d04:	19 29       	or	r17, r9
    1d06:	3c c0       	rjmp	.+120    	; 0x1d80 <_fpadd_parts+0x192>
    1d08:	23 2b       	or	r18, r19
    1d0a:	d1 f1       	breq	.+116    	; 0x1d80 <_fpadd_parts+0x192>
    1d0c:	26 0e       	add	r2, r22
    1d0e:	37 1e       	adc	r3, r23
    1d10:	35 01       	movw	r6, r10
    1d12:	46 01       	movw	r8, r12
    1d14:	06 2e       	mov	r0, r22
    1d16:	04 c0       	rjmp	.+8      	; 0x1d20 <_fpadd_parts+0x132>
    1d18:	96 94       	lsr	r9
    1d1a:	87 94       	ror	r8
    1d1c:	77 94       	ror	r7
    1d1e:	67 94       	ror	r6
    1d20:	0a 94       	dec	r0
    1d22:	d2 f7       	brpl	.-12     	; 0x1d18 <_fpadd_parts+0x12a>
    1d24:	21 e0       	ldi	r18, 0x01	; 1
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	40 e0       	ldi	r20, 0x00	; 0
    1d2a:	50 e0       	ldi	r21, 0x00	; 0
    1d2c:	04 c0       	rjmp	.+8      	; 0x1d36 <_fpadd_parts+0x148>
    1d2e:	22 0f       	add	r18, r18
    1d30:	33 1f       	adc	r19, r19
    1d32:	44 1f       	adc	r20, r20
    1d34:	55 1f       	adc	r21, r21
    1d36:	6a 95       	dec	r22
    1d38:	d2 f7       	brpl	.-12     	; 0x1d2e <_fpadd_parts+0x140>
    1d3a:	21 50       	subi	r18, 0x01	; 1
    1d3c:	30 40       	sbci	r19, 0x00	; 0
    1d3e:	40 40       	sbci	r20, 0x00	; 0
    1d40:	50 40       	sbci	r21, 0x00	; 0
    1d42:	2a 21       	and	r18, r10
    1d44:	3b 21       	and	r19, r11
    1d46:	4c 21       	and	r20, r12
    1d48:	5d 21       	and	r21, r13
    1d4a:	21 15       	cp	r18, r1
    1d4c:	31 05       	cpc	r19, r1
    1d4e:	41 05       	cpc	r20, r1
    1d50:	51 05       	cpc	r21, r1
    1d52:	21 f0       	breq	.+8      	; 0x1d5c <_fpadd_parts+0x16e>
    1d54:	21 e0       	ldi	r18, 0x01	; 1
    1d56:	30 e0       	ldi	r19, 0x00	; 0
    1d58:	40 e0       	ldi	r20, 0x00	; 0
    1d5a:	50 e0       	ldi	r21, 0x00	; 0
    1d5c:	59 01       	movw	r10, r18
    1d5e:	6a 01       	movw	r12, r20
    1d60:	a6 28       	or	r10, r6
    1d62:	b7 28       	or	r11, r7
    1d64:	c8 28       	or	r12, r8
    1d66:	d9 28       	or	r13, r9
    1d68:	0b c0       	rjmp	.+22     	; 0x1d80 <_fpadd_parts+0x192>
    1d6a:	82 15       	cp	r24, r2
    1d6c:	93 05       	cpc	r25, r3
    1d6e:	2c f0       	brlt	.+10     	; 0x1d7a <_fpadd_parts+0x18c>
    1d70:	1c 01       	movw	r2, r24
    1d72:	aa 24       	eor	r10, r10
    1d74:	bb 24       	eor	r11, r11
    1d76:	65 01       	movw	r12, r10
    1d78:	03 c0       	rjmp	.+6      	; 0x1d80 <_fpadd_parts+0x192>
    1d7a:	ee 24       	eor	r14, r14
    1d7c:	ff 24       	eor	r15, r15
    1d7e:	87 01       	movw	r16, r14
    1d80:	11 96       	adiw	r26, 0x01	; 1
    1d82:	9c 91       	ld	r25, X
    1d84:	d2 01       	movw	r26, r4
    1d86:	11 96       	adiw	r26, 0x01	; 1
    1d88:	8c 91       	ld	r24, X
    1d8a:	98 17       	cp	r25, r24
    1d8c:	09 f4       	brne	.+2      	; 0x1d90 <_fpadd_parts+0x1a2>
    1d8e:	45 c0       	rjmp	.+138    	; 0x1e1a <_fpadd_parts+0x22c>
    1d90:	99 23       	and	r25, r25
    1d92:	39 f0       	breq	.+14     	; 0x1da2 <_fpadd_parts+0x1b4>
    1d94:	a8 01       	movw	r20, r16
    1d96:	97 01       	movw	r18, r14
    1d98:	2a 19       	sub	r18, r10
    1d9a:	3b 09       	sbc	r19, r11
    1d9c:	4c 09       	sbc	r20, r12
    1d9e:	5d 09       	sbc	r21, r13
    1da0:	06 c0       	rjmp	.+12     	; 0x1dae <_fpadd_parts+0x1c0>
    1da2:	a6 01       	movw	r20, r12
    1da4:	95 01       	movw	r18, r10
    1da6:	2e 19       	sub	r18, r14
    1da8:	3f 09       	sbc	r19, r15
    1daa:	40 0b       	sbc	r20, r16
    1dac:	51 0b       	sbc	r21, r17
    1dae:	57 fd       	sbrc	r21, 7
    1db0:	08 c0       	rjmp	.+16     	; 0x1dc2 <_fpadd_parts+0x1d4>
    1db2:	11 82       	std	Z+1, r1	; 0x01
    1db4:	33 82       	std	Z+3, r3	; 0x03
    1db6:	22 82       	std	Z+2, r2	; 0x02
    1db8:	24 83       	std	Z+4, r18	; 0x04
    1dba:	35 83       	std	Z+5, r19	; 0x05
    1dbc:	46 83       	std	Z+6, r20	; 0x06
    1dbe:	57 83       	std	Z+7, r21	; 0x07
    1dc0:	1d c0       	rjmp	.+58     	; 0x1dfc <_fpadd_parts+0x20e>
    1dc2:	81 e0       	ldi	r24, 0x01	; 1
    1dc4:	81 83       	std	Z+1, r24	; 0x01
    1dc6:	33 82       	std	Z+3, r3	; 0x03
    1dc8:	22 82       	std	Z+2, r2	; 0x02
    1dca:	88 27       	eor	r24, r24
    1dcc:	99 27       	eor	r25, r25
    1dce:	dc 01       	movw	r26, r24
    1dd0:	82 1b       	sub	r24, r18
    1dd2:	93 0b       	sbc	r25, r19
    1dd4:	a4 0b       	sbc	r26, r20
    1dd6:	b5 0b       	sbc	r27, r21
    1dd8:	84 83       	std	Z+4, r24	; 0x04
    1dda:	95 83       	std	Z+5, r25	; 0x05
    1ddc:	a6 83       	std	Z+6, r26	; 0x06
    1dde:	b7 83       	std	Z+7, r27	; 0x07
    1de0:	0d c0       	rjmp	.+26     	; 0x1dfc <_fpadd_parts+0x20e>
    1de2:	22 0f       	add	r18, r18
    1de4:	33 1f       	adc	r19, r19
    1de6:	44 1f       	adc	r20, r20
    1de8:	55 1f       	adc	r21, r21
    1dea:	24 83       	std	Z+4, r18	; 0x04
    1dec:	35 83       	std	Z+5, r19	; 0x05
    1dee:	46 83       	std	Z+6, r20	; 0x06
    1df0:	57 83       	std	Z+7, r21	; 0x07
    1df2:	82 81       	ldd	r24, Z+2	; 0x02
    1df4:	93 81       	ldd	r25, Z+3	; 0x03
    1df6:	01 97       	sbiw	r24, 0x01	; 1
    1df8:	93 83       	std	Z+3, r25	; 0x03
    1dfa:	82 83       	std	Z+2, r24	; 0x02
    1dfc:	24 81       	ldd	r18, Z+4	; 0x04
    1dfe:	35 81       	ldd	r19, Z+5	; 0x05
    1e00:	46 81       	ldd	r20, Z+6	; 0x06
    1e02:	57 81       	ldd	r21, Z+7	; 0x07
    1e04:	da 01       	movw	r26, r20
    1e06:	c9 01       	movw	r24, r18
    1e08:	01 97       	sbiw	r24, 0x01	; 1
    1e0a:	a1 09       	sbc	r26, r1
    1e0c:	b1 09       	sbc	r27, r1
    1e0e:	8f 5f       	subi	r24, 0xFF	; 255
    1e10:	9f 4f       	sbci	r25, 0xFF	; 255
    1e12:	af 4f       	sbci	r26, 0xFF	; 255
    1e14:	bf 43       	sbci	r27, 0x3F	; 63
    1e16:	28 f3       	brcs	.-54     	; 0x1de2 <_fpadd_parts+0x1f4>
    1e18:	0b c0       	rjmp	.+22     	; 0x1e30 <_fpadd_parts+0x242>
    1e1a:	91 83       	std	Z+1, r25	; 0x01
    1e1c:	33 82       	std	Z+3, r3	; 0x03
    1e1e:	22 82       	std	Z+2, r2	; 0x02
    1e20:	ea 0c       	add	r14, r10
    1e22:	fb 1c       	adc	r15, r11
    1e24:	0c 1d       	adc	r16, r12
    1e26:	1d 1d       	adc	r17, r13
    1e28:	e4 82       	std	Z+4, r14	; 0x04
    1e2a:	f5 82       	std	Z+5, r15	; 0x05
    1e2c:	06 83       	std	Z+6, r16	; 0x06
    1e2e:	17 83       	std	Z+7, r17	; 0x07
    1e30:	83 e0       	ldi	r24, 0x03	; 3
    1e32:	80 83       	st	Z, r24
    1e34:	24 81       	ldd	r18, Z+4	; 0x04
    1e36:	35 81       	ldd	r19, Z+5	; 0x05
    1e38:	46 81       	ldd	r20, Z+6	; 0x06
    1e3a:	57 81       	ldd	r21, Z+7	; 0x07
    1e3c:	57 ff       	sbrs	r21, 7
    1e3e:	1a c0       	rjmp	.+52     	; 0x1e74 <_fpadd_parts+0x286>
    1e40:	c9 01       	movw	r24, r18
    1e42:	aa 27       	eor	r26, r26
    1e44:	97 fd       	sbrc	r25, 7
    1e46:	a0 95       	com	r26
    1e48:	ba 2f       	mov	r27, r26
    1e4a:	81 70       	andi	r24, 0x01	; 1
    1e4c:	90 70       	andi	r25, 0x00	; 0
    1e4e:	a0 70       	andi	r26, 0x00	; 0
    1e50:	b0 70       	andi	r27, 0x00	; 0
    1e52:	56 95       	lsr	r21
    1e54:	47 95       	ror	r20
    1e56:	37 95       	ror	r19
    1e58:	27 95       	ror	r18
    1e5a:	82 2b       	or	r24, r18
    1e5c:	93 2b       	or	r25, r19
    1e5e:	a4 2b       	or	r26, r20
    1e60:	b5 2b       	or	r27, r21
    1e62:	84 83       	std	Z+4, r24	; 0x04
    1e64:	95 83       	std	Z+5, r25	; 0x05
    1e66:	a6 83       	std	Z+6, r26	; 0x06
    1e68:	b7 83       	std	Z+7, r27	; 0x07
    1e6a:	82 81       	ldd	r24, Z+2	; 0x02
    1e6c:	93 81       	ldd	r25, Z+3	; 0x03
    1e6e:	01 96       	adiw	r24, 0x01	; 1
    1e70:	93 83       	std	Z+3, r25	; 0x03
    1e72:	82 83       	std	Z+2, r24	; 0x02
    1e74:	df 01       	movw	r26, r30
    1e76:	01 c0       	rjmp	.+2      	; 0x1e7a <_fpadd_parts+0x28c>
    1e78:	d2 01       	movw	r26, r4
    1e7a:	cd 01       	movw	r24, r26
    1e7c:	cd b7       	in	r28, 0x3d	; 61
    1e7e:	de b7       	in	r29, 0x3e	; 62
    1e80:	e2 e1       	ldi	r30, 0x12	; 18
    1e82:	0c 94 73 62 	jmp	0xc4e6	; 0xc4e6 <__epilogue_restores__>

00001e86 <__subsf3>:
    1e86:	a0 e2       	ldi	r26, 0x20	; 32
    1e88:	b0 e0       	ldi	r27, 0x00	; 0
    1e8a:	e9 e4       	ldi	r30, 0x49	; 73
    1e8c:	ff e0       	ldi	r31, 0x0F	; 15
    1e8e:	0c 94 63 62 	jmp	0xc4c6	; 0xc4c6 <__prologue_saves__+0x18>
    1e92:	69 83       	std	Y+1, r22	; 0x01
    1e94:	7a 83       	std	Y+2, r23	; 0x02
    1e96:	8b 83       	std	Y+3, r24	; 0x03
    1e98:	9c 83       	std	Y+4, r25	; 0x04
    1e9a:	2d 83       	std	Y+5, r18	; 0x05
    1e9c:	3e 83       	std	Y+6, r19	; 0x06
    1e9e:	4f 83       	std	Y+7, r20	; 0x07
    1ea0:	58 87       	std	Y+8, r21	; 0x08
    1ea2:	e9 e0       	ldi	r30, 0x09	; 9
    1ea4:	ee 2e       	mov	r14, r30
    1ea6:	f1 2c       	mov	r15, r1
    1ea8:	ec 0e       	add	r14, r28
    1eaa:	fd 1e       	adc	r15, r29
    1eac:	ce 01       	movw	r24, r28
    1eae:	01 96       	adiw	r24, 0x01	; 1
    1eb0:	b7 01       	movw	r22, r14
    1eb2:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1eb6:	8e 01       	movw	r16, r28
    1eb8:	0f 5e       	subi	r16, 0xEF	; 239
    1eba:	1f 4f       	sbci	r17, 0xFF	; 255
    1ebc:	ce 01       	movw	r24, r28
    1ebe:	05 96       	adiw	r24, 0x05	; 5
    1ec0:	b8 01       	movw	r22, r16
    1ec2:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1ec6:	8a 89       	ldd	r24, Y+18	; 0x12
    1ec8:	91 e0       	ldi	r25, 0x01	; 1
    1eca:	89 27       	eor	r24, r25
    1ecc:	8a 8b       	std	Y+18, r24	; 0x12
    1ece:	c7 01       	movw	r24, r14
    1ed0:	b8 01       	movw	r22, r16
    1ed2:	ae 01       	movw	r20, r28
    1ed4:	47 5e       	subi	r20, 0xE7	; 231
    1ed6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed8:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <_fpadd_parts>
    1edc:	0e 94 2b 12 	call	0x2456	; 0x2456 <__pack_f>
    1ee0:	a0 96       	adiw	r28, 0x20	; 32
    1ee2:	e6 e0       	ldi	r30, 0x06	; 6
    1ee4:	0c 94 7f 62 	jmp	0xc4fe	; 0xc4fe <__epilogue_restores__+0x18>

00001ee8 <__addsf3>:
    1ee8:	a0 e2       	ldi	r26, 0x20	; 32
    1eea:	b0 e0       	ldi	r27, 0x00	; 0
    1eec:	ea e7       	ldi	r30, 0x7A	; 122
    1eee:	ff e0       	ldi	r31, 0x0F	; 15
    1ef0:	0c 94 63 62 	jmp	0xc4c6	; 0xc4c6 <__prologue_saves__+0x18>
    1ef4:	69 83       	std	Y+1, r22	; 0x01
    1ef6:	7a 83       	std	Y+2, r23	; 0x02
    1ef8:	8b 83       	std	Y+3, r24	; 0x03
    1efa:	9c 83       	std	Y+4, r25	; 0x04
    1efc:	2d 83       	std	Y+5, r18	; 0x05
    1efe:	3e 83       	std	Y+6, r19	; 0x06
    1f00:	4f 83       	std	Y+7, r20	; 0x07
    1f02:	58 87       	std	Y+8, r21	; 0x08
    1f04:	f9 e0       	ldi	r31, 0x09	; 9
    1f06:	ef 2e       	mov	r14, r31
    1f08:	f1 2c       	mov	r15, r1
    1f0a:	ec 0e       	add	r14, r28
    1f0c:	fd 1e       	adc	r15, r29
    1f0e:	ce 01       	movw	r24, r28
    1f10:	01 96       	adiw	r24, 0x01	; 1
    1f12:	b7 01       	movw	r22, r14
    1f14:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1f18:	8e 01       	movw	r16, r28
    1f1a:	0f 5e       	subi	r16, 0xEF	; 239
    1f1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f1e:	ce 01       	movw	r24, r28
    1f20:	05 96       	adiw	r24, 0x05	; 5
    1f22:	b8 01       	movw	r22, r16
    1f24:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1f28:	c7 01       	movw	r24, r14
    1f2a:	b8 01       	movw	r22, r16
    1f2c:	ae 01       	movw	r20, r28
    1f2e:	47 5e       	subi	r20, 0xE7	; 231
    1f30:	5f 4f       	sbci	r21, 0xFF	; 255
    1f32:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <_fpadd_parts>
    1f36:	0e 94 2b 12 	call	0x2456	; 0x2456 <__pack_f>
    1f3a:	a0 96       	adiw	r28, 0x20	; 32
    1f3c:	e6 e0       	ldi	r30, 0x06	; 6
    1f3e:	0c 94 7f 62 	jmp	0xc4fe	; 0xc4fe <__epilogue_restores__+0x18>

00001f42 <__mulsf3>:
    1f42:	a0 e2       	ldi	r26, 0x20	; 32
    1f44:	b0 e0       	ldi	r27, 0x00	; 0
    1f46:	e7 ea       	ldi	r30, 0xA7	; 167
    1f48:	ff e0       	ldi	r31, 0x0F	; 15
    1f4a:	0c 94 57 62 	jmp	0xc4ae	; 0xc4ae <__prologue_saves__>
    1f4e:	69 83       	std	Y+1, r22	; 0x01
    1f50:	7a 83       	std	Y+2, r23	; 0x02
    1f52:	8b 83       	std	Y+3, r24	; 0x03
    1f54:	9c 83       	std	Y+4, r25	; 0x04
    1f56:	2d 83       	std	Y+5, r18	; 0x05
    1f58:	3e 83       	std	Y+6, r19	; 0x06
    1f5a:	4f 83       	std	Y+7, r20	; 0x07
    1f5c:	58 87       	std	Y+8, r21	; 0x08
    1f5e:	ce 01       	movw	r24, r28
    1f60:	01 96       	adiw	r24, 0x01	; 1
    1f62:	be 01       	movw	r22, r28
    1f64:	67 5f       	subi	r22, 0xF7	; 247
    1f66:	7f 4f       	sbci	r23, 0xFF	; 255
    1f68:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1f6c:	ce 01       	movw	r24, r28
    1f6e:	05 96       	adiw	r24, 0x05	; 5
    1f70:	be 01       	movw	r22, r28
    1f72:	6f 5e       	subi	r22, 0xEF	; 239
    1f74:	7f 4f       	sbci	r23, 0xFF	; 255
    1f76:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    1f7a:	99 85       	ldd	r25, Y+9	; 0x09
    1f7c:	92 30       	cpi	r25, 0x02	; 2
    1f7e:	88 f0       	brcs	.+34     	; 0x1fa2 <__mulsf3+0x60>
    1f80:	89 89       	ldd	r24, Y+17	; 0x11
    1f82:	82 30       	cpi	r24, 0x02	; 2
    1f84:	c8 f0       	brcs	.+50     	; 0x1fb8 <__mulsf3+0x76>
    1f86:	94 30       	cpi	r25, 0x04	; 4
    1f88:	19 f4       	brne	.+6      	; 0x1f90 <__mulsf3+0x4e>
    1f8a:	82 30       	cpi	r24, 0x02	; 2
    1f8c:	51 f4       	brne	.+20     	; 0x1fa2 <__mulsf3+0x60>
    1f8e:	04 c0       	rjmp	.+8      	; 0x1f98 <__mulsf3+0x56>
    1f90:	84 30       	cpi	r24, 0x04	; 4
    1f92:	29 f4       	brne	.+10     	; 0x1f9e <__mulsf3+0x5c>
    1f94:	92 30       	cpi	r25, 0x02	; 2
    1f96:	81 f4       	brne	.+32     	; 0x1fb8 <__mulsf3+0x76>
    1f98:	82 e7       	ldi	r24, 0x72	; 114
    1f9a:	92 e0       	ldi	r25, 0x02	; 2
    1f9c:	c6 c0       	rjmp	.+396    	; 0x212a <__mulsf3+0x1e8>
    1f9e:	92 30       	cpi	r25, 0x02	; 2
    1fa0:	49 f4       	brne	.+18     	; 0x1fb4 <__mulsf3+0x72>
    1fa2:	20 e0       	ldi	r18, 0x00	; 0
    1fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fa6:	8a 89       	ldd	r24, Y+18	; 0x12
    1fa8:	98 13       	cpse	r25, r24
    1faa:	21 e0       	ldi	r18, 0x01	; 1
    1fac:	2a 87       	std	Y+10, r18	; 0x0a
    1fae:	ce 01       	movw	r24, r28
    1fb0:	09 96       	adiw	r24, 0x09	; 9
    1fb2:	bb c0       	rjmp	.+374    	; 0x212a <__mulsf3+0x1e8>
    1fb4:	82 30       	cpi	r24, 0x02	; 2
    1fb6:	49 f4       	brne	.+18     	; 0x1fca <__mulsf3+0x88>
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fbc:	8a 89       	ldd	r24, Y+18	; 0x12
    1fbe:	98 13       	cpse	r25, r24
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	2a 8b       	std	Y+18, r18	; 0x12
    1fc4:	ce 01       	movw	r24, r28
    1fc6:	41 96       	adiw	r24, 0x11	; 17
    1fc8:	b0 c0       	rjmp	.+352    	; 0x212a <__mulsf3+0x1e8>
    1fca:	2d 84       	ldd	r2, Y+13	; 0x0d
    1fcc:	3e 84       	ldd	r3, Y+14	; 0x0e
    1fce:	4f 84       	ldd	r4, Y+15	; 0x0f
    1fd0:	58 88       	ldd	r5, Y+16	; 0x10
    1fd2:	6d 88       	ldd	r6, Y+21	; 0x15
    1fd4:	7e 88       	ldd	r7, Y+22	; 0x16
    1fd6:	8f 88       	ldd	r8, Y+23	; 0x17
    1fd8:	98 8c       	ldd	r9, Y+24	; 0x18
    1fda:	ee 24       	eor	r14, r14
    1fdc:	ff 24       	eor	r15, r15
    1fde:	87 01       	movw	r16, r14
    1fe0:	aa 24       	eor	r10, r10
    1fe2:	bb 24       	eor	r11, r11
    1fe4:	65 01       	movw	r12, r10
    1fe6:	40 e0       	ldi	r20, 0x00	; 0
    1fe8:	50 e0       	ldi	r21, 0x00	; 0
    1fea:	60 e0       	ldi	r22, 0x00	; 0
    1fec:	70 e0       	ldi	r23, 0x00	; 0
    1fee:	e0 e0       	ldi	r30, 0x00	; 0
    1ff0:	f0 e0       	ldi	r31, 0x00	; 0
    1ff2:	c1 01       	movw	r24, r2
    1ff4:	81 70       	andi	r24, 0x01	; 1
    1ff6:	90 70       	andi	r25, 0x00	; 0
    1ff8:	89 2b       	or	r24, r25
    1ffa:	e9 f0       	breq	.+58     	; 0x2036 <__mulsf3+0xf4>
    1ffc:	e6 0c       	add	r14, r6
    1ffe:	f7 1c       	adc	r15, r7
    2000:	08 1d       	adc	r16, r8
    2002:	19 1d       	adc	r17, r9
    2004:	9a 01       	movw	r18, r20
    2006:	ab 01       	movw	r20, r22
    2008:	2a 0d       	add	r18, r10
    200a:	3b 1d       	adc	r19, r11
    200c:	4c 1d       	adc	r20, r12
    200e:	5d 1d       	adc	r21, r13
    2010:	80 e0       	ldi	r24, 0x00	; 0
    2012:	90 e0       	ldi	r25, 0x00	; 0
    2014:	a0 e0       	ldi	r26, 0x00	; 0
    2016:	b0 e0       	ldi	r27, 0x00	; 0
    2018:	e6 14       	cp	r14, r6
    201a:	f7 04       	cpc	r15, r7
    201c:	08 05       	cpc	r16, r8
    201e:	19 05       	cpc	r17, r9
    2020:	20 f4       	brcc	.+8      	; 0x202a <__mulsf3+0xe8>
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	90 e0       	ldi	r25, 0x00	; 0
    2026:	a0 e0       	ldi	r26, 0x00	; 0
    2028:	b0 e0       	ldi	r27, 0x00	; 0
    202a:	ba 01       	movw	r22, r20
    202c:	a9 01       	movw	r20, r18
    202e:	48 0f       	add	r20, r24
    2030:	59 1f       	adc	r21, r25
    2032:	6a 1f       	adc	r22, r26
    2034:	7b 1f       	adc	r23, r27
    2036:	aa 0c       	add	r10, r10
    2038:	bb 1c       	adc	r11, r11
    203a:	cc 1c       	adc	r12, r12
    203c:	dd 1c       	adc	r13, r13
    203e:	97 fe       	sbrs	r9, 7
    2040:	08 c0       	rjmp	.+16     	; 0x2052 <__mulsf3+0x110>
    2042:	81 e0       	ldi	r24, 0x01	; 1
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	a0 e0       	ldi	r26, 0x00	; 0
    2048:	b0 e0       	ldi	r27, 0x00	; 0
    204a:	a8 2a       	or	r10, r24
    204c:	b9 2a       	or	r11, r25
    204e:	ca 2a       	or	r12, r26
    2050:	db 2a       	or	r13, r27
    2052:	31 96       	adiw	r30, 0x01	; 1
    2054:	e0 32       	cpi	r30, 0x20	; 32
    2056:	f1 05       	cpc	r31, r1
    2058:	49 f0       	breq	.+18     	; 0x206c <__mulsf3+0x12a>
    205a:	66 0c       	add	r6, r6
    205c:	77 1c       	adc	r7, r7
    205e:	88 1c       	adc	r8, r8
    2060:	99 1c       	adc	r9, r9
    2062:	56 94       	lsr	r5
    2064:	47 94       	ror	r4
    2066:	37 94       	ror	r3
    2068:	27 94       	ror	r2
    206a:	c3 cf       	rjmp	.-122    	; 0x1ff2 <__mulsf3+0xb0>
    206c:	fa 85       	ldd	r31, Y+10	; 0x0a
    206e:	ea 89       	ldd	r30, Y+18	; 0x12
    2070:	2b 89       	ldd	r18, Y+19	; 0x13
    2072:	3c 89       	ldd	r19, Y+20	; 0x14
    2074:	8b 85       	ldd	r24, Y+11	; 0x0b
    2076:	9c 85       	ldd	r25, Y+12	; 0x0c
    2078:	28 0f       	add	r18, r24
    207a:	39 1f       	adc	r19, r25
    207c:	2e 5f       	subi	r18, 0xFE	; 254
    207e:	3f 4f       	sbci	r19, 0xFF	; 255
    2080:	17 c0       	rjmp	.+46     	; 0x20b0 <__mulsf3+0x16e>
    2082:	ca 01       	movw	r24, r20
    2084:	81 70       	andi	r24, 0x01	; 1
    2086:	90 70       	andi	r25, 0x00	; 0
    2088:	89 2b       	or	r24, r25
    208a:	61 f0       	breq	.+24     	; 0x20a4 <__mulsf3+0x162>
    208c:	16 95       	lsr	r17
    208e:	07 95       	ror	r16
    2090:	f7 94       	ror	r15
    2092:	e7 94       	ror	r14
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	a0 e0       	ldi	r26, 0x00	; 0
    209a:	b0 e8       	ldi	r27, 0x80	; 128
    209c:	e8 2a       	or	r14, r24
    209e:	f9 2a       	or	r15, r25
    20a0:	0a 2b       	or	r16, r26
    20a2:	1b 2b       	or	r17, r27
    20a4:	76 95       	lsr	r23
    20a6:	67 95       	ror	r22
    20a8:	57 95       	ror	r21
    20aa:	47 95       	ror	r20
    20ac:	2f 5f       	subi	r18, 0xFF	; 255
    20ae:	3f 4f       	sbci	r19, 0xFF	; 255
    20b0:	77 fd       	sbrc	r23, 7
    20b2:	e7 cf       	rjmp	.-50     	; 0x2082 <__mulsf3+0x140>
    20b4:	0c c0       	rjmp	.+24     	; 0x20ce <__mulsf3+0x18c>
    20b6:	44 0f       	add	r20, r20
    20b8:	55 1f       	adc	r21, r21
    20ba:	66 1f       	adc	r22, r22
    20bc:	77 1f       	adc	r23, r23
    20be:	17 fd       	sbrc	r17, 7
    20c0:	41 60       	ori	r20, 0x01	; 1
    20c2:	ee 0c       	add	r14, r14
    20c4:	ff 1c       	adc	r15, r15
    20c6:	00 1f       	adc	r16, r16
    20c8:	11 1f       	adc	r17, r17
    20ca:	21 50       	subi	r18, 0x01	; 1
    20cc:	30 40       	sbci	r19, 0x00	; 0
    20ce:	40 30       	cpi	r20, 0x00	; 0
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	59 07       	cpc	r21, r25
    20d4:	90 e0       	ldi	r25, 0x00	; 0
    20d6:	69 07       	cpc	r22, r25
    20d8:	90 e4       	ldi	r25, 0x40	; 64
    20da:	79 07       	cpc	r23, r25
    20dc:	60 f3       	brcs	.-40     	; 0x20b6 <__mulsf3+0x174>
    20de:	2b 8f       	std	Y+27, r18	; 0x1b
    20e0:	3c 8f       	std	Y+28, r19	; 0x1c
    20e2:	db 01       	movw	r26, r22
    20e4:	ca 01       	movw	r24, r20
    20e6:	8f 77       	andi	r24, 0x7F	; 127
    20e8:	90 70       	andi	r25, 0x00	; 0
    20ea:	a0 70       	andi	r26, 0x00	; 0
    20ec:	b0 70       	andi	r27, 0x00	; 0
    20ee:	80 34       	cpi	r24, 0x40	; 64
    20f0:	91 05       	cpc	r25, r1
    20f2:	a1 05       	cpc	r26, r1
    20f4:	b1 05       	cpc	r27, r1
    20f6:	61 f4       	brne	.+24     	; 0x2110 <__mulsf3+0x1ce>
    20f8:	47 fd       	sbrc	r20, 7
    20fa:	0a c0       	rjmp	.+20     	; 0x2110 <__mulsf3+0x1ce>
    20fc:	e1 14       	cp	r14, r1
    20fe:	f1 04       	cpc	r15, r1
    2100:	01 05       	cpc	r16, r1
    2102:	11 05       	cpc	r17, r1
    2104:	29 f0       	breq	.+10     	; 0x2110 <__mulsf3+0x1ce>
    2106:	40 5c       	subi	r20, 0xC0	; 192
    2108:	5f 4f       	sbci	r21, 0xFF	; 255
    210a:	6f 4f       	sbci	r22, 0xFF	; 255
    210c:	7f 4f       	sbci	r23, 0xFF	; 255
    210e:	40 78       	andi	r20, 0x80	; 128
    2110:	1a 8e       	std	Y+26, r1	; 0x1a
    2112:	fe 17       	cp	r31, r30
    2114:	11 f0       	breq	.+4      	; 0x211a <__mulsf3+0x1d8>
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	8a 8f       	std	Y+26, r24	; 0x1a
    211a:	4d 8f       	std	Y+29, r20	; 0x1d
    211c:	5e 8f       	std	Y+30, r21	; 0x1e
    211e:	6f 8f       	std	Y+31, r22	; 0x1f
    2120:	78 a3       	std	Y+32, r23	; 0x20
    2122:	83 e0       	ldi	r24, 0x03	; 3
    2124:	89 8f       	std	Y+25, r24	; 0x19
    2126:	ce 01       	movw	r24, r28
    2128:	49 96       	adiw	r24, 0x19	; 25
    212a:	0e 94 2b 12 	call	0x2456	; 0x2456 <__pack_f>
    212e:	a0 96       	adiw	r28, 0x20	; 32
    2130:	e2 e1       	ldi	r30, 0x12	; 18
    2132:	0c 94 73 62 	jmp	0xc4e6	; 0xc4e6 <__epilogue_restores__>

00002136 <__divsf3>:
    2136:	a8 e1       	ldi	r26, 0x18	; 24
    2138:	b0 e0       	ldi	r27, 0x00	; 0
    213a:	e1 ea       	ldi	r30, 0xA1	; 161
    213c:	f0 e1       	ldi	r31, 0x10	; 16
    213e:	0c 94 5f 62 	jmp	0xc4be	; 0xc4be <__prologue_saves__+0x10>
    2142:	69 83       	std	Y+1, r22	; 0x01
    2144:	7a 83       	std	Y+2, r23	; 0x02
    2146:	8b 83       	std	Y+3, r24	; 0x03
    2148:	9c 83       	std	Y+4, r25	; 0x04
    214a:	2d 83       	std	Y+5, r18	; 0x05
    214c:	3e 83       	std	Y+6, r19	; 0x06
    214e:	4f 83       	std	Y+7, r20	; 0x07
    2150:	58 87       	std	Y+8, r21	; 0x08
    2152:	b9 e0       	ldi	r27, 0x09	; 9
    2154:	eb 2e       	mov	r14, r27
    2156:	f1 2c       	mov	r15, r1
    2158:	ec 0e       	add	r14, r28
    215a:	fd 1e       	adc	r15, r29
    215c:	ce 01       	movw	r24, r28
    215e:	01 96       	adiw	r24, 0x01	; 1
    2160:	b7 01       	movw	r22, r14
    2162:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    2166:	8e 01       	movw	r16, r28
    2168:	0f 5e       	subi	r16, 0xEF	; 239
    216a:	1f 4f       	sbci	r17, 0xFF	; 255
    216c:	ce 01       	movw	r24, r28
    216e:	05 96       	adiw	r24, 0x05	; 5
    2170:	b8 01       	movw	r22, r16
    2172:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    2176:	29 85       	ldd	r18, Y+9	; 0x09
    2178:	22 30       	cpi	r18, 0x02	; 2
    217a:	08 f4       	brcc	.+2      	; 0x217e <__divsf3+0x48>
    217c:	7e c0       	rjmp	.+252    	; 0x227a <__divsf3+0x144>
    217e:	39 89       	ldd	r19, Y+17	; 0x11
    2180:	32 30       	cpi	r19, 0x02	; 2
    2182:	10 f4       	brcc	.+4      	; 0x2188 <__divsf3+0x52>
    2184:	b8 01       	movw	r22, r16
    2186:	7c c0       	rjmp	.+248    	; 0x2280 <__divsf3+0x14a>
    2188:	8a 85       	ldd	r24, Y+10	; 0x0a
    218a:	9a 89       	ldd	r25, Y+18	; 0x12
    218c:	89 27       	eor	r24, r25
    218e:	8a 87       	std	Y+10, r24	; 0x0a
    2190:	24 30       	cpi	r18, 0x04	; 4
    2192:	11 f0       	breq	.+4      	; 0x2198 <__divsf3+0x62>
    2194:	22 30       	cpi	r18, 0x02	; 2
    2196:	31 f4       	brne	.+12     	; 0x21a4 <__divsf3+0x6e>
    2198:	23 17       	cp	r18, r19
    219a:	09 f0       	breq	.+2      	; 0x219e <__divsf3+0x68>
    219c:	6e c0       	rjmp	.+220    	; 0x227a <__divsf3+0x144>
    219e:	62 e7       	ldi	r22, 0x72	; 114
    21a0:	72 e0       	ldi	r23, 0x02	; 2
    21a2:	6e c0       	rjmp	.+220    	; 0x2280 <__divsf3+0x14a>
    21a4:	34 30       	cpi	r19, 0x04	; 4
    21a6:	39 f4       	brne	.+14     	; 0x21b6 <__divsf3+0x80>
    21a8:	1d 86       	std	Y+13, r1	; 0x0d
    21aa:	1e 86       	std	Y+14, r1	; 0x0e
    21ac:	1f 86       	std	Y+15, r1	; 0x0f
    21ae:	18 8a       	std	Y+16, r1	; 0x10
    21b0:	1c 86       	std	Y+12, r1	; 0x0c
    21b2:	1b 86       	std	Y+11, r1	; 0x0b
    21b4:	04 c0       	rjmp	.+8      	; 0x21be <__divsf3+0x88>
    21b6:	32 30       	cpi	r19, 0x02	; 2
    21b8:	21 f4       	brne	.+8      	; 0x21c2 <__divsf3+0x8c>
    21ba:	84 e0       	ldi	r24, 0x04	; 4
    21bc:	89 87       	std	Y+9, r24	; 0x09
    21be:	b7 01       	movw	r22, r14
    21c0:	5f c0       	rjmp	.+190    	; 0x2280 <__divsf3+0x14a>
    21c2:	2b 85       	ldd	r18, Y+11	; 0x0b
    21c4:	3c 85       	ldd	r19, Y+12	; 0x0c
    21c6:	8b 89       	ldd	r24, Y+19	; 0x13
    21c8:	9c 89       	ldd	r25, Y+20	; 0x14
    21ca:	28 1b       	sub	r18, r24
    21cc:	39 0b       	sbc	r19, r25
    21ce:	3c 87       	std	Y+12, r19	; 0x0c
    21d0:	2b 87       	std	Y+11, r18	; 0x0b
    21d2:	ed 84       	ldd	r14, Y+13	; 0x0d
    21d4:	fe 84       	ldd	r15, Y+14	; 0x0e
    21d6:	0f 85       	ldd	r16, Y+15	; 0x0f
    21d8:	18 89       	ldd	r17, Y+16	; 0x10
    21da:	ad 88       	ldd	r10, Y+21	; 0x15
    21dc:	be 88       	ldd	r11, Y+22	; 0x16
    21de:	cf 88       	ldd	r12, Y+23	; 0x17
    21e0:	d8 8c       	ldd	r13, Y+24	; 0x18
    21e2:	ea 14       	cp	r14, r10
    21e4:	fb 04       	cpc	r15, r11
    21e6:	0c 05       	cpc	r16, r12
    21e8:	1d 05       	cpc	r17, r13
    21ea:	40 f4       	brcc	.+16     	; 0x21fc <__divsf3+0xc6>
    21ec:	ee 0c       	add	r14, r14
    21ee:	ff 1c       	adc	r15, r15
    21f0:	00 1f       	adc	r16, r16
    21f2:	11 1f       	adc	r17, r17
    21f4:	21 50       	subi	r18, 0x01	; 1
    21f6:	30 40       	sbci	r19, 0x00	; 0
    21f8:	3c 87       	std	Y+12, r19	; 0x0c
    21fa:	2b 87       	std	Y+11, r18	; 0x0b
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	40 e0       	ldi	r20, 0x00	; 0
    2202:	50 e0       	ldi	r21, 0x00	; 0
    2204:	80 e0       	ldi	r24, 0x00	; 0
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	a0 e0       	ldi	r26, 0x00	; 0
    220a:	b0 e4       	ldi	r27, 0x40	; 64
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	ea 14       	cp	r14, r10
    2212:	fb 04       	cpc	r15, r11
    2214:	0c 05       	cpc	r16, r12
    2216:	1d 05       	cpc	r17, r13
    2218:	40 f0       	brcs	.+16     	; 0x222a <__divsf3+0xf4>
    221a:	28 2b       	or	r18, r24
    221c:	39 2b       	or	r19, r25
    221e:	4a 2b       	or	r20, r26
    2220:	5b 2b       	or	r21, r27
    2222:	ea 18       	sub	r14, r10
    2224:	fb 08       	sbc	r15, r11
    2226:	0c 09       	sbc	r16, r12
    2228:	1d 09       	sbc	r17, r13
    222a:	b6 95       	lsr	r27
    222c:	a7 95       	ror	r26
    222e:	97 95       	ror	r25
    2230:	87 95       	ror	r24
    2232:	ee 0c       	add	r14, r14
    2234:	ff 1c       	adc	r15, r15
    2236:	00 1f       	adc	r16, r16
    2238:	11 1f       	adc	r17, r17
    223a:	6f 5f       	subi	r22, 0xFF	; 255
    223c:	7f 4f       	sbci	r23, 0xFF	; 255
    223e:	6f 31       	cpi	r22, 0x1F	; 31
    2240:	71 05       	cpc	r23, r1
    2242:	31 f7       	brne	.-52     	; 0x2210 <__divsf3+0xda>
    2244:	da 01       	movw	r26, r20
    2246:	c9 01       	movw	r24, r18
    2248:	8f 77       	andi	r24, 0x7F	; 127
    224a:	90 70       	andi	r25, 0x00	; 0
    224c:	a0 70       	andi	r26, 0x00	; 0
    224e:	b0 70       	andi	r27, 0x00	; 0
    2250:	80 34       	cpi	r24, 0x40	; 64
    2252:	91 05       	cpc	r25, r1
    2254:	a1 05       	cpc	r26, r1
    2256:	b1 05       	cpc	r27, r1
    2258:	61 f4       	brne	.+24     	; 0x2272 <__divsf3+0x13c>
    225a:	27 fd       	sbrc	r18, 7
    225c:	0a c0       	rjmp	.+20     	; 0x2272 <__divsf3+0x13c>
    225e:	e1 14       	cp	r14, r1
    2260:	f1 04       	cpc	r15, r1
    2262:	01 05       	cpc	r16, r1
    2264:	11 05       	cpc	r17, r1
    2266:	29 f0       	breq	.+10     	; 0x2272 <__divsf3+0x13c>
    2268:	20 5c       	subi	r18, 0xC0	; 192
    226a:	3f 4f       	sbci	r19, 0xFF	; 255
    226c:	4f 4f       	sbci	r20, 0xFF	; 255
    226e:	5f 4f       	sbci	r21, 0xFF	; 255
    2270:	20 78       	andi	r18, 0x80	; 128
    2272:	2d 87       	std	Y+13, r18	; 0x0d
    2274:	3e 87       	std	Y+14, r19	; 0x0e
    2276:	4f 87       	std	Y+15, r20	; 0x0f
    2278:	58 8b       	std	Y+16, r21	; 0x10
    227a:	be 01       	movw	r22, r28
    227c:	67 5f       	subi	r22, 0xF7	; 247
    227e:	7f 4f       	sbci	r23, 0xFF	; 255
    2280:	cb 01       	movw	r24, r22
    2282:	0e 94 2b 12 	call	0x2456	; 0x2456 <__pack_f>
    2286:	68 96       	adiw	r28, 0x18	; 24
    2288:	ea e0       	ldi	r30, 0x0A	; 10
    228a:	0c 94 7b 62 	jmp	0xc4f6	; 0xc4f6 <__epilogue_restores__+0x10>

0000228e <__gtsf2>:
    228e:	a8 e1       	ldi	r26, 0x18	; 24
    2290:	b0 e0       	ldi	r27, 0x00	; 0
    2292:	ed e4       	ldi	r30, 0x4D	; 77
    2294:	f1 e1       	ldi	r31, 0x11	; 17
    2296:	0c 94 63 62 	jmp	0xc4c6	; 0xc4c6 <__prologue_saves__+0x18>
    229a:	69 83       	std	Y+1, r22	; 0x01
    229c:	7a 83       	std	Y+2, r23	; 0x02
    229e:	8b 83       	std	Y+3, r24	; 0x03
    22a0:	9c 83       	std	Y+4, r25	; 0x04
    22a2:	2d 83       	std	Y+5, r18	; 0x05
    22a4:	3e 83       	std	Y+6, r19	; 0x06
    22a6:	4f 83       	std	Y+7, r20	; 0x07
    22a8:	58 87       	std	Y+8, r21	; 0x08
    22aa:	89 e0       	ldi	r24, 0x09	; 9
    22ac:	e8 2e       	mov	r14, r24
    22ae:	f1 2c       	mov	r15, r1
    22b0:	ec 0e       	add	r14, r28
    22b2:	fd 1e       	adc	r15, r29
    22b4:	ce 01       	movw	r24, r28
    22b6:	01 96       	adiw	r24, 0x01	; 1
    22b8:	b7 01       	movw	r22, r14
    22ba:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    22be:	8e 01       	movw	r16, r28
    22c0:	0f 5e       	subi	r16, 0xEF	; 239
    22c2:	1f 4f       	sbci	r17, 0xFF	; 255
    22c4:	ce 01       	movw	r24, r28
    22c6:	05 96       	adiw	r24, 0x05	; 5
    22c8:	b8 01       	movw	r22, r16
    22ca:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    22ce:	89 85       	ldd	r24, Y+9	; 0x09
    22d0:	82 30       	cpi	r24, 0x02	; 2
    22d2:	40 f0       	brcs	.+16     	; 0x22e4 <__gtsf2+0x56>
    22d4:	89 89       	ldd	r24, Y+17	; 0x11
    22d6:	82 30       	cpi	r24, 0x02	; 2
    22d8:	28 f0       	brcs	.+10     	; 0x22e4 <__gtsf2+0x56>
    22da:	c7 01       	movw	r24, r14
    22dc:	b8 01       	movw	r22, r16
    22de:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__fpcmp_parts_f>
    22e2:	01 c0       	rjmp	.+2      	; 0x22e6 <__gtsf2+0x58>
    22e4:	8f ef       	ldi	r24, 0xFF	; 255
    22e6:	68 96       	adiw	r28, 0x18	; 24
    22e8:	e6 e0       	ldi	r30, 0x06	; 6
    22ea:	0c 94 7f 62 	jmp	0xc4fe	; 0xc4fe <__epilogue_restores__+0x18>

000022ee <__gesf2>:
    22ee:	a8 e1       	ldi	r26, 0x18	; 24
    22f0:	b0 e0       	ldi	r27, 0x00	; 0
    22f2:	ed e7       	ldi	r30, 0x7D	; 125
    22f4:	f1 e1       	ldi	r31, 0x11	; 17
    22f6:	0c 94 63 62 	jmp	0xc4c6	; 0xc4c6 <__prologue_saves__+0x18>
    22fa:	69 83       	std	Y+1, r22	; 0x01
    22fc:	7a 83       	std	Y+2, r23	; 0x02
    22fe:	8b 83       	std	Y+3, r24	; 0x03
    2300:	9c 83       	std	Y+4, r25	; 0x04
    2302:	2d 83       	std	Y+5, r18	; 0x05
    2304:	3e 83       	std	Y+6, r19	; 0x06
    2306:	4f 83       	std	Y+7, r20	; 0x07
    2308:	58 87       	std	Y+8, r21	; 0x08
    230a:	89 e0       	ldi	r24, 0x09	; 9
    230c:	e8 2e       	mov	r14, r24
    230e:	f1 2c       	mov	r15, r1
    2310:	ec 0e       	add	r14, r28
    2312:	fd 1e       	adc	r15, r29
    2314:	ce 01       	movw	r24, r28
    2316:	01 96       	adiw	r24, 0x01	; 1
    2318:	b7 01       	movw	r22, r14
    231a:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    231e:	8e 01       	movw	r16, r28
    2320:	0f 5e       	subi	r16, 0xEF	; 239
    2322:	1f 4f       	sbci	r17, 0xFF	; 255
    2324:	ce 01       	movw	r24, r28
    2326:	05 96       	adiw	r24, 0x05	; 5
    2328:	b8 01       	movw	r22, r16
    232a:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    232e:	89 85       	ldd	r24, Y+9	; 0x09
    2330:	82 30       	cpi	r24, 0x02	; 2
    2332:	40 f0       	brcs	.+16     	; 0x2344 <__gesf2+0x56>
    2334:	89 89       	ldd	r24, Y+17	; 0x11
    2336:	82 30       	cpi	r24, 0x02	; 2
    2338:	28 f0       	brcs	.+10     	; 0x2344 <__gesf2+0x56>
    233a:	c7 01       	movw	r24, r14
    233c:	b8 01       	movw	r22, r16
    233e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__fpcmp_parts_f>
    2342:	01 c0       	rjmp	.+2      	; 0x2346 <__gesf2+0x58>
    2344:	8f ef       	ldi	r24, 0xFF	; 255
    2346:	68 96       	adiw	r28, 0x18	; 24
    2348:	e6 e0       	ldi	r30, 0x06	; 6
    234a:	0c 94 7f 62 	jmp	0xc4fe	; 0xc4fe <__epilogue_restores__+0x18>

0000234e <__ltsf2>:
    234e:	a8 e1       	ldi	r26, 0x18	; 24
    2350:	b0 e0       	ldi	r27, 0x00	; 0
    2352:	ed ea       	ldi	r30, 0xAD	; 173
    2354:	f1 e1       	ldi	r31, 0x11	; 17
    2356:	0c 94 63 62 	jmp	0xc4c6	; 0xc4c6 <__prologue_saves__+0x18>
    235a:	69 83       	std	Y+1, r22	; 0x01
    235c:	7a 83       	std	Y+2, r23	; 0x02
    235e:	8b 83       	std	Y+3, r24	; 0x03
    2360:	9c 83       	std	Y+4, r25	; 0x04
    2362:	2d 83       	std	Y+5, r18	; 0x05
    2364:	3e 83       	std	Y+6, r19	; 0x06
    2366:	4f 83       	std	Y+7, r20	; 0x07
    2368:	58 87       	std	Y+8, r21	; 0x08
    236a:	89 e0       	ldi	r24, 0x09	; 9
    236c:	e8 2e       	mov	r14, r24
    236e:	f1 2c       	mov	r15, r1
    2370:	ec 0e       	add	r14, r28
    2372:	fd 1e       	adc	r15, r29
    2374:	ce 01       	movw	r24, r28
    2376:	01 96       	adiw	r24, 0x01	; 1
    2378:	b7 01       	movw	r22, r14
    237a:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    237e:	8e 01       	movw	r16, r28
    2380:	0f 5e       	subi	r16, 0xEF	; 239
    2382:	1f 4f       	sbci	r17, 0xFF	; 255
    2384:	ce 01       	movw	r24, r28
    2386:	05 96       	adiw	r24, 0x05	; 5
    2388:	b8 01       	movw	r22, r16
    238a:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    238e:	89 85       	ldd	r24, Y+9	; 0x09
    2390:	82 30       	cpi	r24, 0x02	; 2
    2392:	40 f0       	brcs	.+16     	; 0x23a4 <__ltsf2+0x56>
    2394:	89 89       	ldd	r24, Y+17	; 0x11
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	28 f0       	brcs	.+10     	; 0x23a4 <__ltsf2+0x56>
    239a:	c7 01       	movw	r24, r14
    239c:	b8 01       	movw	r22, r16
    239e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__fpcmp_parts_f>
    23a2:	01 c0       	rjmp	.+2      	; 0x23a6 <__ltsf2+0x58>
    23a4:	81 e0       	ldi	r24, 0x01	; 1
    23a6:	68 96       	adiw	r28, 0x18	; 24
    23a8:	e6 e0       	ldi	r30, 0x06	; 6
    23aa:	0c 94 7f 62 	jmp	0xc4fe	; 0xc4fe <__epilogue_restores__+0x18>

000023ae <__fixsfsi>:
    23ae:	ac e0       	ldi	r26, 0x0C	; 12
    23b0:	b0 e0       	ldi	r27, 0x00	; 0
    23b2:	ed ed       	ldi	r30, 0xDD	; 221
    23b4:	f1 e1       	ldi	r31, 0x11	; 17
    23b6:	0c 94 67 62 	jmp	0xc4ce	; 0xc4ce <__prologue_saves__+0x20>
    23ba:	69 83       	std	Y+1, r22	; 0x01
    23bc:	7a 83       	std	Y+2, r23	; 0x02
    23be:	8b 83       	std	Y+3, r24	; 0x03
    23c0:	9c 83       	std	Y+4, r25	; 0x04
    23c2:	ce 01       	movw	r24, r28
    23c4:	01 96       	adiw	r24, 0x01	; 1
    23c6:	be 01       	movw	r22, r28
    23c8:	6b 5f       	subi	r22, 0xFB	; 251
    23ca:	7f 4f       	sbci	r23, 0xFF	; 255
    23cc:	0e 94 00 13 	call	0x2600	; 0x2600 <__unpack_f>
    23d0:	8d 81       	ldd	r24, Y+5	; 0x05
    23d2:	82 30       	cpi	r24, 0x02	; 2
    23d4:	61 f1       	breq	.+88     	; 0x242e <__fixsfsi+0x80>
    23d6:	82 30       	cpi	r24, 0x02	; 2
    23d8:	50 f1       	brcs	.+84     	; 0x242e <__fixsfsi+0x80>
    23da:	84 30       	cpi	r24, 0x04	; 4
    23dc:	21 f4       	brne	.+8      	; 0x23e6 <__fixsfsi+0x38>
    23de:	8e 81       	ldd	r24, Y+6	; 0x06
    23e0:	88 23       	and	r24, r24
    23e2:	51 f1       	breq	.+84     	; 0x2438 <__fixsfsi+0x8a>
    23e4:	2e c0       	rjmp	.+92     	; 0x2442 <__fixsfsi+0x94>
    23e6:	2f 81       	ldd	r18, Y+7	; 0x07
    23e8:	38 85       	ldd	r19, Y+8	; 0x08
    23ea:	37 fd       	sbrc	r19, 7
    23ec:	20 c0       	rjmp	.+64     	; 0x242e <__fixsfsi+0x80>
    23ee:	6e 81       	ldd	r22, Y+6	; 0x06
    23f0:	2f 31       	cpi	r18, 0x1F	; 31
    23f2:	31 05       	cpc	r19, r1
    23f4:	1c f0       	brlt	.+6      	; 0x23fc <__fixsfsi+0x4e>
    23f6:	66 23       	and	r22, r22
    23f8:	f9 f0       	breq	.+62     	; 0x2438 <__fixsfsi+0x8a>
    23fa:	23 c0       	rjmp	.+70     	; 0x2442 <__fixsfsi+0x94>
    23fc:	8e e1       	ldi	r24, 0x1E	; 30
    23fe:	90 e0       	ldi	r25, 0x00	; 0
    2400:	82 1b       	sub	r24, r18
    2402:	93 0b       	sbc	r25, r19
    2404:	29 85       	ldd	r18, Y+9	; 0x09
    2406:	3a 85       	ldd	r19, Y+10	; 0x0a
    2408:	4b 85       	ldd	r20, Y+11	; 0x0b
    240a:	5c 85       	ldd	r21, Y+12	; 0x0c
    240c:	04 c0       	rjmp	.+8      	; 0x2416 <__fixsfsi+0x68>
    240e:	56 95       	lsr	r21
    2410:	47 95       	ror	r20
    2412:	37 95       	ror	r19
    2414:	27 95       	ror	r18
    2416:	8a 95       	dec	r24
    2418:	d2 f7       	brpl	.-12     	; 0x240e <__fixsfsi+0x60>
    241a:	66 23       	and	r22, r22
    241c:	b1 f0       	breq	.+44     	; 0x244a <__fixsfsi+0x9c>
    241e:	50 95       	com	r21
    2420:	40 95       	com	r20
    2422:	30 95       	com	r19
    2424:	21 95       	neg	r18
    2426:	3f 4f       	sbci	r19, 0xFF	; 255
    2428:	4f 4f       	sbci	r20, 0xFF	; 255
    242a:	5f 4f       	sbci	r21, 0xFF	; 255
    242c:	0e c0       	rjmp	.+28     	; 0x244a <__fixsfsi+0x9c>
    242e:	20 e0       	ldi	r18, 0x00	; 0
    2430:	30 e0       	ldi	r19, 0x00	; 0
    2432:	40 e0       	ldi	r20, 0x00	; 0
    2434:	50 e0       	ldi	r21, 0x00	; 0
    2436:	09 c0       	rjmp	.+18     	; 0x244a <__fixsfsi+0x9c>
    2438:	2f ef       	ldi	r18, 0xFF	; 255
    243a:	3f ef       	ldi	r19, 0xFF	; 255
    243c:	4f ef       	ldi	r20, 0xFF	; 255
    243e:	5f e7       	ldi	r21, 0x7F	; 127
    2440:	04 c0       	rjmp	.+8      	; 0x244a <__fixsfsi+0x9c>
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	40 e0       	ldi	r20, 0x00	; 0
    2448:	50 e8       	ldi	r21, 0x80	; 128
    244a:	b9 01       	movw	r22, r18
    244c:	ca 01       	movw	r24, r20
    244e:	2c 96       	adiw	r28, 0x0c	; 12
    2450:	e2 e0       	ldi	r30, 0x02	; 2
    2452:	0c 94 83 62 	jmp	0xc506	; 0xc506 <__epilogue_restores__+0x20>

00002456 <__pack_f>:
    2456:	df 92       	push	r13
    2458:	ef 92       	push	r14
    245a:	ff 92       	push	r15
    245c:	0f 93       	push	r16
    245e:	1f 93       	push	r17
    2460:	fc 01       	movw	r30, r24
    2462:	e4 80       	ldd	r14, Z+4	; 0x04
    2464:	f5 80       	ldd	r15, Z+5	; 0x05
    2466:	06 81       	ldd	r16, Z+6	; 0x06
    2468:	17 81       	ldd	r17, Z+7	; 0x07
    246a:	d1 80       	ldd	r13, Z+1	; 0x01
    246c:	80 81       	ld	r24, Z
    246e:	82 30       	cpi	r24, 0x02	; 2
    2470:	48 f4       	brcc	.+18     	; 0x2484 <__pack_f+0x2e>
    2472:	80 e0       	ldi	r24, 0x00	; 0
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	a0 e1       	ldi	r26, 0x10	; 16
    2478:	b0 e0       	ldi	r27, 0x00	; 0
    247a:	e8 2a       	or	r14, r24
    247c:	f9 2a       	or	r15, r25
    247e:	0a 2b       	or	r16, r26
    2480:	1b 2b       	or	r17, r27
    2482:	a5 c0       	rjmp	.+330    	; 0x25ce <__pack_f+0x178>
    2484:	84 30       	cpi	r24, 0x04	; 4
    2486:	09 f4       	brne	.+2      	; 0x248a <__pack_f+0x34>
    2488:	9f c0       	rjmp	.+318    	; 0x25c8 <__pack_f+0x172>
    248a:	82 30       	cpi	r24, 0x02	; 2
    248c:	21 f4       	brne	.+8      	; 0x2496 <__pack_f+0x40>
    248e:	ee 24       	eor	r14, r14
    2490:	ff 24       	eor	r15, r15
    2492:	87 01       	movw	r16, r14
    2494:	05 c0       	rjmp	.+10     	; 0x24a0 <__pack_f+0x4a>
    2496:	e1 14       	cp	r14, r1
    2498:	f1 04       	cpc	r15, r1
    249a:	01 05       	cpc	r16, r1
    249c:	11 05       	cpc	r17, r1
    249e:	19 f4       	brne	.+6      	; 0x24a6 <__pack_f+0x50>
    24a0:	e0 e0       	ldi	r30, 0x00	; 0
    24a2:	f0 e0       	ldi	r31, 0x00	; 0
    24a4:	96 c0       	rjmp	.+300    	; 0x25d2 <__pack_f+0x17c>
    24a6:	62 81       	ldd	r22, Z+2	; 0x02
    24a8:	73 81       	ldd	r23, Z+3	; 0x03
    24aa:	9f ef       	ldi	r25, 0xFF	; 255
    24ac:	62 38       	cpi	r22, 0x82	; 130
    24ae:	79 07       	cpc	r23, r25
    24b0:	0c f0       	brlt	.+2      	; 0x24b4 <__pack_f+0x5e>
    24b2:	5b c0       	rjmp	.+182    	; 0x256a <__pack_f+0x114>
    24b4:	22 e8       	ldi	r18, 0x82	; 130
    24b6:	3f ef       	ldi	r19, 0xFF	; 255
    24b8:	26 1b       	sub	r18, r22
    24ba:	37 0b       	sbc	r19, r23
    24bc:	2a 31       	cpi	r18, 0x1A	; 26
    24be:	31 05       	cpc	r19, r1
    24c0:	2c f0       	brlt	.+10     	; 0x24cc <__pack_f+0x76>
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	40 e0       	ldi	r20, 0x00	; 0
    24c8:	50 e0       	ldi	r21, 0x00	; 0
    24ca:	2a c0       	rjmp	.+84     	; 0x2520 <__pack_f+0xca>
    24cc:	b8 01       	movw	r22, r16
    24ce:	a7 01       	movw	r20, r14
    24d0:	02 2e       	mov	r0, r18
    24d2:	04 c0       	rjmp	.+8      	; 0x24dc <__pack_f+0x86>
    24d4:	76 95       	lsr	r23
    24d6:	67 95       	ror	r22
    24d8:	57 95       	ror	r21
    24da:	47 95       	ror	r20
    24dc:	0a 94       	dec	r0
    24de:	d2 f7       	brpl	.-12     	; 0x24d4 <__pack_f+0x7e>
    24e0:	81 e0       	ldi	r24, 0x01	; 1
    24e2:	90 e0       	ldi	r25, 0x00	; 0
    24e4:	a0 e0       	ldi	r26, 0x00	; 0
    24e6:	b0 e0       	ldi	r27, 0x00	; 0
    24e8:	04 c0       	rjmp	.+8      	; 0x24f2 <__pack_f+0x9c>
    24ea:	88 0f       	add	r24, r24
    24ec:	99 1f       	adc	r25, r25
    24ee:	aa 1f       	adc	r26, r26
    24f0:	bb 1f       	adc	r27, r27
    24f2:	2a 95       	dec	r18
    24f4:	d2 f7       	brpl	.-12     	; 0x24ea <__pack_f+0x94>
    24f6:	01 97       	sbiw	r24, 0x01	; 1
    24f8:	a1 09       	sbc	r26, r1
    24fa:	b1 09       	sbc	r27, r1
    24fc:	8e 21       	and	r24, r14
    24fe:	9f 21       	and	r25, r15
    2500:	a0 23       	and	r26, r16
    2502:	b1 23       	and	r27, r17
    2504:	00 97       	sbiw	r24, 0x00	; 0
    2506:	a1 05       	cpc	r26, r1
    2508:	b1 05       	cpc	r27, r1
    250a:	21 f0       	breq	.+8      	; 0x2514 <__pack_f+0xbe>
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	a0 e0       	ldi	r26, 0x00	; 0
    2512:	b0 e0       	ldi	r27, 0x00	; 0
    2514:	9a 01       	movw	r18, r20
    2516:	ab 01       	movw	r20, r22
    2518:	28 2b       	or	r18, r24
    251a:	39 2b       	or	r19, r25
    251c:	4a 2b       	or	r20, r26
    251e:	5b 2b       	or	r21, r27
    2520:	da 01       	movw	r26, r20
    2522:	c9 01       	movw	r24, r18
    2524:	8f 77       	andi	r24, 0x7F	; 127
    2526:	90 70       	andi	r25, 0x00	; 0
    2528:	a0 70       	andi	r26, 0x00	; 0
    252a:	b0 70       	andi	r27, 0x00	; 0
    252c:	80 34       	cpi	r24, 0x40	; 64
    252e:	91 05       	cpc	r25, r1
    2530:	a1 05       	cpc	r26, r1
    2532:	b1 05       	cpc	r27, r1
    2534:	39 f4       	brne	.+14     	; 0x2544 <__pack_f+0xee>
    2536:	27 ff       	sbrs	r18, 7
    2538:	09 c0       	rjmp	.+18     	; 0x254c <__pack_f+0xf6>
    253a:	20 5c       	subi	r18, 0xC0	; 192
    253c:	3f 4f       	sbci	r19, 0xFF	; 255
    253e:	4f 4f       	sbci	r20, 0xFF	; 255
    2540:	5f 4f       	sbci	r21, 0xFF	; 255
    2542:	04 c0       	rjmp	.+8      	; 0x254c <__pack_f+0xf6>
    2544:	21 5c       	subi	r18, 0xC1	; 193
    2546:	3f 4f       	sbci	r19, 0xFF	; 255
    2548:	4f 4f       	sbci	r20, 0xFF	; 255
    254a:	5f 4f       	sbci	r21, 0xFF	; 255
    254c:	e0 e0       	ldi	r30, 0x00	; 0
    254e:	f0 e0       	ldi	r31, 0x00	; 0
    2550:	20 30       	cpi	r18, 0x00	; 0
    2552:	a0 e0       	ldi	r26, 0x00	; 0
    2554:	3a 07       	cpc	r19, r26
    2556:	a0 e0       	ldi	r26, 0x00	; 0
    2558:	4a 07       	cpc	r20, r26
    255a:	a0 e4       	ldi	r26, 0x40	; 64
    255c:	5a 07       	cpc	r21, r26
    255e:	10 f0       	brcs	.+4      	; 0x2564 <__pack_f+0x10e>
    2560:	e1 e0       	ldi	r30, 0x01	; 1
    2562:	f0 e0       	ldi	r31, 0x00	; 0
    2564:	79 01       	movw	r14, r18
    2566:	8a 01       	movw	r16, r20
    2568:	27 c0       	rjmp	.+78     	; 0x25b8 <__pack_f+0x162>
    256a:	60 38       	cpi	r22, 0x80	; 128
    256c:	71 05       	cpc	r23, r1
    256e:	64 f5       	brge	.+88     	; 0x25c8 <__pack_f+0x172>
    2570:	fb 01       	movw	r30, r22
    2572:	e1 58       	subi	r30, 0x81	; 129
    2574:	ff 4f       	sbci	r31, 0xFF	; 255
    2576:	d8 01       	movw	r26, r16
    2578:	c7 01       	movw	r24, r14
    257a:	8f 77       	andi	r24, 0x7F	; 127
    257c:	90 70       	andi	r25, 0x00	; 0
    257e:	a0 70       	andi	r26, 0x00	; 0
    2580:	b0 70       	andi	r27, 0x00	; 0
    2582:	80 34       	cpi	r24, 0x40	; 64
    2584:	91 05       	cpc	r25, r1
    2586:	a1 05       	cpc	r26, r1
    2588:	b1 05       	cpc	r27, r1
    258a:	39 f4       	brne	.+14     	; 0x259a <__pack_f+0x144>
    258c:	e7 fe       	sbrs	r14, 7
    258e:	0d c0       	rjmp	.+26     	; 0x25aa <__pack_f+0x154>
    2590:	80 e4       	ldi	r24, 0x40	; 64
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	a0 e0       	ldi	r26, 0x00	; 0
    2596:	b0 e0       	ldi	r27, 0x00	; 0
    2598:	04 c0       	rjmp	.+8      	; 0x25a2 <__pack_f+0x14c>
    259a:	8f e3       	ldi	r24, 0x3F	; 63
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	a0 e0       	ldi	r26, 0x00	; 0
    25a0:	b0 e0       	ldi	r27, 0x00	; 0
    25a2:	e8 0e       	add	r14, r24
    25a4:	f9 1e       	adc	r15, r25
    25a6:	0a 1f       	adc	r16, r26
    25a8:	1b 1f       	adc	r17, r27
    25aa:	17 ff       	sbrs	r17, 7
    25ac:	05 c0       	rjmp	.+10     	; 0x25b8 <__pack_f+0x162>
    25ae:	16 95       	lsr	r17
    25b0:	07 95       	ror	r16
    25b2:	f7 94       	ror	r15
    25b4:	e7 94       	ror	r14
    25b6:	31 96       	adiw	r30, 0x01	; 1
    25b8:	87 e0       	ldi	r24, 0x07	; 7
    25ba:	16 95       	lsr	r17
    25bc:	07 95       	ror	r16
    25be:	f7 94       	ror	r15
    25c0:	e7 94       	ror	r14
    25c2:	8a 95       	dec	r24
    25c4:	d1 f7       	brne	.-12     	; 0x25ba <__pack_f+0x164>
    25c6:	05 c0       	rjmp	.+10     	; 0x25d2 <__pack_f+0x17c>
    25c8:	ee 24       	eor	r14, r14
    25ca:	ff 24       	eor	r15, r15
    25cc:	87 01       	movw	r16, r14
    25ce:	ef ef       	ldi	r30, 0xFF	; 255
    25d0:	f0 e0       	ldi	r31, 0x00	; 0
    25d2:	6e 2f       	mov	r22, r30
    25d4:	67 95       	ror	r22
    25d6:	66 27       	eor	r22, r22
    25d8:	67 95       	ror	r22
    25da:	90 2f       	mov	r25, r16
    25dc:	9f 77       	andi	r25, 0x7F	; 127
    25de:	d7 94       	ror	r13
    25e0:	dd 24       	eor	r13, r13
    25e2:	d7 94       	ror	r13
    25e4:	8e 2f       	mov	r24, r30
    25e6:	86 95       	lsr	r24
    25e8:	49 2f       	mov	r20, r25
    25ea:	46 2b       	or	r20, r22
    25ec:	58 2f       	mov	r21, r24
    25ee:	5d 29       	or	r21, r13
    25f0:	b7 01       	movw	r22, r14
    25f2:	ca 01       	movw	r24, r20
    25f4:	1f 91       	pop	r17
    25f6:	0f 91       	pop	r16
    25f8:	ff 90       	pop	r15
    25fa:	ef 90       	pop	r14
    25fc:	df 90       	pop	r13
    25fe:	08 95       	ret

00002600 <__unpack_f>:
    2600:	fc 01       	movw	r30, r24
    2602:	db 01       	movw	r26, r22
    2604:	40 81       	ld	r20, Z
    2606:	51 81       	ldd	r21, Z+1	; 0x01
    2608:	22 81       	ldd	r18, Z+2	; 0x02
    260a:	62 2f       	mov	r22, r18
    260c:	6f 77       	andi	r22, 0x7F	; 127
    260e:	70 e0       	ldi	r23, 0x00	; 0
    2610:	22 1f       	adc	r18, r18
    2612:	22 27       	eor	r18, r18
    2614:	22 1f       	adc	r18, r18
    2616:	93 81       	ldd	r25, Z+3	; 0x03
    2618:	89 2f       	mov	r24, r25
    261a:	88 0f       	add	r24, r24
    261c:	82 2b       	or	r24, r18
    261e:	28 2f       	mov	r18, r24
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	99 1f       	adc	r25, r25
    2624:	99 27       	eor	r25, r25
    2626:	99 1f       	adc	r25, r25
    2628:	11 96       	adiw	r26, 0x01	; 1
    262a:	9c 93       	st	X, r25
    262c:	11 97       	sbiw	r26, 0x01	; 1
    262e:	21 15       	cp	r18, r1
    2630:	31 05       	cpc	r19, r1
    2632:	a9 f5       	brne	.+106    	; 0x269e <__unpack_f+0x9e>
    2634:	41 15       	cp	r20, r1
    2636:	51 05       	cpc	r21, r1
    2638:	61 05       	cpc	r22, r1
    263a:	71 05       	cpc	r23, r1
    263c:	11 f4       	brne	.+4      	; 0x2642 <__unpack_f+0x42>
    263e:	82 e0       	ldi	r24, 0x02	; 2
    2640:	37 c0       	rjmp	.+110    	; 0x26b0 <__unpack_f+0xb0>
    2642:	82 e8       	ldi	r24, 0x82	; 130
    2644:	9f ef       	ldi	r25, 0xFF	; 255
    2646:	13 96       	adiw	r26, 0x03	; 3
    2648:	9c 93       	st	X, r25
    264a:	8e 93       	st	-X, r24
    264c:	12 97       	sbiw	r26, 0x02	; 2
    264e:	9a 01       	movw	r18, r20
    2650:	ab 01       	movw	r20, r22
    2652:	67 e0       	ldi	r22, 0x07	; 7
    2654:	22 0f       	add	r18, r18
    2656:	33 1f       	adc	r19, r19
    2658:	44 1f       	adc	r20, r20
    265a:	55 1f       	adc	r21, r21
    265c:	6a 95       	dec	r22
    265e:	d1 f7       	brne	.-12     	; 0x2654 <__unpack_f+0x54>
    2660:	83 e0       	ldi	r24, 0x03	; 3
    2662:	8c 93       	st	X, r24
    2664:	0d c0       	rjmp	.+26     	; 0x2680 <__unpack_f+0x80>
    2666:	22 0f       	add	r18, r18
    2668:	33 1f       	adc	r19, r19
    266a:	44 1f       	adc	r20, r20
    266c:	55 1f       	adc	r21, r21
    266e:	12 96       	adiw	r26, 0x02	; 2
    2670:	8d 91       	ld	r24, X+
    2672:	9c 91       	ld	r25, X
    2674:	13 97       	sbiw	r26, 0x03	; 3
    2676:	01 97       	sbiw	r24, 0x01	; 1
    2678:	13 96       	adiw	r26, 0x03	; 3
    267a:	9c 93       	st	X, r25
    267c:	8e 93       	st	-X, r24
    267e:	12 97       	sbiw	r26, 0x02	; 2
    2680:	20 30       	cpi	r18, 0x00	; 0
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	38 07       	cpc	r19, r24
    2686:	80 e0       	ldi	r24, 0x00	; 0
    2688:	48 07       	cpc	r20, r24
    268a:	80 e4       	ldi	r24, 0x40	; 64
    268c:	58 07       	cpc	r21, r24
    268e:	58 f3       	brcs	.-42     	; 0x2666 <__unpack_f+0x66>
    2690:	14 96       	adiw	r26, 0x04	; 4
    2692:	2d 93       	st	X+, r18
    2694:	3d 93       	st	X+, r19
    2696:	4d 93       	st	X+, r20
    2698:	5c 93       	st	X, r21
    269a:	17 97       	sbiw	r26, 0x07	; 7
    269c:	08 95       	ret
    269e:	2f 3f       	cpi	r18, 0xFF	; 255
    26a0:	31 05       	cpc	r19, r1
    26a2:	79 f4       	brne	.+30     	; 0x26c2 <__unpack_f+0xc2>
    26a4:	41 15       	cp	r20, r1
    26a6:	51 05       	cpc	r21, r1
    26a8:	61 05       	cpc	r22, r1
    26aa:	71 05       	cpc	r23, r1
    26ac:	19 f4       	brne	.+6      	; 0x26b4 <__unpack_f+0xb4>
    26ae:	84 e0       	ldi	r24, 0x04	; 4
    26b0:	8c 93       	st	X, r24
    26b2:	08 95       	ret
    26b4:	64 ff       	sbrs	r22, 4
    26b6:	03 c0       	rjmp	.+6      	; 0x26be <__unpack_f+0xbe>
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	8c 93       	st	X, r24
    26bc:	12 c0       	rjmp	.+36     	; 0x26e2 <__unpack_f+0xe2>
    26be:	1c 92       	st	X, r1
    26c0:	10 c0       	rjmp	.+32     	; 0x26e2 <__unpack_f+0xe2>
    26c2:	2f 57       	subi	r18, 0x7F	; 127
    26c4:	30 40       	sbci	r19, 0x00	; 0
    26c6:	13 96       	adiw	r26, 0x03	; 3
    26c8:	3c 93       	st	X, r19
    26ca:	2e 93       	st	-X, r18
    26cc:	12 97       	sbiw	r26, 0x02	; 2
    26ce:	83 e0       	ldi	r24, 0x03	; 3
    26d0:	8c 93       	st	X, r24
    26d2:	87 e0       	ldi	r24, 0x07	; 7
    26d4:	44 0f       	add	r20, r20
    26d6:	55 1f       	adc	r21, r21
    26d8:	66 1f       	adc	r22, r22
    26da:	77 1f       	adc	r23, r23
    26dc:	8a 95       	dec	r24
    26de:	d1 f7       	brne	.-12     	; 0x26d4 <__unpack_f+0xd4>
    26e0:	70 64       	ori	r23, 0x40	; 64
    26e2:	14 96       	adiw	r26, 0x04	; 4
    26e4:	4d 93       	st	X+, r20
    26e6:	5d 93       	st	X+, r21
    26e8:	6d 93       	st	X+, r22
    26ea:	7c 93       	st	X, r23
    26ec:	17 97       	sbiw	r26, 0x07	; 7
    26ee:	08 95       	ret

000026f0 <__fpcmp_parts_f>:
    26f0:	1f 93       	push	r17
    26f2:	dc 01       	movw	r26, r24
    26f4:	fb 01       	movw	r30, r22
    26f6:	9c 91       	ld	r25, X
    26f8:	92 30       	cpi	r25, 0x02	; 2
    26fa:	08 f4       	brcc	.+2      	; 0x26fe <__fpcmp_parts_f+0xe>
    26fc:	47 c0       	rjmp	.+142    	; 0x278c <__fpcmp_parts_f+0x9c>
    26fe:	80 81       	ld	r24, Z
    2700:	82 30       	cpi	r24, 0x02	; 2
    2702:	08 f4       	brcc	.+2      	; 0x2706 <__fpcmp_parts_f+0x16>
    2704:	43 c0       	rjmp	.+134    	; 0x278c <__fpcmp_parts_f+0x9c>
    2706:	94 30       	cpi	r25, 0x04	; 4
    2708:	51 f4       	brne	.+20     	; 0x271e <__fpcmp_parts_f+0x2e>
    270a:	11 96       	adiw	r26, 0x01	; 1
    270c:	1c 91       	ld	r17, X
    270e:	84 30       	cpi	r24, 0x04	; 4
    2710:	99 f5       	brne	.+102    	; 0x2778 <__fpcmp_parts_f+0x88>
    2712:	81 81       	ldd	r24, Z+1	; 0x01
    2714:	68 2f       	mov	r22, r24
    2716:	70 e0       	ldi	r23, 0x00	; 0
    2718:	61 1b       	sub	r22, r17
    271a:	71 09       	sbc	r23, r1
    271c:	3f c0       	rjmp	.+126    	; 0x279c <__fpcmp_parts_f+0xac>
    271e:	84 30       	cpi	r24, 0x04	; 4
    2720:	21 f0       	breq	.+8      	; 0x272a <__fpcmp_parts_f+0x3a>
    2722:	92 30       	cpi	r25, 0x02	; 2
    2724:	31 f4       	brne	.+12     	; 0x2732 <__fpcmp_parts_f+0x42>
    2726:	82 30       	cpi	r24, 0x02	; 2
    2728:	b9 f1       	breq	.+110    	; 0x2798 <__fpcmp_parts_f+0xa8>
    272a:	81 81       	ldd	r24, Z+1	; 0x01
    272c:	88 23       	and	r24, r24
    272e:	89 f1       	breq	.+98     	; 0x2792 <__fpcmp_parts_f+0xa2>
    2730:	2d c0       	rjmp	.+90     	; 0x278c <__fpcmp_parts_f+0x9c>
    2732:	11 96       	adiw	r26, 0x01	; 1
    2734:	1c 91       	ld	r17, X
    2736:	11 97       	sbiw	r26, 0x01	; 1
    2738:	82 30       	cpi	r24, 0x02	; 2
    273a:	f1 f0       	breq	.+60     	; 0x2778 <__fpcmp_parts_f+0x88>
    273c:	81 81       	ldd	r24, Z+1	; 0x01
    273e:	18 17       	cp	r17, r24
    2740:	d9 f4       	brne	.+54     	; 0x2778 <__fpcmp_parts_f+0x88>
    2742:	12 96       	adiw	r26, 0x02	; 2
    2744:	2d 91       	ld	r18, X+
    2746:	3c 91       	ld	r19, X
    2748:	13 97       	sbiw	r26, 0x03	; 3
    274a:	82 81       	ldd	r24, Z+2	; 0x02
    274c:	93 81       	ldd	r25, Z+3	; 0x03
    274e:	82 17       	cp	r24, r18
    2750:	93 07       	cpc	r25, r19
    2752:	94 f0       	brlt	.+36     	; 0x2778 <__fpcmp_parts_f+0x88>
    2754:	28 17       	cp	r18, r24
    2756:	39 07       	cpc	r19, r25
    2758:	bc f0       	brlt	.+46     	; 0x2788 <__fpcmp_parts_f+0x98>
    275a:	14 96       	adiw	r26, 0x04	; 4
    275c:	8d 91       	ld	r24, X+
    275e:	9d 91       	ld	r25, X+
    2760:	0d 90       	ld	r0, X+
    2762:	bc 91       	ld	r27, X
    2764:	a0 2d       	mov	r26, r0
    2766:	24 81       	ldd	r18, Z+4	; 0x04
    2768:	35 81       	ldd	r19, Z+5	; 0x05
    276a:	46 81       	ldd	r20, Z+6	; 0x06
    276c:	57 81       	ldd	r21, Z+7	; 0x07
    276e:	28 17       	cp	r18, r24
    2770:	39 07       	cpc	r19, r25
    2772:	4a 07       	cpc	r20, r26
    2774:	5b 07       	cpc	r21, r27
    2776:	18 f4       	brcc	.+6      	; 0x277e <__fpcmp_parts_f+0x8e>
    2778:	11 23       	and	r17, r17
    277a:	41 f0       	breq	.+16     	; 0x278c <__fpcmp_parts_f+0x9c>
    277c:	0a c0       	rjmp	.+20     	; 0x2792 <__fpcmp_parts_f+0xa2>
    277e:	82 17       	cp	r24, r18
    2780:	93 07       	cpc	r25, r19
    2782:	a4 07       	cpc	r26, r20
    2784:	b5 07       	cpc	r27, r21
    2786:	40 f4       	brcc	.+16     	; 0x2798 <__fpcmp_parts_f+0xa8>
    2788:	11 23       	and	r17, r17
    278a:	19 f0       	breq	.+6      	; 0x2792 <__fpcmp_parts_f+0xa2>
    278c:	61 e0       	ldi	r22, 0x01	; 1
    278e:	70 e0       	ldi	r23, 0x00	; 0
    2790:	05 c0       	rjmp	.+10     	; 0x279c <__fpcmp_parts_f+0xac>
    2792:	6f ef       	ldi	r22, 0xFF	; 255
    2794:	7f ef       	ldi	r23, 0xFF	; 255
    2796:	02 c0       	rjmp	.+4      	; 0x279c <__fpcmp_parts_f+0xac>
    2798:	60 e0       	ldi	r22, 0x00	; 0
    279a:	70 e0       	ldi	r23, 0x00	; 0
    279c:	cb 01       	movw	r24, r22
    279e:	1f 91       	pop	r17
    27a0:	08 95       	ret

000027a2 <USART_Receive>:
#include "Uart.h"



uint8 USART_Receive( void )
{
    27a2:	df 93       	push	r29
    27a4:	cf 93       	push	r28
    27a6:	0f 92       	push	r0
    27a8:	cd b7       	in	r28, 0x3d	; 61
    27aa:	de b7       	in	r29, 0x3e	; 62
	uint8 res;
	
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC)) );
    27ac:	eb e2       	ldi	r30, 0x2B	; 43
    27ae:	f0 e0       	ldi	r31, 0x00	; 0
    27b0:	80 81       	ld	r24, Z
    27b2:	88 23       	and	r24, r24
    27b4:	dc f7       	brge	.-10     	; 0x27ac <USART_Receive+0xa>
	
	res=UDR0;
    27b6:	ec e2       	ldi	r30, 0x2C	; 44
    27b8:	f0 e0       	ldi	r31, 0x00	; 0
    27ba:	80 81       	ld	r24, Z
    27bc:	89 83       	std	Y+1, r24	; 0x01
	//clear RXC flag
	SET_BIT(UCSR0A,RXC);
    27be:	ab e2       	ldi	r26, 0x2B	; 43
    27c0:	b0 e0       	ldi	r27, 0x00	; 0
    27c2:	eb e2       	ldi	r30, 0x2B	; 43
    27c4:	f0 e0       	ldi	r31, 0x00	; 0
    27c6:	80 81       	ld	r24, Z
    27c8:	80 68       	ori	r24, 0x80	; 128
    27ca:	8c 93       	st	X, r24
	
	/* Get and return received data from buffer */
	return res;
    27cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    27ce:	0f 90       	pop	r0
    27d0:	cf 91       	pop	r28
    27d2:	df 91       	pop	r29
    27d4:	08 95       	ret

000027d6 <USART_Transmit>:



void USART_Transmit( uint8 data )
{
    27d6:	df 93       	push	r29
    27d8:	cf 93       	push	r28
    27da:	0f 92       	push	r0
    27dc:	cd b7       	in	r28, 0x3d	; 61
    27de:	de b7       	in	r29, 0x3e	; 62
    27e0:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE)) );
    27e2:	eb e2       	ldi	r30, 0x2B	; 43
    27e4:	f0 e0       	ldi	r31, 0x00	; 0
    27e6:	80 81       	ld	r24, Z
    27e8:	88 2f       	mov	r24, r24
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	80 72       	andi	r24, 0x20	; 32
    27ee:	90 70       	andi	r25, 0x00	; 0
    27f0:	00 97       	sbiw	r24, 0x00	; 0
    27f2:	b9 f3       	breq	.-18     	; 0x27e2 <USART_Transmit+0xc>
	/* Put data into buffer, sends the data */
	UDR0 = data;
    27f4:	ec e2       	ldi	r30, 0x2C	; 44
    27f6:	f0 e0       	ldi	r31, 0x00	; 0
    27f8:	89 81       	ldd	r24, Y+1	; 0x01
    27fa:	80 83       	st	Z, r24
}
    27fc:	0f 90       	pop	r0
    27fe:	cf 91       	pop	r28
    2800:	df 91       	pop	r29
    2802:	08 95       	ret

00002804 <USART_Init>:


void USART_Init( void)
{
    2804:	df 93       	push	r29
    2806:	cf 93       	push	r28
    2808:	cd b7       	in	r28, 0x3d	; 61
    280a:	de b7       	in	r29, 0x3e	; 62

	//Baudrate 9600
	UBRR0L=51;
    280c:	e9 e2       	ldi	r30, 0x29	; 41
    280e:	f0 e0       	ldi	r31, 0x00	; 0
    2810:	83 e3       	ldi	r24, 0x33	; 51
    2812:	80 83       	st	Z, r24
	UBRR0H=0;
    2814:	e0 e9       	ldi	r30, 0x90	; 144
    2816:	f0 e0       	ldi	r31, 0x00	; 0
    2818:	10 82       	st	Z, r1
	
	//Select Asynchronous mode 
	CLR_BIT(UCSR0C,UMSEL0);
    281a:	a5 e9       	ldi	r26, 0x95	; 149
    281c:	b0 e0       	ldi	r27, 0x00	; 0
    281e:	e5 e9       	ldi	r30, 0x95	; 149
    2820:	f0 e0       	ldi	r31, 0x00	; 0
    2822:	80 81       	ld	r24, Z
    2824:	8f 7b       	andi	r24, 0xBF	; 191
    2826:	8c 93       	st	X, r24
	
	//Enable, no parity
	CLR_BIT(UCSR0C,UPM01);
    2828:	a5 e9       	ldi	r26, 0x95	; 149
    282a:	b0 e0       	ldi	r27, 0x00	; 0
    282c:	e5 e9       	ldi	r30, 0x95	; 149
    282e:	f0 e0       	ldi	r31, 0x00	; 0
    2830:	80 81       	ld	r24, Z
    2832:	8f 7d       	andi	r24, 0xDF	; 223
    2834:	8c 93       	st	X, r24
	CLR_BIT(UCSR0C,UPM00);
    2836:	a5 e9       	ldi	r26, 0x95	; 149
    2838:	b0 e0       	ldi	r27, 0x00	; 0
    283a:	e5 e9       	ldi	r30, 0x95	; 149
    283c:	f0 e0       	ldi	r31, 0x00	; 0
    283e:	80 81       	ld	r24, Z
    2840:	8f 7e       	andi	r24, 0xEF	; 239
    2842:	8c 93       	st	X, r24
	
	//1- stop bit
	CLR_BIT(UCSR0C,USBS0);
    2844:	a5 e9       	ldi	r26, 0x95	; 149
    2846:	b0 e0       	ldi	r27, 0x00	; 0
    2848:	e5 e9       	ldi	r30, 0x95	; 149
    284a:	f0 e0       	ldi	r31, 0x00	; 0
    284c:	80 81       	ld	r24, Z
    284e:	87 7f       	andi	r24, 0xF7	; 247
    2850:	8c 93       	st	X, r24
	
	//8 bit data
	SET_BIT(UCSR0C,UCSZ00);
    2852:	a5 e9       	ldi	r26, 0x95	; 149
    2854:	b0 e0       	ldi	r27, 0x00	; 0
    2856:	e5 e9       	ldi	r30, 0x95	; 149
    2858:	f0 e0       	ldi	r31, 0x00	; 0
    285a:	80 81       	ld	r24, Z
    285c:	82 60       	ori	r24, 0x02	; 2
    285e:	8c 93       	st	X, r24
	SET_BIT(UCSR0C,UCSZ01);
    2860:	a5 e9       	ldi	r26, 0x95	; 149
    2862:	b0 e0       	ldi	r27, 0x00	; 0
    2864:	e5 e9       	ldi	r30, 0x95	; 149
    2866:	f0 e0       	ldi	r31, 0x00	; 0
    2868:	80 81       	ld	r24, Z
    286a:	84 60       	ori	r24, 0x04	; 4
    286c:	8c 93       	st	X, r24
	CLR_BIT(UCSR0B,UCSZ02);
    286e:	aa e2       	ldi	r26, 0x2A	; 42
    2870:	b0 e0       	ldi	r27, 0x00	; 0
    2872:	ea e2       	ldi	r30, 0x2A	; 42
    2874:	f0 e0       	ldi	r31, 0x00	; 0
    2876:	80 81       	ld	r24, Z
    2878:	8b 7f       	andi	r24, 0xFB	; 251
    287a:	8c 93       	st	X, r24
	
	//Enable Rx & Tx
	SET_BIT(UCSR0B,RXEN0);
    287c:	aa e2       	ldi	r26, 0x2A	; 42
    287e:	b0 e0       	ldi	r27, 0x00	; 0
    2880:	ea e2       	ldi	r30, 0x2A	; 42
    2882:	f0 e0       	ldi	r31, 0x00	; 0
    2884:	80 81       	ld	r24, Z
    2886:	80 61       	ori	r24, 0x10	; 16
    2888:	8c 93       	st	X, r24
	SET_BIT(UCSR0B,TXEN0);
    288a:	aa e2       	ldi	r26, 0x2A	; 42
    288c:	b0 e0       	ldi	r27, 0x00	; 0
    288e:	ea e2       	ldi	r30, 0x2A	; 42
    2890:	f0 e0       	ldi	r31, 0x00	; 0
    2892:	80 81       	ld	r24, Z
    2894:	88 60       	ori	r24, 0x08	; 8
    2896:	8c 93       	st	X, r24
}
    2898:	cf 91       	pop	r28
    289a:	df 91       	pop	r29
    289c:	08 95       	ret

0000289e <USART_SendString>:




void USART_SendString(uint8 *str)
{
    289e:	df 93       	push	r29
    28a0:	cf 93       	push	r28
    28a2:	00 d0       	rcall	.+0      	; 0x28a4 <USART_SendString+0x6>
    28a4:	0f 92       	push	r0
    28a6:	cd b7       	in	r28, 0x3d	; 61
    28a8:	de b7       	in	r29, 0x3e	; 62
    28aa:	9b 83       	std	Y+3, r25	; 0x03
    28ac:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    28ae:	19 82       	std	Y+1, r1	; 0x01
    28b0:	0e c0       	rjmp	.+28     	; 0x28ce <USART_SendString+0x30>
	
	while(str[i]!=0)
	{
		USART_Transmit(str[i]);
    28b2:	89 81       	ldd	r24, Y+1	; 0x01
    28b4:	28 2f       	mov	r18, r24
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	8a 81       	ldd	r24, Y+2	; 0x02
    28ba:	9b 81       	ldd	r25, Y+3	; 0x03
    28bc:	fc 01       	movw	r30, r24
    28be:	e2 0f       	add	r30, r18
    28c0:	f3 1f       	adc	r31, r19
    28c2:	80 81       	ld	r24, Z
    28c4:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <USART_Transmit>
		i++;
    28c8:	89 81       	ldd	r24, Y+1	; 0x01
    28ca:	8f 5f       	subi	r24, 0xFF	; 255
    28cc:	89 83       	std	Y+1, r24	; 0x01

void USART_SendString(uint8 *str)
{
	uint8 i=0;
	
	while(str[i]!=0)
    28ce:	89 81       	ldd	r24, Y+1	; 0x01
    28d0:	28 2f       	mov	r18, r24
    28d2:	30 e0       	ldi	r19, 0x00	; 0
    28d4:	8a 81       	ldd	r24, Y+2	; 0x02
    28d6:	9b 81       	ldd	r25, Y+3	; 0x03
    28d8:	fc 01       	movw	r30, r24
    28da:	e2 0f       	add	r30, r18
    28dc:	f3 1f       	adc	r31, r19
    28de:	80 81       	ld	r24, Z
    28e0:	88 23       	and	r24, r24
    28e2:	39 f7       	brne	.-50     	; 0x28b2 <USART_SendString+0x14>
	{
		USART_Transmit(str[i]);
		i++;
	}
}
    28e4:	0f 90       	pop	r0
    28e6:	0f 90       	pop	r0
    28e8:	0f 90       	pop	r0
    28ea:	cf 91       	pop	r28
    28ec:	df 91       	pop	r29
    28ee:	08 95       	ret

000028f0 <Timer3_Init>:
#include"Timer3.h"
void Timer3_Init(timer3_mode_type timer_mode,prescaler3_type scaler,OC3_mode_type oc3_mode,OC3_ch_type channel_t)
{
    28f0:	df 93       	push	r29
    28f2:	cf 93       	push	r28
    28f4:	cd b7       	in	r28, 0x3d	; 61
    28f6:	de b7       	in	r29, 0x3e	; 62
    28f8:	2c 97       	sbiw	r28, 0x0c	; 12
    28fa:	0f b6       	in	r0, 0x3f	; 63
    28fc:	f8 94       	cli
    28fe:	de bf       	out	0x3e, r29	; 62
    2900:	0f be       	out	0x3f, r0	; 63
    2902:	cd bf       	out	0x3d, r28	; 61
    2904:	89 83       	std	Y+1, r24	; 0x01
    2906:	6a 83       	std	Y+2, r22	; 0x02
    2908:	4b 83       	std	Y+3, r20	; 0x03
    290a:	2c 83       	std	Y+4, r18	; 0x04
switch (timer_mode)
    290c:	89 81       	ldd	r24, Y+1	; 0x01
    290e:	28 2f       	mov	r18, r24
    2910:	30 e0       	ldi	r19, 0x00	; 0
    2912:	3c 87       	std	Y+12, r19	; 0x0c
    2914:	2b 87       	std	Y+11, r18	; 0x0b
    2916:	8b 85       	ldd	r24, Y+11	; 0x0b
    2918:	9c 85       	ldd	r25, Y+12	; 0x0c
    291a:	87 30       	cpi	r24, 0x07	; 7
    291c:	91 05       	cpc	r25, r1
    291e:	09 f4       	brne	.+2      	; 0x2922 <Timer3_Init+0x32>
    2920:	24 c1       	rjmp	.+584    	; 0x2b6a <Timer3_Init+0x27a>
    2922:	2b 85       	ldd	r18, Y+11	; 0x0b
    2924:	3c 85       	ldd	r19, Y+12	; 0x0c
    2926:	28 30       	cpi	r18, 0x08	; 8
    2928:	31 05       	cpc	r19, r1
    292a:	4c f5       	brge	.+82     	; 0x297e <Timer3_Init+0x8e>
    292c:	8b 85       	ldd	r24, Y+11	; 0x0b
    292e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2930:	83 30       	cpi	r24, 0x03	; 3
    2932:	91 05       	cpc	r25, r1
    2934:	09 f4       	brne	.+2      	; 0x2938 <Timer3_Init+0x48>
    2936:	a5 c0       	rjmp	.+330    	; 0x2a82 <Timer3_Init+0x192>
    2938:	2b 85       	ldd	r18, Y+11	; 0x0b
    293a:	3c 85       	ldd	r19, Y+12	; 0x0c
    293c:	24 30       	cpi	r18, 0x04	; 4
    293e:	31 05       	cpc	r19, r1
    2940:	8c f4       	brge	.+34     	; 0x2964 <Timer3_Init+0x74>
    2942:	8b 85       	ldd	r24, Y+11	; 0x0b
    2944:	9c 85       	ldd	r25, Y+12	; 0x0c
    2946:	81 30       	cpi	r24, 0x01	; 1
    2948:	91 05       	cpc	r25, r1
    294a:	09 f4       	brne	.+2      	; 0x294e <Timer3_Init+0x5e>
    294c:	60 c0       	rjmp	.+192    	; 0x2a0e <Timer3_Init+0x11e>
    294e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2950:	3c 85       	ldd	r19, Y+12	; 0x0c
    2952:	22 30       	cpi	r18, 0x02	; 2
    2954:	31 05       	cpc	r19, r1
    2956:	0c f0       	brlt	.+2      	; 0x295a <Timer3_Init+0x6a>
    2958:	77 c0       	rjmp	.+238    	; 0x2a48 <Timer3_Init+0x158>
    295a:	8b 85       	ldd	r24, Y+11	; 0x0b
    295c:	9c 85       	ldd	r25, Y+12	; 0x0c
    295e:	00 97       	sbiw	r24, 0x00	; 0
    2960:	c9 f1       	breq	.+114    	; 0x29d4 <Timer3_Init+0xe4>
    2962:	ea c1       	rjmp	.+980    	; 0x2d38 <Timer3_Init+0x448>
    2964:	2b 85       	ldd	r18, Y+11	; 0x0b
    2966:	3c 85       	ldd	r19, Y+12	; 0x0c
    2968:	25 30       	cpi	r18, 0x05	; 5
    296a:	31 05       	cpc	r19, r1
    296c:	09 f4       	brne	.+2      	; 0x2970 <Timer3_Init+0x80>
    296e:	c3 c0       	rjmp	.+390    	; 0x2af6 <Timer3_Init+0x206>
    2970:	8b 85       	ldd	r24, Y+11	; 0x0b
    2972:	9c 85       	ldd	r25, Y+12	; 0x0c
    2974:	86 30       	cpi	r24, 0x06	; 6
    2976:	91 05       	cpc	r25, r1
    2978:	0c f0       	brlt	.+2      	; 0x297c <Timer3_Init+0x8c>
    297a:	da c0       	rjmp	.+436    	; 0x2b30 <Timer3_Init+0x240>
    297c:	9f c0       	rjmp	.+318    	; 0x2abc <Timer3_Init+0x1cc>
    297e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2980:	3c 85       	ldd	r19, Y+12	; 0x0c
    2982:	2b 30       	cpi	r18, 0x0B	; 11
    2984:	31 05       	cpc	r19, r1
    2986:	09 f4       	brne	.+2      	; 0x298a <Timer3_Init+0x9a>
    2988:	64 c1       	rjmp	.+712    	; 0x2c52 <Timer3_Init+0x362>
    298a:	8b 85       	ldd	r24, Y+11	; 0x0b
    298c:	9c 85       	ldd	r25, Y+12	; 0x0c
    298e:	8c 30       	cpi	r24, 0x0C	; 12
    2990:	91 05       	cpc	r25, r1
    2992:	6c f4       	brge	.+26     	; 0x29ae <Timer3_Init+0xbe>
    2994:	2b 85       	ldd	r18, Y+11	; 0x0b
    2996:	3c 85       	ldd	r19, Y+12	; 0x0c
    2998:	29 30       	cpi	r18, 0x09	; 9
    299a:	31 05       	cpc	r19, r1
    299c:	09 f4       	brne	.+2      	; 0x29a0 <Timer3_Init+0xb0>
    299e:	1f c1       	rjmp	.+574    	; 0x2bde <Timer3_Init+0x2ee>
    29a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    29a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    29a4:	8a 30       	cpi	r24, 0x0A	; 10
    29a6:	91 05       	cpc	r25, r1
    29a8:	0c f0       	brlt	.+2      	; 0x29ac <Timer3_Init+0xbc>
    29aa:	36 c1       	rjmp	.+620    	; 0x2c18 <Timer3_Init+0x328>
    29ac:	fb c0       	rjmp	.+502    	; 0x2ba4 <Timer3_Init+0x2b4>
    29ae:	2b 85       	ldd	r18, Y+11	; 0x0b
    29b0:	3c 85       	ldd	r19, Y+12	; 0x0c
    29b2:	2d 30       	cpi	r18, 0x0D	; 13
    29b4:	31 05       	cpc	r19, r1
    29b6:	09 f4       	brne	.+2      	; 0x29ba <Timer3_Init+0xca>
    29b8:	86 c1       	rjmp	.+780    	; 0x2cc6 <Timer3_Init+0x3d6>
    29ba:	8b 85       	ldd	r24, Y+11	; 0x0b
    29bc:	9c 85       	ldd	r25, Y+12	; 0x0c
    29be:	8d 30       	cpi	r24, 0x0D	; 13
    29c0:	91 05       	cpc	r25, r1
    29c2:	0c f4       	brge	.+2      	; 0x29c6 <Timer3_Init+0xd6>
    29c4:	63 c1       	rjmp	.+710    	; 0x2c8c <Timer3_Init+0x39c>
    29c6:	2b 85       	ldd	r18, Y+11	; 0x0b
    29c8:	3c 85       	ldd	r19, Y+12	; 0x0c
    29ca:	2e 30       	cpi	r18, 0x0E	; 14
    29cc:	31 05       	cpc	r19, r1
    29ce:	09 f4       	brne	.+2      	; 0x29d2 <Timer3_Init+0xe2>
    29d0:	97 c1       	rjmp	.+814    	; 0x2d00 <Timer3_Init+0x410>
    29d2:	b2 c1       	rjmp	.+868    	; 0x2d38 <Timer3_Init+0x448>
 {

case timer3_Normal_mode:                          CLR_BIT(TCCR3A,WGM30);
    29d4:	ab e8       	ldi	r26, 0x8B	; 139
    29d6:	b0 e0       	ldi	r27, 0x00	; 0
    29d8:	eb e8       	ldi	r30, 0x8B	; 139
    29da:	f0 e0       	ldi	r31, 0x00	; 0
    29dc:	80 81       	ld	r24, Z
    29de:	8e 7f       	andi	r24, 0xFE	; 254
    29e0:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR3A,WGM31);
    29e2:	ab e8       	ldi	r26, 0x8B	; 139
    29e4:	b0 e0       	ldi	r27, 0x00	; 0
    29e6:	eb e8       	ldi	r30, 0x8B	; 139
    29e8:	f0 e0       	ldi	r31, 0x00	; 0
    29ea:	80 81       	ld	r24, Z
    29ec:	8d 7f       	andi	r24, 0xFD	; 253
    29ee:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR3B,WGM32);
    29f0:	aa e8       	ldi	r26, 0x8A	; 138
    29f2:	b0 e0       	ldi	r27, 0x00	; 0
    29f4:	ea e8       	ldi	r30, 0x8A	; 138
    29f6:	f0 e0       	ldi	r31, 0x00	; 0
    29f8:	80 81       	ld	r24, Z
    29fa:	87 7f       	andi	r24, 0xF7	; 247
    29fc:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR3B,WGM33);
    29fe:	aa e8       	ldi	r26, 0x8A	; 138
    2a00:	b0 e0       	ldi	r27, 0x00	; 0
    2a02:	ea e8       	ldi	r30, 0x8A	; 138
    2a04:	f0 e0       	ldi	r31, 0x00	; 0
    2a06:	80 81       	ld	r24, Z
    2a08:	8f 7e       	andi	r24, 0xEF	; 239
    2a0a:	8c 93       	st	X, r24
    2a0c:	95 c1       	rjmp	.+810    	; 0x2d38 <Timer3_Init+0x448>
                                                  break;
case timer3_PWM_Phase_Correct_8bit:               SET_BIT(TCCR3A,WGM30);
    2a0e:	ab e8       	ldi	r26, 0x8B	; 139
    2a10:	b0 e0       	ldi	r27, 0x00	; 0
    2a12:	eb e8       	ldi	r30, 0x8B	; 139
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	80 81       	ld	r24, Z
    2a18:	81 60       	ori	r24, 0x01	; 1
    2a1a:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2a1c:	ab e8       	ldi	r26, 0x8B	; 139
    2a1e:	b0 e0       	ldi	r27, 0x00	; 0
    2a20:	eb e8       	ldi	r30, 0x8B	; 139
    2a22:	f0 e0       	ldi	r31, 0x00	; 0
    2a24:	80 81       	ld	r24, Z
    2a26:	8d 7f       	andi	r24, 0xFD	; 253
    2a28:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2a2a:	aa e8       	ldi	r26, 0x8A	; 138
    2a2c:	b0 e0       	ldi	r27, 0x00	; 0
    2a2e:	ea e8       	ldi	r30, 0x8A	; 138
    2a30:	f0 e0       	ldi	r31, 0x00	; 0
    2a32:	80 81       	ld	r24, Z
    2a34:	87 7f       	andi	r24, 0xF7	; 247
    2a36:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2a38:	aa e8       	ldi	r26, 0x8A	; 138
    2a3a:	b0 e0       	ldi	r27, 0x00	; 0
    2a3c:	ea e8       	ldi	r30, 0x8A	; 138
    2a3e:	f0 e0       	ldi	r31, 0x00	; 0
    2a40:	80 81       	ld	r24, Z
    2a42:	8f 7e       	andi	r24, 0xEF	; 239
    2a44:	8c 93       	st	X, r24
    2a46:	78 c1       	rjmp	.+752    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_Correct_9bit:               CLR_BIT(TCCR3A,WGM30);
    2a48:	ab e8       	ldi	r26, 0x8B	; 139
    2a4a:	b0 e0       	ldi	r27, 0x00	; 0
    2a4c:	eb e8       	ldi	r30, 0x8B	; 139
    2a4e:	f0 e0       	ldi	r31, 0x00	; 0
    2a50:	80 81       	ld	r24, Z
    2a52:	8e 7f       	andi	r24, 0xFE	; 254
    2a54:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2a56:	ab e8       	ldi	r26, 0x8B	; 139
    2a58:	b0 e0       	ldi	r27, 0x00	; 0
    2a5a:	eb e8       	ldi	r30, 0x8B	; 139
    2a5c:	f0 e0       	ldi	r31, 0x00	; 0
    2a5e:	80 81       	ld	r24, Z
    2a60:	82 60       	ori	r24, 0x02	; 2
    2a62:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2a64:	aa e8       	ldi	r26, 0x8A	; 138
    2a66:	b0 e0       	ldi	r27, 0x00	; 0
    2a68:	ea e8       	ldi	r30, 0x8A	; 138
    2a6a:	f0 e0       	ldi	r31, 0x00	; 0
    2a6c:	80 81       	ld	r24, Z
    2a6e:	87 7f       	andi	r24, 0xF7	; 247
    2a70:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2a72:	aa e8       	ldi	r26, 0x8A	; 138
    2a74:	b0 e0       	ldi	r27, 0x00	; 0
    2a76:	ea e8       	ldi	r30, 0x8A	; 138
    2a78:	f0 e0       	ldi	r31, 0x00	; 0
    2a7a:	80 81       	ld	r24, Z
    2a7c:	8f 7e       	andi	r24, 0xEF	; 239
    2a7e:	8c 93       	st	X, r24
    2a80:	5b c1       	rjmp	.+694    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_Correct_10bit:              SET_BIT(TCCR3A,WGM30);
    2a82:	ab e8       	ldi	r26, 0x8B	; 139
    2a84:	b0 e0       	ldi	r27, 0x00	; 0
    2a86:	eb e8       	ldi	r30, 0x8B	; 139
    2a88:	f0 e0       	ldi	r31, 0x00	; 0
    2a8a:	80 81       	ld	r24, Z
    2a8c:	81 60       	ori	r24, 0x01	; 1
    2a8e:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2a90:	ab e8       	ldi	r26, 0x8B	; 139
    2a92:	b0 e0       	ldi	r27, 0x00	; 0
    2a94:	eb e8       	ldi	r30, 0x8B	; 139
    2a96:	f0 e0       	ldi	r31, 0x00	; 0
    2a98:	80 81       	ld	r24, Z
    2a9a:	82 60       	ori	r24, 0x02	; 2
    2a9c:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2a9e:	aa e8       	ldi	r26, 0x8A	; 138
    2aa0:	b0 e0       	ldi	r27, 0x00	; 0
    2aa2:	ea e8       	ldi	r30, 0x8A	; 138
    2aa4:	f0 e0       	ldi	r31, 0x00	; 0
    2aa6:	80 81       	ld	r24, Z
    2aa8:	87 7f       	andi	r24, 0xF7	; 247
    2aaa:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2aac:	aa e8       	ldi	r26, 0x8A	; 138
    2aae:	b0 e0       	ldi	r27, 0x00	; 0
    2ab0:	ea e8       	ldi	r30, 0x8A	; 138
    2ab2:	f0 e0       	ldi	r31, 0x00	; 0
    2ab4:	80 81       	ld	r24, Z
    2ab6:	8f 7e       	andi	r24, 0xEF	; 239
    2ab8:	8c 93       	st	X, r24
    2aba:	3e c1       	rjmp	.+636    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_CTC_mode_ocr_top:                     CLR_BIT(TCCR3A,WGM30);
    2abc:	ab e8       	ldi	r26, 0x8B	; 139
    2abe:	b0 e0       	ldi	r27, 0x00	; 0
    2ac0:	eb e8       	ldi	r30, 0x8B	; 139
    2ac2:	f0 e0       	ldi	r31, 0x00	; 0
    2ac4:	80 81       	ld	r24, Z
    2ac6:	8e 7f       	andi	r24, 0xFE	; 254
    2ac8:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2aca:	ab e8       	ldi	r26, 0x8B	; 139
    2acc:	b0 e0       	ldi	r27, 0x00	; 0
    2ace:	eb e8       	ldi	r30, 0x8B	; 139
    2ad0:	f0 e0       	ldi	r31, 0x00	; 0
    2ad2:	80 81       	ld	r24, Z
    2ad4:	8d 7f       	andi	r24, 0xFD	; 253
    2ad6:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2ad8:	aa e8       	ldi	r26, 0x8A	; 138
    2ada:	b0 e0       	ldi	r27, 0x00	; 0
    2adc:	ea e8       	ldi	r30, 0x8A	; 138
    2ade:	f0 e0       	ldi	r31, 0x00	; 0
    2ae0:	80 81       	ld	r24, Z
    2ae2:	88 60       	ori	r24, 0x08	; 8
    2ae4:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2ae6:	aa e8       	ldi	r26, 0x8A	; 138
    2ae8:	b0 e0       	ldi	r27, 0x00	; 0
    2aea:	ea e8       	ldi	r30, 0x8A	; 138
    2aec:	f0 e0       	ldi	r31, 0x00	; 0
    2aee:	80 81       	ld	r24, Z
    2af0:	8f 7e       	andi	r24, 0xEF	; 239
    2af2:	8c 93       	st	X, r24
    2af4:	21 c1       	rjmp	.+578    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_Fast_PWM_8_bit:                       SET_BIT(TCCR3A,WGM30);
    2af6:	ab e8       	ldi	r26, 0x8B	; 139
    2af8:	b0 e0       	ldi	r27, 0x00	; 0
    2afa:	eb e8       	ldi	r30, 0x8B	; 139
    2afc:	f0 e0       	ldi	r31, 0x00	; 0
    2afe:	80 81       	ld	r24, Z
    2b00:	81 60       	ori	r24, 0x01	; 1
    2b02:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2b04:	ab e8       	ldi	r26, 0x8B	; 139
    2b06:	b0 e0       	ldi	r27, 0x00	; 0
    2b08:	eb e8       	ldi	r30, 0x8B	; 139
    2b0a:	f0 e0       	ldi	r31, 0x00	; 0
    2b0c:	80 81       	ld	r24, Z
    2b0e:	8d 7f       	andi	r24, 0xFD	; 253
    2b10:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2b12:	aa e8       	ldi	r26, 0x8A	; 138
    2b14:	b0 e0       	ldi	r27, 0x00	; 0
    2b16:	ea e8       	ldi	r30, 0x8A	; 138
    2b18:	f0 e0       	ldi	r31, 0x00	; 0
    2b1a:	80 81       	ld	r24, Z
    2b1c:	88 60       	ori	r24, 0x08	; 8
    2b1e:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2b20:	aa e8       	ldi	r26, 0x8A	; 138
    2b22:	b0 e0       	ldi	r27, 0x00	; 0
    2b24:	ea e8       	ldi	r30, 0x8A	; 138
    2b26:	f0 e0       	ldi	r31, 0x00	; 0
    2b28:	80 81       	ld	r24, Z
    2b2a:	8f 7e       	andi	r24, 0xEF	; 239
    2b2c:	8c 93       	st	X, r24
    2b2e:	04 c1       	rjmp	.+520    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_Fast_PWM_9_bit:                       CLR_BIT(TCCR3A,WGM30);
    2b30:	ab e8       	ldi	r26, 0x8B	; 139
    2b32:	b0 e0       	ldi	r27, 0x00	; 0
    2b34:	eb e8       	ldi	r30, 0x8B	; 139
    2b36:	f0 e0       	ldi	r31, 0x00	; 0
    2b38:	80 81       	ld	r24, Z
    2b3a:	8e 7f       	andi	r24, 0xFE	; 254
    2b3c:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2b3e:	ab e8       	ldi	r26, 0x8B	; 139
    2b40:	b0 e0       	ldi	r27, 0x00	; 0
    2b42:	eb e8       	ldi	r30, 0x8B	; 139
    2b44:	f0 e0       	ldi	r31, 0x00	; 0
    2b46:	80 81       	ld	r24, Z
    2b48:	82 60       	ori	r24, 0x02	; 2
    2b4a:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2b4c:	aa e8       	ldi	r26, 0x8A	; 138
    2b4e:	b0 e0       	ldi	r27, 0x00	; 0
    2b50:	ea e8       	ldi	r30, 0x8A	; 138
    2b52:	f0 e0       	ldi	r31, 0x00	; 0
    2b54:	80 81       	ld	r24, Z
    2b56:	88 60       	ori	r24, 0x08	; 8
    2b58:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2b5a:	aa e8       	ldi	r26, 0x8A	; 138
    2b5c:	b0 e0       	ldi	r27, 0x00	; 0
    2b5e:	ea e8       	ldi	r30, 0x8A	; 138
    2b60:	f0 e0       	ldi	r31, 0x00	; 0
    2b62:	80 81       	ld	r24, Z
    2b64:	8f 7e       	andi	r24, 0xEF	; 239
    2b66:	8c 93       	st	X, r24
    2b68:	e7 c0       	rjmp	.+462    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_Fast_PWM_10_bit:                      SET_BIT(TCCR3A,WGM30);
    2b6a:	ab e8       	ldi	r26, 0x8B	; 139
    2b6c:	b0 e0       	ldi	r27, 0x00	; 0
    2b6e:	eb e8       	ldi	r30, 0x8B	; 139
    2b70:	f0 e0       	ldi	r31, 0x00	; 0
    2b72:	80 81       	ld	r24, Z
    2b74:	81 60       	ori	r24, 0x01	; 1
    2b76:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2b78:	ab e8       	ldi	r26, 0x8B	; 139
    2b7a:	b0 e0       	ldi	r27, 0x00	; 0
    2b7c:	eb e8       	ldi	r30, 0x8B	; 139
    2b7e:	f0 e0       	ldi	r31, 0x00	; 0
    2b80:	80 81       	ld	r24, Z
    2b82:	82 60       	ori	r24, 0x02	; 2
    2b84:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2b86:	aa e8       	ldi	r26, 0x8A	; 138
    2b88:	b0 e0       	ldi	r27, 0x00	; 0
    2b8a:	ea e8       	ldi	r30, 0x8A	; 138
    2b8c:	f0 e0       	ldi	r31, 0x00	; 0
    2b8e:	80 81       	ld	r24, Z
    2b90:	88 60       	ori	r24, 0x08	; 8
    2b92:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM33);
    2b94:	aa e8       	ldi	r26, 0x8A	; 138
    2b96:	b0 e0       	ldi	r27, 0x00	; 0
    2b98:	ea e8       	ldi	r30, 0x8A	; 138
    2b9a:	f0 e0       	ldi	r31, 0x00	; 0
    2b9c:	80 81       	ld	r24, Z
    2b9e:	8f 7e       	andi	r24, 0xEF	; 239
    2ba0:	8c 93       	st	X, r24
    2ba2:	ca c0       	rjmp	.+404    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_and_Freq_Correct_icr_top:   CLR_BIT(TCCR3A,WGM30);
    2ba4:	ab e8       	ldi	r26, 0x8B	; 139
    2ba6:	b0 e0       	ldi	r27, 0x00	; 0
    2ba8:	eb e8       	ldi	r30, 0x8B	; 139
    2baa:	f0 e0       	ldi	r31, 0x00	; 0
    2bac:	80 81       	ld	r24, Z
    2bae:	8e 7f       	andi	r24, 0xFE	; 254
    2bb0:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2bb2:	ab e8       	ldi	r26, 0x8B	; 139
    2bb4:	b0 e0       	ldi	r27, 0x00	; 0
    2bb6:	eb e8       	ldi	r30, 0x8B	; 139
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	80 81       	ld	r24, Z
    2bbc:	8d 7f       	andi	r24, 0xFD	; 253
    2bbe:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2bc0:	aa e8       	ldi	r26, 0x8A	; 138
    2bc2:	b0 e0       	ldi	r27, 0x00	; 0
    2bc4:	ea e8       	ldi	r30, 0x8A	; 138
    2bc6:	f0 e0       	ldi	r31, 0x00	; 0
    2bc8:	80 81       	ld	r24, Z
    2bca:	87 7f       	andi	r24, 0xF7	; 247
    2bcc:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2bce:	aa e8       	ldi	r26, 0x8A	; 138
    2bd0:	b0 e0       	ldi	r27, 0x00	; 0
    2bd2:	ea e8       	ldi	r30, 0x8A	; 138
    2bd4:	f0 e0       	ldi	r31, 0x00	; 0
    2bd6:	80 81       	ld	r24, Z
    2bd8:	80 61       	ori	r24, 0x10	; 16
    2bda:	8c 93       	st	X, r24
    2bdc:	ad c0       	rjmp	.+346    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_and_Freq_Correct_ocr_top:   SET_BIT(TCCR3A,WGM30);
    2bde:	ab e8       	ldi	r26, 0x8B	; 139
    2be0:	b0 e0       	ldi	r27, 0x00	; 0
    2be2:	eb e8       	ldi	r30, 0x8B	; 139
    2be4:	f0 e0       	ldi	r31, 0x00	; 0
    2be6:	80 81       	ld	r24, Z
    2be8:	81 60       	ori	r24, 0x01	; 1
    2bea:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2bec:	ab e8       	ldi	r26, 0x8B	; 139
    2bee:	b0 e0       	ldi	r27, 0x00	; 0
    2bf0:	eb e8       	ldi	r30, 0x8B	; 139
    2bf2:	f0 e0       	ldi	r31, 0x00	; 0
    2bf4:	80 81       	ld	r24, Z
    2bf6:	8d 7f       	andi	r24, 0xFD	; 253
    2bf8:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2bfa:	aa e8       	ldi	r26, 0x8A	; 138
    2bfc:	b0 e0       	ldi	r27, 0x00	; 0
    2bfe:	ea e8       	ldi	r30, 0x8A	; 138
    2c00:	f0 e0       	ldi	r31, 0x00	; 0
    2c02:	80 81       	ld	r24, Z
    2c04:	87 7f       	andi	r24, 0xF7	; 247
    2c06:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2c08:	aa e8       	ldi	r26, 0x8A	; 138
    2c0a:	b0 e0       	ldi	r27, 0x00	; 0
    2c0c:	ea e8       	ldi	r30, 0x8A	; 138
    2c0e:	f0 e0       	ldi	r31, 0x00	; 0
    2c10:	80 81       	ld	r24, Z
    2c12:	80 61       	ori	r24, 0x10	; 16
    2c14:	8c 93       	st	X, r24
    2c16:	90 c0       	rjmp	.+288    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_Correct_icr_top:            CLR_BIT(TCCR3A,WGM30);
    2c18:	ab e8       	ldi	r26, 0x8B	; 139
    2c1a:	b0 e0       	ldi	r27, 0x00	; 0
    2c1c:	eb e8       	ldi	r30, 0x8B	; 139
    2c1e:	f0 e0       	ldi	r31, 0x00	; 0
    2c20:	80 81       	ld	r24, Z
    2c22:	8e 7f       	andi	r24, 0xFE	; 254
    2c24:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2c26:	ab e8       	ldi	r26, 0x8B	; 139
    2c28:	b0 e0       	ldi	r27, 0x00	; 0
    2c2a:	eb e8       	ldi	r30, 0x8B	; 139
    2c2c:	f0 e0       	ldi	r31, 0x00	; 0
    2c2e:	80 81       	ld	r24, Z
    2c30:	82 60       	ori	r24, 0x02	; 2
    2c32:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2c34:	aa e8       	ldi	r26, 0x8A	; 138
    2c36:	b0 e0       	ldi	r27, 0x00	; 0
    2c38:	ea e8       	ldi	r30, 0x8A	; 138
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	80 81       	ld	r24, Z
    2c3e:	87 7f       	andi	r24, 0xF7	; 247
    2c40:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2c42:	aa e8       	ldi	r26, 0x8A	; 138
    2c44:	b0 e0       	ldi	r27, 0x00	; 0
    2c46:	ea e8       	ldi	r30, 0x8A	; 138
    2c48:	f0 e0       	ldi	r31, 0x00	; 0
    2c4a:	80 81       	ld	r24, Z
    2c4c:	80 61       	ori	r24, 0x10	; 16
    2c4e:	8c 93       	st	X, r24
    2c50:	73 c0       	rjmp	.+230    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_PWM_Phase_Correct_ocr_top:            SET_BIT(TCCR3A,WGM30);
    2c52:	ab e8       	ldi	r26, 0x8B	; 139
    2c54:	b0 e0       	ldi	r27, 0x00	; 0
    2c56:	eb e8       	ldi	r30, 0x8B	; 139
    2c58:	f0 e0       	ldi	r31, 0x00	; 0
    2c5a:	80 81       	ld	r24, Z
    2c5c:	81 60       	ori	r24, 0x01	; 1
    2c5e:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2c60:	ab e8       	ldi	r26, 0x8B	; 139
    2c62:	b0 e0       	ldi	r27, 0x00	; 0
    2c64:	eb e8       	ldi	r30, 0x8B	; 139
    2c66:	f0 e0       	ldi	r31, 0x00	; 0
    2c68:	80 81       	ld	r24, Z
    2c6a:	82 60       	ori	r24, 0x02	; 2
    2c6c:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3B,WGM32);
    2c6e:	aa e8       	ldi	r26, 0x8A	; 138
    2c70:	b0 e0       	ldi	r27, 0x00	; 0
    2c72:	ea e8       	ldi	r30, 0x8A	; 138
    2c74:	f0 e0       	ldi	r31, 0x00	; 0
    2c76:	80 81       	ld	r24, Z
    2c78:	87 7f       	andi	r24, 0xF7	; 247
    2c7a:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2c7c:	aa e8       	ldi	r26, 0x8A	; 138
    2c7e:	b0 e0       	ldi	r27, 0x00	; 0
    2c80:	ea e8       	ldi	r30, 0x8A	; 138
    2c82:	f0 e0       	ldi	r31, 0x00	; 0
    2c84:	80 81       	ld	r24, Z
    2c86:	80 61       	ori	r24, 0x10	; 16
    2c88:	8c 93       	st	X, r24
    2c8a:	56 c0       	rjmp	.+172    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_CTC_mode_icr_top:                     CLR_BIT(TCCR3A,WGM30);
    2c8c:	ab e8       	ldi	r26, 0x8B	; 139
    2c8e:	b0 e0       	ldi	r27, 0x00	; 0
    2c90:	eb e8       	ldi	r30, 0x8B	; 139
    2c92:	f0 e0       	ldi	r31, 0x00	; 0
    2c94:	80 81       	ld	r24, Z
    2c96:	8e 7f       	andi	r24, 0xFE	; 254
    2c98:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR3A,WGM31);
    2c9a:	ab e8       	ldi	r26, 0x8B	; 139
    2c9c:	b0 e0       	ldi	r27, 0x00	; 0
    2c9e:	eb e8       	ldi	r30, 0x8B	; 139
    2ca0:	f0 e0       	ldi	r31, 0x00	; 0
    2ca2:	80 81       	ld	r24, Z
    2ca4:	8d 7f       	andi	r24, 0xFD	; 253
    2ca6:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2ca8:	aa e8       	ldi	r26, 0x8A	; 138
    2caa:	b0 e0       	ldi	r27, 0x00	; 0
    2cac:	ea e8       	ldi	r30, 0x8A	; 138
    2cae:	f0 e0       	ldi	r31, 0x00	; 0
    2cb0:	80 81       	ld	r24, Z
    2cb2:	88 60       	ori	r24, 0x08	; 8
    2cb4:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2cb6:	aa e8       	ldi	r26, 0x8A	; 138
    2cb8:	b0 e0       	ldi	r27, 0x00	; 0
    2cba:	ea e8       	ldi	r30, 0x8A	; 138
    2cbc:	f0 e0       	ldi	r31, 0x00	; 0
    2cbe:	80 81       	ld	r24, Z
    2cc0:	80 61       	ori	r24, 0x10	; 16
    2cc2:	8c 93       	st	X, r24
    2cc4:	39 c0       	rjmp	.+114    	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_Fast_PWM_icr_top:                     CLR_BIT(TCCR3A,WGM30);
    2cc6:	ab e8       	ldi	r26, 0x8B	; 139
    2cc8:	b0 e0       	ldi	r27, 0x00	; 0
    2cca:	eb e8       	ldi	r30, 0x8B	; 139
    2ccc:	f0 e0       	ldi	r31, 0x00	; 0
    2cce:	80 81       	ld	r24, Z
    2cd0:	8e 7f       	andi	r24, 0xFE	; 254
    2cd2:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2cd4:	ab e8       	ldi	r26, 0x8B	; 139
    2cd6:	b0 e0       	ldi	r27, 0x00	; 0
    2cd8:	eb e8       	ldi	r30, 0x8B	; 139
    2cda:	f0 e0       	ldi	r31, 0x00	; 0
    2cdc:	80 81       	ld	r24, Z
    2cde:	82 60       	ori	r24, 0x02	; 2
    2ce0:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2ce2:	aa e8       	ldi	r26, 0x8A	; 138
    2ce4:	b0 e0       	ldi	r27, 0x00	; 0
    2ce6:	ea e8       	ldi	r30, 0x8A	; 138
    2ce8:	f0 e0       	ldi	r31, 0x00	; 0
    2cea:	80 81       	ld	r24, Z
    2cec:	88 60       	ori	r24, 0x08	; 8
    2cee:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2cf0:	aa e8       	ldi	r26, 0x8A	; 138
    2cf2:	b0 e0       	ldi	r27, 0x00	; 0
    2cf4:	ea e8       	ldi	r30, 0x8A	; 138
    2cf6:	f0 e0       	ldi	r31, 0x00	; 0
    2cf8:	80 81       	ld	r24, Z
    2cfa:	80 61       	ori	r24, 0x10	; 16
    2cfc:	8c 93       	st	X, r24
    2cfe:	1c c0       	rjmp	.+56     	; 0x2d38 <Timer3_Init+0x448>
	                                              break;
case timer3_Fast_PWM_ocr_top:                     SET_BIT(TCCR3A,WGM30);
    2d00:	ab e8       	ldi	r26, 0x8B	; 139
    2d02:	b0 e0       	ldi	r27, 0x00	; 0
    2d04:	eb e8       	ldi	r30, 0x8B	; 139
    2d06:	f0 e0       	ldi	r31, 0x00	; 0
    2d08:	80 81       	ld	r24, Z
    2d0a:	81 60       	ori	r24, 0x01	; 1
    2d0c:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3A,WGM31);
    2d0e:	ab e8       	ldi	r26, 0x8B	; 139
    2d10:	b0 e0       	ldi	r27, 0x00	; 0
    2d12:	eb e8       	ldi	r30, 0x8B	; 139
    2d14:	f0 e0       	ldi	r31, 0x00	; 0
    2d16:	80 81       	ld	r24, Z
    2d18:	82 60       	ori	r24, 0x02	; 2
    2d1a:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM32);
    2d1c:	aa e8       	ldi	r26, 0x8A	; 138
    2d1e:	b0 e0       	ldi	r27, 0x00	; 0
    2d20:	ea e8       	ldi	r30, 0x8A	; 138
    2d22:	f0 e0       	ldi	r31, 0x00	; 0
    2d24:	80 81       	ld	r24, Z
    2d26:	88 60       	ori	r24, 0x08	; 8
    2d28:	8c 93       	st	X, r24
							                      SET_BIT(TCCR3B,WGM33);
    2d2a:	aa e8       	ldi	r26, 0x8A	; 138
    2d2c:	b0 e0       	ldi	r27, 0x00	; 0
    2d2e:	ea e8       	ldi	r30, 0x8A	; 138
    2d30:	f0 e0       	ldi	r31, 0x00	; 0
    2d32:	80 81       	ld	r24, Z
    2d34:	80 61       	ori	r24, 0x10	; 16
    2d36:	8c 93       	st	X, r24

						break;
}
#elif oc_3==fastpwm_3

switch (oc3_mode)
    2d38:	8b 81       	ldd	r24, Y+3	; 0x03
    2d3a:	28 2f       	mov	r18, r24
    2d3c:	30 e0       	ldi	r19, 0x00	; 0
    2d3e:	3a 87       	std	Y+10, r19	; 0x0a
    2d40:	29 87       	std	Y+9, r18	; 0x09
    2d42:	89 85       	ldd	r24, Y+9	; 0x09
    2d44:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d46:	81 30       	cpi	r24, 0x01	; 1
    2d48:	91 05       	cpc	r25, r1
    2d4a:	09 f4       	brne	.+2      	; 0x2d4e <Timer3_Init+0x45e>
    2d4c:	cf c0       	rjmp	.+414    	; 0x2eec <Timer3_Init+0x5fc>
    2d4e:	29 85       	ldd	r18, Y+9	; 0x09
    2d50:	3a 85       	ldd	r19, Y+10	; 0x0a
    2d52:	22 30       	cpi	r18, 0x02	; 2
    2d54:	31 05       	cpc	r19, r1
    2d56:	2c f4       	brge	.+10     	; 0x2d62 <Timer3_Init+0x472>
    2d58:	89 85       	ldd	r24, Y+9	; 0x09
    2d5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d5c:	00 97       	sbiw	r24, 0x00	; 0
    2d5e:	69 f0       	breq	.+26     	; 0x2d7a <Timer3_Init+0x48a>
    2d60:	c5 c0       	rjmp	.+394    	; 0x2eec <Timer3_Init+0x5fc>
    2d62:	29 85       	ldd	r18, Y+9	; 0x09
    2d64:	3a 85       	ldd	r19, Y+10	; 0x0a
    2d66:	22 30       	cpi	r18, 0x02	; 2
    2d68:	31 05       	cpc	r19, r1
    2d6a:	91 f1       	breq	.+100    	; 0x2dd0 <Timer3_Init+0x4e0>
    2d6c:	89 85       	ldd	r24, Y+9	; 0x09
    2d6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d70:	83 30       	cpi	r24, 0x03	; 3
    2d72:	91 05       	cpc	r25, r1
    2d74:	09 f4       	brne	.+2      	; 0x2d78 <Timer3_Init+0x488>
    2d76:	74 c0       	rjmp	.+232    	; 0x2e60 <Timer3_Init+0x570>
    2d78:	b9 c0       	rjmp	.+370    	; 0x2eec <Timer3_Init+0x5fc>
{
case disconnected_3:CLR_BIT(TCCR3A,COM3A0);
    2d7a:	ab e8       	ldi	r26, 0x8B	; 139
    2d7c:	b0 e0       	ldi	r27, 0x00	; 0
    2d7e:	eb e8       	ldi	r30, 0x8B	; 139
    2d80:	f0 e0       	ldi	r31, 0x00	; 0
    2d82:	80 81       	ld	r24, Z
    2d84:	8f 7b       	andi	r24, 0xBF	; 191
    2d86:	8c 93       	st	X, r24
                    CLR_BIT(TCCR3A,COM3A1);
    2d88:	ab e8       	ldi	r26, 0x8B	; 139
    2d8a:	b0 e0       	ldi	r27, 0x00	; 0
    2d8c:	eb e8       	ldi	r30, 0x8B	; 139
    2d8e:	f0 e0       	ldi	r31, 0x00	; 0
    2d90:	80 81       	ld	r24, Z
    2d92:	8f 77       	andi	r24, 0x7F	; 127
    2d94:	8c 93       	st	X, r24

                    CLR_BIT(TCCR3A,COM3B0);
    2d96:	ab e8       	ldi	r26, 0x8B	; 139
    2d98:	b0 e0       	ldi	r27, 0x00	; 0
    2d9a:	eb e8       	ldi	r30, 0x8B	; 139
    2d9c:	f0 e0       	ldi	r31, 0x00	; 0
    2d9e:	80 81       	ld	r24, Z
    2da0:	8f 7e       	andi	r24, 0xEF	; 239
    2da2:	8c 93       	st	X, r24
                    CLR_BIT(TCCR3A,COM3B1);
    2da4:	ab e8       	ldi	r26, 0x8B	; 139
    2da6:	b0 e0       	ldi	r27, 0x00	; 0
    2da8:	eb e8       	ldi	r30, 0x8B	; 139
    2daa:	f0 e0       	ldi	r31, 0x00	; 0
    2dac:	80 81       	ld	r24, Z
    2dae:	8f 7d       	andi	r24, 0xDF	; 223
    2db0:	8c 93       	st	X, r24

                    CLR_BIT(TCCR3A,COM3C0);
    2db2:	ab e8       	ldi	r26, 0x8B	; 139
    2db4:	b0 e0       	ldi	r27, 0x00	; 0
    2db6:	eb e8       	ldi	r30, 0x8B	; 139
    2db8:	f0 e0       	ldi	r31, 0x00	; 0
    2dba:	80 81       	ld	r24, Z
    2dbc:	8b 7f       	andi	r24, 0xFB	; 251
    2dbe:	8c 93       	st	X, r24
                    CLR_BIT(TCCR3A,COM3C1);
    2dc0:	ab e8       	ldi	r26, 0x8B	; 139
    2dc2:	b0 e0       	ldi	r27, 0x00	; 0
    2dc4:	eb e8       	ldi	r30, 0x8B	; 139
    2dc6:	f0 e0       	ldi	r31, 0x00	; 0
    2dc8:	80 81       	ld	r24, Z
    2dca:	87 7f       	andi	r24, 0xF7	; 247
    2dcc:	8c 93       	st	X, r24
    2dce:	8e c0       	rjmp	.+284    	; 0x2eec <Timer3_Init+0x5fc>
				    break;
case toggle_3:break;
case Non_inverting_clr_oc0_oncompare_set_on_bottom_3:
	switch(channel_t)
    2dd0:	8c 81       	ldd	r24, Y+4	; 0x04
    2dd2:	28 2f       	mov	r18, r24
    2dd4:	30 e0       	ldi	r19, 0x00	; 0
    2dd6:	38 87       	std	Y+8, r19	; 0x08
    2dd8:	2f 83       	std	Y+7, r18	; 0x07
    2dda:	8f 81       	ldd	r24, Y+7	; 0x07
    2ddc:	98 85       	ldd	r25, Y+8	; 0x08
    2dde:	81 30       	cpi	r24, 0x01	; 1
    2de0:	91 05       	cpc	r25, r1
    2de2:	89 f0       	breq	.+34     	; 0x2e06 <Timer3_Init+0x516>
    2de4:	2f 81       	ldd	r18, Y+7	; 0x07
    2de6:	38 85       	ldd	r19, Y+8	; 0x08
    2de8:	22 30       	cpi	r18, 0x02	; 2
    2dea:	31 05       	cpc	r19, r1
    2dec:	0c f4       	brge	.+2      	; 0x2df0 <Timer3_Init+0x500>
    2dee:	7e c0       	rjmp	.+252    	; 0x2eec <Timer3_Init+0x5fc>
    2df0:	8f 81       	ldd	r24, Y+7	; 0x07
    2df2:	98 85       	ldd	r25, Y+8	; 0x08
    2df4:	82 30       	cpi	r24, 0x02	; 2
    2df6:	91 05       	cpc	r25, r1
    2df8:	a9 f0       	breq	.+42     	; 0x2e24 <Timer3_Init+0x534>
    2dfa:	2f 81       	ldd	r18, Y+7	; 0x07
    2dfc:	38 85       	ldd	r19, Y+8	; 0x08
    2dfe:	23 30       	cpi	r18, 0x03	; 3
    2e00:	31 05       	cpc	r19, r1
    2e02:	f9 f0       	breq	.+62     	; 0x2e42 <Timer3_Init+0x552>
    2e04:	73 c0       	rjmp	.+230    	; 0x2eec <Timer3_Init+0x5fc>
	   {
	case disconnected_channel_3:break;
	     case A_Channel_3:CLR_BIT(TCCR3A,COM3A0);
    2e06:	ab e8       	ldi	r26, 0x8B	; 139
    2e08:	b0 e0       	ldi	r27, 0x00	; 0
    2e0a:	eb e8       	ldi	r30, 0x8B	; 139
    2e0c:	f0 e0       	ldi	r31, 0x00	; 0
    2e0e:	80 81       	ld	r24, Z
    2e10:	8f 7b       	andi	r24, 0xBF	; 191
    2e12:	8c 93       	st	X, r24
					    SET_BIT(TCCR3A,COM3A1);
    2e14:	ab e8       	ldi	r26, 0x8B	; 139
    2e16:	b0 e0       	ldi	r27, 0x00	; 0
    2e18:	eb e8       	ldi	r30, 0x8B	; 139
    2e1a:	f0 e0       	ldi	r31, 0x00	; 0
    2e1c:	80 81       	ld	r24, Z
    2e1e:	80 68       	ori	r24, 0x80	; 128
    2e20:	8c 93       	st	X, r24
    2e22:	64 c0       	rjmp	.+200    	; 0x2eec <Timer3_Init+0x5fc>
						break;
	    case B_Channel_3:CLR_BIT(TCCR3A,COM3B0);
    2e24:	ab e8       	ldi	r26, 0x8B	; 139
    2e26:	b0 e0       	ldi	r27, 0x00	; 0
    2e28:	eb e8       	ldi	r30, 0x8B	; 139
    2e2a:	f0 e0       	ldi	r31, 0x00	; 0
    2e2c:	80 81       	ld	r24, Z
    2e2e:	8f 7e       	andi	r24, 0xEF	; 239
    2e30:	8c 93       	st	X, r24
	                   SET_BIT(TCCR3A,COM3B1);
    2e32:	ab e8       	ldi	r26, 0x8B	; 139
    2e34:	b0 e0       	ldi	r27, 0x00	; 0
    2e36:	eb e8       	ldi	r30, 0x8B	; 139
    2e38:	f0 e0       	ldi	r31, 0x00	; 0
    2e3a:	80 81       	ld	r24, Z
    2e3c:	80 62       	ori	r24, 0x20	; 32
    2e3e:	8c 93       	st	X, r24
    2e40:	55 c0       	rjmp	.+170    	; 0x2eec <Timer3_Init+0x5fc>
	                   break;
	   case C_Channel_3:CLR_BIT(TCCR3A,COM3C0);
    2e42:	ab e8       	ldi	r26, 0x8B	; 139
    2e44:	b0 e0       	ldi	r27, 0x00	; 0
    2e46:	eb e8       	ldi	r30, 0x8B	; 139
    2e48:	f0 e0       	ldi	r31, 0x00	; 0
    2e4a:	80 81       	ld	r24, Z
    2e4c:	8b 7f       	andi	r24, 0xFB	; 251
    2e4e:	8c 93       	st	X, r24
	                    SET_BIT(TCCR3A,COM3C1);
    2e50:	ab e8       	ldi	r26, 0x8B	; 139
    2e52:	b0 e0       	ldi	r27, 0x00	; 0
    2e54:	eb e8       	ldi	r30, 0x8B	; 139
    2e56:	f0 e0       	ldi	r31, 0x00	; 0
    2e58:	80 81       	ld	r24, Z
    2e5a:	88 60       	ori	r24, 0x08	; 8
    2e5c:	8c 93       	st	X, r24
    2e5e:	46 c0       	rjmp	.+140    	; 0x2eec <Timer3_Init+0x5fc>
	                   break;
	   }
        break;
case Inverting_set_oc0_oncompare_clr_on_bottom_3:
	switch(channel_t)
    2e60:	8c 81       	ldd	r24, Y+4	; 0x04
    2e62:	28 2f       	mov	r18, r24
    2e64:	30 e0       	ldi	r19, 0x00	; 0
    2e66:	3e 83       	std	Y+6, r19	; 0x06
    2e68:	2d 83       	std	Y+5, r18	; 0x05
    2e6a:	8d 81       	ldd	r24, Y+5	; 0x05
    2e6c:	9e 81       	ldd	r25, Y+6	; 0x06
    2e6e:	81 30       	cpi	r24, 0x01	; 1
    2e70:	91 05       	cpc	r25, r1
    2e72:	81 f0       	breq	.+32     	; 0x2e94 <Timer3_Init+0x5a4>
    2e74:	2d 81       	ldd	r18, Y+5	; 0x05
    2e76:	3e 81       	ldd	r19, Y+6	; 0x06
    2e78:	22 30       	cpi	r18, 0x02	; 2
    2e7a:	31 05       	cpc	r19, r1
    2e7c:	bc f1       	brlt	.+110    	; 0x2eec <Timer3_Init+0x5fc>
    2e7e:	8d 81       	ldd	r24, Y+5	; 0x05
    2e80:	9e 81       	ldd	r25, Y+6	; 0x06
    2e82:	82 30       	cpi	r24, 0x02	; 2
    2e84:	91 05       	cpc	r25, r1
    2e86:	a9 f0       	breq	.+42     	; 0x2eb2 <Timer3_Init+0x5c2>
    2e88:	2d 81       	ldd	r18, Y+5	; 0x05
    2e8a:	3e 81       	ldd	r19, Y+6	; 0x06
    2e8c:	23 30       	cpi	r18, 0x03	; 3
    2e8e:	31 05       	cpc	r19, r1
    2e90:	f9 f0       	breq	.+62     	; 0x2ed0 <Timer3_Init+0x5e0>
    2e92:	2c c0       	rjmp	.+88     	; 0x2eec <Timer3_Init+0x5fc>
	   {
	case disconnected_channel_3:break;
	      case A_Channel_3:SET_BIT(TCCR3A,COM3A0);
    2e94:	ab e8       	ldi	r26, 0x8B	; 139
    2e96:	b0 e0       	ldi	r27, 0x00	; 0
    2e98:	eb e8       	ldi	r30, 0x8B	; 139
    2e9a:	f0 e0       	ldi	r31, 0x00	; 0
    2e9c:	80 81       	ld	r24, Z
    2e9e:	80 64       	ori	r24, 0x40	; 64
    2ea0:	8c 93       	st	X, r24
	                     SET_BIT(TCCR3A,COM3A1);
    2ea2:	ab e8       	ldi	r26, 0x8B	; 139
    2ea4:	b0 e0       	ldi	r27, 0x00	; 0
    2ea6:	eb e8       	ldi	r30, 0x8B	; 139
    2ea8:	f0 e0       	ldi	r31, 0x00	; 0
    2eaa:	80 81       	ld	r24, Z
    2eac:	80 68       	ori	r24, 0x80	; 128
    2eae:	8c 93       	st	X, r24
    2eb0:	1d c0       	rjmp	.+58     	; 0x2eec <Timer3_Init+0x5fc>
	                     break;
	      case B_Channel_3:SET_BIT(TCCR3A,COM3B0);
    2eb2:	ab e8       	ldi	r26, 0x8B	; 139
    2eb4:	b0 e0       	ldi	r27, 0x00	; 0
    2eb6:	eb e8       	ldi	r30, 0x8B	; 139
    2eb8:	f0 e0       	ldi	r31, 0x00	; 0
    2eba:	80 81       	ld	r24, Z
    2ebc:	80 61       	ori	r24, 0x10	; 16
    2ebe:	8c 93       	st	X, r24
	  				     SET_BIT(TCCR3A,COM3B1);
    2ec0:	ab e8       	ldi	r26, 0x8B	; 139
    2ec2:	b0 e0       	ldi	r27, 0x00	; 0
    2ec4:	eb e8       	ldi	r30, 0x8B	; 139
    2ec6:	f0 e0       	ldi	r31, 0x00	; 0
    2ec8:	80 81       	ld	r24, Z
    2eca:	80 62       	ori	r24, 0x20	; 32
    2ecc:	8c 93       	st	X, r24
    2ece:	0e c0       	rjmp	.+28     	; 0x2eec <Timer3_Init+0x5fc>
	  			         break;
	      case C_Channel_3:SET_BIT(TCCR3A,COM3C0);
    2ed0:	ab e8       	ldi	r26, 0x8B	; 139
    2ed2:	b0 e0       	ldi	r27, 0x00	; 0
    2ed4:	eb e8       	ldi	r30, 0x8B	; 139
    2ed6:	f0 e0       	ldi	r31, 0x00	; 0
    2ed8:	80 81       	ld	r24, Z
    2eda:	84 60       	ori	r24, 0x04	; 4
    2edc:	8c 93       	st	X, r24
	  				     SET_BIT(TCCR3A,COM3C1);
    2ede:	ab e8       	ldi	r26, 0x8B	; 139
    2ee0:	b0 e0       	ldi	r27, 0x00	; 0
    2ee2:	eb e8       	ldi	r30, 0x8B	; 139
    2ee4:	f0 e0       	ldi	r31, 0x00	; 0
    2ee6:	80 81       	ld	r24, Z
    2ee8:	88 60       	ori	r24, 0x08	; 8
    2eea:	8c 93       	st	X, r24
							break;

}

#endif
	TCCR3B&=0XF8;
    2eec:	aa e8       	ldi	r26, 0x8A	; 138
    2eee:	b0 e0       	ldi	r27, 0x00	; 0
    2ef0:	ea e8       	ldi	r30, 0x8A	; 138
    2ef2:	f0 e0       	ldi	r31, 0x00	; 0
    2ef4:	80 81       	ld	r24, Z
    2ef6:	88 7f       	andi	r24, 0xF8	; 248
    2ef8:	8c 93       	st	X, r24
	TCCR3B|=scaler;
    2efa:	aa e8       	ldi	r26, 0x8A	; 138
    2efc:	b0 e0       	ldi	r27, 0x00	; 0
    2efe:	ea e8       	ldi	r30, 0x8A	; 138
    2f00:	f0 e0       	ldi	r31, 0x00	; 0
    2f02:	90 81       	ld	r25, Z
    2f04:	8a 81       	ldd	r24, Y+2	; 0x02
    2f06:	89 2b       	or	r24, r25
    2f08:	8c 93       	st	X, r24

}
    2f0a:	2c 96       	adiw	r28, 0x0c	; 12
    2f0c:	0f b6       	in	r0, 0x3f	; 63
    2f0e:	f8 94       	cli
    2f10:	de bf       	out	0x3e, r29	; 62
    2f12:	0f be       	out	0x3f, r0	; 63
    2f14:	cd bf       	out	0x3d, r28	; 61
    2f16:	cf 91       	pop	r28
    2f18:	df 91       	pop	r29
    2f1a:	08 95       	ret

00002f1c <Timer3_InputCaptureEdge>:

void Timer3_InputCaptureEdge(Edge3_type edge)
{
    2f1c:	df 93       	push	r29
    2f1e:	cf 93       	push	r28
    2f20:	0f 92       	push	r0
    2f22:	cd b7       	in	r28, 0x3d	; 61
    2f24:	de b7       	in	r29, 0x3e	; 62
    2f26:	89 83       	std	Y+1, r24	; 0x01
	if(edge==Rising_3)
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	81 30       	cpi	r24, 0x01	; 1
    2f2c:	41 f4       	brne	.+16     	; 0x2f3e <Timer3_InputCaptureEdge+0x22>
		SET_BIT(TCCR3B,ICES3);
    2f2e:	aa e8       	ldi	r26, 0x8A	; 138
    2f30:	b0 e0       	ldi	r27, 0x00	; 0
    2f32:	ea e8       	ldi	r30, 0x8A	; 138
    2f34:	f0 e0       	ldi	r31, 0x00	; 0
    2f36:	80 81       	ld	r24, Z
    2f38:	80 64       	ori	r24, 0x40	; 64
    2f3a:	8c 93       	st	X, r24
    2f3c:	0a c0       	rjmp	.+20     	; 0x2f52 <Timer3_InputCaptureEdge+0x36>


	else if(edge==Falling_3)
    2f3e:	89 81       	ldd	r24, Y+1	; 0x01
    2f40:	88 23       	and	r24, r24
    2f42:	39 f4       	brne	.+14     	; 0x2f52 <Timer3_InputCaptureEdge+0x36>
		CLR_BIT(TCCR3B,ICES3);
    2f44:	aa e8       	ldi	r26, 0x8A	; 138
    2f46:	b0 e0       	ldi	r27, 0x00	; 0
    2f48:	ea e8       	ldi	r30, 0x8A	; 138
    2f4a:	f0 e0       	ldi	r31, 0x00	; 0
    2f4c:	80 81       	ld	r24, Z
    2f4e:	8f 7b       	andi	r24, 0xBF	; 191
    2f50:	8c 93       	st	X, r24

}
    2f52:	0f 90       	pop	r0
    2f54:	cf 91       	pop	r28
    2f56:	df 91       	pop	r29
    2f58:	08 95       	ret

00002f5a <Timer3_ICU_InterruptEnable>:

void Timer3_ICU_InterruptEnable(void)
{
    2f5a:	df 93       	push	r29
    2f5c:	cf 93       	push	r28
    2f5e:	cd b7       	in	r28, 0x3d	; 61
    2f60:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,TICIE3);
    2f62:	ad e7       	ldi	r26, 0x7D	; 125
    2f64:	b0 e0       	ldi	r27, 0x00	; 0
    2f66:	ed e7       	ldi	r30, 0x7D	; 125
    2f68:	f0 e0       	ldi	r31, 0x00	; 0
    2f6a:	80 81       	ld	r24, Z
    2f6c:	80 62       	ori	r24, 0x20	; 32
    2f6e:	8c 93       	st	X, r24
}
    2f70:	cf 91       	pop	r28
    2f72:	df 91       	pop	r29
    2f74:	08 95       	ret

00002f76 <Timer3_ICU_InterruptDisable>:
void Timer3_ICU_InterruptDisable(void)
{
    2f76:	df 93       	push	r29
    2f78:	cf 93       	push	r28
    2f7a:	cd b7       	in	r28, 0x3d	; 61
    2f7c:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,TICIE3);
    2f7e:	ad e7       	ldi	r26, 0x7D	; 125
    2f80:	b0 e0       	ldi	r27, 0x00	; 0
    2f82:	ed e7       	ldi	r30, 0x7D	; 125
    2f84:	f0 e0       	ldi	r31, 0x00	; 0
    2f86:	80 81       	ld	r24, Z
    2f88:	8f 7d       	andi	r24, 0xDF	; 223
    2f8a:	8c 93       	st	X, r24
}
    2f8c:	cf 91       	pop	r28
    2f8e:	df 91       	pop	r29
    2f90:	08 95       	ret

00002f92 <Timer3_OV_InterruptEnable>:
void Timer3_OV_InterruptEnable(void)
{
    2f92:	df 93       	push	r29
    2f94:	cf 93       	push	r28
    2f96:	cd b7       	in	r28, 0x3d	; 61
    2f98:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,TOIE3);
    2f9a:	ad e7       	ldi	r26, 0x7D	; 125
    2f9c:	b0 e0       	ldi	r27, 0x00	; 0
    2f9e:	ed e7       	ldi	r30, 0x7D	; 125
    2fa0:	f0 e0       	ldi	r31, 0x00	; 0
    2fa2:	80 81       	ld	r24, Z
    2fa4:	84 60       	ori	r24, 0x04	; 4
    2fa6:	8c 93       	st	X, r24
}
    2fa8:	cf 91       	pop	r28
    2faa:	df 91       	pop	r29
    2fac:	08 95       	ret

00002fae <Timer3_OV_InterruptDisable>:
void Timer3_OV_InterruptDisable(void)
{
    2fae:	df 93       	push	r29
    2fb0:	cf 93       	push	r28
    2fb2:	cd b7       	in	r28, 0x3d	; 61
    2fb4:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,TOIE3);
    2fb6:	ad e7       	ldi	r26, 0x7D	; 125
    2fb8:	b0 e0       	ldi	r27, 0x00	; 0
    2fba:	ed e7       	ldi	r30, 0x7D	; 125
    2fbc:	f0 e0       	ldi	r31, 0x00	; 0
    2fbe:	80 81       	ld	r24, Z
    2fc0:	8b 7f       	andi	r24, 0xFB	; 251
    2fc2:	8c 93       	st	X, r24
}
    2fc4:	cf 91       	pop	r28
    2fc6:	df 91       	pop	r29
    2fc8:	08 95       	ret

00002fca <Timer3_OCA_InterruptEnable>:
void Timer3_OCA_InterruptEnable(void)
{
    2fca:	df 93       	push	r29
    2fcc:	cf 93       	push	r28
    2fce:	cd b7       	in	r28, 0x3d	; 61
    2fd0:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,OCIE3A);
    2fd2:	ad e7       	ldi	r26, 0x7D	; 125
    2fd4:	b0 e0       	ldi	r27, 0x00	; 0
    2fd6:	ed e7       	ldi	r30, 0x7D	; 125
    2fd8:	f0 e0       	ldi	r31, 0x00	; 0
    2fda:	80 81       	ld	r24, Z
    2fdc:	80 61       	ori	r24, 0x10	; 16
    2fde:	8c 93       	st	X, r24
}
    2fe0:	cf 91       	pop	r28
    2fe2:	df 91       	pop	r29
    2fe4:	08 95       	ret

00002fe6 <Timer3_OCA_InterruptDisable>:
void Timer3_OCA_InterruptDisable(void)
{
    2fe6:	df 93       	push	r29
    2fe8:	cf 93       	push	r28
    2fea:	cd b7       	in	r28, 0x3d	; 61
    2fec:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,OCIE3A);
    2fee:	ad e7       	ldi	r26, 0x7D	; 125
    2ff0:	b0 e0       	ldi	r27, 0x00	; 0
    2ff2:	ed e7       	ldi	r30, 0x7D	; 125
    2ff4:	f0 e0       	ldi	r31, 0x00	; 0
    2ff6:	80 81       	ld	r24, Z
    2ff8:	8f 7e       	andi	r24, 0xEF	; 239
    2ffa:	8c 93       	st	X, r24
}
    2ffc:	cf 91       	pop	r28
    2ffe:	df 91       	pop	r29
    3000:	08 95       	ret

00003002 <Timer3_OCB_InterruptEnable>:
void Timer3_OCB_InterruptEnable(void)
{
    3002:	df 93       	push	r29
    3004:	cf 93       	push	r28
    3006:	cd b7       	in	r28, 0x3d	; 61
    3008:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,OCIE3B);
    300a:	ad e7       	ldi	r26, 0x7D	; 125
    300c:	b0 e0       	ldi	r27, 0x00	; 0
    300e:	ed e7       	ldi	r30, 0x7D	; 125
    3010:	f0 e0       	ldi	r31, 0x00	; 0
    3012:	80 81       	ld	r24, Z
    3014:	88 60       	ori	r24, 0x08	; 8
    3016:	8c 93       	st	X, r24
}
    3018:	cf 91       	pop	r28
    301a:	df 91       	pop	r29
    301c:	08 95       	ret

0000301e <Timer3_OCB_InterruptDisable>:
void Timer3_OCB_InterruptDisable(void)
{
    301e:	df 93       	push	r29
    3020:	cf 93       	push	r28
    3022:	cd b7       	in	r28, 0x3d	; 61
    3024:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,OCIE3B);
    3026:	ad e7       	ldi	r26, 0x7D	; 125
    3028:	b0 e0       	ldi	r27, 0x00	; 0
    302a:	ed e7       	ldi	r30, 0x7D	; 125
    302c:	f0 e0       	ldi	r31, 0x00	; 0
    302e:	80 81       	ld	r24, Z
    3030:	87 7f       	andi	r24, 0xF7	; 247
    3032:	8c 93       	st	X, r24
}
    3034:	cf 91       	pop	r28
    3036:	df 91       	pop	r29
    3038:	08 95       	ret

0000303a <Timer3_OCC_InterruptEnable>:

void Timer3_OCC_InterruptEnable(void)
{
    303a:	df 93       	push	r29
    303c:	cf 93       	push	r28
    303e:	cd b7       	in	r28, 0x3d	; 61
    3040:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,OCIE3C);
    3042:	ad e7       	ldi	r26, 0x7D	; 125
    3044:	b0 e0       	ldi	r27, 0x00	; 0
    3046:	ed e7       	ldi	r30, 0x7D	; 125
    3048:	f0 e0       	ldi	r31, 0x00	; 0
    304a:	80 81       	ld	r24, Z
    304c:	82 60       	ori	r24, 0x02	; 2
    304e:	8c 93       	st	X, r24
}
    3050:	cf 91       	pop	r28
    3052:	df 91       	pop	r29
    3054:	08 95       	ret

00003056 <Timer3_OCC_InterruptDisable>:
void Timer3_OCC_InterruptDisable(void)
{
    3056:	df 93       	push	r29
    3058:	cf 93       	push	r28
    305a:	cd b7       	in	r28, 0x3d	; 61
    305c:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,OCIE3C);
    305e:	ad e7       	ldi	r26, 0x7D	; 125
    3060:	b0 e0       	ldi	r27, 0x00	; 0
    3062:	ed e7       	ldi	r30, 0x7D	; 125
    3064:	f0 e0       	ldi	r31, 0x00	; 0
    3066:	80 81       	ld	r24, Z
    3068:	8d 7f       	andi	r24, 0xFD	; 253
    306a:	8c 93       	st	X, r24
}
    306c:	cf 91       	pop	r28
    306e:	df 91       	pop	r29
    3070:	08 95       	ret

00003072 <TMR3_uint16_GetICUValue>:


uint16  TMR3_uint16_GetICUValue(void)
{
    3072:	df 93       	push	r29
    3074:	cf 93       	push	r28
    3076:	00 d0       	rcall	.+0      	; 0x3078 <TMR3_uint16_GetICUValue+0x6>
    3078:	cd b7       	in	r28, 0x3d	; 61
    307a:	de b7       	in	r29, 0x3e	; 62
	uint16 ret_val;
		ret_val=ICR3L|(ICR3H<<8);
    307c:	e0 e8       	ldi	r30, 0x80	; 128
    307e:	f0 e0       	ldi	r31, 0x00	; 0
    3080:	80 81       	ld	r24, Z
    3082:	28 2f       	mov	r18, r24
    3084:	30 e0       	ldi	r19, 0x00	; 0
    3086:	e1 e8       	ldi	r30, 0x81	; 129
    3088:	f0 e0       	ldi	r31, 0x00	; 0
    308a:	80 81       	ld	r24, Z
    308c:	88 2f       	mov	r24, r24
    308e:	90 e0       	ldi	r25, 0x00	; 0
    3090:	98 2f       	mov	r25, r24
    3092:	88 27       	eor	r24, r24
    3094:	82 2b       	or	r24, r18
    3096:	93 2b       	or	r25, r19
    3098:	9a 83       	std	Y+2, r25	; 0x02
    309a:	89 83       	std	Y+1, r24	; 0x01
		return ret_val;
    309c:	89 81       	ldd	r24, Y+1	; 0x01
    309e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    30a0:	0f 90       	pop	r0
    30a2:	0f 90       	pop	r0
    30a4:	cf 91       	pop	r28
    30a6:	df 91       	pop	r29
    30a8:	08 95       	ret

000030aa <TMR3_uint16_GetTimerValue>:

uint16  TMR3_uint16_GetTimerValue(void)
{
    30aa:	df 93       	push	r29
    30ac:	cf 93       	push	r28
    30ae:	00 d0       	rcall	.+0      	; 0x30b0 <TMR3_uint16_GetTimerValue+0x6>
    30b0:	cd b7       	in	r28, 0x3d	; 61
    30b2:	de b7       	in	r29, 0x3e	; 62

	uint16 ret_val;
	ret_val=TCNT3L|(TCNT3H<<8);
    30b4:	e8 e8       	ldi	r30, 0x88	; 136
    30b6:	f0 e0       	ldi	r31, 0x00	; 0
    30b8:	80 81       	ld	r24, Z
    30ba:	28 2f       	mov	r18, r24
    30bc:	30 e0       	ldi	r19, 0x00	; 0
    30be:	e9 e8       	ldi	r30, 0x89	; 137
    30c0:	f0 e0       	ldi	r31, 0x00	; 0
    30c2:	80 81       	ld	r24, Z
    30c4:	88 2f       	mov	r24, r24
    30c6:	90 e0       	ldi	r25, 0x00	; 0
    30c8:	98 2f       	mov	r25, r24
    30ca:	88 27       	eor	r24, r24
    30cc:	82 2b       	or	r24, r18
    30ce:	93 2b       	or	r25, r19
    30d0:	9a 83       	std	Y+2, r25	; 0x02
    30d2:	89 83       	std	Y+1, r24	; 0x01
	return ret_val;
    30d4:	89 81       	ldd	r24, Y+1	; 0x01
    30d6:	9a 81       	ldd	r25, Y+2	; 0x02
}
    30d8:	0f 90       	pop	r0
    30da:	0f 90       	pop	r0
    30dc:	cf 91       	pop	r28
    30de:	df 91       	pop	r29
    30e0:	08 95       	ret

000030e2 <TMR3_void_SetTimerValue>:


void  TMR3_void_SetTimerValue(uint16 tmr_val)
{
    30e2:	df 93       	push	r29
    30e4:	cf 93       	push	r28
    30e6:	00 d0       	rcall	.+0      	; 0x30e8 <TMR3_void_SetTimerValue+0x6>
    30e8:	cd b7       	in	r28, 0x3d	; 61
    30ea:	de b7       	in	r29, 0x3e	; 62
    30ec:	9a 83       	std	Y+2, r25	; 0x02
    30ee:	89 83       	std	Y+1, r24	; 0x01
TCNT3L=(uint8)tmr_val;
    30f0:	e8 e8       	ldi	r30, 0x88	; 136
    30f2:	f0 e0       	ldi	r31, 0x00	; 0
    30f4:	89 81       	ldd	r24, Y+1	; 0x01
    30f6:	80 83       	st	Z, r24
TCNT3H=(uint8)(tmr_val>>8);
    30f8:	e9 e8       	ldi	r30, 0x89	; 137
    30fa:	f0 e0       	ldi	r31, 0x00	; 0
    30fc:	89 81       	ldd	r24, Y+1	; 0x01
    30fe:	9a 81       	ldd	r25, Y+2	; 0x02
    3100:	89 2f       	mov	r24, r25
    3102:	99 27       	eor	r25, r25
    3104:	80 83       	st	Z, r24
}
    3106:	0f 90       	pop	r0
    3108:	0f 90       	pop	r0
    310a:	cf 91       	pop	r28
    310c:	df 91       	pop	r29
    310e:	08 95       	ret

00003110 <TMR3_void_Set_OCR_TimerValue>:

void  TMR3_void_Set_OCR_TimerValue(uint16 oc_val,OC3_ch_type ch)
{
    3110:	df 93       	push	r29
    3112:	cf 93       	push	r28
    3114:	00 d0       	rcall	.+0      	; 0x3116 <TMR3_void_Set_OCR_TimerValue+0x6>
    3116:	00 d0       	rcall	.+0      	; 0x3118 <TMR3_void_Set_OCR_TimerValue+0x8>
    3118:	0f 92       	push	r0
    311a:	cd b7       	in	r28, 0x3d	; 61
    311c:	de b7       	in	r29, 0x3e	; 62
    311e:	9a 83       	std	Y+2, r25	; 0x02
    3120:	89 83       	std	Y+1, r24	; 0x01
    3122:	6b 83       	std	Y+3, r22	; 0x03


	switch(ch){
    3124:	8b 81       	ldd	r24, Y+3	; 0x03
    3126:	28 2f       	mov	r18, r24
    3128:	30 e0       	ldi	r19, 0x00	; 0
    312a:	3d 83       	std	Y+5, r19	; 0x05
    312c:	2c 83       	std	Y+4, r18	; 0x04
    312e:	8c 81       	ldd	r24, Y+4	; 0x04
    3130:	9d 81       	ldd	r25, Y+5	; 0x05
    3132:	81 30       	cpi	r24, 0x01	; 1
    3134:	91 05       	cpc	r25, r1
    3136:	81 f0       	breq	.+32     	; 0x3158 <TMR3_void_Set_OCR_TimerValue+0x48>
    3138:	2c 81       	ldd	r18, Y+4	; 0x04
    313a:	3d 81       	ldd	r19, Y+5	; 0x05
    313c:	22 30       	cpi	r18, 0x02	; 2
    313e:	31 05       	cpc	r19, r1
    3140:	74 f1       	brlt	.+92     	; 0x319e <TMR3_void_Set_OCR_TimerValue+0x8e>
    3142:	8c 81       	ldd	r24, Y+4	; 0x04
    3144:	9d 81       	ldd	r25, Y+5	; 0x05
    3146:	82 30       	cpi	r24, 0x02	; 2
    3148:	91 05       	cpc	r25, r1
    314a:	91 f0       	breq	.+36     	; 0x3170 <TMR3_void_Set_OCR_TimerValue+0x60>
    314c:	2c 81       	ldd	r18, Y+4	; 0x04
    314e:	3d 81       	ldd	r19, Y+5	; 0x05
    3150:	23 30       	cpi	r18, 0x03	; 3
    3152:	31 05       	cpc	r19, r1
    3154:	c9 f0       	breq	.+50     	; 0x3188 <TMR3_void_Set_OCR_TimerValue+0x78>
    3156:	23 c0       	rjmp	.+70     	; 0x319e <TMR3_void_Set_OCR_TimerValue+0x8e>
	case disconnected_channel_3:break;
	case A_Channel_3:OCR3AL=(uint8)oc_val;
    3158:	e6 e8       	ldi	r30, 0x86	; 134
    315a:	f0 e0       	ldi	r31, 0x00	; 0
    315c:	89 81       	ldd	r24, Y+1	; 0x01
    315e:	80 83       	st	Z, r24
	                OCR3AH=(uint8)(oc_val>>8);
    3160:	e7 e8       	ldi	r30, 0x87	; 135
    3162:	f0 e0       	ldi	r31, 0x00	; 0
    3164:	89 81       	ldd	r24, Y+1	; 0x01
    3166:	9a 81       	ldd	r25, Y+2	; 0x02
    3168:	89 2f       	mov	r24, r25
    316a:	99 27       	eor	r25, r25
    316c:	80 83       	st	Z, r24
    316e:	17 c0       	rjmp	.+46     	; 0x319e <TMR3_void_Set_OCR_TimerValue+0x8e>
	                 break;
	case B_Channel_3:OCR3BL=(uint8)oc_val;
    3170:	e4 e8       	ldi	r30, 0x84	; 132
    3172:	f0 e0       	ldi	r31, 0x00	; 0
    3174:	89 81       	ldd	r24, Y+1	; 0x01
    3176:	80 83       	st	Z, r24
                   OCR3BH=(uint8)(oc_val>>8);
    3178:	e5 e8       	ldi	r30, 0x85	; 133
    317a:	f0 e0       	ldi	r31, 0x00	; 0
    317c:	89 81       	ldd	r24, Y+1	; 0x01
    317e:	9a 81       	ldd	r25, Y+2	; 0x02
    3180:	89 2f       	mov	r24, r25
    3182:	99 27       	eor	r25, r25
    3184:	80 83       	st	Z, r24
    3186:	0b c0       	rjmp	.+22     	; 0x319e <TMR3_void_Set_OCR_TimerValue+0x8e>
		           break;
	case C_Channel_3:OCR3CL=(uint8)oc_val;
    3188:	e2 e8       	ldi	r30, 0x82	; 130
    318a:	f0 e0       	ldi	r31, 0x00	; 0
    318c:	89 81       	ldd	r24, Y+1	; 0x01
    318e:	80 83       	st	Z, r24
                     OCR3CH=(uint8)(oc_val>>8);
    3190:	e3 e8       	ldi	r30, 0x83	; 131
    3192:	f0 e0       	ldi	r31, 0x00	; 0
    3194:	89 81       	ldd	r24, Y+1	; 0x01
    3196:	9a 81       	ldd	r25, Y+2	; 0x02
    3198:	89 2f       	mov	r24, r25
    319a:	99 27       	eor	r25, r25
    319c:	80 83       	st	Z, r24
		             break;
	}

}
    319e:	0f 90       	pop	r0
    31a0:	0f 90       	pop	r0
    31a2:	0f 90       	pop	r0
    31a4:	0f 90       	pop	r0
    31a6:	0f 90       	pop	r0
    31a8:	cf 91       	pop	r28
    31aa:	df 91       	pop	r29
    31ac:	08 95       	ret

000031ae <Timer1_Init>:
#include"Timer1.h"
void Timer1_Init(timer1_mode_type timer_mode,prescaler1_type scaler,OC1_mode_type oc1_mode,OC1_ch_type channel_t)
{
    31ae:	df 93       	push	r29
    31b0:	cf 93       	push	r28
    31b2:	cd b7       	in	r28, 0x3d	; 61
    31b4:	de b7       	in	r29, 0x3e	; 62
    31b6:	2e 97       	sbiw	r28, 0x0e	; 14
    31b8:	0f b6       	in	r0, 0x3f	; 63
    31ba:	f8 94       	cli
    31bc:	de bf       	out	0x3e, r29	; 62
    31be:	0f be       	out	0x3f, r0	; 63
    31c0:	cd bf       	out	0x3d, r28	; 61
    31c2:	89 83       	std	Y+1, r24	; 0x01
    31c4:	6a 83       	std	Y+2, r22	; 0x02
    31c6:	4b 83       	std	Y+3, r20	; 0x03
    31c8:	2c 83       	std	Y+4, r18	; 0x04
switch (timer_mode)
    31ca:	89 81       	ldd	r24, Y+1	; 0x01
    31cc:	28 2f       	mov	r18, r24
    31ce:	30 e0       	ldi	r19, 0x00	; 0
    31d0:	3e 87       	std	Y+14, r19	; 0x0e
    31d2:	2d 87       	std	Y+13, r18	; 0x0d
    31d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    31d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    31d8:	87 30       	cpi	r24, 0x07	; 7
    31da:	91 05       	cpc	r25, r1
    31dc:	09 f4       	brne	.+2      	; 0x31e0 <Timer1_Init+0x32>
    31de:	24 c1       	rjmp	.+584    	; 0x3428 <Timer1_Init+0x27a>
    31e0:	2d 85       	ldd	r18, Y+13	; 0x0d
    31e2:	3e 85       	ldd	r19, Y+14	; 0x0e
    31e4:	28 30       	cpi	r18, 0x08	; 8
    31e6:	31 05       	cpc	r19, r1
    31e8:	4c f5       	brge	.+82     	; 0x323c <Timer1_Init+0x8e>
    31ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    31ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    31ee:	83 30       	cpi	r24, 0x03	; 3
    31f0:	91 05       	cpc	r25, r1
    31f2:	09 f4       	brne	.+2      	; 0x31f6 <Timer1_Init+0x48>
    31f4:	a5 c0       	rjmp	.+330    	; 0x3340 <Timer1_Init+0x192>
    31f6:	2d 85       	ldd	r18, Y+13	; 0x0d
    31f8:	3e 85       	ldd	r19, Y+14	; 0x0e
    31fa:	24 30       	cpi	r18, 0x04	; 4
    31fc:	31 05       	cpc	r19, r1
    31fe:	8c f4       	brge	.+34     	; 0x3222 <Timer1_Init+0x74>
    3200:	8d 85       	ldd	r24, Y+13	; 0x0d
    3202:	9e 85       	ldd	r25, Y+14	; 0x0e
    3204:	81 30       	cpi	r24, 0x01	; 1
    3206:	91 05       	cpc	r25, r1
    3208:	09 f4       	brne	.+2      	; 0x320c <Timer1_Init+0x5e>
    320a:	60 c0       	rjmp	.+192    	; 0x32cc <Timer1_Init+0x11e>
    320c:	2d 85       	ldd	r18, Y+13	; 0x0d
    320e:	3e 85       	ldd	r19, Y+14	; 0x0e
    3210:	22 30       	cpi	r18, 0x02	; 2
    3212:	31 05       	cpc	r19, r1
    3214:	0c f0       	brlt	.+2      	; 0x3218 <Timer1_Init+0x6a>
    3216:	77 c0       	rjmp	.+238    	; 0x3306 <Timer1_Init+0x158>
    3218:	8d 85       	ldd	r24, Y+13	; 0x0d
    321a:	9e 85       	ldd	r25, Y+14	; 0x0e
    321c:	00 97       	sbiw	r24, 0x00	; 0
    321e:	c9 f1       	breq	.+114    	; 0x3292 <Timer1_Init+0xe4>
    3220:	ea c1       	rjmp	.+980    	; 0x35f6 <Timer1_Init+0x448>
    3222:	2d 85       	ldd	r18, Y+13	; 0x0d
    3224:	3e 85       	ldd	r19, Y+14	; 0x0e
    3226:	25 30       	cpi	r18, 0x05	; 5
    3228:	31 05       	cpc	r19, r1
    322a:	09 f4       	brne	.+2      	; 0x322e <Timer1_Init+0x80>
    322c:	c3 c0       	rjmp	.+390    	; 0x33b4 <Timer1_Init+0x206>
    322e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3230:	9e 85       	ldd	r25, Y+14	; 0x0e
    3232:	86 30       	cpi	r24, 0x06	; 6
    3234:	91 05       	cpc	r25, r1
    3236:	0c f0       	brlt	.+2      	; 0x323a <Timer1_Init+0x8c>
    3238:	da c0       	rjmp	.+436    	; 0x33ee <Timer1_Init+0x240>
    323a:	9f c0       	rjmp	.+318    	; 0x337a <Timer1_Init+0x1cc>
    323c:	2d 85       	ldd	r18, Y+13	; 0x0d
    323e:	3e 85       	ldd	r19, Y+14	; 0x0e
    3240:	2b 30       	cpi	r18, 0x0B	; 11
    3242:	31 05       	cpc	r19, r1
    3244:	09 f4       	brne	.+2      	; 0x3248 <Timer1_Init+0x9a>
    3246:	64 c1       	rjmp	.+712    	; 0x3510 <Timer1_Init+0x362>
    3248:	8d 85       	ldd	r24, Y+13	; 0x0d
    324a:	9e 85       	ldd	r25, Y+14	; 0x0e
    324c:	8c 30       	cpi	r24, 0x0C	; 12
    324e:	91 05       	cpc	r25, r1
    3250:	6c f4       	brge	.+26     	; 0x326c <Timer1_Init+0xbe>
    3252:	2d 85       	ldd	r18, Y+13	; 0x0d
    3254:	3e 85       	ldd	r19, Y+14	; 0x0e
    3256:	29 30       	cpi	r18, 0x09	; 9
    3258:	31 05       	cpc	r19, r1
    325a:	09 f4       	brne	.+2      	; 0x325e <Timer1_Init+0xb0>
    325c:	1f c1       	rjmp	.+574    	; 0x349c <Timer1_Init+0x2ee>
    325e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3260:	9e 85       	ldd	r25, Y+14	; 0x0e
    3262:	8a 30       	cpi	r24, 0x0A	; 10
    3264:	91 05       	cpc	r25, r1
    3266:	0c f0       	brlt	.+2      	; 0x326a <Timer1_Init+0xbc>
    3268:	36 c1       	rjmp	.+620    	; 0x34d6 <Timer1_Init+0x328>
    326a:	fb c0       	rjmp	.+502    	; 0x3462 <Timer1_Init+0x2b4>
    326c:	2d 85       	ldd	r18, Y+13	; 0x0d
    326e:	3e 85       	ldd	r19, Y+14	; 0x0e
    3270:	2d 30       	cpi	r18, 0x0D	; 13
    3272:	31 05       	cpc	r19, r1
    3274:	09 f4       	brne	.+2      	; 0x3278 <Timer1_Init+0xca>
    3276:	86 c1       	rjmp	.+780    	; 0x3584 <Timer1_Init+0x3d6>
    3278:	8d 85       	ldd	r24, Y+13	; 0x0d
    327a:	9e 85       	ldd	r25, Y+14	; 0x0e
    327c:	8d 30       	cpi	r24, 0x0D	; 13
    327e:	91 05       	cpc	r25, r1
    3280:	0c f4       	brge	.+2      	; 0x3284 <Timer1_Init+0xd6>
    3282:	63 c1       	rjmp	.+710    	; 0x354a <Timer1_Init+0x39c>
    3284:	2d 85       	ldd	r18, Y+13	; 0x0d
    3286:	3e 85       	ldd	r19, Y+14	; 0x0e
    3288:	2e 30       	cpi	r18, 0x0E	; 14
    328a:	31 05       	cpc	r19, r1
    328c:	09 f4       	brne	.+2      	; 0x3290 <Timer1_Init+0xe2>
    328e:	97 c1       	rjmp	.+814    	; 0x35be <Timer1_Init+0x410>
    3290:	b2 c1       	rjmp	.+868    	; 0x35f6 <Timer1_Init+0x448>
 {

case timer1_Normal_mode:                          CLR_BIT(TCCR1A,WGM10);
    3292:	af e4       	ldi	r26, 0x4F	; 79
    3294:	b0 e0       	ldi	r27, 0x00	; 0
    3296:	ef e4       	ldi	r30, 0x4F	; 79
    3298:	f0 e0       	ldi	r31, 0x00	; 0
    329a:	80 81       	ld	r24, Z
    329c:	8e 7f       	andi	r24, 0xFE	; 254
    329e:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR1A,WGM11);
    32a0:	af e4       	ldi	r26, 0x4F	; 79
    32a2:	b0 e0       	ldi	r27, 0x00	; 0
    32a4:	ef e4       	ldi	r30, 0x4F	; 79
    32a6:	f0 e0       	ldi	r31, 0x00	; 0
    32a8:	80 81       	ld	r24, Z
    32aa:	8d 7f       	andi	r24, 0xFD	; 253
    32ac:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR1B,WGM12);
    32ae:	ae e4       	ldi	r26, 0x4E	; 78
    32b0:	b0 e0       	ldi	r27, 0x00	; 0
    32b2:	ee e4       	ldi	r30, 0x4E	; 78
    32b4:	f0 e0       	ldi	r31, 0x00	; 0
    32b6:	80 81       	ld	r24, Z
    32b8:	87 7f       	andi	r24, 0xF7	; 247
    32ba:	8c 93       	st	X, r24
						                          CLR_BIT(TCCR1B,WGM13);
    32bc:	ae e4       	ldi	r26, 0x4E	; 78
    32be:	b0 e0       	ldi	r27, 0x00	; 0
    32c0:	ee e4       	ldi	r30, 0x4E	; 78
    32c2:	f0 e0       	ldi	r31, 0x00	; 0
    32c4:	80 81       	ld	r24, Z
    32c6:	8f 7e       	andi	r24, 0xEF	; 239
    32c8:	8c 93       	st	X, r24
    32ca:	95 c1       	rjmp	.+810    	; 0x35f6 <Timer1_Init+0x448>
                                                  break;
case timer1_PWM_Phase_Correct_8bit:               SET_BIT(TCCR1A,WGM10);
    32cc:	af e4       	ldi	r26, 0x4F	; 79
    32ce:	b0 e0       	ldi	r27, 0x00	; 0
    32d0:	ef e4       	ldi	r30, 0x4F	; 79
    32d2:	f0 e0       	ldi	r31, 0x00	; 0
    32d4:	80 81       	ld	r24, Z
    32d6:	81 60       	ori	r24, 0x01	; 1
    32d8:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    32da:	af e4       	ldi	r26, 0x4F	; 79
    32dc:	b0 e0       	ldi	r27, 0x00	; 0
    32de:	ef e4       	ldi	r30, 0x4F	; 79
    32e0:	f0 e0       	ldi	r31, 0x00	; 0
    32e2:	80 81       	ld	r24, Z
    32e4:	8d 7f       	andi	r24, 0xFD	; 253
    32e6:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    32e8:	ae e4       	ldi	r26, 0x4E	; 78
    32ea:	b0 e0       	ldi	r27, 0x00	; 0
    32ec:	ee e4       	ldi	r30, 0x4E	; 78
    32ee:	f0 e0       	ldi	r31, 0x00	; 0
    32f0:	80 81       	ld	r24, Z
    32f2:	87 7f       	andi	r24, 0xF7	; 247
    32f4:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    32f6:	ae e4       	ldi	r26, 0x4E	; 78
    32f8:	b0 e0       	ldi	r27, 0x00	; 0
    32fa:	ee e4       	ldi	r30, 0x4E	; 78
    32fc:	f0 e0       	ldi	r31, 0x00	; 0
    32fe:	80 81       	ld	r24, Z
    3300:	8f 7e       	andi	r24, 0xEF	; 239
    3302:	8c 93       	st	X, r24
    3304:	78 c1       	rjmp	.+752    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_Correct_9bit:               CLR_BIT(TCCR1A,WGM10);
    3306:	af e4       	ldi	r26, 0x4F	; 79
    3308:	b0 e0       	ldi	r27, 0x00	; 0
    330a:	ef e4       	ldi	r30, 0x4F	; 79
    330c:	f0 e0       	ldi	r31, 0x00	; 0
    330e:	80 81       	ld	r24, Z
    3310:	8e 7f       	andi	r24, 0xFE	; 254
    3312:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    3314:	af e4       	ldi	r26, 0x4F	; 79
    3316:	b0 e0       	ldi	r27, 0x00	; 0
    3318:	ef e4       	ldi	r30, 0x4F	; 79
    331a:	f0 e0       	ldi	r31, 0x00	; 0
    331c:	80 81       	ld	r24, Z
    331e:	82 60       	ori	r24, 0x02	; 2
    3320:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    3322:	ae e4       	ldi	r26, 0x4E	; 78
    3324:	b0 e0       	ldi	r27, 0x00	; 0
    3326:	ee e4       	ldi	r30, 0x4E	; 78
    3328:	f0 e0       	ldi	r31, 0x00	; 0
    332a:	80 81       	ld	r24, Z
    332c:	87 7f       	andi	r24, 0xF7	; 247
    332e:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    3330:	ae e4       	ldi	r26, 0x4E	; 78
    3332:	b0 e0       	ldi	r27, 0x00	; 0
    3334:	ee e4       	ldi	r30, 0x4E	; 78
    3336:	f0 e0       	ldi	r31, 0x00	; 0
    3338:	80 81       	ld	r24, Z
    333a:	8f 7e       	andi	r24, 0xEF	; 239
    333c:	8c 93       	st	X, r24
    333e:	5b c1       	rjmp	.+694    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_Correct_10bit:              SET_BIT(TCCR1A,WGM10);
    3340:	af e4       	ldi	r26, 0x4F	; 79
    3342:	b0 e0       	ldi	r27, 0x00	; 0
    3344:	ef e4       	ldi	r30, 0x4F	; 79
    3346:	f0 e0       	ldi	r31, 0x00	; 0
    3348:	80 81       	ld	r24, Z
    334a:	81 60       	ori	r24, 0x01	; 1
    334c:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    334e:	af e4       	ldi	r26, 0x4F	; 79
    3350:	b0 e0       	ldi	r27, 0x00	; 0
    3352:	ef e4       	ldi	r30, 0x4F	; 79
    3354:	f0 e0       	ldi	r31, 0x00	; 0
    3356:	80 81       	ld	r24, Z
    3358:	82 60       	ori	r24, 0x02	; 2
    335a:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    335c:	ae e4       	ldi	r26, 0x4E	; 78
    335e:	b0 e0       	ldi	r27, 0x00	; 0
    3360:	ee e4       	ldi	r30, 0x4E	; 78
    3362:	f0 e0       	ldi	r31, 0x00	; 0
    3364:	80 81       	ld	r24, Z
    3366:	87 7f       	andi	r24, 0xF7	; 247
    3368:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    336a:	ae e4       	ldi	r26, 0x4E	; 78
    336c:	b0 e0       	ldi	r27, 0x00	; 0
    336e:	ee e4       	ldi	r30, 0x4E	; 78
    3370:	f0 e0       	ldi	r31, 0x00	; 0
    3372:	80 81       	ld	r24, Z
    3374:	8f 7e       	andi	r24, 0xEF	; 239
    3376:	8c 93       	st	X, r24
    3378:	3e c1       	rjmp	.+636    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_CTC_mode_ocr_top:                     CLR_BIT(TCCR1A,WGM10);
    337a:	af e4       	ldi	r26, 0x4F	; 79
    337c:	b0 e0       	ldi	r27, 0x00	; 0
    337e:	ef e4       	ldi	r30, 0x4F	; 79
    3380:	f0 e0       	ldi	r31, 0x00	; 0
    3382:	80 81       	ld	r24, Z
    3384:	8e 7f       	andi	r24, 0xFE	; 254
    3386:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    3388:	af e4       	ldi	r26, 0x4F	; 79
    338a:	b0 e0       	ldi	r27, 0x00	; 0
    338c:	ef e4       	ldi	r30, 0x4F	; 79
    338e:	f0 e0       	ldi	r31, 0x00	; 0
    3390:	80 81       	ld	r24, Z
    3392:	8d 7f       	andi	r24, 0xFD	; 253
    3394:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    3396:	ae e4       	ldi	r26, 0x4E	; 78
    3398:	b0 e0       	ldi	r27, 0x00	; 0
    339a:	ee e4       	ldi	r30, 0x4E	; 78
    339c:	f0 e0       	ldi	r31, 0x00	; 0
    339e:	80 81       	ld	r24, Z
    33a0:	88 60       	ori	r24, 0x08	; 8
    33a2:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    33a4:	ae e4       	ldi	r26, 0x4E	; 78
    33a6:	b0 e0       	ldi	r27, 0x00	; 0
    33a8:	ee e4       	ldi	r30, 0x4E	; 78
    33aa:	f0 e0       	ldi	r31, 0x00	; 0
    33ac:	80 81       	ld	r24, Z
    33ae:	8f 7e       	andi	r24, 0xEF	; 239
    33b0:	8c 93       	st	X, r24
    33b2:	21 c1       	rjmp	.+578    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_Fast_PWM_8_bit:                       SET_BIT(TCCR1A,WGM10);
    33b4:	af e4       	ldi	r26, 0x4F	; 79
    33b6:	b0 e0       	ldi	r27, 0x00	; 0
    33b8:	ef e4       	ldi	r30, 0x4F	; 79
    33ba:	f0 e0       	ldi	r31, 0x00	; 0
    33bc:	80 81       	ld	r24, Z
    33be:	81 60       	ori	r24, 0x01	; 1
    33c0:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    33c2:	af e4       	ldi	r26, 0x4F	; 79
    33c4:	b0 e0       	ldi	r27, 0x00	; 0
    33c6:	ef e4       	ldi	r30, 0x4F	; 79
    33c8:	f0 e0       	ldi	r31, 0x00	; 0
    33ca:	80 81       	ld	r24, Z
    33cc:	8d 7f       	andi	r24, 0xFD	; 253
    33ce:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    33d0:	ae e4       	ldi	r26, 0x4E	; 78
    33d2:	b0 e0       	ldi	r27, 0x00	; 0
    33d4:	ee e4       	ldi	r30, 0x4E	; 78
    33d6:	f0 e0       	ldi	r31, 0x00	; 0
    33d8:	80 81       	ld	r24, Z
    33da:	88 60       	ori	r24, 0x08	; 8
    33dc:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    33de:	ae e4       	ldi	r26, 0x4E	; 78
    33e0:	b0 e0       	ldi	r27, 0x00	; 0
    33e2:	ee e4       	ldi	r30, 0x4E	; 78
    33e4:	f0 e0       	ldi	r31, 0x00	; 0
    33e6:	80 81       	ld	r24, Z
    33e8:	8f 7e       	andi	r24, 0xEF	; 239
    33ea:	8c 93       	st	X, r24
    33ec:	04 c1       	rjmp	.+520    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_Fast_PWM_9_bit:                       CLR_BIT(TCCR1A,WGM10);
    33ee:	af e4       	ldi	r26, 0x4F	; 79
    33f0:	b0 e0       	ldi	r27, 0x00	; 0
    33f2:	ef e4       	ldi	r30, 0x4F	; 79
    33f4:	f0 e0       	ldi	r31, 0x00	; 0
    33f6:	80 81       	ld	r24, Z
    33f8:	8e 7f       	andi	r24, 0xFE	; 254
    33fa:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    33fc:	af e4       	ldi	r26, 0x4F	; 79
    33fe:	b0 e0       	ldi	r27, 0x00	; 0
    3400:	ef e4       	ldi	r30, 0x4F	; 79
    3402:	f0 e0       	ldi	r31, 0x00	; 0
    3404:	80 81       	ld	r24, Z
    3406:	82 60       	ori	r24, 0x02	; 2
    3408:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    340a:	ae e4       	ldi	r26, 0x4E	; 78
    340c:	b0 e0       	ldi	r27, 0x00	; 0
    340e:	ee e4       	ldi	r30, 0x4E	; 78
    3410:	f0 e0       	ldi	r31, 0x00	; 0
    3412:	80 81       	ld	r24, Z
    3414:	88 60       	ori	r24, 0x08	; 8
    3416:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    3418:	ae e4       	ldi	r26, 0x4E	; 78
    341a:	b0 e0       	ldi	r27, 0x00	; 0
    341c:	ee e4       	ldi	r30, 0x4E	; 78
    341e:	f0 e0       	ldi	r31, 0x00	; 0
    3420:	80 81       	ld	r24, Z
    3422:	8f 7e       	andi	r24, 0xEF	; 239
    3424:	8c 93       	st	X, r24
    3426:	e7 c0       	rjmp	.+462    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_Fast_PWM_10_bit:                      SET_BIT(TCCR1A,WGM10);
    3428:	af e4       	ldi	r26, 0x4F	; 79
    342a:	b0 e0       	ldi	r27, 0x00	; 0
    342c:	ef e4       	ldi	r30, 0x4F	; 79
    342e:	f0 e0       	ldi	r31, 0x00	; 0
    3430:	80 81       	ld	r24, Z
    3432:	81 60       	ori	r24, 0x01	; 1
    3434:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    3436:	af e4       	ldi	r26, 0x4F	; 79
    3438:	b0 e0       	ldi	r27, 0x00	; 0
    343a:	ef e4       	ldi	r30, 0x4F	; 79
    343c:	f0 e0       	ldi	r31, 0x00	; 0
    343e:	80 81       	ld	r24, Z
    3440:	82 60       	ori	r24, 0x02	; 2
    3442:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    3444:	ae e4       	ldi	r26, 0x4E	; 78
    3446:	b0 e0       	ldi	r27, 0x00	; 0
    3448:	ee e4       	ldi	r30, 0x4E	; 78
    344a:	f0 e0       	ldi	r31, 0x00	; 0
    344c:	80 81       	ld	r24, Z
    344e:	88 60       	ori	r24, 0x08	; 8
    3450:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM13);
    3452:	ae e4       	ldi	r26, 0x4E	; 78
    3454:	b0 e0       	ldi	r27, 0x00	; 0
    3456:	ee e4       	ldi	r30, 0x4E	; 78
    3458:	f0 e0       	ldi	r31, 0x00	; 0
    345a:	80 81       	ld	r24, Z
    345c:	8f 7e       	andi	r24, 0xEF	; 239
    345e:	8c 93       	st	X, r24
    3460:	ca c0       	rjmp	.+404    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_and_Freq_Correct_icr_top:   CLR_BIT(TCCR1A,WGM10);
    3462:	af e4       	ldi	r26, 0x4F	; 79
    3464:	b0 e0       	ldi	r27, 0x00	; 0
    3466:	ef e4       	ldi	r30, 0x4F	; 79
    3468:	f0 e0       	ldi	r31, 0x00	; 0
    346a:	80 81       	ld	r24, Z
    346c:	8e 7f       	andi	r24, 0xFE	; 254
    346e:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    3470:	af e4       	ldi	r26, 0x4F	; 79
    3472:	b0 e0       	ldi	r27, 0x00	; 0
    3474:	ef e4       	ldi	r30, 0x4F	; 79
    3476:	f0 e0       	ldi	r31, 0x00	; 0
    3478:	80 81       	ld	r24, Z
    347a:	8d 7f       	andi	r24, 0xFD	; 253
    347c:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    347e:	ae e4       	ldi	r26, 0x4E	; 78
    3480:	b0 e0       	ldi	r27, 0x00	; 0
    3482:	ee e4       	ldi	r30, 0x4E	; 78
    3484:	f0 e0       	ldi	r31, 0x00	; 0
    3486:	80 81       	ld	r24, Z
    3488:	87 7f       	andi	r24, 0xF7	; 247
    348a:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    348c:	ae e4       	ldi	r26, 0x4E	; 78
    348e:	b0 e0       	ldi	r27, 0x00	; 0
    3490:	ee e4       	ldi	r30, 0x4E	; 78
    3492:	f0 e0       	ldi	r31, 0x00	; 0
    3494:	80 81       	ld	r24, Z
    3496:	80 61       	ori	r24, 0x10	; 16
    3498:	8c 93       	st	X, r24
    349a:	ad c0       	rjmp	.+346    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_and_Freq_Correct_ocr_top:   SET_BIT(TCCR1A,WGM10);
    349c:	af e4       	ldi	r26, 0x4F	; 79
    349e:	b0 e0       	ldi	r27, 0x00	; 0
    34a0:	ef e4       	ldi	r30, 0x4F	; 79
    34a2:	f0 e0       	ldi	r31, 0x00	; 0
    34a4:	80 81       	ld	r24, Z
    34a6:	81 60       	ori	r24, 0x01	; 1
    34a8:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    34aa:	af e4       	ldi	r26, 0x4F	; 79
    34ac:	b0 e0       	ldi	r27, 0x00	; 0
    34ae:	ef e4       	ldi	r30, 0x4F	; 79
    34b0:	f0 e0       	ldi	r31, 0x00	; 0
    34b2:	80 81       	ld	r24, Z
    34b4:	8d 7f       	andi	r24, 0xFD	; 253
    34b6:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    34b8:	ae e4       	ldi	r26, 0x4E	; 78
    34ba:	b0 e0       	ldi	r27, 0x00	; 0
    34bc:	ee e4       	ldi	r30, 0x4E	; 78
    34be:	f0 e0       	ldi	r31, 0x00	; 0
    34c0:	80 81       	ld	r24, Z
    34c2:	87 7f       	andi	r24, 0xF7	; 247
    34c4:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    34c6:	ae e4       	ldi	r26, 0x4E	; 78
    34c8:	b0 e0       	ldi	r27, 0x00	; 0
    34ca:	ee e4       	ldi	r30, 0x4E	; 78
    34cc:	f0 e0       	ldi	r31, 0x00	; 0
    34ce:	80 81       	ld	r24, Z
    34d0:	80 61       	ori	r24, 0x10	; 16
    34d2:	8c 93       	st	X, r24
    34d4:	90 c0       	rjmp	.+288    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_Correct_icr_top:            CLR_BIT(TCCR1A,WGM10);
    34d6:	af e4       	ldi	r26, 0x4F	; 79
    34d8:	b0 e0       	ldi	r27, 0x00	; 0
    34da:	ef e4       	ldi	r30, 0x4F	; 79
    34dc:	f0 e0       	ldi	r31, 0x00	; 0
    34de:	80 81       	ld	r24, Z
    34e0:	8e 7f       	andi	r24, 0xFE	; 254
    34e2:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    34e4:	af e4       	ldi	r26, 0x4F	; 79
    34e6:	b0 e0       	ldi	r27, 0x00	; 0
    34e8:	ef e4       	ldi	r30, 0x4F	; 79
    34ea:	f0 e0       	ldi	r31, 0x00	; 0
    34ec:	80 81       	ld	r24, Z
    34ee:	82 60       	ori	r24, 0x02	; 2
    34f0:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    34f2:	ae e4       	ldi	r26, 0x4E	; 78
    34f4:	b0 e0       	ldi	r27, 0x00	; 0
    34f6:	ee e4       	ldi	r30, 0x4E	; 78
    34f8:	f0 e0       	ldi	r31, 0x00	; 0
    34fa:	80 81       	ld	r24, Z
    34fc:	87 7f       	andi	r24, 0xF7	; 247
    34fe:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    3500:	ae e4       	ldi	r26, 0x4E	; 78
    3502:	b0 e0       	ldi	r27, 0x00	; 0
    3504:	ee e4       	ldi	r30, 0x4E	; 78
    3506:	f0 e0       	ldi	r31, 0x00	; 0
    3508:	80 81       	ld	r24, Z
    350a:	80 61       	ori	r24, 0x10	; 16
    350c:	8c 93       	st	X, r24
    350e:	73 c0       	rjmp	.+230    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_PWM_Phase_Correct_ocr_top:            SET_BIT(TCCR1A,WGM10);
    3510:	af e4       	ldi	r26, 0x4F	; 79
    3512:	b0 e0       	ldi	r27, 0x00	; 0
    3514:	ef e4       	ldi	r30, 0x4F	; 79
    3516:	f0 e0       	ldi	r31, 0x00	; 0
    3518:	80 81       	ld	r24, Z
    351a:	81 60       	ori	r24, 0x01	; 1
    351c:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    351e:	af e4       	ldi	r26, 0x4F	; 79
    3520:	b0 e0       	ldi	r27, 0x00	; 0
    3522:	ef e4       	ldi	r30, 0x4F	; 79
    3524:	f0 e0       	ldi	r31, 0x00	; 0
    3526:	80 81       	ld	r24, Z
    3528:	82 60       	ori	r24, 0x02	; 2
    352a:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1B,WGM12);
    352c:	ae e4       	ldi	r26, 0x4E	; 78
    352e:	b0 e0       	ldi	r27, 0x00	; 0
    3530:	ee e4       	ldi	r30, 0x4E	; 78
    3532:	f0 e0       	ldi	r31, 0x00	; 0
    3534:	80 81       	ld	r24, Z
    3536:	87 7f       	andi	r24, 0xF7	; 247
    3538:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    353a:	ae e4       	ldi	r26, 0x4E	; 78
    353c:	b0 e0       	ldi	r27, 0x00	; 0
    353e:	ee e4       	ldi	r30, 0x4E	; 78
    3540:	f0 e0       	ldi	r31, 0x00	; 0
    3542:	80 81       	ld	r24, Z
    3544:	80 61       	ori	r24, 0x10	; 16
    3546:	8c 93       	st	X, r24
    3548:	56 c0       	rjmp	.+172    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_CTC_mode_icr_top:                     CLR_BIT(TCCR1A,WGM10);
    354a:	af e4       	ldi	r26, 0x4F	; 79
    354c:	b0 e0       	ldi	r27, 0x00	; 0
    354e:	ef e4       	ldi	r30, 0x4F	; 79
    3550:	f0 e0       	ldi	r31, 0x00	; 0
    3552:	80 81       	ld	r24, Z
    3554:	8e 7f       	andi	r24, 0xFE	; 254
    3556:	8c 93       	st	X, r24
							                      CLR_BIT(TCCR1A,WGM11);
    3558:	af e4       	ldi	r26, 0x4F	; 79
    355a:	b0 e0       	ldi	r27, 0x00	; 0
    355c:	ef e4       	ldi	r30, 0x4F	; 79
    355e:	f0 e0       	ldi	r31, 0x00	; 0
    3560:	80 81       	ld	r24, Z
    3562:	8d 7f       	andi	r24, 0xFD	; 253
    3564:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    3566:	ae e4       	ldi	r26, 0x4E	; 78
    3568:	b0 e0       	ldi	r27, 0x00	; 0
    356a:	ee e4       	ldi	r30, 0x4E	; 78
    356c:	f0 e0       	ldi	r31, 0x00	; 0
    356e:	80 81       	ld	r24, Z
    3570:	88 60       	ori	r24, 0x08	; 8
    3572:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    3574:	ae e4       	ldi	r26, 0x4E	; 78
    3576:	b0 e0       	ldi	r27, 0x00	; 0
    3578:	ee e4       	ldi	r30, 0x4E	; 78
    357a:	f0 e0       	ldi	r31, 0x00	; 0
    357c:	80 81       	ld	r24, Z
    357e:	80 61       	ori	r24, 0x10	; 16
    3580:	8c 93       	st	X, r24
    3582:	39 c0       	rjmp	.+114    	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_Fast_PWM_icr_top:                     CLR_BIT(TCCR1A,WGM10);
    3584:	af e4       	ldi	r26, 0x4F	; 79
    3586:	b0 e0       	ldi	r27, 0x00	; 0
    3588:	ef e4       	ldi	r30, 0x4F	; 79
    358a:	f0 e0       	ldi	r31, 0x00	; 0
    358c:	80 81       	ld	r24, Z
    358e:	8e 7f       	andi	r24, 0xFE	; 254
    3590:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    3592:	af e4       	ldi	r26, 0x4F	; 79
    3594:	b0 e0       	ldi	r27, 0x00	; 0
    3596:	ef e4       	ldi	r30, 0x4F	; 79
    3598:	f0 e0       	ldi	r31, 0x00	; 0
    359a:	80 81       	ld	r24, Z
    359c:	82 60       	ori	r24, 0x02	; 2
    359e:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    35a0:	ae e4       	ldi	r26, 0x4E	; 78
    35a2:	b0 e0       	ldi	r27, 0x00	; 0
    35a4:	ee e4       	ldi	r30, 0x4E	; 78
    35a6:	f0 e0       	ldi	r31, 0x00	; 0
    35a8:	80 81       	ld	r24, Z
    35aa:	88 60       	ori	r24, 0x08	; 8
    35ac:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    35ae:	ae e4       	ldi	r26, 0x4E	; 78
    35b0:	b0 e0       	ldi	r27, 0x00	; 0
    35b2:	ee e4       	ldi	r30, 0x4E	; 78
    35b4:	f0 e0       	ldi	r31, 0x00	; 0
    35b6:	80 81       	ld	r24, Z
    35b8:	80 61       	ori	r24, 0x10	; 16
    35ba:	8c 93       	st	X, r24
    35bc:	1c c0       	rjmp	.+56     	; 0x35f6 <Timer1_Init+0x448>
	                                              break;
case timer1_Fast_PWM_ocr_top:                     SET_BIT(TCCR1A,WGM10);
    35be:	af e4       	ldi	r26, 0x4F	; 79
    35c0:	b0 e0       	ldi	r27, 0x00	; 0
    35c2:	ef e4       	ldi	r30, 0x4F	; 79
    35c4:	f0 e0       	ldi	r31, 0x00	; 0
    35c6:	80 81       	ld	r24, Z
    35c8:	81 60       	ori	r24, 0x01	; 1
    35ca:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1A,WGM11);
    35cc:	af e4       	ldi	r26, 0x4F	; 79
    35ce:	b0 e0       	ldi	r27, 0x00	; 0
    35d0:	ef e4       	ldi	r30, 0x4F	; 79
    35d2:	f0 e0       	ldi	r31, 0x00	; 0
    35d4:	80 81       	ld	r24, Z
    35d6:	82 60       	ori	r24, 0x02	; 2
    35d8:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM12);
    35da:	ae e4       	ldi	r26, 0x4E	; 78
    35dc:	b0 e0       	ldi	r27, 0x00	; 0
    35de:	ee e4       	ldi	r30, 0x4E	; 78
    35e0:	f0 e0       	ldi	r31, 0x00	; 0
    35e2:	80 81       	ld	r24, Z
    35e4:	88 60       	ori	r24, 0x08	; 8
    35e6:	8c 93       	st	X, r24
							                      SET_BIT(TCCR1B,WGM13);
    35e8:	ae e4       	ldi	r26, 0x4E	; 78
    35ea:	b0 e0       	ldi	r27, 0x00	; 0
    35ec:	ee e4       	ldi	r30, 0x4E	; 78
    35ee:	f0 e0       	ldi	r31, 0x00	; 0
    35f0:	80 81       	ld	r24, Z
    35f2:	80 61       	ori	r24, 0x10	; 16
    35f4:	8c 93       	st	X, r24
	                                              break;
}


#if  oc_1==normal_1
switch (oc1_mode)
    35f6:	8b 81       	ldd	r24, Y+3	; 0x03
    35f8:	28 2f       	mov	r18, r24
    35fa:	30 e0       	ldi	r19, 0x00	; 0
    35fc:	3c 87       	std	Y+12, r19	; 0x0c
    35fe:	2b 87       	std	Y+11, r18	; 0x0b
    3600:	8b 85       	ldd	r24, Y+11	; 0x0b
    3602:	9c 85       	ldd	r25, Y+12	; 0x0c
    3604:	81 30       	cpi	r24, 0x01	; 1
    3606:	91 05       	cpc	r25, r1
    3608:	09 f4       	brne	.+2      	; 0x360c <Timer1_Init+0x45e>
    360a:	42 c0       	rjmp	.+132    	; 0x3690 <Timer1_Init+0x4e2>
    360c:	2b 85       	ldd	r18, Y+11	; 0x0b
    360e:	3c 85       	ldd	r19, Y+12	; 0x0c
    3610:	22 30       	cpi	r18, 0x02	; 2
    3612:	31 05       	cpc	r19, r1
    3614:	2c f4       	brge	.+10     	; 0x3620 <Timer1_Init+0x472>
    3616:	8b 85       	ldd	r24, Y+11	; 0x0b
    3618:	9c 85       	ldd	r25, Y+12	; 0x0c
    361a:	00 97       	sbiw	r24, 0x00	; 0
    361c:	71 f0       	breq	.+28     	; 0x363a <Timer1_Init+0x48c>
    361e:	0e c1       	rjmp	.+540    	; 0x383c <Timer1_Init+0x68e>
    3620:	2b 85       	ldd	r18, Y+11	; 0x0b
    3622:	3c 85       	ldd	r19, Y+12	; 0x0c
    3624:	22 30       	cpi	r18, 0x02	; 2
    3626:	31 05       	cpc	r19, r1
    3628:	09 f4       	brne	.+2      	; 0x362c <Timer1_Init+0x47e>
    362a:	7a c0       	rjmp	.+244    	; 0x3720 <Timer1_Init+0x572>
    362c:	8b 85       	ldd	r24, Y+11	; 0x0b
    362e:	9c 85       	ldd	r25, Y+12	; 0x0c
    3630:	83 30       	cpi	r24, 0x03	; 3
    3632:	91 05       	cpc	r25, r1
    3634:	09 f4       	brne	.+2      	; 0x3638 <Timer1_Init+0x48a>
    3636:	bc c0       	rjmp	.+376    	; 0x37b0 <Timer1_Init+0x602>
    3638:	01 c1       	rjmp	.+514    	; 0x383c <Timer1_Init+0x68e>
{
case disconnected_1:
						CLR_BIT(TCCR1A,COM1A0);
    363a:	af e4       	ldi	r26, 0x4F	; 79
    363c:	b0 e0       	ldi	r27, 0x00	; 0
    363e:	ef e4       	ldi	r30, 0x4F	; 79
    3640:	f0 e0       	ldi	r31, 0x00	; 0
    3642:	80 81       	ld	r24, Z
    3644:	8f 7b       	andi	r24, 0xBF	; 191
    3646:	8c 93       	st	X, r24
						CLR_BIT(TCCR1A,COM1A1);
    3648:	af e4       	ldi	r26, 0x4F	; 79
    364a:	b0 e0       	ldi	r27, 0x00	; 0
    364c:	ef e4       	ldi	r30, 0x4F	; 79
    364e:	f0 e0       	ldi	r31, 0x00	; 0
    3650:	80 81       	ld	r24, Z
    3652:	8f 77       	andi	r24, 0x7F	; 127
    3654:	8c 93       	st	X, r24

						CLR_BIT(TCCR1A,COM1B0);
    3656:	af e4       	ldi	r26, 0x4F	; 79
    3658:	b0 e0       	ldi	r27, 0x00	; 0
    365a:	ef e4       	ldi	r30, 0x4F	; 79
    365c:	f0 e0       	ldi	r31, 0x00	; 0
    365e:	80 81       	ld	r24, Z
    3660:	8f 7e       	andi	r24, 0xEF	; 239
    3662:	8c 93       	st	X, r24
						CLR_BIT(TCCR1A,COM1B1);
    3664:	af e4       	ldi	r26, 0x4F	; 79
    3666:	b0 e0       	ldi	r27, 0x00	; 0
    3668:	ef e4       	ldi	r30, 0x4F	; 79
    366a:	f0 e0       	ldi	r31, 0x00	; 0
    366c:	80 81       	ld	r24, Z
    366e:	8f 7d       	andi	r24, 0xDF	; 223
    3670:	8c 93       	st	X, r24

						CLR_BIT(TCCR1A,COM1C0);
    3672:	af e4       	ldi	r26, 0x4F	; 79
    3674:	b0 e0       	ldi	r27, 0x00	; 0
    3676:	ef e4       	ldi	r30, 0x4F	; 79
    3678:	f0 e0       	ldi	r31, 0x00	; 0
    367a:	80 81       	ld	r24, Z
    367c:	8b 7f       	andi	r24, 0xFB	; 251
    367e:	8c 93       	st	X, r24
						CLR_BIT(TCCR1A,COM1C1);
    3680:	af e4       	ldi	r26, 0x4F	; 79
    3682:	b0 e0       	ldi	r27, 0x00	; 0
    3684:	ef e4       	ldi	r30, 0x4F	; 79
    3686:	f0 e0       	ldi	r31, 0x00	; 0
    3688:	80 81       	ld	r24, Z
    368a:	87 7f       	andi	r24, 0xF7	; 247
    368c:	8c 93       	st	X, r24
    368e:	d6 c0       	rjmp	.+428    	; 0x383c <Timer1_Init+0x68e>
						break;
case Toggle_1:switch(channel_t)
    3690:	8c 81       	ldd	r24, Y+4	; 0x04
    3692:	28 2f       	mov	r18, r24
    3694:	30 e0       	ldi	r19, 0x00	; 0
    3696:	3a 87       	std	Y+10, r19	; 0x0a
    3698:	29 87       	std	Y+9, r18	; 0x09
    369a:	89 85       	ldd	r24, Y+9	; 0x09
    369c:	9a 85       	ldd	r25, Y+10	; 0x0a
    369e:	81 30       	cpi	r24, 0x01	; 1
    36a0:	91 05       	cpc	r25, r1
    36a2:	89 f0       	breq	.+34     	; 0x36c6 <Timer1_Init+0x518>
    36a4:	29 85       	ldd	r18, Y+9	; 0x09
    36a6:	3a 85       	ldd	r19, Y+10	; 0x0a
    36a8:	22 30       	cpi	r18, 0x02	; 2
    36aa:	31 05       	cpc	r19, r1
    36ac:	0c f4       	brge	.+2      	; 0x36b0 <Timer1_Init+0x502>
    36ae:	c6 c0       	rjmp	.+396    	; 0x383c <Timer1_Init+0x68e>
    36b0:	89 85       	ldd	r24, Y+9	; 0x09
    36b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    36b4:	82 30       	cpi	r24, 0x02	; 2
    36b6:	91 05       	cpc	r25, r1
    36b8:	a9 f0       	breq	.+42     	; 0x36e4 <Timer1_Init+0x536>
    36ba:	29 85       	ldd	r18, Y+9	; 0x09
    36bc:	3a 85       	ldd	r19, Y+10	; 0x0a
    36be:	23 30       	cpi	r18, 0x03	; 3
    36c0:	31 05       	cpc	r19, r1
    36c2:	f9 f0       	breq	.+62     	; 0x3702 <Timer1_Init+0x554>
    36c4:	bb c0       	rjmp	.+374    	; 0x383c <Timer1_Init+0x68e>
                  {
                      case disconnected_channel:break;
                      case A_Channel:SET_BIT(TCCR1A,COM1A0);
    36c6:	af e4       	ldi	r26, 0x4F	; 79
    36c8:	b0 e0       	ldi	r27, 0x00	; 0
    36ca:	ef e4       	ldi	r30, 0x4F	; 79
    36cc:	f0 e0       	ldi	r31, 0x00	; 0
    36ce:	80 81       	ld	r24, Z
    36d0:	80 64       	ori	r24, 0x40	; 64
    36d2:	8c 93       	st	X, r24
						             CLR_BIT(TCCR1A,COM1A1);
    36d4:	af e4       	ldi	r26, 0x4F	; 79
    36d6:	b0 e0       	ldi	r27, 0x00	; 0
    36d8:	ef e4       	ldi	r30, 0x4F	; 79
    36da:	f0 e0       	ldi	r31, 0x00	; 0
    36dc:	80 81       	ld	r24, Z
    36de:	8f 77       	andi	r24, 0x7F	; 127
    36e0:	8c 93       	st	X, r24
    36e2:	ac c0       	rjmp	.+344    	; 0x383c <Timer1_Init+0x68e>
						             break;
                      case B_Channel:SET_BIT(TCCR1A,COM1B0);
    36e4:	af e4       	ldi	r26, 0x4F	; 79
    36e6:	b0 e0       	ldi	r27, 0x00	; 0
    36e8:	ef e4       	ldi	r30, 0x4F	; 79
    36ea:	f0 e0       	ldi	r31, 0x00	; 0
    36ec:	80 81       	ld	r24, Z
    36ee:	80 61       	ori	r24, 0x10	; 16
    36f0:	8c 93       	st	X, r24
                      				 CLR_BIT(TCCR1A,COM1B1);
    36f2:	af e4       	ldi	r26, 0x4F	; 79
    36f4:	b0 e0       	ldi	r27, 0x00	; 0
    36f6:	ef e4       	ldi	r30, 0x4F	; 79
    36f8:	f0 e0       	ldi	r31, 0x00	; 0
    36fa:	80 81       	ld	r24, Z
    36fc:	8f 7d       	andi	r24, 0xDF	; 223
    36fe:	8c 93       	st	X, r24
    3700:	9d c0       	rjmp	.+314    	; 0x383c <Timer1_Init+0x68e>
                      		         break;
                      case C_Channel:SET_BIT(TCCR1A,COM1C0);
    3702:	af e4       	ldi	r26, 0x4F	; 79
    3704:	b0 e0       	ldi	r27, 0x00	; 0
    3706:	ef e4       	ldi	r30, 0x4F	; 79
    3708:	f0 e0       	ldi	r31, 0x00	; 0
    370a:	80 81       	ld	r24, Z
    370c:	84 60       	ori	r24, 0x04	; 4
    370e:	8c 93       	st	X, r24
                      			     CLR_BIT(TCCR1A,COM1C1);
    3710:	af e4       	ldi	r26, 0x4F	; 79
    3712:	b0 e0       	ldi	r27, 0x00	; 0
    3714:	ef e4       	ldi	r30, 0x4F	; 79
    3716:	f0 e0       	ldi	r31, 0x00	; 0
    3718:	80 81       	ld	r24, Z
    371a:	87 7f       	andi	r24, 0xF7	; 247
    371c:	8c 93       	st	X, r24
    371e:	8e c0       	rjmp	.+284    	; 0x383c <Timer1_Init+0x68e>
                      				 break;
                    }
						break;
case Non_inverting_1:switch(channel_t)
    3720:	8c 81       	ldd	r24, Y+4	; 0x04
    3722:	28 2f       	mov	r18, r24
    3724:	30 e0       	ldi	r19, 0x00	; 0
    3726:	38 87       	std	Y+8, r19	; 0x08
    3728:	2f 83       	std	Y+7, r18	; 0x07
    372a:	8f 81       	ldd	r24, Y+7	; 0x07
    372c:	98 85       	ldd	r25, Y+8	; 0x08
    372e:	81 30       	cpi	r24, 0x01	; 1
    3730:	91 05       	cpc	r25, r1
    3732:	89 f0       	breq	.+34     	; 0x3756 <Timer1_Init+0x5a8>
    3734:	2f 81       	ldd	r18, Y+7	; 0x07
    3736:	38 85       	ldd	r19, Y+8	; 0x08
    3738:	22 30       	cpi	r18, 0x02	; 2
    373a:	31 05       	cpc	r19, r1
    373c:	0c f4       	brge	.+2      	; 0x3740 <Timer1_Init+0x592>
    373e:	7e c0       	rjmp	.+252    	; 0x383c <Timer1_Init+0x68e>
    3740:	8f 81       	ldd	r24, Y+7	; 0x07
    3742:	98 85       	ldd	r25, Y+8	; 0x08
    3744:	82 30       	cpi	r24, 0x02	; 2
    3746:	91 05       	cpc	r25, r1
    3748:	a9 f0       	breq	.+42     	; 0x3774 <Timer1_Init+0x5c6>
    374a:	2f 81       	ldd	r18, Y+7	; 0x07
    374c:	38 85       	ldd	r19, Y+8	; 0x08
    374e:	23 30       	cpi	r18, 0x03	; 3
    3750:	31 05       	cpc	r19, r1
    3752:	f9 f0       	breq	.+62     	; 0x3792 <Timer1_Init+0x5e4>
    3754:	73 c0       	rjmp	.+230    	; 0x383c <Timer1_Init+0x68e>
                        {
                          case disconnected_channel:break;
                          case A_Channel:CLR_BIT(TCCR1A,COM1A0);
    3756:	af e4       	ldi	r26, 0x4F	; 79
    3758:	b0 e0       	ldi	r27, 0x00	; 0
    375a:	ef e4       	ldi	r30, 0x4F	; 79
    375c:	f0 e0       	ldi	r31, 0x00	; 0
    375e:	80 81       	ld	r24, Z
    3760:	8f 7b       	andi	r24, 0xBF	; 191
    3762:	8c 93       	st	X, r24
						                 SET_BIT(TCCR1A,COM1A1);
    3764:	af e4       	ldi	r26, 0x4F	; 79
    3766:	b0 e0       	ldi	r27, 0x00	; 0
    3768:	ef e4       	ldi	r30, 0x4F	; 79
    376a:	f0 e0       	ldi	r31, 0x00	; 0
    376c:	80 81       	ld	r24, Z
    376e:	80 68       	ori	r24, 0x80	; 128
    3770:	8c 93       	st	X, r24
    3772:	64 c0       	rjmp	.+200    	; 0x383c <Timer1_Init+0x68e>
						                 break;
                          case B_Channel:CLR_BIT(TCCR1A,COM1B0);
    3774:	af e4       	ldi	r26, 0x4F	; 79
    3776:	b0 e0       	ldi	r27, 0x00	; 0
    3778:	ef e4       	ldi	r30, 0x4F	; 79
    377a:	f0 e0       	ldi	r31, 0x00	; 0
    377c:	80 81       	ld	r24, Z
    377e:	8f 7e       	andi	r24, 0xEF	; 239
    3780:	8c 93       	st	X, r24
                          				 SET_BIT(TCCR1A,COM1B1);
    3782:	af e4       	ldi	r26, 0x4F	; 79
    3784:	b0 e0       	ldi	r27, 0x00	; 0
    3786:	ef e4       	ldi	r30, 0x4F	; 79
    3788:	f0 e0       	ldi	r31, 0x00	; 0
    378a:	80 81       	ld	r24, Z
    378c:	80 62       	ori	r24, 0x20	; 32
    378e:	8c 93       	st	X, r24
    3790:	55 c0       	rjmp	.+170    	; 0x383c <Timer1_Init+0x68e>
                          				 break;
                          case C_Channel:CLR_BIT(TCCR1A,COM1C0);
    3792:	af e4       	ldi	r26, 0x4F	; 79
    3794:	b0 e0       	ldi	r27, 0x00	; 0
    3796:	ef e4       	ldi	r30, 0x4F	; 79
    3798:	f0 e0       	ldi	r31, 0x00	; 0
    379a:	80 81       	ld	r24, Z
    379c:	8b 7f       	andi	r24, 0xFB	; 251
    379e:	8c 93       	st	X, r24
                          				 SET_BIT(TCCR1A,COM1C1);
    37a0:	af e4       	ldi	r26, 0x4F	; 79
    37a2:	b0 e0       	ldi	r27, 0x00	; 0
    37a4:	ef e4       	ldi	r30, 0x4F	; 79
    37a6:	f0 e0       	ldi	r31, 0x00	; 0
    37a8:	80 81       	ld	r24, Z
    37aa:	88 60       	ori	r24, 0x08	; 8
    37ac:	8c 93       	st	X, r24
    37ae:	46 c0       	rjmp	.+140    	; 0x383c <Timer1_Init+0x68e>
                          				 break;
                         }
						break;
case Inverting_1:switch(channel_t)
    37b0:	8c 81       	ldd	r24, Y+4	; 0x04
    37b2:	28 2f       	mov	r18, r24
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	3e 83       	std	Y+6, r19	; 0x06
    37b8:	2d 83       	std	Y+5, r18	; 0x05
    37ba:	8d 81       	ldd	r24, Y+5	; 0x05
    37bc:	9e 81       	ldd	r25, Y+6	; 0x06
    37be:	81 30       	cpi	r24, 0x01	; 1
    37c0:	91 05       	cpc	r25, r1
    37c2:	81 f0       	breq	.+32     	; 0x37e4 <Timer1_Init+0x636>
    37c4:	2d 81       	ldd	r18, Y+5	; 0x05
    37c6:	3e 81       	ldd	r19, Y+6	; 0x06
    37c8:	22 30       	cpi	r18, 0x02	; 2
    37ca:	31 05       	cpc	r19, r1
    37cc:	bc f1       	brlt	.+110    	; 0x383c <Timer1_Init+0x68e>
    37ce:	8d 81       	ldd	r24, Y+5	; 0x05
    37d0:	9e 81       	ldd	r25, Y+6	; 0x06
    37d2:	82 30       	cpi	r24, 0x02	; 2
    37d4:	91 05       	cpc	r25, r1
    37d6:	a9 f0       	breq	.+42     	; 0x3802 <Timer1_Init+0x654>
    37d8:	2d 81       	ldd	r18, Y+5	; 0x05
    37da:	3e 81       	ldd	r19, Y+6	; 0x06
    37dc:	23 30       	cpi	r18, 0x03	; 3
    37de:	31 05       	cpc	r19, r1
    37e0:	f9 f0       	breq	.+62     	; 0x3820 <Timer1_Init+0x672>
    37e2:	2c c0       	rjmp	.+88     	; 0x383c <Timer1_Init+0x68e>
                     {

                       case disconnected_channel:break;
                       case A_Channel:SET_BIT(TCCR1A,COM1A0);
    37e4:	af e4       	ldi	r26, 0x4F	; 79
    37e6:	b0 e0       	ldi	r27, 0x00	; 0
    37e8:	ef e4       	ldi	r30, 0x4F	; 79
    37ea:	f0 e0       	ldi	r31, 0x00	; 0
    37ec:	80 81       	ld	r24, Z
    37ee:	80 64       	ori	r24, 0x40	; 64
    37f0:	8c 93       	st	X, r24
                                      SET_BIT(TCCR1A,COM1A1);
    37f2:	af e4       	ldi	r26, 0x4F	; 79
    37f4:	b0 e0       	ldi	r27, 0x00	; 0
    37f6:	ef e4       	ldi	r30, 0x4F	; 79
    37f8:	f0 e0       	ldi	r31, 0x00	; 0
    37fa:	80 81       	ld	r24, Z
    37fc:	80 68       	ori	r24, 0x80	; 128
    37fe:	8c 93       	st	X, r24
    3800:	1d c0       	rjmp	.+58     	; 0x383c <Timer1_Init+0x68e>
                                      break;
                       case B_Channel:SET_BIT(TCCR1A,COM1B0);
    3802:	af e4       	ldi	r26, 0x4F	; 79
    3804:	b0 e0       	ldi	r27, 0x00	; 0
    3806:	ef e4       	ldi	r30, 0x4F	; 79
    3808:	f0 e0       	ldi	r31, 0x00	; 0
    380a:	80 81       	ld	r24, Z
    380c:	80 61       	ori	r24, 0x10	; 16
    380e:	8c 93       	st	X, r24
  				                      SET_BIT(TCCR1A,COM1B1);
    3810:	af e4       	ldi	r26, 0x4F	; 79
    3812:	b0 e0       	ldi	r27, 0x00	; 0
    3814:	ef e4       	ldi	r30, 0x4F	; 79
    3816:	f0 e0       	ldi	r31, 0x00	; 0
    3818:	80 81       	ld	r24, Z
    381a:	80 62       	ori	r24, 0x20	; 32
    381c:	8c 93       	st	X, r24
    381e:	0e c0       	rjmp	.+28     	; 0x383c <Timer1_Init+0x68e>
  			                       	  break;
                       case C_Channel:SET_BIT(TCCR1A,COM1C0);
    3820:	af e4       	ldi	r26, 0x4F	; 79
    3822:	b0 e0       	ldi	r27, 0x00	; 0
    3824:	ef e4       	ldi	r30, 0x4F	; 79
    3826:	f0 e0       	ldi	r31, 0x00	; 0
    3828:	80 81       	ld	r24, Z
    382a:	84 60       	ori	r24, 0x04	; 4
    382c:	8c 93       	st	X, r24
  				                      SET_BIT(TCCR1A,COM1C1);
    382e:	af e4       	ldi	r26, 0x4F	; 79
    3830:	b0 e0       	ldi	r27, 0x00	; 0
    3832:	ef e4       	ldi	r30, 0x4F	; 79
    3834:	f0 e0       	ldi	r31, 0x00	; 0
    3836:	80 81       	ld	r24, Z
    3838:	88 60       	ori	r24, 0x08	; 8
    383a:	8c 93       	st	X, r24
							break;

}

#endif
	TCCR1B&=0XF8;
    383c:	ae e4       	ldi	r26, 0x4E	; 78
    383e:	b0 e0       	ldi	r27, 0x00	; 0
    3840:	ee e4       	ldi	r30, 0x4E	; 78
    3842:	f0 e0       	ldi	r31, 0x00	; 0
    3844:	80 81       	ld	r24, Z
    3846:	88 7f       	andi	r24, 0xF8	; 248
    3848:	8c 93       	st	X, r24
	TCCR1B|=scaler;
    384a:	ae e4       	ldi	r26, 0x4E	; 78
    384c:	b0 e0       	ldi	r27, 0x00	; 0
    384e:	ee e4       	ldi	r30, 0x4E	; 78
    3850:	f0 e0       	ldi	r31, 0x00	; 0
    3852:	90 81       	ld	r25, Z
    3854:	8a 81       	ldd	r24, Y+2	; 0x02
    3856:	89 2b       	or	r24, r25
    3858:	8c 93       	st	X, r24

}
    385a:	2e 96       	adiw	r28, 0x0e	; 14
    385c:	0f b6       	in	r0, 0x3f	; 63
    385e:	f8 94       	cli
    3860:	de bf       	out	0x3e, r29	; 62
    3862:	0f be       	out	0x3f, r0	; 63
    3864:	cd bf       	out	0x3d, r28	; 61
    3866:	cf 91       	pop	r28
    3868:	df 91       	pop	r29
    386a:	08 95       	ret

0000386c <Timer1_InputCaptureEdge>:

void Timer1_InputCaptureEdge(Edge_type edge)
{
    386c:	df 93       	push	r29
    386e:	cf 93       	push	r28
    3870:	0f 92       	push	r0
    3872:	cd b7       	in	r28, 0x3d	; 61
    3874:	de b7       	in	r29, 0x3e	; 62
    3876:	89 83       	std	Y+1, r24	; 0x01
	if(edge==Rising)
    3878:	89 81       	ldd	r24, Y+1	; 0x01
    387a:	81 30       	cpi	r24, 0x01	; 1
    387c:	41 f4       	brne	.+16     	; 0x388e <Timer1_InputCaptureEdge+0x22>
		SET_BIT(TCCR1B,ICES1);
    387e:	ae e4       	ldi	r26, 0x4E	; 78
    3880:	b0 e0       	ldi	r27, 0x00	; 0
    3882:	ee e4       	ldi	r30, 0x4E	; 78
    3884:	f0 e0       	ldi	r31, 0x00	; 0
    3886:	80 81       	ld	r24, Z
    3888:	80 64       	ori	r24, 0x40	; 64
    388a:	8c 93       	st	X, r24
    388c:	0a c0       	rjmp	.+20     	; 0x38a2 <Timer1_InputCaptureEdge+0x36>


	else if(edge==Falling)
    388e:	89 81       	ldd	r24, Y+1	; 0x01
    3890:	88 23       	and	r24, r24
    3892:	39 f4       	brne	.+14     	; 0x38a2 <Timer1_InputCaptureEdge+0x36>
		CLR_BIT(TCCR1B,ICES1);
    3894:	ae e4       	ldi	r26, 0x4E	; 78
    3896:	b0 e0       	ldi	r27, 0x00	; 0
    3898:	ee e4       	ldi	r30, 0x4E	; 78
    389a:	f0 e0       	ldi	r31, 0x00	; 0
    389c:	80 81       	ld	r24, Z
    389e:	8f 7b       	andi	r24, 0xBF	; 191
    38a0:	8c 93       	st	X, r24

}
    38a2:	0f 90       	pop	r0
    38a4:	cf 91       	pop	r28
    38a6:	df 91       	pop	r29
    38a8:	08 95       	ret

000038aa <Timer1_ICU_InterruptEnable>:

void Timer1_ICU_InterruptEnable(void)
{
    38aa:	df 93       	push	r29
    38ac:	cf 93       	push	r28
    38ae:	cd b7       	in	r28, 0x3d	; 61
    38b0:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TICIE1);
    38b2:	a7 e5       	ldi	r26, 0x57	; 87
    38b4:	b0 e0       	ldi	r27, 0x00	; 0
    38b6:	e7 e5       	ldi	r30, 0x57	; 87
    38b8:	f0 e0       	ldi	r31, 0x00	; 0
    38ba:	80 81       	ld	r24, Z
    38bc:	80 62       	ori	r24, 0x20	; 32
    38be:	8c 93       	st	X, r24
}
    38c0:	cf 91       	pop	r28
    38c2:	df 91       	pop	r29
    38c4:	08 95       	ret

000038c6 <Timer1_ICU_InterruptDisable>:
void Timer1_ICU_InterruptDisable(void)
{
    38c6:	df 93       	push	r29
    38c8:	cf 93       	push	r28
    38ca:	cd b7       	in	r28, 0x3d	; 61
    38cc:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TICIE1);
    38ce:	a7 e5       	ldi	r26, 0x57	; 87
    38d0:	b0 e0       	ldi	r27, 0x00	; 0
    38d2:	e7 e5       	ldi	r30, 0x57	; 87
    38d4:	f0 e0       	ldi	r31, 0x00	; 0
    38d6:	80 81       	ld	r24, Z
    38d8:	8f 7d       	andi	r24, 0xDF	; 223
    38da:	8c 93       	st	X, r24
}
    38dc:	cf 91       	pop	r28
    38de:	df 91       	pop	r29
    38e0:	08 95       	ret

000038e2 <Timer1_OV_InterruptEnable>:
void Timer1_OV_InterruptEnable(void)
{
    38e2:	df 93       	push	r29
    38e4:	cf 93       	push	r28
    38e6:	cd b7       	in	r28, 0x3d	; 61
    38e8:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TOIE1);
    38ea:	a7 e5       	ldi	r26, 0x57	; 87
    38ec:	b0 e0       	ldi	r27, 0x00	; 0
    38ee:	e7 e5       	ldi	r30, 0x57	; 87
    38f0:	f0 e0       	ldi	r31, 0x00	; 0
    38f2:	80 81       	ld	r24, Z
    38f4:	84 60       	ori	r24, 0x04	; 4
    38f6:	8c 93       	st	X, r24
}
    38f8:	cf 91       	pop	r28
    38fa:	df 91       	pop	r29
    38fc:	08 95       	ret

000038fe <Timer1_OV_InterruptDisable>:
void Timer1_OV_InterruptDisable(void)
{
    38fe:	df 93       	push	r29
    3900:	cf 93       	push	r28
    3902:	cd b7       	in	r28, 0x3d	; 61
    3904:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TOIE1);
    3906:	a7 e5       	ldi	r26, 0x57	; 87
    3908:	b0 e0       	ldi	r27, 0x00	; 0
    390a:	e7 e5       	ldi	r30, 0x57	; 87
    390c:	f0 e0       	ldi	r31, 0x00	; 0
    390e:	80 81       	ld	r24, Z
    3910:	8b 7f       	andi	r24, 0xFB	; 251
    3912:	8c 93       	st	X, r24
}
    3914:	cf 91       	pop	r28
    3916:	df 91       	pop	r29
    3918:	08 95       	ret

0000391a <Timer1_OCA_InterruptEnable>:
void Timer1_OCA_InterruptEnable(void)
{
    391a:	df 93       	push	r29
    391c:	cf 93       	push	r28
    391e:	cd b7       	in	r28, 0x3d	; 61
    3920:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1A);
    3922:	a7 e5       	ldi	r26, 0x57	; 87
    3924:	b0 e0       	ldi	r27, 0x00	; 0
    3926:	e7 e5       	ldi	r30, 0x57	; 87
    3928:	f0 e0       	ldi	r31, 0x00	; 0
    392a:	80 81       	ld	r24, Z
    392c:	80 61       	ori	r24, 0x10	; 16
    392e:	8c 93       	st	X, r24
}
    3930:	cf 91       	pop	r28
    3932:	df 91       	pop	r29
    3934:	08 95       	ret

00003936 <Timer1_OCA_InterruptDisable>:
void Timer1_OCA_InterruptDisable(void)
{
    3936:	df 93       	push	r29
    3938:	cf 93       	push	r28
    393a:	cd b7       	in	r28, 0x3d	; 61
    393c:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1A);
    393e:	a7 e5       	ldi	r26, 0x57	; 87
    3940:	b0 e0       	ldi	r27, 0x00	; 0
    3942:	e7 e5       	ldi	r30, 0x57	; 87
    3944:	f0 e0       	ldi	r31, 0x00	; 0
    3946:	80 81       	ld	r24, Z
    3948:	8f 7e       	andi	r24, 0xEF	; 239
    394a:	8c 93       	st	X, r24
}
    394c:	cf 91       	pop	r28
    394e:	df 91       	pop	r29
    3950:	08 95       	ret

00003952 <Timer1_OCB_InterruptEnable>:
void Timer1_OCB_InterruptEnable(void)
{
    3952:	df 93       	push	r29
    3954:	cf 93       	push	r28
    3956:	cd b7       	in	r28, 0x3d	; 61
    3958:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1B);
    395a:	a7 e5       	ldi	r26, 0x57	; 87
    395c:	b0 e0       	ldi	r27, 0x00	; 0
    395e:	e7 e5       	ldi	r30, 0x57	; 87
    3960:	f0 e0       	ldi	r31, 0x00	; 0
    3962:	80 81       	ld	r24, Z
    3964:	88 60       	ori	r24, 0x08	; 8
    3966:	8c 93       	st	X, r24
}
    3968:	cf 91       	pop	r28
    396a:	df 91       	pop	r29
    396c:	08 95       	ret

0000396e <Timer1_OCB_InterruptDisable>:
void Timer1_OCB_InterruptDisable(void)
{
    396e:	df 93       	push	r29
    3970:	cf 93       	push	r28
    3972:	cd b7       	in	r28, 0x3d	; 61
    3974:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1B);
    3976:	a7 e5       	ldi	r26, 0x57	; 87
    3978:	b0 e0       	ldi	r27, 0x00	; 0
    397a:	e7 e5       	ldi	r30, 0x57	; 87
    397c:	f0 e0       	ldi	r31, 0x00	; 0
    397e:	80 81       	ld	r24, Z
    3980:	87 7f       	andi	r24, 0xF7	; 247
    3982:	8c 93       	st	X, r24
}
    3984:	cf 91       	pop	r28
    3986:	df 91       	pop	r29
    3988:	08 95       	ret

0000398a <Timer1_OCC_InterruptEnable>:

void Timer1_OCC_InterruptEnable(void)
{
    398a:	df 93       	push	r29
    398c:	cf 93       	push	r28
    398e:	cd b7       	in	r28, 0x3d	; 61
    3990:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ETIMSK,OCIE1C);
    3992:	ad e7       	ldi	r26, 0x7D	; 125
    3994:	b0 e0       	ldi	r27, 0x00	; 0
    3996:	ed e7       	ldi	r30, 0x7D	; 125
    3998:	f0 e0       	ldi	r31, 0x00	; 0
    399a:	80 81       	ld	r24, Z
    399c:	81 60       	ori	r24, 0x01	; 1
    399e:	8c 93       	st	X, r24
}
    39a0:	cf 91       	pop	r28
    39a2:	df 91       	pop	r29
    39a4:	08 95       	ret

000039a6 <Timer1_OCC_InterruptDisable>:
void Timer1_OCC_InterruptDisable(void)
{
    39a6:	df 93       	push	r29
    39a8:	cf 93       	push	r28
    39aa:	cd b7       	in	r28, 0x3d	; 61
    39ac:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ETIMSK,OCIE1C);
    39ae:	ad e7       	ldi	r26, 0x7D	; 125
    39b0:	b0 e0       	ldi	r27, 0x00	; 0
    39b2:	ed e7       	ldi	r30, 0x7D	; 125
    39b4:	f0 e0       	ldi	r31, 0x00	; 0
    39b6:	80 81       	ld	r24, Z
    39b8:	8e 7f       	andi	r24, 0xFE	; 254
    39ba:	8c 93       	st	X, r24
}
    39bc:	cf 91       	pop	r28
    39be:	df 91       	pop	r29
    39c0:	08 95       	ret

000039c2 <TMR1_uint16_GetICUValue>:


uint16  TMR1_uint16_GetICUValue(void)
{
    39c2:	df 93       	push	r29
    39c4:	cf 93       	push	r28
    39c6:	00 d0       	rcall	.+0      	; 0x39c8 <TMR1_uint16_GetICUValue+0x6>
    39c8:	cd b7       	in	r28, 0x3d	; 61
    39ca:	de b7       	in	r29, 0x3e	; 62
	uint16 ret_val;
		ret_val=ICR1L|(ICR1H<<8);
    39cc:	e6 e4       	ldi	r30, 0x46	; 70
    39ce:	f0 e0       	ldi	r31, 0x00	; 0
    39d0:	80 81       	ld	r24, Z
    39d2:	28 2f       	mov	r18, r24
    39d4:	30 e0       	ldi	r19, 0x00	; 0
    39d6:	e7 e4       	ldi	r30, 0x47	; 71
    39d8:	f0 e0       	ldi	r31, 0x00	; 0
    39da:	80 81       	ld	r24, Z
    39dc:	88 2f       	mov	r24, r24
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	98 2f       	mov	r25, r24
    39e2:	88 27       	eor	r24, r24
    39e4:	82 2b       	or	r24, r18
    39e6:	93 2b       	or	r25, r19
    39e8:	9a 83       	std	Y+2, r25	; 0x02
    39ea:	89 83       	std	Y+1, r24	; 0x01
		return ret_val;
    39ec:	89 81       	ldd	r24, Y+1	; 0x01
    39ee:	9a 81       	ldd	r25, Y+2	; 0x02
}
    39f0:	0f 90       	pop	r0
    39f2:	0f 90       	pop	r0
    39f4:	cf 91       	pop	r28
    39f6:	df 91       	pop	r29
    39f8:	08 95       	ret

000039fa <TMR1_uint16_GetTimerValue>:

uint16  TMR1_uint16_GetTimerValue(void)
{
    39fa:	df 93       	push	r29
    39fc:	cf 93       	push	r28
    39fe:	00 d0       	rcall	.+0      	; 0x3a00 <TMR1_uint16_GetTimerValue+0x6>
    3a00:	cd b7       	in	r28, 0x3d	; 61
    3a02:	de b7       	in	r29, 0x3e	; 62

	uint16 ret_val;
	ret_val=TCNT1L|(TCNT1H<<8);
    3a04:	ec e4       	ldi	r30, 0x4C	; 76
    3a06:	f0 e0       	ldi	r31, 0x00	; 0
    3a08:	80 81       	ld	r24, Z
    3a0a:	28 2f       	mov	r18, r24
    3a0c:	30 e0       	ldi	r19, 0x00	; 0
    3a0e:	ed e4       	ldi	r30, 0x4D	; 77
    3a10:	f0 e0       	ldi	r31, 0x00	; 0
    3a12:	80 81       	ld	r24, Z
    3a14:	88 2f       	mov	r24, r24
    3a16:	90 e0       	ldi	r25, 0x00	; 0
    3a18:	98 2f       	mov	r25, r24
    3a1a:	88 27       	eor	r24, r24
    3a1c:	82 2b       	or	r24, r18
    3a1e:	93 2b       	or	r25, r19
    3a20:	9a 83       	std	Y+2, r25	; 0x02
    3a22:	89 83       	std	Y+1, r24	; 0x01
	return ret_val;
    3a24:	89 81       	ldd	r24, Y+1	; 0x01
    3a26:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3a28:	0f 90       	pop	r0
    3a2a:	0f 90       	pop	r0
    3a2c:	cf 91       	pop	r28
    3a2e:	df 91       	pop	r29
    3a30:	08 95       	ret

00003a32 <TMR1_void_SetTimerValue>:


void  TMR1_void_SetTimerValue(uint16 tmr_val)
{
    3a32:	df 93       	push	r29
    3a34:	cf 93       	push	r28
    3a36:	00 d0       	rcall	.+0      	; 0x3a38 <TMR1_void_SetTimerValue+0x6>
    3a38:	cd b7       	in	r28, 0x3d	; 61
    3a3a:	de b7       	in	r29, 0x3e	; 62
    3a3c:	9a 83       	std	Y+2, r25	; 0x02
    3a3e:	89 83       	std	Y+1, r24	; 0x01
TCNT1L=(uint8)tmr_val;
    3a40:	ec e4       	ldi	r30, 0x4C	; 76
    3a42:	f0 e0       	ldi	r31, 0x00	; 0
    3a44:	89 81       	ldd	r24, Y+1	; 0x01
    3a46:	80 83       	st	Z, r24
TCNT1H=(uint8)(tmr_val>>8);
    3a48:	ed e4       	ldi	r30, 0x4D	; 77
    3a4a:	f0 e0       	ldi	r31, 0x00	; 0
    3a4c:	89 81       	ldd	r24, Y+1	; 0x01
    3a4e:	9a 81       	ldd	r25, Y+2	; 0x02
    3a50:	89 2f       	mov	r24, r25
    3a52:	99 27       	eor	r25, r25
    3a54:	80 83       	st	Z, r24
}
    3a56:	0f 90       	pop	r0
    3a58:	0f 90       	pop	r0
    3a5a:	cf 91       	pop	r28
    3a5c:	df 91       	pop	r29
    3a5e:	08 95       	ret

00003a60 <TMR1_void_Set_OCR_TimerValue>:

void  TMR1_void_Set_OCR_TimerValue(uint16 oc_val,OC1_ch_type ch)
{
    3a60:	df 93       	push	r29
    3a62:	cf 93       	push	r28
    3a64:	00 d0       	rcall	.+0      	; 0x3a66 <TMR1_void_Set_OCR_TimerValue+0x6>
    3a66:	00 d0       	rcall	.+0      	; 0x3a68 <TMR1_void_Set_OCR_TimerValue+0x8>
    3a68:	0f 92       	push	r0
    3a6a:	cd b7       	in	r28, 0x3d	; 61
    3a6c:	de b7       	in	r29, 0x3e	; 62
    3a6e:	9a 83       	std	Y+2, r25	; 0x02
    3a70:	89 83       	std	Y+1, r24	; 0x01
    3a72:	6b 83       	std	Y+3, r22	; 0x03
	switch(ch){
    3a74:	8b 81       	ldd	r24, Y+3	; 0x03
    3a76:	28 2f       	mov	r18, r24
    3a78:	30 e0       	ldi	r19, 0x00	; 0
    3a7a:	3d 83       	std	Y+5, r19	; 0x05
    3a7c:	2c 83       	std	Y+4, r18	; 0x04
    3a7e:	8c 81       	ldd	r24, Y+4	; 0x04
    3a80:	9d 81       	ldd	r25, Y+5	; 0x05
    3a82:	81 30       	cpi	r24, 0x01	; 1
    3a84:	91 05       	cpc	r25, r1
    3a86:	81 f0       	breq	.+32     	; 0x3aa8 <TMR1_void_Set_OCR_TimerValue+0x48>
    3a88:	2c 81       	ldd	r18, Y+4	; 0x04
    3a8a:	3d 81       	ldd	r19, Y+5	; 0x05
    3a8c:	22 30       	cpi	r18, 0x02	; 2
    3a8e:	31 05       	cpc	r19, r1
    3a90:	74 f1       	brlt	.+92     	; 0x3aee <TMR1_void_Set_OCR_TimerValue+0x8e>
    3a92:	8c 81       	ldd	r24, Y+4	; 0x04
    3a94:	9d 81       	ldd	r25, Y+5	; 0x05
    3a96:	82 30       	cpi	r24, 0x02	; 2
    3a98:	91 05       	cpc	r25, r1
    3a9a:	91 f0       	breq	.+36     	; 0x3ac0 <TMR1_void_Set_OCR_TimerValue+0x60>
    3a9c:	2c 81       	ldd	r18, Y+4	; 0x04
    3a9e:	3d 81       	ldd	r19, Y+5	; 0x05
    3aa0:	23 30       	cpi	r18, 0x03	; 3
    3aa2:	31 05       	cpc	r19, r1
    3aa4:	c9 f0       	breq	.+50     	; 0x3ad8 <TMR1_void_Set_OCR_TimerValue+0x78>
    3aa6:	23 c0       	rjmp	.+70     	; 0x3aee <TMR1_void_Set_OCR_TimerValue+0x8e>
	case disconnected_channel:break;
	case A_Channel:OCR1AL=(uint8)oc_val;
    3aa8:	ea e4       	ldi	r30, 0x4A	; 74
    3aaa:	f0 e0       	ldi	r31, 0x00	; 0
    3aac:	89 81       	ldd	r24, Y+1	; 0x01
    3aae:	80 83       	st	Z, r24
	               OCR1AH=(uint8)(oc_val>>8);
    3ab0:	eb e4       	ldi	r30, 0x4B	; 75
    3ab2:	f0 e0       	ldi	r31, 0x00	; 0
    3ab4:	89 81       	ldd	r24, Y+1	; 0x01
    3ab6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ab8:	89 2f       	mov	r24, r25
    3aba:	99 27       	eor	r25, r25
    3abc:	80 83       	st	Z, r24
    3abe:	17 c0       	rjmp	.+46     	; 0x3aee <TMR1_void_Set_OCR_TimerValue+0x8e>
	               break;
	case B_Channel:OCR1BL=(uint8)oc_val;
    3ac0:	e8 e4       	ldi	r30, 0x48	; 72
    3ac2:	f0 e0       	ldi	r31, 0x00	; 0
    3ac4:	89 81       	ldd	r24, Y+1	; 0x01
    3ac6:	80 83       	st	Z, r24
		           OCR1BH=(uint8)(oc_val>>8);
    3ac8:	e9 e4       	ldi	r30, 0x49	; 73
    3aca:	f0 e0       	ldi	r31, 0x00	; 0
    3acc:	89 81       	ldd	r24, Y+1	; 0x01
    3ace:	9a 81       	ldd	r25, Y+2	; 0x02
    3ad0:	89 2f       	mov	r24, r25
    3ad2:	99 27       	eor	r25, r25
    3ad4:	80 83       	st	Z, r24
    3ad6:	0b c0       	rjmp	.+22     	; 0x3aee <TMR1_void_Set_OCR_TimerValue+0x8e>
		           break;
	case C_Channel:OCR1CL=(uint8)oc_val;
    3ad8:	e8 e7       	ldi	r30, 0x78	; 120
    3ada:	f0 e0       	ldi	r31, 0x00	; 0
    3adc:	89 81       	ldd	r24, Y+1	; 0x01
    3ade:	80 83       	st	Z, r24
		           OCR1CH=(uint8)(oc_val>>8);
    3ae0:	e9 e7       	ldi	r30, 0x79	; 121
    3ae2:	f0 e0       	ldi	r31, 0x00	; 0
    3ae4:	89 81       	ldd	r24, Y+1	; 0x01
    3ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ae8:	89 2f       	mov	r24, r25
    3aea:	99 27       	eor	r25, r25
    3aec:	80 83       	st	Z, r24
		           break;
	}

}
    3aee:	0f 90       	pop	r0
    3af0:	0f 90       	pop	r0
    3af2:	0f 90       	pop	r0
    3af4:	0f 90       	pop	r0
    3af6:	0f 90       	pop	r0
    3af8:	cf 91       	pop	r28
    3afa:	df 91       	pop	r29
    3afc:	08 95       	ret

00003afe <Timer0_Init>:
#include"Timer0.h"
void Timer0_Init(timer0_mode_type mode,prescaler0_type scaler,OC0_mode_type oc_mode)
{
    3afe:	df 93       	push	r29
    3b00:	cf 93       	push	r28
    3b02:	cd b7       	in	r28, 0x3d	; 61
    3b04:	de b7       	in	r29, 0x3e	; 62
    3b06:	27 97       	sbiw	r28, 0x07	; 7
    3b08:	0f b6       	in	r0, 0x3f	; 63
    3b0a:	f8 94       	cli
    3b0c:	de bf       	out	0x3e, r29	; 62
    3b0e:	0f be       	out	0x3f, r0	; 63
    3b10:	cd bf       	out	0x3d, r28	; 61
    3b12:	89 83       	std	Y+1, r24	; 0x01
    3b14:	6a 83       	std	Y+2, r22	; 0x02
    3b16:	4b 83       	std	Y+3, r20	; 0x03
	switch (mode)
    3b18:	89 81       	ldd	r24, Y+1	; 0x01
    3b1a:	28 2f       	mov	r18, r24
    3b1c:	30 e0       	ldi	r19, 0x00	; 0
    3b1e:	3f 83       	std	Y+7, r19	; 0x07
    3b20:	2e 83       	std	Y+6, r18	; 0x06
    3b22:	8e 81       	ldd	r24, Y+6	; 0x06
    3b24:	9f 81       	ldd	r25, Y+7	; 0x07
    3b26:	81 30       	cpi	r24, 0x01	; 1
    3b28:	91 05       	cpc	r25, r1
    3b2a:	21 f1       	breq	.+72     	; 0x3b74 <Timer0_Init+0x76>
    3b2c:	2e 81       	ldd	r18, Y+6	; 0x06
    3b2e:	3f 81       	ldd	r19, Y+7	; 0x07
    3b30:	22 30       	cpi	r18, 0x02	; 2
    3b32:	31 05       	cpc	r19, r1
    3b34:	2c f4       	brge	.+10     	; 0x3b40 <Timer0_Init+0x42>
    3b36:	8e 81       	ldd	r24, Y+6	; 0x06
    3b38:	9f 81       	ldd	r25, Y+7	; 0x07
    3b3a:	00 97       	sbiw	r24, 0x00	; 0
    3b3c:	61 f0       	breq	.+24     	; 0x3b56 <Timer0_Init+0x58>
    3b3e:	46 c0       	rjmp	.+140    	; 0x3bcc <Timer0_Init+0xce>
    3b40:	2e 81       	ldd	r18, Y+6	; 0x06
    3b42:	3f 81       	ldd	r19, Y+7	; 0x07
    3b44:	22 30       	cpi	r18, 0x02	; 2
    3b46:	31 05       	cpc	r19, r1
    3b48:	21 f1       	breq	.+72     	; 0x3b92 <Timer0_Init+0x94>
    3b4a:	8e 81       	ldd	r24, Y+6	; 0x06
    3b4c:	9f 81       	ldd	r25, Y+7	; 0x07
    3b4e:	83 30       	cpi	r24, 0x03	; 3
    3b50:	91 05       	cpc	r25, r1
    3b52:	71 f1       	breq	.+92     	; 0x3bb0 <Timer0_Init+0xb2>
    3b54:	3b c0       	rjmp	.+118    	; 0x3bcc <Timer0_Init+0xce>
				{
					case Normal_mode:
						CLR_BIT(TCCR0,WGM00);
    3b56:	a3 e5       	ldi	r26, 0x53	; 83
    3b58:	b0 e0       	ldi	r27, 0x00	; 0
    3b5a:	e3 e5       	ldi	r30, 0x53	; 83
    3b5c:	f0 e0       	ldi	r31, 0x00	; 0
    3b5e:	80 81       	ld	r24, Z
    3b60:	8f 7b       	andi	r24, 0xBF	; 191
    3b62:	8c 93       	st	X, r24
						CLR_BIT(TCCR0,WGM01);
    3b64:	a3 e5       	ldi	r26, 0x53	; 83
    3b66:	b0 e0       	ldi	r27, 0x00	; 0
    3b68:	e3 e5       	ldi	r30, 0x53	; 83
    3b6a:	f0 e0       	ldi	r31, 0x00	; 0
    3b6c:	80 81       	ld	r24, Z
    3b6e:	87 7f       	andi	r24, 0xF7	; 247
    3b70:	8c 93       	st	X, r24
    3b72:	2c c0       	rjmp	.+88     	; 0x3bcc <Timer0_Init+0xce>

					break;
					case Phasecorrect_mode:
						SET_BIT(TCCR0,WGM00);
    3b74:	a3 e5       	ldi	r26, 0x53	; 83
    3b76:	b0 e0       	ldi	r27, 0x00	; 0
    3b78:	e3 e5       	ldi	r30, 0x53	; 83
    3b7a:	f0 e0       	ldi	r31, 0x00	; 0
    3b7c:	80 81       	ld	r24, Z
    3b7e:	80 64       	ori	r24, 0x40	; 64
    3b80:	8c 93       	st	X, r24
						CLR_BIT(TCCR0,WGM01);
    3b82:	a3 e5       	ldi	r26, 0x53	; 83
    3b84:	b0 e0       	ldi	r27, 0x00	; 0
    3b86:	e3 e5       	ldi	r30, 0x53	; 83
    3b88:	f0 e0       	ldi	r31, 0x00	; 0
    3b8a:	80 81       	ld	r24, Z
    3b8c:	87 7f       	andi	r24, 0xF7	; 247
    3b8e:	8c 93       	st	X, r24
    3b90:	1d c0       	rjmp	.+58     	; 0x3bcc <Timer0_Init+0xce>
					break;
					case CTC_mode:
						CLR_BIT(TCCR0,WGM00);
    3b92:	a3 e5       	ldi	r26, 0x53	; 83
    3b94:	b0 e0       	ldi	r27, 0x00	; 0
    3b96:	e3 e5       	ldi	r30, 0x53	; 83
    3b98:	f0 e0       	ldi	r31, 0x00	; 0
    3b9a:	80 81       	ld	r24, Z
    3b9c:	8f 7b       	andi	r24, 0xBF	; 191
    3b9e:	8c 93       	st	X, r24
						SET_BIT(TCCR0,WGM01);
    3ba0:	a3 e5       	ldi	r26, 0x53	; 83
    3ba2:	b0 e0       	ldi	r27, 0x00	; 0
    3ba4:	e3 e5       	ldi	r30, 0x53	; 83
    3ba6:	f0 e0       	ldi	r31, 0x00	; 0
    3ba8:	80 81       	ld	r24, Z
    3baa:	88 60       	ori	r24, 0x08	; 8
    3bac:	8c 93       	st	X, r24
    3bae:	0e c0       	rjmp	.+28     	; 0x3bcc <Timer0_Init+0xce>

					break;
					case FastPWM_mode:
						SET_BIT(TCCR0,WGM00);
    3bb0:	a3 e5       	ldi	r26, 0x53	; 83
    3bb2:	b0 e0       	ldi	r27, 0x00	; 0
    3bb4:	e3 e5       	ldi	r30, 0x53	; 83
    3bb6:	f0 e0       	ldi	r31, 0x00	; 0
    3bb8:	80 81       	ld	r24, Z
    3bba:	80 64       	ori	r24, 0x40	; 64
    3bbc:	8c 93       	st	X, r24
						SET_BIT(TCCR0,WGM01);
    3bbe:	a3 e5       	ldi	r26, 0x53	; 83
    3bc0:	b0 e0       	ldi	r27, 0x00	; 0
    3bc2:	e3 e5       	ldi	r30, 0x53	; 83
    3bc4:	f0 e0       	ldi	r31, 0x00	; 0
    3bc6:	80 81       	ld	r24, Z
    3bc8:	88 60       	ori	r24, 0x08	; 8
    3bca:	8c 93       	st	X, r24
					break;
				}
#if  oc==normal
	switch (oc_mode)
    3bcc:	8b 81       	ldd	r24, Y+3	; 0x03
    3bce:	28 2f       	mov	r18, r24
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	3d 83       	std	Y+5, r19	; 0x05
    3bd4:	2c 83       	std	Y+4, r18	; 0x04
    3bd6:	8c 81       	ldd	r24, Y+4	; 0x04
    3bd8:	9d 81       	ldd	r25, Y+5	; 0x05
    3bda:	81 30       	cpi	r24, 0x01	; 1
    3bdc:	91 05       	cpc	r25, r1
    3bde:	21 f1       	breq	.+72     	; 0x3c28 <Timer0_Init+0x12a>
    3be0:	2c 81       	ldd	r18, Y+4	; 0x04
    3be2:	3d 81       	ldd	r19, Y+5	; 0x05
    3be4:	22 30       	cpi	r18, 0x02	; 2
    3be6:	31 05       	cpc	r19, r1
    3be8:	2c f4       	brge	.+10     	; 0x3bf4 <Timer0_Init+0xf6>
    3bea:	8c 81       	ldd	r24, Y+4	; 0x04
    3bec:	9d 81       	ldd	r25, Y+5	; 0x05
    3bee:	00 97       	sbiw	r24, 0x00	; 0
    3bf0:	61 f0       	breq	.+24     	; 0x3c0a <Timer0_Init+0x10c>
    3bf2:	46 c0       	rjmp	.+140    	; 0x3c80 <Timer0_Init+0x182>
    3bf4:	2c 81       	ldd	r18, Y+4	; 0x04
    3bf6:	3d 81       	ldd	r19, Y+5	; 0x05
    3bf8:	22 30       	cpi	r18, 0x02	; 2
    3bfa:	31 05       	cpc	r19, r1
    3bfc:	21 f1       	breq	.+72     	; 0x3c46 <Timer0_Init+0x148>
    3bfe:	8c 81       	ldd	r24, Y+4	; 0x04
    3c00:	9d 81       	ldd	r25, Y+5	; 0x05
    3c02:	83 30       	cpi	r24, 0x03	; 3
    3c04:	91 05       	cpc	r25, r1
    3c06:	71 f1       	breq	.+92     	; 0x3c64 <Timer0_Init+0x166>
    3c08:	3b c0       	rjmp	.+118    	; 0x3c80 <Timer0_Init+0x182>
				{
					case disconnected:
						CLR_BIT(TCCR0,COM00);
    3c0a:	a3 e5       	ldi	r26, 0x53	; 83
    3c0c:	b0 e0       	ldi	r27, 0x00	; 0
    3c0e:	e3 e5       	ldi	r30, 0x53	; 83
    3c10:	f0 e0       	ldi	r31, 0x00	; 0
    3c12:	80 81       	ld	r24, Z
    3c14:	8f 7e       	andi	r24, 0xEF	; 239
    3c16:	8c 93       	st	X, r24
						CLR_BIT(TCCR0,COM01);
    3c18:	a3 e5       	ldi	r26, 0x53	; 83
    3c1a:	b0 e0       	ldi	r27, 0x00	; 0
    3c1c:	e3 e5       	ldi	r30, 0x53	; 83
    3c1e:	f0 e0       	ldi	r31, 0x00	; 0
    3c20:	80 81       	ld	r24, Z
    3c22:	8f 7d       	andi	r24, 0xDF	; 223
    3c24:	8c 93       	st	X, r24
    3c26:	2c c0       	rjmp	.+88     	; 0x3c80 <Timer0_Init+0x182>
						break;
					case Toggle:
						SET_BIT(TCCR0,COM00);
    3c28:	a3 e5       	ldi	r26, 0x53	; 83
    3c2a:	b0 e0       	ldi	r27, 0x00	; 0
    3c2c:	e3 e5       	ldi	r30, 0x53	; 83
    3c2e:	f0 e0       	ldi	r31, 0x00	; 0
    3c30:	80 81       	ld	r24, Z
    3c32:	80 61       	ori	r24, 0x10	; 16
    3c34:	8c 93       	st	X, r24
						CLR_BIT(TCCR0,COM01);
    3c36:	a3 e5       	ldi	r26, 0x53	; 83
    3c38:	b0 e0       	ldi	r27, 0x00	; 0
    3c3a:	e3 e5       	ldi	r30, 0x53	; 83
    3c3c:	f0 e0       	ldi	r31, 0x00	; 0
    3c3e:	80 81       	ld	r24, Z
    3c40:	8f 7d       	andi	r24, 0xDF	; 223
    3c42:	8c 93       	st	X, r24
    3c44:	1d c0       	rjmp	.+58     	; 0x3c80 <Timer0_Init+0x182>
						break;
					case Nin_inverting:
						CLR_BIT(TCCR0,COM00);
    3c46:	a3 e5       	ldi	r26, 0x53	; 83
    3c48:	b0 e0       	ldi	r27, 0x00	; 0
    3c4a:	e3 e5       	ldi	r30, 0x53	; 83
    3c4c:	f0 e0       	ldi	r31, 0x00	; 0
    3c4e:	80 81       	ld	r24, Z
    3c50:	8f 7e       	andi	r24, 0xEF	; 239
    3c52:	8c 93       	st	X, r24
						SET_BIT(TCCR0,COM01);
    3c54:	a3 e5       	ldi	r26, 0x53	; 83
    3c56:	b0 e0       	ldi	r27, 0x00	; 0
    3c58:	e3 e5       	ldi	r30, 0x53	; 83
    3c5a:	f0 e0       	ldi	r31, 0x00	; 0
    3c5c:	80 81       	ld	r24, Z
    3c5e:	80 62       	ori	r24, 0x20	; 32
    3c60:	8c 93       	st	X, r24
    3c62:	0e c0       	rjmp	.+28     	; 0x3c80 <Timer0_Init+0x182>
						break;
					case Inverting:
						SET_BIT(TCCR0,COM00);
    3c64:	a3 e5       	ldi	r26, 0x53	; 83
    3c66:	b0 e0       	ldi	r27, 0x00	; 0
    3c68:	e3 e5       	ldi	r30, 0x53	; 83
    3c6a:	f0 e0       	ldi	r31, 0x00	; 0
    3c6c:	80 81       	ld	r24, Z
    3c6e:	80 61       	ori	r24, 0x10	; 16
    3c70:	8c 93       	st	X, r24
						SET_BIT(TCCR0,COM01);
    3c72:	a3 e5       	ldi	r26, 0x53	; 83
    3c74:	b0 e0       	ldi	r27, 0x00	; 0
    3c76:	e3 e5       	ldi	r30, 0x53	; 83
    3c78:	f0 e0       	ldi	r31, 0x00	; 0
    3c7a:	80 81       	ld	r24, Z
    3c7c:	80 62       	ori	r24, 0x20	; 32
    3c7e:	8c 93       	st	X, r24
								break;
							}

#endif
	//MASK FOR SCALLER THE FIRST 3 BITS
	TCCR0&=0XF8;
    3c80:	a3 e5       	ldi	r26, 0x53	; 83
    3c82:	b0 e0       	ldi	r27, 0x00	; 0
    3c84:	e3 e5       	ldi	r30, 0x53	; 83
    3c86:	f0 e0       	ldi	r31, 0x00	; 0
    3c88:	80 81       	ld	r24, Z
    3c8a:	88 7f       	andi	r24, 0xF8	; 248
    3c8c:	8c 93       	st	X, r24
	//PUT THE SCALLER
	TCCR0|=scaler;
    3c8e:	a3 e5       	ldi	r26, 0x53	; 83
    3c90:	b0 e0       	ldi	r27, 0x00	; 0
    3c92:	e3 e5       	ldi	r30, 0x53	; 83
    3c94:	f0 e0       	ldi	r31, 0x00	; 0
    3c96:	90 81       	ld	r25, Z
    3c98:	8a 81       	ldd	r24, Y+2	; 0x02
    3c9a:	89 2b       	or	r24, r25
    3c9c:	8c 93       	st	X, r24

}
    3c9e:	27 96       	adiw	r28, 0x07	; 7
    3ca0:	0f b6       	in	r0, 0x3f	; 63
    3ca2:	f8 94       	cli
    3ca4:	de bf       	out	0x3e, r29	; 62
    3ca6:	0f be       	out	0x3f, r0	; 63
    3ca8:	cd bf       	out	0x3d, r28	; 61
    3caa:	cf 91       	pop	r28
    3cac:	df 91       	pop	r29
    3cae:	08 95       	ret

00003cb0 <Timer0_OVInterrupt_Enable>:

void Timer0_OVInterrupt_Enable(void)
{
    3cb0:	df 93       	push	r29
    3cb2:	cf 93       	push	r28
    3cb4:	cd b7       	in	r28, 0x3d	; 61
    3cb6:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TOIE0);
    3cb8:	a7 e5       	ldi	r26, 0x57	; 87
    3cba:	b0 e0       	ldi	r27, 0x00	; 0
    3cbc:	e7 e5       	ldi	r30, 0x57	; 87
    3cbe:	f0 e0       	ldi	r31, 0x00	; 0
    3cc0:	80 81       	ld	r24, Z
    3cc2:	81 60       	ori	r24, 0x01	; 1
    3cc4:	8c 93       	st	X, r24
}
    3cc6:	cf 91       	pop	r28
    3cc8:	df 91       	pop	r29
    3cca:	08 95       	ret

00003ccc <Timer0_OVInterrupt_Disable>:
void Timer0_OVInterrupt_Disable(void)
{
    3ccc:	df 93       	push	r29
    3cce:	cf 93       	push	r28
    3cd0:	cd b7       	in	r28, 0x3d	; 61
    3cd2:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TOIE0);
    3cd4:	a7 e5       	ldi	r26, 0x57	; 87
    3cd6:	b0 e0       	ldi	r27, 0x00	; 0
    3cd8:	e7 e5       	ldi	r30, 0x57	; 87
    3cda:	f0 e0       	ldi	r31, 0x00	; 0
    3cdc:	80 81       	ld	r24, Z
    3cde:	8e 7f       	andi	r24, 0xFE	; 254
    3ce0:	8c 93       	st	X, r24
}
    3ce2:	cf 91       	pop	r28
    3ce4:	df 91       	pop	r29
    3ce6:	08 95       	ret

00003ce8 <Timer0_OCInterrupt_Enable>:
void Timer0_OCInterrupt_Enable(void)
{
    3ce8:	df 93       	push	r29
    3cea:	cf 93       	push	r28
    3cec:	cd b7       	in	r28, 0x3d	; 61
    3cee:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE0);
    3cf0:	a7 e5       	ldi	r26, 0x57	; 87
    3cf2:	b0 e0       	ldi	r27, 0x00	; 0
    3cf4:	e7 e5       	ldi	r30, 0x57	; 87
    3cf6:	f0 e0       	ldi	r31, 0x00	; 0
    3cf8:	80 81       	ld	r24, Z
    3cfa:	82 60       	ori	r24, 0x02	; 2
    3cfc:	8c 93       	st	X, r24
}
    3cfe:	cf 91       	pop	r28
    3d00:	df 91       	pop	r29
    3d02:	08 95       	ret

00003d04 <Timer0_OCInterrupt_Disable>:

void Timer0_OCInterrupt_Disable(void)
{
    3d04:	df 93       	push	r29
    3d06:	cf 93       	push	r28
    3d08:	cd b7       	in	r28, 0x3d	; 61
    3d0a:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE0);
    3d0c:	a7 e5       	ldi	r26, 0x57	; 87
    3d0e:	b0 e0       	ldi	r27, 0x00	; 0
    3d10:	e7 e5       	ldi	r30, 0x57	; 87
    3d12:	f0 e0       	ldi	r31, 0x00	; 0
    3d14:	80 81       	ld	r24, Z
    3d16:	8d 7f       	andi	r24, 0xFD	; 253
    3d18:	8c 93       	st	X, r24
}
    3d1a:	cf 91       	pop	r28
    3d1c:	df 91       	pop	r29
    3d1e:	08 95       	ret

00003d20 <Timer0_OCI_Set_Value>:

void Timer0_OCI_Set_Value(uint8 oc_value)
{
    3d20:	df 93       	push	r29
    3d22:	cf 93       	push	r28
    3d24:	0f 92       	push	r0
    3d26:	cd b7       	in	r28, 0x3d	; 61
    3d28:	de b7       	in	r29, 0x3e	; 62
    3d2a:	89 83       	std	Y+1, r24	; 0x01
	OCR0= oc_value;
    3d2c:	e1 e5       	ldi	r30, 0x51	; 81
    3d2e:	f0 e0       	ldi	r31, 0x00	; 0
    3d30:	89 81       	ldd	r24, Y+1	; 0x01
    3d32:	80 83       	st	Z, r24
}
    3d34:	0f 90       	pop	r0
    3d36:	cf 91       	pop	r28
    3d38:	df 91       	pop	r29
    3d3a:	08 95       	ret

00003d3c <Timer0_TCNT_Set_Value>:
void Timer0_TCNT_Set_Value(uint8 TCNT_value)
{
    3d3c:	df 93       	push	r29
    3d3e:	cf 93       	push	r28
    3d40:	0f 92       	push	r0
    3d42:	cd b7       	in	r28, 0x3d	; 61
    3d44:	de b7       	in	r29, 0x3e	; 62
    3d46:	89 83       	std	Y+1, r24	; 0x01
	TCNT0= TCNT_value;
    3d48:	e2 e5       	ldi	r30, 0x52	; 82
    3d4a:	f0 e0       	ldi	r31, 0x00	; 0
    3d4c:	89 81       	ldd	r24, Y+1	; 0x01
    3d4e:	80 83       	st	Z, r24
}
    3d50:	0f 90       	pop	r0
    3d52:	cf 91       	pop	r28
    3d54:	df 91       	pop	r29
    3d56:	08 95       	ret

00003d58 <Timer0_Get_Value>:
uint8 Timer0_Get_Value(void)
{
    3d58:	df 93       	push	r29
    3d5a:	cf 93       	push	r28
    3d5c:	cd b7       	in	r28, 0x3d	; 61
    3d5e:	de b7       	in	r29, 0x3e	; 62
	return TCNT0;
    3d60:	e2 e5       	ldi	r30, 0x52	; 82
    3d62:	f0 e0       	ldi	r31, 0x00	; 0
    3d64:	80 81       	ld	r24, Z
}
    3d66:	cf 91       	pop	r28
    3d68:	df 91       	pop	r29
    3d6a:	08 95       	ret

00003d6c <DIO_void_Set_Pin_Dirction>:
#include "DIO.h"
#include "utils.h"
#include"memmap128.h"

void DIO_void_Set_Pin_Dirction(port_no_type port_no, bit_no_type bit_no, direction_type direction)
{
    3d6c:	df 93       	push	r29
    3d6e:	cf 93       	push	r28
    3d70:	cd b7       	in	r28, 0x3d	; 61
    3d72:	de b7       	in	r29, 0x3e	; 62
    3d74:	27 97       	sbiw	r28, 0x07	; 7
    3d76:	0f b6       	in	r0, 0x3f	; 63
    3d78:	f8 94       	cli
    3d7a:	de bf       	out	0x3e, r29	; 62
    3d7c:	0f be       	out	0x3f, r0	; 63
    3d7e:	cd bf       	out	0x3d, r28	; 61
    3d80:	89 83       	std	Y+1, r24	; 0x01
    3d82:	6a 83       	std	Y+2, r22	; 0x02
    3d84:	4b 83       	std	Y+3, r20	; 0x03
	if(direction == INPUT)
    3d86:	8b 81       	ldd	r24, Y+3	; 0x03
    3d88:	88 23       	and	r24, r24
    3d8a:	09 f0       	breq	.+2      	; 0x3d8e <DIO_void_Set_Pin_Dirction+0x22>
    3d8c:	c6 c0       	rjmp	.+396    	; 0x3f1a <DIO_void_Set_Pin_Dirction+0x1ae>
	{
		switch(port_no)
    3d8e:	89 81       	ldd	r24, Y+1	; 0x01
    3d90:	28 2f       	mov	r18, r24
    3d92:	30 e0       	ldi	r19, 0x00	; 0
    3d94:	3f 83       	std	Y+7, r19	; 0x07
    3d96:	2e 83       	std	Y+6, r18	; 0x06
    3d98:	8e 81       	ldd	r24, Y+6	; 0x06
    3d9a:	9f 81       	ldd	r25, Y+7	; 0x07
    3d9c:	83 30       	cpi	r24, 0x03	; 3
    3d9e:	91 05       	cpc	r25, r1
    3da0:	09 f4       	brne	.+2      	; 0x3da4 <DIO_void_Set_Pin_Dirction+0x38>
    3da2:	67 c0       	rjmp	.+206    	; 0x3e72 <DIO_void_Set_Pin_Dirction+0x106>
    3da4:	2e 81       	ldd	r18, Y+6	; 0x06
    3da6:	3f 81       	ldd	r19, Y+7	; 0x07
    3da8:	24 30       	cpi	r18, 0x04	; 4
    3daa:	31 05       	cpc	r19, r1
    3dac:	84 f4       	brge	.+32     	; 0x3dce <DIO_void_Set_Pin_Dirction+0x62>
    3dae:	8e 81       	ldd	r24, Y+6	; 0x06
    3db0:	9f 81       	ldd	r25, Y+7	; 0x07
    3db2:	81 30       	cpi	r24, 0x01	; 1
    3db4:	91 05       	cpc	r25, r1
    3db6:	99 f1       	breq	.+102    	; 0x3e1e <DIO_void_Set_Pin_Dirction+0xb2>
    3db8:	2e 81       	ldd	r18, Y+6	; 0x06
    3dba:	3f 81       	ldd	r19, Y+7	; 0x07
    3dbc:	22 30       	cpi	r18, 0x02	; 2
    3dbe:	31 05       	cpc	r19, r1
    3dc0:	0c f0       	brlt	.+2      	; 0x3dc4 <DIO_void_Set_Pin_Dirction+0x58>
    3dc2:	42 c0       	rjmp	.+132    	; 0x3e48 <DIO_void_Set_Pin_Dirction+0xdc>
    3dc4:	8e 81       	ldd	r24, Y+6	; 0x06
    3dc6:	9f 81       	ldd	r25, Y+7	; 0x07
    3dc8:	00 97       	sbiw	r24, 0x00	; 0
    3dca:	a1 f0       	breq	.+40     	; 0x3df4 <DIO_void_Set_Pin_Dirction+0x88>
    3dcc:	68 c1       	rjmp	.+720    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
    3dce:	2e 81       	ldd	r18, Y+6	; 0x06
    3dd0:	3f 81       	ldd	r19, Y+7	; 0x07
    3dd2:	25 30       	cpi	r18, 0x05	; 5
    3dd4:	31 05       	cpc	r19, r1
    3dd6:	09 f4       	brne	.+2      	; 0x3dda <DIO_void_Set_Pin_Dirction+0x6e>
    3dd8:	76 c0       	rjmp	.+236    	; 0x3ec6 <DIO_void_Set_Pin_Dirction+0x15a>
    3dda:	8e 81       	ldd	r24, Y+6	; 0x06
    3ddc:	9f 81       	ldd	r25, Y+7	; 0x07
    3dde:	85 30       	cpi	r24, 0x05	; 5
    3de0:	91 05       	cpc	r25, r1
    3de2:	0c f4       	brge	.+2      	; 0x3de6 <DIO_void_Set_Pin_Dirction+0x7a>
    3de4:	5b c0       	rjmp	.+182    	; 0x3e9c <DIO_void_Set_Pin_Dirction+0x130>
    3de6:	2e 81       	ldd	r18, Y+6	; 0x06
    3de8:	3f 81       	ldd	r19, Y+7	; 0x07
    3dea:	26 30       	cpi	r18, 0x06	; 6
    3dec:	31 05       	cpc	r19, r1
    3dee:	09 f4       	brne	.+2      	; 0x3df2 <DIO_void_Set_Pin_Dirction+0x86>
    3df0:	7f c0       	rjmp	.+254    	; 0x3ef0 <DIO_void_Set_Pin_Dirction+0x184>
    3df2:	55 c1       	rjmp	.+682    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		{
		case PORTA_ID:CLR_BIT(DDRA,bit_no);break;
    3df4:	aa e3       	ldi	r26, 0x3A	; 58
    3df6:	b0 e0       	ldi	r27, 0x00	; 0
    3df8:	ea e3       	ldi	r30, 0x3A	; 58
    3dfa:	f0 e0       	ldi	r31, 0x00	; 0
    3dfc:	80 81       	ld	r24, Z
    3dfe:	48 2f       	mov	r20, r24
    3e00:	8a 81       	ldd	r24, Y+2	; 0x02
    3e02:	28 2f       	mov	r18, r24
    3e04:	30 e0       	ldi	r19, 0x00	; 0
    3e06:	81 e0       	ldi	r24, 0x01	; 1
    3e08:	90 e0       	ldi	r25, 0x00	; 0
    3e0a:	02 2e       	mov	r0, r18
    3e0c:	02 c0       	rjmp	.+4      	; 0x3e12 <DIO_void_Set_Pin_Dirction+0xa6>
    3e0e:	88 0f       	add	r24, r24
    3e10:	99 1f       	adc	r25, r25
    3e12:	0a 94       	dec	r0
    3e14:	e2 f7       	brpl	.-8      	; 0x3e0e <DIO_void_Set_Pin_Dirction+0xa2>
    3e16:	80 95       	com	r24
    3e18:	84 23       	and	r24, r20
    3e1a:	8c 93       	st	X, r24
    3e1c:	40 c1       	rjmp	.+640    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTB_ID:CLR_BIT(DDRB,bit_no);break;
    3e1e:	a7 e3       	ldi	r26, 0x37	; 55
    3e20:	b0 e0       	ldi	r27, 0x00	; 0
    3e22:	e7 e3       	ldi	r30, 0x37	; 55
    3e24:	f0 e0       	ldi	r31, 0x00	; 0
    3e26:	80 81       	ld	r24, Z
    3e28:	48 2f       	mov	r20, r24
    3e2a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e2c:	28 2f       	mov	r18, r24
    3e2e:	30 e0       	ldi	r19, 0x00	; 0
    3e30:	81 e0       	ldi	r24, 0x01	; 1
    3e32:	90 e0       	ldi	r25, 0x00	; 0
    3e34:	02 2e       	mov	r0, r18
    3e36:	02 c0       	rjmp	.+4      	; 0x3e3c <DIO_void_Set_Pin_Dirction+0xd0>
    3e38:	88 0f       	add	r24, r24
    3e3a:	99 1f       	adc	r25, r25
    3e3c:	0a 94       	dec	r0
    3e3e:	e2 f7       	brpl	.-8      	; 0x3e38 <DIO_void_Set_Pin_Dirction+0xcc>
    3e40:	80 95       	com	r24
    3e42:	84 23       	and	r24, r20
    3e44:	8c 93       	st	X, r24
    3e46:	2b c1       	rjmp	.+598    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTC_ID:CLR_BIT(DDRC,bit_no);break;
    3e48:	a4 e3       	ldi	r26, 0x34	; 52
    3e4a:	b0 e0       	ldi	r27, 0x00	; 0
    3e4c:	e4 e3       	ldi	r30, 0x34	; 52
    3e4e:	f0 e0       	ldi	r31, 0x00	; 0
    3e50:	80 81       	ld	r24, Z
    3e52:	48 2f       	mov	r20, r24
    3e54:	8a 81       	ldd	r24, Y+2	; 0x02
    3e56:	28 2f       	mov	r18, r24
    3e58:	30 e0       	ldi	r19, 0x00	; 0
    3e5a:	81 e0       	ldi	r24, 0x01	; 1
    3e5c:	90 e0       	ldi	r25, 0x00	; 0
    3e5e:	02 2e       	mov	r0, r18
    3e60:	02 c0       	rjmp	.+4      	; 0x3e66 <DIO_void_Set_Pin_Dirction+0xfa>
    3e62:	88 0f       	add	r24, r24
    3e64:	99 1f       	adc	r25, r25
    3e66:	0a 94       	dec	r0
    3e68:	e2 f7       	brpl	.-8      	; 0x3e62 <DIO_void_Set_Pin_Dirction+0xf6>
    3e6a:	80 95       	com	r24
    3e6c:	84 23       	and	r24, r20
    3e6e:	8c 93       	st	X, r24
    3e70:	16 c1       	rjmp	.+556    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTD_ID:CLR_BIT(DDRD,bit_no);break;
    3e72:	a1 e3       	ldi	r26, 0x31	; 49
    3e74:	b0 e0       	ldi	r27, 0x00	; 0
    3e76:	e1 e3       	ldi	r30, 0x31	; 49
    3e78:	f0 e0       	ldi	r31, 0x00	; 0
    3e7a:	80 81       	ld	r24, Z
    3e7c:	48 2f       	mov	r20, r24
    3e7e:	8a 81       	ldd	r24, Y+2	; 0x02
    3e80:	28 2f       	mov	r18, r24
    3e82:	30 e0       	ldi	r19, 0x00	; 0
    3e84:	81 e0       	ldi	r24, 0x01	; 1
    3e86:	90 e0       	ldi	r25, 0x00	; 0
    3e88:	02 2e       	mov	r0, r18
    3e8a:	02 c0       	rjmp	.+4      	; 0x3e90 <DIO_void_Set_Pin_Dirction+0x124>
    3e8c:	88 0f       	add	r24, r24
    3e8e:	99 1f       	adc	r25, r25
    3e90:	0a 94       	dec	r0
    3e92:	e2 f7       	brpl	.-8      	; 0x3e8c <DIO_void_Set_Pin_Dirction+0x120>
    3e94:	80 95       	com	r24
    3e96:	84 23       	and	r24, r20
    3e98:	8c 93       	st	X, r24
    3e9a:	01 c1       	rjmp	.+514    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTE_ID:CLR_BIT(DDRE,bit_no);break;
    3e9c:	a2 e2       	ldi	r26, 0x22	; 34
    3e9e:	b0 e0       	ldi	r27, 0x00	; 0
    3ea0:	e2 e2       	ldi	r30, 0x22	; 34
    3ea2:	f0 e0       	ldi	r31, 0x00	; 0
    3ea4:	80 81       	ld	r24, Z
    3ea6:	48 2f       	mov	r20, r24
    3ea8:	8a 81       	ldd	r24, Y+2	; 0x02
    3eaa:	28 2f       	mov	r18, r24
    3eac:	30 e0       	ldi	r19, 0x00	; 0
    3eae:	81 e0       	ldi	r24, 0x01	; 1
    3eb0:	90 e0       	ldi	r25, 0x00	; 0
    3eb2:	02 2e       	mov	r0, r18
    3eb4:	02 c0       	rjmp	.+4      	; 0x3eba <DIO_void_Set_Pin_Dirction+0x14e>
    3eb6:	88 0f       	add	r24, r24
    3eb8:	99 1f       	adc	r25, r25
    3eba:	0a 94       	dec	r0
    3ebc:	e2 f7       	brpl	.-8      	; 0x3eb6 <DIO_void_Set_Pin_Dirction+0x14a>
    3ebe:	80 95       	com	r24
    3ec0:	84 23       	and	r24, r20
    3ec2:	8c 93       	st	X, r24
    3ec4:	ec c0       	rjmp	.+472    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTF_ID:CLR_BIT(DDRF,bit_no);break;
    3ec6:	a1 e6       	ldi	r26, 0x61	; 97
    3ec8:	b0 e0       	ldi	r27, 0x00	; 0
    3eca:	e1 e6       	ldi	r30, 0x61	; 97
    3ecc:	f0 e0       	ldi	r31, 0x00	; 0
    3ece:	80 81       	ld	r24, Z
    3ed0:	48 2f       	mov	r20, r24
    3ed2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ed4:	28 2f       	mov	r18, r24
    3ed6:	30 e0       	ldi	r19, 0x00	; 0
    3ed8:	81 e0       	ldi	r24, 0x01	; 1
    3eda:	90 e0       	ldi	r25, 0x00	; 0
    3edc:	02 2e       	mov	r0, r18
    3ede:	02 c0       	rjmp	.+4      	; 0x3ee4 <DIO_void_Set_Pin_Dirction+0x178>
    3ee0:	88 0f       	add	r24, r24
    3ee2:	99 1f       	adc	r25, r25
    3ee4:	0a 94       	dec	r0
    3ee6:	e2 f7       	brpl	.-8      	; 0x3ee0 <DIO_void_Set_Pin_Dirction+0x174>
    3ee8:	80 95       	com	r24
    3eea:	84 23       	and	r24, r20
    3eec:	8c 93       	st	X, r24
    3eee:	d7 c0       	rjmp	.+430    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
	    case PORTG_ID:CLR_BIT(DDRG,bit_no);break;
    3ef0:	a4 e6       	ldi	r26, 0x64	; 100
    3ef2:	b0 e0       	ldi	r27, 0x00	; 0
    3ef4:	e4 e6       	ldi	r30, 0x64	; 100
    3ef6:	f0 e0       	ldi	r31, 0x00	; 0
    3ef8:	80 81       	ld	r24, Z
    3efa:	48 2f       	mov	r20, r24
    3efc:	8a 81       	ldd	r24, Y+2	; 0x02
    3efe:	28 2f       	mov	r18, r24
    3f00:	30 e0       	ldi	r19, 0x00	; 0
    3f02:	81 e0       	ldi	r24, 0x01	; 1
    3f04:	90 e0       	ldi	r25, 0x00	; 0
    3f06:	02 2e       	mov	r0, r18
    3f08:	02 c0       	rjmp	.+4      	; 0x3f0e <DIO_void_Set_Pin_Dirction+0x1a2>
    3f0a:	88 0f       	add	r24, r24
    3f0c:	99 1f       	adc	r25, r25
    3f0e:	0a 94       	dec	r0
    3f10:	e2 f7       	brpl	.-8      	; 0x3f0a <DIO_void_Set_Pin_Dirction+0x19e>
    3f12:	80 95       	com	r24
    3f14:	84 23       	and	r24, r20
    3f16:	8c 93       	st	X, r24
    3f18:	c2 c0       	rjmp	.+388    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>

		}
	}
	else if(direction == OUTPUT)
    3f1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f1c:	81 30       	cpi	r24, 0x01	; 1
    3f1e:	09 f0       	breq	.+2      	; 0x3f22 <DIO_void_Set_Pin_Dirction+0x1b6>
    3f20:	be c0       	rjmp	.+380    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
	{
		switch(port_no)
    3f22:	89 81       	ldd	r24, Y+1	; 0x01
    3f24:	28 2f       	mov	r18, r24
    3f26:	30 e0       	ldi	r19, 0x00	; 0
    3f28:	3d 83       	std	Y+5, r19	; 0x05
    3f2a:	2c 83       	std	Y+4, r18	; 0x04
    3f2c:	8c 81       	ldd	r24, Y+4	; 0x04
    3f2e:	9d 81       	ldd	r25, Y+5	; 0x05
    3f30:	83 30       	cpi	r24, 0x03	; 3
    3f32:	91 05       	cpc	r25, r1
    3f34:	09 f4       	brne	.+2      	; 0x3f38 <DIO_void_Set_Pin_Dirction+0x1cc>
    3f36:	64 c0       	rjmp	.+200    	; 0x4000 <DIO_void_Set_Pin_Dirction+0x294>
    3f38:	2c 81       	ldd	r18, Y+4	; 0x04
    3f3a:	3d 81       	ldd	r19, Y+5	; 0x05
    3f3c:	24 30       	cpi	r18, 0x04	; 4
    3f3e:	31 05       	cpc	r19, r1
    3f40:	84 f4       	brge	.+32     	; 0x3f62 <DIO_void_Set_Pin_Dirction+0x1f6>
    3f42:	8c 81       	ldd	r24, Y+4	; 0x04
    3f44:	9d 81       	ldd	r25, Y+5	; 0x05
    3f46:	81 30       	cpi	r24, 0x01	; 1
    3f48:	91 05       	cpc	r25, r1
    3f4a:	91 f1       	breq	.+100    	; 0x3fb0 <DIO_void_Set_Pin_Dirction+0x244>
    3f4c:	2c 81       	ldd	r18, Y+4	; 0x04
    3f4e:	3d 81       	ldd	r19, Y+5	; 0x05
    3f50:	22 30       	cpi	r18, 0x02	; 2
    3f52:	31 05       	cpc	r19, r1
    3f54:	0c f0       	brlt	.+2      	; 0x3f58 <DIO_void_Set_Pin_Dirction+0x1ec>
    3f56:	40 c0       	rjmp	.+128    	; 0x3fd8 <DIO_void_Set_Pin_Dirction+0x26c>
    3f58:	8c 81       	ldd	r24, Y+4	; 0x04
    3f5a:	9d 81       	ldd	r25, Y+5	; 0x05
    3f5c:	00 97       	sbiw	r24, 0x00	; 0
    3f5e:	a1 f0       	breq	.+40     	; 0x3f88 <DIO_void_Set_Pin_Dirction+0x21c>
    3f60:	9e c0       	rjmp	.+316    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
    3f62:	2c 81       	ldd	r18, Y+4	; 0x04
    3f64:	3d 81       	ldd	r19, Y+5	; 0x05
    3f66:	25 30       	cpi	r18, 0x05	; 5
    3f68:	31 05       	cpc	r19, r1
    3f6a:	09 f4       	brne	.+2      	; 0x3f6e <DIO_void_Set_Pin_Dirction+0x202>
    3f6c:	71 c0       	rjmp	.+226    	; 0x4050 <DIO_void_Set_Pin_Dirction+0x2e4>
    3f6e:	8c 81       	ldd	r24, Y+4	; 0x04
    3f70:	9d 81       	ldd	r25, Y+5	; 0x05
    3f72:	85 30       	cpi	r24, 0x05	; 5
    3f74:	91 05       	cpc	r25, r1
    3f76:	0c f4       	brge	.+2      	; 0x3f7a <DIO_void_Set_Pin_Dirction+0x20e>
    3f78:	57 c0       	rjmp	.+174    	; 0x4028 <DIO_void_Set_Pin_Dirction+0x2bc>
    3f7a:	2c 81       	ldd	r18, Y+4	; 0x04
    3f7c:	3d 81       	ldd	r19, Y+5	; 0x05
    3f7e:	26 30       	cpi	r18, 0x06	; 6
    3f80:	31 05       	cpc	r19, r1
    3f82:	09 f4       	brne	.+2      	; 0x3f86 <DIO_void_Set_Pin_Dirction+0x21a>
    3f84:	79 c0       	rjmp	.+242    	; 0x4078 <DIO_void_Set_Pin_Dirction+0x30c>
    3f86:	8b c0       	rjmp	.+278    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		{
		case PORTA_ID:SET_BIT(DDRA,bit_no);break;
    3f88:	aa e3       	ldi	r26, 0x3A	; 58
    3f8a:	b0 e0       	ldi	r27, 0x00	; 0
    3f8c:	ea e3       	ldi	r30, 0x3A	; 58
    3f8e:	f0 e0       	ldi	r31, 0x00	; 0
    3f90:	80 81       	ld	r24, Z
    3f92:	48 2f       	mov	r20, r24
    3f94:	8a 81       	ldd	r24, Y+2	; 0x02
    3f96:	28 2f       	mov	r18, r24
    3f98:	30 e0       	ldi	r19, 0x00	; 0
    3f9a:	81 e0       	ldi	r24, 0x01	; 1
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	02 2e       	mov	r0, r18
    3fa0:	02 c0       	rjmp	.+4      	; 0x3fa6 <DIO_void_Set_Pin_Dirction+0x23a>
    3fa2:	88 0f       	add	r24, r24
    3fa4:	99 1f       	adc	r25, r25
    3fa6:	0a 94       	dec	r0
    3fa8:	e2 f7       	brpl	.-8      	; 0x3fa2 <DIO_void_Set_Pin_Dirction+0x236>
    3faa:	84 2b       	or	r24, r20
    3fac:	8c 93       	st	X, r24
    3fae:	77 c0       	rjmp	.+238    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTB_ID:SET_BIT(DDRB,bit_no);break;
    3fb0:	a7 e3       	ldi	r26, 0x37	; 55
    3fb2:	b0 e0       	ldi	r27, 0x00	; 0
    3fb4:	e7 e3       	ldi	r30, 0x37	; 55
    3fb6:	f0 e0       	ldi	r31, 0x00	; 0
    3fb8:	80 81       	ld	r24, Z
    3fba:	48 2f       	mov	r20, r24
    3fbc:	8a 81       	ldd	r24, Y+2	; 0x02
    3fbe:	28 2f       	mov	r18, r24
    3fc0:	30 e0       	ldi	r19, 0x00	; 0
    3fc2:	81 e0       	ldi	r24, 0x01	; 1
    3fc4:	90 e0       	ldi	r25, 0x00	; 0
    3fc6:	02 2e       	mov	r0, r18
    3fc8:	02 c0       	rjmp	.+4      	; 0x3fce <DIO_void_Set_Pin_Dirction+0x262>
    3fca:	88 0f       	add	r24, r24
    3fcc:	99 1f       	adc	r25, r25
    3fce:	0a 94       	dec	r0
    3fd0:	e2 f7       	brpl	.-8      	; 0x3fca <DIO_void_Set_Pin_Dirction+0x25e>
    3fd2:	84 2b       	or	r24, r20
    3fd4:	8c 93       	st	X, r24
    3fd6:	63 c0       	rjmp	.+198    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTC_ID:SET_BIT(DDRC,bit_no);break;
    3fd8:	a4 e3       	ldi	r26, 0x34	; 52
    3fda:	b0 e0       	ldi	r27, 0x00	; 0
    3fdc:	e4 e3       	ldi	r30, 0x34	; 52
    3fde:	f0 e0       	ldi	r31, 0x00	; 0
    3fe0:	80 81       	ld	r24, Z
    3fe2:	48 2f       	mov	r20, r24
    3fe4:	8a 81       	ldd	r24, Y+2	; 0x02
    3fe6:	28 2f       	mov	r18, r24
    3fe8:	30 e0       	ldi	r19, 0x00	; 0
    3fea:	81 e0       	ldi	r24, 0x01	; 1
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	02 2e       	mov	r0, r18
    3ff0:	02 c0       	rjmp	.+4      	; 0x3ff6 <DIO_void_Set_Pin_Dirction+0x28a>
    3ff2:	88 0f       	add	r24, r24
    3ff4:	99 1f       	adc	r25, r25
    3ff6:	0a 94       	dec	r0
    3ff8:	e2 f7       	brpl	.-8      	; 0x3ff2 <DIO_void_Set_Pin_Dirction+0x286>
    3ffa:	84 2b       	or	r24, r20
    3ffc:	8c 93       	st	X, r24
    3ffe:	4f c0       	rjmp	.+158    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTD_ID:SET_BIT(DDRD,bit_no);break;
    4000:	a1 e3       	ldi	r26, 0x31	; 49
    4002:	b0 e0       	ldi	r27, 0x00	; 0
    4004:	e1 e3       	ldi	r30, 0x31	; 49
    4006:	f0 e0       	ldi	r31, 0x00	; 0
    4008:	80 81       	ld	r24, Z
    400a:	48 2f       	mov	r20, r24
    400c:	8a 81       	ldd	r24, Y+2	; 0x02
    400e:	28 2f       	mov	r18, r24
    4010:	30 e0       	ldi	r19, 0x00	; 0
    4012:	81 e0       	ldi	r24, 0x01	; 1
    4014:	90 e0       	ldi	r25, 0x00	; 0
    4016:	02 2e       	mov	r0, r18
    4018:	02 c0       	rjmp	.+4      	; 0x401e <DIO_void_Set_Pin_Dirction+0x2b2>
    401a:	88 0f       	add	r24, r24
    401c:	99 1f       	adc	r25, r25
    401e:	0a 94       	dec	r0
    4020:	e2 f7       	brpl	.-8      	; 0x401a <DIO_void_Set_Pin_Dirction+0x2ae>
    4022:	84 2b       	or	r24, r20
    4024:	8c 93       	st	X, r24
    4026:	3b c0       	rjmp	.+118    	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTE_ID:SET_BIT(DDRE,bit_no);break;
    4028:	a2 e2       	ldi	r26, 0x22	; 34
    402a:	b0 e0       	ldi	r27, 0x00	; 0
    402c:	e2 e2       	ldi	r30, 0x22	; 34
    402e:	f0 e0       	ldi	r31, 0x00	; 0
    4030:	80 81       	ld	r24, Z
    4032:	48 2f       	mov	r20, r24
    4034:	8a 81       	ldd	r24, Y+2	; 0x02
    4036:	28 2f       	mov	r18, r24
    4038:	30 e0       	ldi	r19, 0x00	; 0
    403a:	81 e0       	ldi	r24, 0x01	; 1
    403c:	90 e0       	ldi	r25, 0x00	; 0
    403e:	02 2e       	mov	r0, r18
    4040:	02 c0       	rjmp	.+4      	; 0x4046 <DIO_void_Set_Pin_Dirction+0x2da>
    4042:	88 0f       	add	r24, r24
    4044:	99 1f       	adc	r25, r25
    4046:	0a 94       	dec	r0
    4048:	e2 f7       	brpl	.-8      	; 0x4042 <DIO_void_Set_Pin_Dirction+0x2d6>
    404a:	84 2b       	or	r24, r20
    404c:	8c 93       	st	X, r24
    404e:	27 c0       	rjmp	.+78     	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTF_ID:SET_BIT(DDRF,bit_no);break;
    4050:	a1 e6       	ldi	r26, 0x61	; 97
    4052:	b0 e0       	ldi	r27, 0x00	; 0
    4054:	e1 e6       	ldi	r30, 0x61	; 97
    4056:	f0 e0       	ldi	r31, 0x00	; 0
    4058:	80 81       	ld	r24, Z
    405a:	48 2f       	mov	r20, r24
    405c:	8a 81       	ldd	r24, Y+2	; 0x02
    405e:	28 2f       	mov	r18, r24
    4060:	30 e0       	ldi	r19, 0x00	; 0
    4062:	81 e0       	ldi	r24, 0x01	; 1
    4064:	90 e0       	ldi	r25, 0x00	; 0
    4066:	02 2e       	mov	r0, r18
    4068:	02 c0       	rjmp	.+4      	; 0x406e <DIO_void_Set_Pin_Dirction+0x302>
    406a:	88 0f       	add	r24, r24
    406c:	99 1f       	adc	r25, r25
    406e:	0a 94       	dec	r0
    4070:	e2 f7       	brpl	.-8      	; 0x406a <DIO_void_Set_Pin_Dirction+0x2fe>
    4072:	84 2b       	or	r24, r20
    4074:	8c 93       	st	X, r24
    4076:	13 c0       	rjmp	.+38     	; 0x409e <DIO_void_Set_Pin_Dirction+0x332>
		case PORTG_ID:SET_BIT(DDRG,bit_no);break;
    4078:	a4 e6       	ldi	r26, 0x64	; 100
    407a:	b0 e0       	ldi	r27, 0x00	; 0
    407c:	e4 e6       	ldi	r30, 0x64	; 100
    407e:	f0 e0       	ldi	r31, 0x00	; 0
    4080:	80 81       	ld	r24, Z
    4082:	48 2f       	mov	r20, r24
    4084:	8a 81       	ldd	r24, Y+2	; 0x02
    4086:	28 2f       	mov	r18, r24
    4088:	30 e0       	ldi	r19, 0x00	; 0
    408a:	81 e0       	ldi	r24, 0x01	; 1
    408c:	90 e0       	ldi	r25, 0x00	; 0
    408e:	02 2e       	mov	r0, r18
    4090:	02 c0       	rjmp	.+4      	; 0x4096 <DIO_void_Set_Pin_Dirction+0x32a>
    4092:	88 0f       	add	r24, r24
    4094:	99 1f       	adc	r25, r25
    4096:	0a 94       	dec	r0
    4098:	e2 f7       	brpl	.-8      	; 0x4092 <DIO_void_Set_Pin_Dirction+0x326>
    409a:	84 2b       	or	r24, r20
    409c:	8c 93       	st	X, r24
		}
	}
}
    409e:	27 96       	adiw	r28, 0x07	; 7
    40a0:	0f b6       	in	r0, 0x3f	; 63
    40a2:	f8 94       	cli
    40a4:	de bf       	out	0x3e, r29	; 62
    40a6:	0f be       	out	0x3f, r0	; 63
    40a8:	cd bf       	out	0x3d, r28	; 61
    40aa:	cf 91       	pop	r28
    40ac:	df 91       	pop	r29
    40ae:	08 95       	ret

000040b0 <DIO_void_Set_Pin_Value>:

void DIO_void_Set_Pin_Value(port_no_type port_no, bit_no_type bit_no, value_type value)
{
    40b0:	df 93       	push	r29
    40b2:	cf 93       	push	r28
    40b4:	cd b7       	in	r28, 0x3d	; 61
    40b6:	de b7       	in	r29, 0x3e	; 62
    40b8:	27 97       	sbiw	r28, 0x07	; 7
    40ba:	0f b6       	in	r0, 0x3f	; 63
    40bc:	f8 94       	cli
    40be:	de bf       	out	0x3e, r29	; 62
    40c0:	0f be       	out	0x3f, r0	; 63
    40c2:	cd bf       	out	0x3d, r28	; 61
    40c4:	89 83       	std	Y+1, r24	; 0x01
    40c6:	6a 83       	std	Y+2, r22	; 0x02
    40c8:	4b 83       	std	Y+3, r20	; 0x03
	if(value == LOW)
    40ca:	8b 81       	ldd	r24, Y+3	; 0x03
    40cc:	88 23       	and	r24, r24
    40ce:	09 f0       	breq	.+2      	; 0x40d2 <DIO_void_Set_Pin_Value+0x22>
    40d0:	c6 c0       	rjmp	.+396    	; 0x425e <DIO_void_Set_Pin_Value+0x1ae>
	{
		switch(port_no)
    40d2:	89 81       	ldd	r24, Y+1	; 0x01
    40d4:	28 2f       	mov	r18, r24
    40d6:	30 e0       	ldi	r19, 0x00	; 0
    40d8:	3f 83       	std	Y+7, r19	; 0x07
    40da:	2e 83       	std	Y+6, r18	; 0x06
    40dc:	8e 81       	ldd	r24, Y+6	; 0x06
    40de:	9f 81       	ldd	r25, Y+7	; 0x07
    40e0:	83 30       	cpi	r24, 0x03	; 3
    40e2:	91 05       	cpc	r25, r1
    40e4:	09 f4       	brne	.+2      	; 0x40e8 <DIO_void_Set_Pin_Value+0x38>
    40e6:	67 c0       	rjmp	.+206    	; 0x41b6 <DIO_void_Set_Pin_Value+0x106>
    40e8:	2e 81       	ldd	r18, Y+6	; 0x06
    40ea:	3f 81       	ldd	r19, Y+7	; 0x07
    40ec:	24 30       	cpi	r18, 0x04	; 4
    40ee:	31 05       	cpc	r19, r1
    40f0:	84 f4       	brge	.+32     	; 0x4112 <DIO_void_Set_Pin_Value+0x62>
    40f2:	8e 81       	ldd	r24, Y+6	; 0x06
    40f4:	9f 81       	ldd	r25, Y+7	; 0x07
    40f6:	81 30       	cpi	r24, 0x01	; 1
    40f8:	91 05       	cpc	r25, r1
    40fa:	99 f1       	breq	.+102    	; 0x4162 <DIO_void_Set_Pin_Value+0xb2>
    40fc:	2e 81       	ldd	r18, Y+6	; 0x06
    40fe:	3f 81       	ldd	r19, Y+7	; 0x07
    4100:	22 30       	cpi	r18, 0x02	; 2
    4102:	31 05       	cpc	r19, r1
    4104:	0c f0       	brlt	.+2      	; 0x4108 <DIO_void_Set_Pin_Value+0x58>
    4106:	42 c0       	rjmp	.+132    	; 0x418c <DIO_void_Set_Pin_Value+0xdc>
    4108:	8e 81       	ldd	r24, Y+6	; 0x06
    410a:	9f 81       	ldd	r25, Y+7	; 0x07
    410c:	00 97       	sbiw	r24, 0x00	; 0
    410e:	a1 f0       	breq	.+40     	; 0x4138 <DIO_void_Set_Pin_Value+0x88>
    4110:	68 c1       	rjmp	.+720    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
    4112:	2e 81       	ldd	r18, Y+6	; 0x06
    4114:	3f 81       	ldd	r19, Y+7	; 0x07
    4116:	25 30       	cpi	r18, 0x05	; 5
    4118:	31 05       	cpc	r19, r1
    411a:	09 f4       	brne	.+2      	; 0x411e <DIO_void_Set_Pin_Value+0x6e>
    411c:	76 c0       	rjmp	.+236    	; 0x420a <DIO_void_Set_Pin_Value+0x15a>
    411e:	8e 81       	ldd	r24, Y+6	; 0x06
    4120:	9f 81       	ldd	r25, Y+7	; 0x07
    4122:	85 30       	cpi	r24, 0x05	; 5
    4124:	91 05       	cpc	r25, r1
    4126:	0c f4       	brge	.+2      	; 0x412a <DIO_void_Set_Pin_Value+0x7a>
    4128:	5b c0       	rjmp	.+182    	; 0x41e0 <DIO_void_Set_Pin_Value+0x130>
    412a:	2e 81       	ldd	r18, Y+6	; 0x06
    412c:	3f 81       	ldd	r19, Y+7	; 0x07
    412e:	26 30       	cpi	r18, 0x06	; 6
    4130:	31 05       	cpc	r19, r1
    4132:	09 f4       	brne	.+2      	; 0x4136 <DIO_void_Set_Pin_Value+0x86>
    4134:	7f c0       	rjmp	.+254    	; 0x4234 <DIO_void_Set_Pin_Value+0x184>
    4136:	55 c1       	rjmp	.+682    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		{
		case PORTA_ID:CLR_BIT(PORTA,bit_no);break;
    4138:	ab e3       	ldi	r26, 0x3B	; 59
    413a:	b0 e0       	ldi	r27, 0x00	; 0
    413c:	eb e3       	ldi	r30, 0x3B	; 59
    413e:	f0 e0       	ldi	r31, 0x00	; 0
    4140:	80 81       	ld	r24, Z
    4142:	48 2f       	mov	r20, r24
    4144:	8a 81       	ldd	r24, Y+2	; 0x02
    4146:	28 2f       	mov	r18, r24
    4148:	30 e0       	ldi	r19, 0x00	; 0
    414a:	81 e0       	ldi	r24, 0x01	; 1
    414c:	90 e0       	ldi	r25, 0x00	; 0
    414e:	02 2e       	mov	r0, r18
    4150:	02 c0       	rjmp	.+4      	; 0x4156 <DIO_void_Set_Pin_Value+0xa6>
    4152:	88 0f       	add	r24, r24
    4154:	99 1f       	adc	r25, r25
    4156:	0a 94       	dec	r0
    4158:	e2 f7       	brpl	.-8      	; 0x4152 <DIO_void_Set_Pin_Value+0xa2>
    415a:	80 95       	com	r24
    415c:	84 23       	and	r24, r20
    415e:	8c 93       	st	X, r24
    4160:	40 c1       	rjmp	.+640    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTB_ID:CLR_BIT(PORTB,bit_no);break;
    4162:	a8 e3       	ldi	r26, 0x38	; 56
    4164:	b0 e0       	ldi	r27, 0x00	; 0
    4166:	e8 e3       	ldi	r30, 0x38	; 56
    4168:	f0 e0       	ldi	r31, 0x00	; 0
    416a:	80 81       	ld	r24, Z
    416c:	48 2f       	mov	r20, r24
    416e:	8a 81       	ldd	r24, Y+2	; 0x02
    4170:	28 2f       	mov	r18, r24
    4172:	30 e0       	ldi	r19, 0x00	; 0
    4174:	81 e0       	ldi	r24, 0x01	; 1
    4176:	90 e0       	ldi	r25, 0x00	; 0
    4178:	02 2e       	mov	r0, r18
    417a:	02 c0       	rjmp	.+4      	; 0x4180 <DIO_void_Set_Pin_Value+0xd0>
    417c:	88 0f       	add	r24, r24
    417e:	99 1f       	adc	r25, r25
    4180:	0a 94       	dec	r0
    4182:	e2 f7       	brpl	.-8      	; 0x417c <DIO_void_Set_Pin_Value+0xcc>
    4184:	80 95       	com	r24
    4186:	84 23       	and	r24, r20
    4188:	8c 93       	st	X, r24
    418a:	2b c1       	rjmp	.+598    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTC_ID:CLR_BIT(PORTC,bit_no);break;
    418c:	a5 e3       	ldi	r26, 0x35	; 53
    418e:	b0 e0       	ldi	r27, 0x00	; 0
    4190:	e5 e3       	ldi	r30, 0x35	; 53
    4192:	f0 e0       	ldi	r31, 0x00	; 0
    4194:	80 81       	ld	r24, Z
    4196:	48 2f       	mov	r20, r24
    4198:	8a 81       	ldd	r24, Y+2	; 0x02
    419a:	28 2f       	mov	r18, r24
    419c:	30 e0       	ldi	r19, 0x00	; 0
    419e:	81 e0       	ldi	r24, 0x01	; 1
    41a0:	90 e0       	ldi	r25, 0x00	; 0
    41a2:	02 2e       	mov	r0, r18
    41a4:	02 c0       	rjmp	.+4      	; 0x41aa <DIO_void_Set_Pin_Value+0xfa>
    41a6:	88 0f       	add	r24, r24
    41a8:	99 1f       	adc	r25, r25
    41aa:	0a 94       	dec	r0
    41ac:	e2 f7       	brpl	.-8      	; 0x41a6 <DIO_void_Set_Pin_Value+0xf6>
    41ae:	80 95       	com	r24
    41b0:	84 23       	and	r24, r20
    41b2:	8c 93       	st	X, r24
    41b4:	16 c1       	rjmp	.+556    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTD_ID:CLR_BIT(PORTD,bit_no);break;
    41b6:	a2 e3       	ldi	r26, 0x32	; 50
    41b8:	b0 e0       	ldi	r27, 0x00	; 0
    41ba:	e2 e3       	ldi	r30, 0x32	; 50
    41bc:	f0 e0       	ldi	r31, 0x00	; 0
    41be:	80 81       	ld	r24, Z
    41c0:	48 2f       	mov	r20, r24
    41c2:	8a 81       	ldd	r24, Y+2	; 0x02
    41c4:	28 2f       	mov	r18, r24
    41c6:	30 e0       	ldi	r19, 0x00	; 0
    41c8:	81 e0       	ldi	r24, 0x01	; 1
    41ca:	90 e0       	ldi	r25, 0x00	; 0
    41cc:	02 2e       	mov	r0, r18
    41ce:	02 c0       	rjmp	.+4      	; 0x41d4 <DIO_void_Set_Pin_Value+0x124>
    41d0:	88 0f       	add	r24, r24
    41d2:	99 1f       	adc	r25, r25
    41d4:	0a 94       	dec	r0
    41d6:	e2 f7       	brpl	.-8      	; 0x41d0 <DIO_void_Set_Pin_Value+0x120>
    41d8:	80 95       	com	r24
    41da:	84 23       	and	r24, r20
    41dc:	8c 93       	st	X, r24
    41de:	01 c1       	rjmp	.+514    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTE_ID:CLR_BIT(PORTE,bit_no);break;
    41e0:	a3 e2       	ldi	r26, 0x23	; 35
    41e2:	b0 e0       	ldi	r27, 0x00	; 0
    41e4:	e3 e2       	ldi	r30, 0x23	; 35
    41e6:	f0 e0       	ldi	r31, 0x00	; 0
    41e8:	80 81       	ld	r24, Z
    41ea:	48 2f       	mov	r20, r24
    41ec:	8a 81       	ldd	r24, Y+2	; 0x02
    41ee:	28 2f       	mov	r18, r24
    41f0:	30 e0       	ldi	r19, 0x00	; 0
    41f2:	81 e0       	ldi	r24, 0x01	; 1
    41f4:	90 e0       	ldi	r25, 0x00	; 0
    41f6:	02 2e       	mov	r0, r18
    41f8:	02 c0       	rjmp	.+4      	; 0x41fe <DIO_void_Set_Pin_Value+0x14e>
    41fa:	88 0f       	add	r24, r24
    41fc:	99 1f       	adc	r25, r25
    41fe:	0a 94       	dec	r0
    4200:	e2 f7       	brpl	.-8      	; 0x41fa <DIO_void_Set_Pin_Value+0x14a>
    4202:	80 95       	com	r24
    4204:	84 23       	and	r24, r20
    4206:	8c 93       	st	X, r24
    4208:	ec c0       	rjmp	.+472    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTF_ID:CLR_BIT(PORTF,bit_no);break;
    420a:	a2 e6       	ldi	r26, 0x62	; 98
    420c:	b0 e0       	ldi	r27, 0x00	; 0
    420e:	e2 e6       	ldi	r30, 0x62	; 98
    4210:	f0 e0       	ldi	r31, 0x00	; 0
    4212:	80 81       	ld	r24, Z
    4214:	48 2f       	mov	r20, r24
    4216:	8a 81       	ldd	r24, Y+2	; 0x02
    4218:	28 2f       	mov	r18, r24
    421a:	30 e0       	ldi	r19, 0x00	; 0
    421c:	81 e0       	ldi	r24, 0x01	; 1
    421e:	90 e0       	ldi	r25, 0x00	; 0
    4220:	02 2e       	mov	r0, r18
    4222:	02 c0       	rjmp	.+4      	; 0x4228 <DIO_void_Set_Pin_Value+0x178>
    4224:	88 0f       	add	r24, r24
    4226:	99 1f       	adc	r25, r25
    4228:	0a 94       	dec	r0
    422a:	e2 f7       	brpl	.-8      	; 0x4224 <DIO_void_Set_Pin_Value+0x174>
    422c:	80 95       	com	r24
    422e:	84 23       	and	r24, r20
    4230:	8c 93       	st	X, r24
    4232:	d7 c0       	rjmp	.+430    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTG_ID:CLR_BIT(PORTG,bit_no);break;
    4234:	a5 e6       	ldi	r26, 0x65	; 101
    4236:	b0 e0       	ldi	r27, 0x00	; 0
    4238:	e5 e6       	ldi	r30, 0x65	; 101
    423a:	f0 e0       	ldi	r31, 0x00	; 0
    423c:	80 81       	ld	r24, Z
    423e:	48 2f       	mov	r20, r24
    4240:	8a 81       	ldd	r24, Y+2	; 0x02
    4242:	28 2f       	mov	r18, r24
    4244:	30 e0       	ldi	r19, 0x00	; 0
    4246:	81 e0       	ldi	r24, 0x01	; 1
    4248:	90 e0       	ldi	r25, 0x00	; 0
    424a:	02 2e       	mov	r0, r18
    424c:	02 c0       	rjmp	.+4      	; 0x4252 <DIO_void_Set_Pin_Value+0x1a2>
    424e:	88 0f       	add	r24, r24
    4250:	99 1f       	adc	r25, r25
    4252:	0a 94       	dec	r0
    4254:	e2 f7       	brpl	.-8      	; 0x424e <DIO_void_Set_Pin_Value+0x19e>
    4256:	80 95       	com	r24
    4258:	84 23       	and	r24, r20
    425a:	8c 93       	st	X, r24
    425c:	c2 c0       	rjmp	.+388    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		}
	}
	else if(value == HIGH)
    425e:	8b 81       	ldd	r24, Y+3	; 0x03
    4260:	81 30       	cpi	r24, 0x01	; 1
    4262:	09 f0       	breq	.+2      	; 0x4266 <DIO_void_Set_Pin_Value+0x1b6>
    4264:	be c0       	rjmp	.+380    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
	{
		switch(port_no)
    4266:	89 81       	ldd	r24, Y+1	; 0x01
    4268:	28 2f       	mov	r18, r24
    426a:	30 e0       	ldi	r19, 0x00	; 0
    426c:	3d 83       	std	Y+5, r19	; 0x05
    426e:	2c 83       	std	Y+4, r18	; 0x04
    4270:	8c 81       	ldd	r24, Y+4	; 0x04
    4272:	9d 81       	ldd	r25, Y+5	; 0x05
    4274:	83 30       	cpi	r24, 0x03	; 3
    4276:	91 05       	cpc	r25, r1
    4278:	09 f4       	brne	.+2      	; 0x427c <DIO_void_Set_Pin_Value+0x1cc>
    427a:	64 c0       	rjmp	.+200    	; 0x4344 <DIO_void_Set_Pin_Value+0x294>
    427c:	2c 81       	ldd	r18, Y+4	; 0x04
    427e:	3d 81       	ldd	r19, Y+5	; 0x05
    4280:	24 30       	cpi	r18, 0x04	; 4
    4282:	31 05       	cpc	r19, r1
    4284:	84 f4       	brge	.+32     	; 0x42a6 <DIO_void_Set_Pin_Value+0x1f6>
    4286:	8c 81       	ldd	r24, Y+4	; 0x04
    4288:	9d 81       	ldd	r25, Y+5	; 0x05
    428a:	81 30       	cpi	r24, 0x01	; 1
    428c:	91 05       	cpc	r25, r1
    428e:	91 f1       	breq	.+100    	; 0x42f4 <DIO_void_Set_Pin_Value+0x244>
    4290:	2c 81       	ldd	r18, Y+4	; 0x04
    4292:	3d 81       	ldd	r19, Y+5	; 0x05
    4294:	22 30       	cpi	r18, 0x02	; 2
    4296:	31 05       	cpc	r19, r1
    4298:	0c f0       	brlt	.+2      	; 0x429c <DIO_void_Set_Pin_Value+0x1ec>
    429a:	40 c0       	rjmp	.+128    	; 0x431c <DIO_void_Set_Pin_Value+0x26c>
    429c:	8c 81       	ldd	r24, Y+4	; 0x04
    429e:	9d 81       	ldd	r25, Y+5	; 0x05
    42a0:	00 97       	sbiw	r24, 0x00	; 0
    42a2:	a1 f0       	breq	.+40     	; 0x42cc <DIO_void_Set_Pin_Value+0x21c>
    42a4:	9e c0       	rjmp	.+316    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
    42a6:	2c 81       	ldd	r18, Y+4	; 0x04
    42a8:	3d 81       	ldd	r19, Y+5	; 0x05
    42aa:	25 30       	cpi	r18, 0x05	; 5
    42ac:	31 05       	cpc	r19, r1
    42ae:	09 f4       	brne	.+2      	; 0x42b2 <DIO_void_Set_Pin_Value+0x202>
    42b0:	71 c0       	rjmp	.+226    	; 0x4394 <DIO_void_Set_Pin_Value+0x2e4>
    42b2:	8c 81       	ldd	r24, Y+4	; 0x04
    42b4:	9d 81       	ldd	r25, Y+5	; 0x05
    42b6:	85 30       	cpi	r24, 0x05	; 5
    42b8:	91 05       	cpc	r25, r1
    42ba:	0c f4       	brge	.+2      	; 0x42be <DIO_void_Set_Pin_Value+0x20e>
    42bc:	57 c0       	rjmp	.+174    	; 0x436c <DIO_void_Set_Pin_Value+0x2bc>
    42be:	2c 81       	ldd	r18, Y+4	; 0x04
    42c0:	3d 81       	ldd	r19, Y+5	; 0x05
    42c2:	26 30       	cpi	r18, 0x06	; 6
    42c4:	31 05       	cpc	r19, r1
    42c6:	09 f4       	brne	.+2      	; 0x42ca <DIO_void_Set_Pin_Value+0x21a>
    42c8:	79 c0       	rjmp	.+242    	; 0x43bc <DIO_void_Set_Pin_Value+0x30c>
    42ca:	8b c0       	rjmp	.+278    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		{
		case PORTA_ID:SET_BIT(PORTA,bit_no);break;
    42cc:	ab e3       	ldi	r26, 0x3B	; 59
    42ce:	b0 e0       	ldi	r27, 0x00	; 0
    42d0:	eb e3       	ldi	r30, 0x3B	; 59
    42d2:	f0 e0       	ldi	r31, 0x00	; 0
    42d4:	80 81       	ld	r24, Z
    42d6:	48 2f       	mov	r20, r24
    42d8:	8a 81       	ldd	r24, Y+2	; 0x02
    42da:	28 2f       	mov	r18, r24
    42dc:	30 e0       	ldi	r19, 0x00	; 0
    42de:	81 e0       	ldi	r24, 0x01	; 1
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	02 2e       	mov	r0, r18
    42e4:	02 c0       	rjmp	.+4      	; 0x42ea <DIO_void_Set_Pin_Value+0x23a>
    42e6:	88 0f       	add	r24, r24
    42e8:	99 1f       	adc	r25, r25
    42ea:	0a 94       	dec	r0
    42ec:	e2 f7       	brpl	.-8      	; 0x42e6 <DIO_void_Set_Pin_Value+0x236>
    42ee:	84 2b       	or	r24, r20
    42f0:	8c 93       	st	X, r24
    42f2:	77 c0       	rjmp	.+238    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTB_ID:SET_BIT(PORTB,bit_no);break;
    42f4:	a8 e3       	ldi	r26, 0x38	; 56
    42f6:	b0 e0       	ldi	r27, 0x00	; 0
    42f8:	e8 e3       	ldi	r30, 0x38	; 56
    42fa:	f0 e0       	ldi	r31, 0x00	; 0
    42fc:	80 81       	ld	r24, Z
    42fe:	48 2f       	mov	r20, r24
    4300:	8a 81       	ldd	r24, Y+2	; 0x02
    4302:	28 2f       	mov	r18, r24
    4304:	30 e0       	ldi	r19, 0x00	; 0
    4306:	81 e0       	ldi	r24, 0x01	; 1
    4308:	90 e0       	ldi	r25, 0x00	; 0
    430a:	02 2e       	mov	r0, r18
    430c:	02 c0       	rjmp	.+4      	; 0x4312 <DIO_void_Set_Pin_Value+0x262>
    430e:	88 0f       	add	r24, r24
    4310:	99 1f       	adc	r25, r25
    4312:	0a 94       	dec	r0
    4314:	e2 f7       	brpl	.-8      	; 0x430e <DIO_void_Set_Pin_Value+0x25e>
    4316:	84 2b       	or	r24, r20
    4318:	8c 93       	st	X, r24
    431a:	63 c0       	rjmp	.+198    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTC_ID:SET_BIT(PORTC,bit_no);break;
    431c:	a5 e3       	ldi	r26, 0x35	; 53
    431e:	b0 e0       	ldi	r27, 0x00	; 0
    4320:	e5 e3       	ldi	r30, 0x35	; 53
    4322:	f0 e0       	ldi	r31, 0x00	; 0
    4324:	80 81       	ld	r24, Z
    4326:	48 2f       	mov	r20, r24
    4328:	8a 81       	ldd	r24, Y+2	; 0x02
    432a:	28 2f       	mov	r18, r24
    432c:	30 e0       	ldi	r19, 0x00	; 0
    432e:	81 e0       	ldi	r24, 0x01	; 1
    4330:	90 e0       	ldi	r25, 0x00	; 0
    4332:	02 2e       	mov	r0, r18
    4334:	02 c0       	rjmp	.+4      	; 0x433a <DIO_void_Set_Pin_Value+0x28a>
    4336:	88 0f       	add	r24, r24
    4338:	99 1f       	adc	r25, r25
    433a:	0a 94       	dec	r0
    433c:	e2 f7       	brpl	.-8      	; 0x4336 <DIO_void_Set_Pin_Value+0x286>
    433e:	84 2b       	or	r24, r20
    4340:	8c 93       	st	X, r24
    4342:	4f c0       	rjmp	.+158    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTD_ID:SET_BIT(PORTD,bit_no);break;
    4344:	a2 e3       	ldi	r26, 0x32	; 50
    4346:	b0 e0       	ldi	r27, 0x00	; 0
    4348:	e2 e3       	ldi	r30, 0x32	; 50
    434a:	f0 e0       	ldi	r31, 0x00	; 0
    434c:	80 81       	ld	r24, Z
    434e:	48 2f       	mov	r20, r24
    4350:	8a 81       	ldd	r24, Y+2	; 0x02
    4352:	28 2f       	mov	r18, r24
    4354:	30 e0       	ldi	r19, 0x00	; 0
    4356:	81 e0       	ldi	r24, 0x01	; 1
    4358:	90 e0       	ldi	r25, 0x00	; 0
    435a:	02 2e       	mov	r0, r18
    435c:	02 c0       	rjmp	.+4      	; 0x4362 <DIO_void_Set_Pin_Value+0x2b2>
    435e:	88 0f       	add	r24, r24
    4360:	99 1f       	adc	r25, r25
    4362:	0a 94       	dec	r0
    4364:	e2 f7       	brpl	.-8      	; 0x435e <DIO_void_Set_Pin_Value+0x2ae>
    4366:	84 2b       	or	r24, r20
    4368:	8c 93       	st	X, r24
    436a:	3b c0       	rjmp	.+118    	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTE_ID:SET_BIT(PORTE,bit_no);break;
    436c:	a3 e2       	ldi	r26, 0x23	; 35
    436e:	b0 e0       	ldi	r27, 0x00	; 0
    4370:	e3 e2       	ldi	r30, 0x23	; 35
    4372:	f0 e0       	ldi	r31, 0x00	; 0
    4374:	80 81       	ld	r24, Z
    4376:	48 2f       	mov	r20, r24
    4378:	8a 81       	ldd	r24, Y+2	; 0x02
    437a:	28 2f       	mov	r18, r24
    437c:	30 e0       	ldi	r19, 0x00	; 0
    437e:	81 e0       	ldi	r24, 0x01	; 1
    4380:	90 e0       	ldi	r25, 0x00	; 0
    4382:	02 2e       	mov	r0, r18
    4384:	02 c0       	rjmp	.+4      	; 0x438a <DIO_void_Set_Pin_Value+0x2da>
    4386:	88 0f       	add	r24, r24
    4388:	99 1f       	adc	r25, r25
    438a:	0a 94       	dec	r0
    438c:	e2 f7       	brpl	.-8      	; 0x4386 <DIO_void_Set_Pin_Value+0x2d6>
    438e:	84 2b       	or	r24, r20
    4390:	8c 93       	st	X, r24
    4392:	27 c0       	rjmp	.+78     	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTF_ID:SET_BIT(PORTF,bit_no);break;
    4394:	a2 e6       	ldi	r26, 0x62	; 98
    4396:	b0 e0       	ldi	r27, 0x00	; 0
    4398:	e2 e6       	ldi	r30, 0x62	; 98
    439a:	f0 e0       	ldi	r31, 0x00	; 0
    439c:	80 81       	ld	r24, Z
    439e:	48 2f       	mov	r20, r24
    43a0:	8a 81       	ldd	r24, Y+2	; 0x02
    43a2:	28 2f       	mov	r18, r24
    43a4:	30 e0       	ldi	r19, 0x00	; 0
    43a6:	81 e0       	ldi	r24, 0x01	; 1
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	02 2e       	mov	r0, r18
    43ac:	02 c0       	rjmp	.+4      	; 0x43b2 <DIO_void_Set_Pin_Value+0x302>
    43ae:	88 0f       	add	r24, r24
    43b0:	99 1f       	adc	r25, r25
    43b2:	0a 94       	dec	r0
    43b4:	e2 f7       	brpl	.-8      	; 0x43ae <DIO_void_Set_Pin_Value+0x2fe>
    43b6:	84 2b       	or	r24, r20
    43b8:	8c 93       	st	X, r24
    43ba:	13 c0       	rjmp	.+38     	; 0x43e2 <DIO_void_Set_Pin_Value+0x332>
		case PORTG_ID:SET_BIT(PORTG,bit_no);break;
    43bc:	a5 e6       	ldi	r26, 0x65	; 101
    43be:	b0 e0       	ldi	r27, 0x00	; 0
    43c0:	e5 e6       	ldi	r30, 0x65	; 101
    43c2:	f0 e0       	ldi	r31, 0x00	; 0
    43c4:	80 81       	ld	r24, Z
    43c6:	48 2f       	mov	r20, r24
    43c8:	8a 81       	ldd	r24, Y+2	; 0x02
    43ca:	28 2f       	mov	r18, r24
    43cc:	30 e0       	ldi	r19, 0x00	; 0
    43ce:	81 e0       	ldi	r24, 0x01	; 1
    43d0:	90 e0       	ldi	r25, 0x00	; 0
    43d2:	02 2e       	mov	r0, r18
    43d4:	02 c0       	rjmp	.+4      	; 0x43da <DIO_void_Set_Pin_Value+0x32a>
    43d6:	88 0f       	add	r24, r24
    43d8:	99 1f       	adc	r25, r25
    43da:	0a 94       	dec	r0
    43dc:	e2 f7       	brpl	.-8      	; 0x43d6 <DIO_void_Set_Pin_Value+0x326>
    43de:	84 2b       	or	r24, r20
    43e0:	8c 93       	st	X, r24
		}
	}
}
    43e2:	27 96       	adiw	r28, 0x07	; 7
    43e4:	0f b6       	in	r0, 0x3f	; 63
    43e6:	f8 94       	cli
    43e8:	de bf       	out	0x3e, r29	; 62
    43ea:	0f be       	out	0x3f, r0	; 63
    43ec:	cd bf       	out	0x3d, r28	; 61
    43ee:	cf 91       	pop	r28
    43f0:	df 91       	pop	r29
    43f2:	08 95       	ret

000043f4 <DIO_value_type_Get_Pin_Value>:

value_type DIO_value_type_Get_Pin_Value(port_no_type port_no, bit_no_type bit_no)
{
    43f4:	df 93       	push	r29
    43f6:	cf 93       	push	r28
    43f8:	00 d0       	rcall	.+0      	; 0x43fa <DIO_value_type_Get_Pin_Value+0x6>
    43fa:	00 d0       	rcall	.+0      	; 0x43fc <DIO_value_type_Get_Pin_Value+0x8>
    43fc:	0f 92       	push	r0
    43fe:	cd b7       	in	r28, 0x3d	; 61
    4400:	de b7       	in	r29, 0x3e	; 62
    4402:	8a 83       	std	Y+2, r24	; 0x02
    4404:	6b 83       	std	Y+3, r22	; 0x03
	value_type return_value;
	switch(port_no)
    4406:	8a 81       	ldd	r24, Y+2	; 0x02
    4408:	28 2f       	mov	r18, r24
    440a:	30 e0       	ldi	r19, 0x00	; 0
    440c:	3d 83       	std	Y+5, r19	; 0x05
    440e:	2c 83       	std	Y+4, r18	; 0x04
    4410:	4c 81       	ldd	r20, Y+4	; 0x04
    4412:	5d 81       	ldd	r21, Y+5	; 0x05
    4414:	43 30       	cpi	r20, 0x03	; 3
    4416:	51 05       	cpc	r21, r1
    4418:	09 f4       	brne	.+2      	; 0x441c <DIO_value_type_Get_Pin_Value+0x28>
    441a:	5e c0       	rjmp	.+188    	; 0x44d8 <DIO_value_type_Get_Pin_Value+0xe4>
    441c:	8c 81       	ldd	r24, Y+4	; 0x04
    441e:	9d 81       	ldd	r25, Y+5	; 0x05
    4420:	84 30       	cpi	r24, 0x04	; 4
    4422:	91 05       	cpc	r25, r1
    4424:	84 f4       	brge	.+32     	; 0x4446 <DIO_value_type_Get_Pin_Value+0x52>
    4426:	2c 81       	ldd	r18, Y+4	; 0x04
    4428:	3d 81       	ldd	r19, Y+5	; 0x05
    442a:	21 30       	cpi	r18, 0x01	; 1
    442c:	31 05       	cpc	r19, r1
    442e:	81 f1       	breq	.+96     	; 0x4490 <DIO_value_type_Get_Pin_Value+0x9c>
    4430:	4c 81       	ldd	r20, Y+4	; 0x04
    4432:	5d 81       	ldd	r21, Y+5	; 0x05
    4434:	42 30       	cpi	r20, 0x02	; 2
    4436:	51 05       	cpc	r21, r1
    4438:	0c f0       	brlt	.+2      	; 0x443c <DIO_value_type_Get_Pin_Value+0x48>
    443a:	3c c0       	rjmp	.+120    	; 0x44b4 <DIO_value_type_Get_Pin_Value+0xc0>
    443c:	8c 81       	ldd	r24, Y+4	; 0x04
    443e:	9d 81       	ldd	r25, Y+5	; 0x05
    4440:	00 97       	sbiw	r24, 0x00	; 0
    4442:	a1 f0       	breq	.+40     	; 0x446c <DIO_value_type_Get_Pin_Value+0x78>
    4444:	90 c0       	rjmp	.+288    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
    4446:	2c 81       	ldd	r18, Y+4	; 0x04
    4448:	3d 81       	ldd	r19, Y+5	; 0x05
    444a:	25 30       	cpi	r18, 0x05	; 5
    444c:	31 05       	cpc	r19, r1
    444e:	09 f4       	brne	.+2      	; 0x4452 <DIO_value_type_Get_Pin_Value+0x5e>
    4450:	67 c0       	rjmp	.+206    	; 0x4520 <DIO_value_type_Get_Pin_Value+0x12c>
    4452:	4c 81       	ldd	r20, Y+4	; 0x04
    4454:	5d 81       	ldd	r21, Y+5	; 0x05
    4456:	45 30       	cpi	r20, 0x05	; 5
    4458:	51 05       	cpc	r21, r1
    445a:	0c f4       	brge	.+2      	; 0x445e <DIO_value_type_Get_Pin_Value+0x6a>
    445c:	4f c0       	rjmp	.+158    	; 0x44fc <DIO_value_type_Get_Pin_Value+0x108>
    445e:	8c 81       	ldd	r24, Y+4	; 0x04
    4460:	9d 81       	ldd	r25, Y+5	; 0x05
    4462:	86 30       	cpi	r24, 0x06	; 6
    4464:	91 05       	cpc	r25, r1
    4466:	09 f4       	brne	.+2      	; 0x446a <DIO_value_type_Get_Pin_Value+0x76>
    4468:	6d c0       	rjmp	.+218    	; 0x4544 <DIO_value_type_Get_Pin_Value+0x150>
    446a:	7d c0       	rjmp	.+250    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	{
	case PORTA_ID:return_value = GET_BIT(PINA,bit_no);break;
    446c:	e9 e3       	ldi	r30, 0x39	; 57
    446e:	f0 e0       	ldi	r31, 0x00	; 0
    4470:	80 81       	ld	r24, Z
    4472:	28 2f       	mov	r18, r24
    4474:	30 e0       	ldi	r19, 0x00	; 0
    4476:	8b 81       	ldd	r24, Y+3	; 0x03
    4478:	88 2f       	mov	r24, r24
    447a:	90 e0       	ldi	r25, 0x00	; 0
    447c:	a9 01       	movw	r20, r18
    447e:	02 c0       	rjmp	.+4      	; 0x4484 <DIO_value_type_Get_Pin_Value+0x90>
    4480:	55 95       	asr	r21
    4482:	47 95       	ror	r20
    4484:	8a 95       	dec	r24
    4486:	e2 f7       	brpl	.-8      	; 0x4480 <DIO_value_type_Get_Pin_Value+0x8c>
    4488:	ca 01       	movw	r24, r20
    448a:	81 70       	andi	r24, 0x01	; 1
    448c:	89 83       	std	Y+1, r24	; 0x01
    448e:	6b c0       	rjmp	.+214    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTB_ID:return_value = GET_BIT(PINB,bit_no);break;
    4490:	e6 e3       	ldi	r30, 0x36	; 54
    4492:	f0 e0       	ldi	r31, 0x00	; 0
    4494:	80 81       	ld	r24, Z
    4496:	28 2f       	mov	r18, r24
    4498:	30 e0       	ldi	r19, 0x00	; 0
    449a:	8b 81       	ldd	r24, Y+3	; 0x03
    449c:	88 2f       	mov	r24, r24
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	a9 01       	movw	r20, r18
    44a2:	02 c0       	rjmp	.+4      	; 0x44a8 <DIO_value_type_Get_Pin_Value+0xb4>
    44a4:	55 95       	asr	r21
    44a6:	47 95       	ror	r20
    44a8:	8a 95       	dec	r24
    44aa:	e2 f7       	brpl	.-8      	; 0x44a4 <DIO_value_type_Get_Pin_Value+0xb0>
    44ac:	ca 01       	movw	r24, r20
    44ae:	81 70       	andi	r24, 0x01	; 1
    44b0:	89 83       	std	Y+1, r24	; 0x01
    44b2:	59 c0       	rjmp	.+178    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTC_ID:return_value = GET_BIT(PINC,bit_no);break;
    44b4:	e3 e3       	ldi	r30, 0x33	; 51
    44b6:	f0 e0       	ldi	r31, 0x00	; 0
    44b8:	80 81       	ld	r24, Z
    44ba:	28 2f       	mov	r18, r24
    44bc:	30 e0       	ldi	r19, 0x00	; 0
    44be:	8b 81       	ldd	r24, Y+3	; 0x03
    44c0:	88 2f       	mov	r24, r24
    44c2:	90 e0       	ldi	r25, 0x00	; 0
    44c4:	a9 01       	movw	r20, r18
    44c6:	02 c0       	rjmp	.+4      	; 0x44cc <DIO_value_type_Get_Pin_Value+0xd8>
    44c8:	55 95       	asr	r21
    44ca:	47 95       	ror	r20
    44cc:	8a 95       	dec	r24
    44ce:	e2 f7       	brpl	.-8      	; 0x44c8 <DIO_value_type_Get_Pin_Value+0xd4>
    44d0:	ca 01       	movw	r24, r20
    44d2:	81 70       	andi	r24, 0x01	; 1
    44d4:	89 83       	std	Y+1, r24	; 0x01
    44d6:	47 c0       	rjmp	.+142    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTD_ID:return_value = GET_BIT(PIND,bit_no);break;
    44d8:	e0 e3       	ldi	r30, 0x30	; 48
    44da:	f0 e0       	ldi	r31, 0x00	; 0
    44dc:	80 81       	ld	r24, Z
    44de:	28 2f       	mov	r18, r24
    44e0:	30 e0       	ldi	r19, 0x00	; 0
    44e2:	8b 81       	ldd	r24, Y+3	; 0x03
    44e4:	88 2f       	mov	r24, r24
    44e6:	90 e0       	ldi	r25, 0x00	; 0
    44e8:	a9 01       	movw	r20, r18
    44ea:	02 c0       	rjmp	.+4      	; 0x44f0 <DIO_value_type_Get_Pin_Value+0xfc>
    44ec:	55 95       	asr	r21
    44ee:	47 95       	ror	r20
    44f0:	8a 95       	dec	r24
    44f2:	e2 f7       	brpl	.-8      	; 0x44ec <DIO_value_type_Get_Pin_Value+0xf8>
    44f4:	ca 01       	movw	r24, r20
    44f6:	81 70       	andi	r24, 0x01	; 1
    44f8:	89 83       	std	Y+1, r24	; 0x01
    44fa:	35 c0       	rjmp	.+106    	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTE_ID:return_value = GET_BIT(PINE,bit_no);break;
    44fc:	e1 e2       	ldi	r30, 0x21	; 33
    44fe:	f0 e0       	ldi	r31, 0x00	; 0
    4500:	80 81       	ld	r24, Z
    4502:	28 2f       	mov	r18, r24
    4504:	30 e0       	ldi	r19, 0x00	; 0
    4506:	8b 81       	ldd	r24, Y+3	; 0x03
    4508:	88 2f       	mov	r24, r24
    450a:	90 e0       	ldi	r25, 0x00	; 0
    450c:	a9 01       	movw	r20, r18
    450e:	02 c0       	rjmp	.+4      	; 0x4514 <DIO_value_type_Get_Pin_Value+0x120>
    4510:	55 95       	asr	r21
    4512:	47 95       	ror	r20
    4514:	8a 95       	dec	r24
    4516:	e2 f7       	brpl	.-8      	; 0x4510 <DIO_value_type_Get_Pin_Value+0x11c>
    4518:	ca 01       	movw	r24, r20
    451a:	81 70       	andi	r24, 0x01	; 1
    451c:	89 83       	std	Y+1, r24	; 0x01
    451e:	23 c0       	rjmp	.+70     	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTF_ID:return_value = GET_BIT(PINF,bit_no);break;
    4520:	e0 e2       	ldi	r30, 0x20	; 32
    4522:	f0 e0       	ldi	r31, 0x00	; 0
    4524:	80 81       	ld	r24, Z
    4526:	28 2f       	mov	r18, r24
    4528:	30 e0       	ldi	r19, 0x00	; 0
    452a:	8b 81       	ldd	r24, Y+3	; 0x03
    452c:	88 2f       	mov	r24, r24
    452e:	90 e0       	ldi	r25, 0x00	; 0
    4530:	a9 01       	movw	r20, r18
    4532:	02 c0       	rjmp	.+4      	; 0x4538 <DIO_value_type_Get_Pin_Value+0x144>
    4534:	55 95       	asr	r21
    4536:	47 95       	ror	r20
    4538:	8a 95       	dec	r24
    453a:	e2 f7       	brpl	.-8      	; 0x4534 <DIO_value_type_Get_Pin_Value+0x140>
    453c:	ca 01       	movw	r24, r20
    453e:	81 70       	andi	r24, 0x01	; 1
    4540:	89 83       	std	Y+1, r24	; 0x01
    4542:	11 c0       	rjmp	.+34     	; 0x4566 <DIO_value_type_Get_Pin_Value+0x172>
	case PORTG_ID:return_value = GET_BIT(PING,bit_no);break;
    4544:	e3 e6       	ldi	r30, 0x63	; 99
    4546:	f0 e0       	ldi	r31, 0x00	; 0
    4548:	80 81       	ld	r24, Z
    454a:	28 2f       	mov	r18, r24
    454c:	30 e0       	ldi	r19, 0x00	; 0
    454e:	8b 81       	ldd	r24, Y+3	; 0x03
    4550:	88 2f       	mov	r24, r24
    4552:	90 e0       	ldi	r25, 0x00	; 0
    4554:	a9 01       	movw	r20, r18
    4556:	02 c0       	rjmp	.+4      	; 0x455c <DIO_value_type_Get_Pin_Value+0x168>
    4558:	55 95       	asr	r21
    455a:	47 95       	ror	r20
    455c:	8a 95       	dec	r24
    455e:	e2 f7       	brpl	.-8      	; 0x4558 <DIO_value_type_Get_Pin_Value+0x164>
    4560:	ca 01       	movw	r24, r20
    4562:	81 70       	andi	r24, 0x01	; 1
    4564:	89 83       	std	Y+1, r24	; 0x01
	}

	return return_value;
    4566:	89 81       	ldd	r24, Y+1	; 0x01
}
    4568:	0f 90       	pop	r0
    456a:	0f 90       	pop	r0
    456c:	0f 90       	pop	r0
    456e:	0f 90       	pop	r0
    4570:	0f 90       	pop	r0
    4572:	cf 91       	pop	r28
    4574:	df 91       	pop	r29
    4576:	08 95       	ret

00004578 <DIO_void_Set_Port_Dirction>:

void DIO_void_Set_Port_Dirction(port_no_type port_no, uint8 direction)
{
    4578:	df 93       	push	r29
    457a:	cf 93       	push	r28
    457c:	00 d0       	rcall	.+0      	; 0x457e <DIO_void_Set_Port_Dirction+0x6>
    457e:	00 d0       	rcall	.+0      	; 0x4580 <DIO_void_Set_Port_Dirction+0x8>
    4580:	cd b7       	in	r28, 0x3d	; 61
    4582:	de b7       	in	r29, 0x3e	; 62
    4584:	89 83       	std	Y+1, r24	; 0x01
    4586:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_no)
    4588:	89 81       	ldd	r24, Y+1	; 0x01
    458a:	28 2f       	mov	r18, r24
    458c:	30 e0       	ldi	r19, 0x00	; 0
    458e:	3c 83       	std	Y+4, r19	; 0x04
    4590:	2b 83       	std	Y+3, r18	; 0x03
    4592:	8b 81       	ldd	r24, Y+3	; 0x03
    4594:	9c 81       	ldd	r25, Y+4	; 0x04
    4596:	83 30       	cpi	r24, 0x03	; 3
    4598:	91 05       	cpc	r25, r1
    459a:	99 f1       	breq	.+102    	; 0x4602 <DIO_void_Set_Port_Dirction+0x8a>
    459c:	2b 81       	ldd	r18, Y+3	; 0x03
    459e:	3c 81       	ldd	r19, Y+4	; 0x04
    45a0:	24 30       	cpi	r18, 0x04	; 4
    45a2:	31 05       	cpc	r19, r1
    45a4:	7c f4       	brge	.+30     	; 0x45c4 <DIO_void_Set_Port_Dirction+0x4c>
    45a6:	8b 81       	ldd	r24, Y+3	; 0x03
    45a8:	9c 81       	ldd	r25, Y+4	; 0x04
    45aa:	81 30       	cpi	r24, 0x01	; 1
    45ac:	91 05       	cpc	r25, r1
    45ae:	f9 f0       	breq	.+62     	; 0x45ee <DIO_void_Set_Port_Dirction+0x76>
    45b0:	2b 81       	ldd	r18, Y+3	; 0x03
    45b2:	3c 81       	ldd	r19, Y+4	; 0x04
    45b4:	22 30       	cpi	r18, 0x02	; 2
    45b6:	31 05       	cpc	r19, r1
    45b8:	fc f4       	brge	.+62     	; 0x45f8 <DIO_void_Set_Port_Dirction+0x80>
    45ba:	8b 81       	ldd	r24, Y+3	; 0x03
    45bc:	9c 81       	ldd	r25, Y+4	; 0x04
    45be:	00 97       	sbiw	r24, 0x00	; 0
    45c0:	89 f0       	breq	.+34     	; 0x45e4 <DIO_void_Set_Port_Dirction+0x6c>
    45c2:	32 c0       	rjmp	.+100    	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
    45c4:	2b 81       	ldd	r18, Y+3	; 0x03
    45c6:	3c 81       	ldd	r19, Y+4	; 0x04
    45c8:	25 30       	cpi	r18, 0x05	; 5
    45ca:	31 05       	cpc	r19, r1
    45cc:	21 f1       	breq	.+72     	; 0x4616 <DIO_void_Set_Port_Dirction+0x9e>
    45ce:	8b 81       	ldd	r24, Y+3	; 0x03
    45d0:	9c 81       	ldd	r25, Y+4	; 0x04
    45d2:	85 30       	cpi	r24, 0x05	; 5
    45d4:	91 05       	cpc	r25, r1
    45d6:	d4 f0       	brlt	.+52     	; 0x460c <DIO_void_Set_Port_Dirction+0x94>
    45d8:	2b 81       	ldd	r18, Y+3	; 0x03
    45da:	3c 81       	ldd	r19, Y+4	; 0x04
    45dc:	26 30       	cpi	r18, 0x06	; 6
    45de:	31 05       	cpc	r19, r1
    45e0:	f9 f0       	breq	.+62     	; 0x4620 <DIO_void_Set_Port_Dirction+0xa8>
    45e2:	22 c0       	rjmp	.+68     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	{
	case PORTA_ID: DDRA = direction; break;
    45e4:	ea e3       	ldi	r30, 0x3A	; 58
    45e6:	f0 e0       	ldi	r31, 0x00	; 0
    45e8:	8a 81       	ldd	r24, Y+2	; 0x02
    45ea:	80 83       	st	Z, r24
    45ec:	1d c0       	rjmp	.+58     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTB_ID: DDRB = direction; break;
    45ee:	e7 e3       	ldi	r30, 0x37	; 55
    45f0:	f0 e0       	ldi	r31, 0x00	; 0
    45f2:	8a 81       	ldd	r24, Y+2	; 0x02
    45f4:	80 83       	st	Z, r24
    45f6:	18 c0       	rjmp	.+48     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTC_ID: DDRC = direction; break;
    45f8:	e4 e3       	ldi	r30, 0x34	; 52
    45fa:	f0 e0       	ldi	r31, 0x00	; 0
    45fc:	8a 81       	ldd	r24, Y+2	; 0x02
    45fe:	80 83       	st	Z, r24
    4600:	13 c0       	rjmp	.+38     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTD_ID: DDRD = direction; break;
    4602:	e1 e3       	ldi	r30, 0x31	; 49
    4604:	f0 e0       	ldi	r31, 0x00	; 0
    4606:	8a 81       	ldd	r24, Y+2	; 0x02
    4608:	80 83       	st	Z, r24
    460a:	0e c0       	rjmp	.+28     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTE_ID: DDRE = direction; break;
    460c:	e2 e2       	ldi	r30, 0x22	; 34
    460e:	f0 e0       	ldi	r31, 0x00	; 0
    4610:	8a 81       	ldd	r24, Y+2	; 0x02
    4612:	80 83       	st	Z, r24
    4614:	09 c0       	rjmp	.+18     	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTF_ID: DDRF = direction; break;
    4616:	e1 e6       	ldi	r30, 0x61	; 97
    4618:	f0 e0       	ldi	r31, 0x00	; 0
    461a:	8a 81       	ldd	r24, Y+2	; 0x02
    461c:	80 83       	st	Z, r24
    461e:	04 c0       	rjmp	.+8      	; 0x4628 <DIO_void_Set_Port_Dirction+0xb0>
	case PORTG_ID: DDRG = direction; break;
    4620:	e4 e6       	ldi	r30, 0x64	; 100
    4622:	f0 e0       	ldi	r31, 0x00	; 0
    4624:	8a 81       	ldd	r24, Y+2	; 0x02
    4626:	80 83       	st	Z, r24
	}
}
    4628:	0f 90       	pop	r0
    462a:	0f 90       	pop	r0
    462c:	0f 90       	pop	r0
    462e:	0f 90       	pop	r0
    4630:	cf 91       	pop	r28
    4632:	df 91       	pop	r29
    4634:	08 95       	ret

00004636 <DIO_void_Set_Port_Value>:

void DIO_void_Set_Port_Value(port_no_type port_no, uint8 value)
{
    4636:	df 93       	push	r29
    4638:	cf 93       	push	r28
    463a:	00 d0       	rcall	.+0      	; 0x463c <DIO_void_Set_Port_Value+0x6>
    463c:	00 d0       	rcall	.+0      	; 0x463e <DIO_void_Set_Port_Value+0x8>
    463e:	cd b7       	in	r28, 0x3d	; 61
    4640:	de b7       	in	r29, 0x3e	; 62
    4642:	89 83       	std	Y+1, r24	; 0x01
    4644:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_no)
    4646:	89 81       	ldd	r24, Y+1	; 0x01
    4648:	28 2f       	mov	r18, r24
    464a:	30 e0       	ldi	r19, 0x00	; 0
    464c:	3c 83       	std	Y+4, r19	; 0x04
    464e:	2b 83       	std	Y+3, r18	; 0x03
    4650:	8b 81       	ldd	r24, Y+3	; 0x03
    4652:	9c 81       	ldd	r25, Y+4	; 0x04
    4654:	83 30       	cpi	r24, 0x03	; 3
    4656:	91 05       	cpc	r25, r1
    4658:	99 f1       	breq	.+102    	; 0x46c0 <DIO_void_Set_Port_Value+0x8a>
    465a:	2b 81       	ldd	r18, Y+3	; 0x03
    465c:	3c 81       	ldd	r19, Y+4	; 0x04
    465e:	24 30       	cpi	r18, 0x04	; 4
    4660:	31 05       	cpc	r19, r1
    4662:	7c f4       	brge	.+30     	; 0x4682 <DIO_void_Set_Port_Value+0x4c>
    4664:	8b 81       	ldd	r24, Y+3	; 0x03
    4666:	9c 81       	ldd	r25, Y+4	; 0x04
    4668:	81 30       	cpi	r24, 0x01	; 1
    466a:	91 05       	cpc	r25, r1
    466c:	f9 f0       	breq	.+62     	; 0x46ac <DIO_void_Set_Port_Value+0x76>
    466e:	2b 81       	ldd	r18, Y+3	; 0x03
    4670:	3c 81       	ldd	r19, Y+4	; 0x04
    4672:	22 30       	cpi	r18, 0x02	; 2
    4674:	31 05       	cpc	r19, r1
    4676:	fc f4       	brge	.+62     	; 0x46b6 <DIO_void_Set_Port_Value+0x80>
    4678:	8b 81       	ldd	r24, Y+3	; 0x03
    467a:	9c 81       	ldd	r25, Y+4	; 0x04
    467c:	00 97       	sbiw	r24, 0x00	; 0
    467e:	89 f0       	breq	.+34     	; 0x46a2 <DIO_void_Set_Port_Value+0x6c>
    4680:	32 c0       	rjmp	.+100    	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
    4682:	2b 81       	ldd	r18, Y+3	; 0x03
    4684:	3c 81       	ldd	r19, Y+4	; 0x04
    4686:	25 30       	cpi	r18, 0x05	; 5
    4688:	31 05       	cpc	r19, r1
    468a:	21 f1       	breq	.+72     	; 0x46d4 <DIO_void_Set_Port_Value+0x9e>
    468c:	8b 81       	ldd	r24, Y+3	; 0x03
    468e:	9c 81       	ldd	r25, Y+4	; 0x04
    4690:	85 30       	cpi	r24, 0x05	; 5
    4692:	91 05       	cpc	r25, r1
    4694:	d4 f0       	brlt	.+52     	; 0x46ca <DIO_void_Set_Port_Value+0x94>
    4696:	2b 81       	ldd	r18, Y+3	; 0x03
    4698:	3c 81       	ldd	r19, Y+4	; 0x04
    469a:	26 30       	cpi	r18, 0x06	; 6
    469c:	31 05       	cpc	r19, r1
    469e:	f9 f0       	breq	.+62     	; 0x46de <DIO_void_Set_Port_Value+0xa8>
    46a0:	22 c0       	rjmp	.+68     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	{
	case PORTA_ID: PORTA = value; break;
    46a2:	eb e3       	ldi	r30, 0x3B	; 59
    46a4:	f0 e0       	ldi	r31, 0x00	; 0
    46a6:	8a 81       	ldd	r24, Y+2	; 0x02
    46a8:	80 83       	st	Z, r24
    46aa:	1d c0       	rjmp	.+58     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTB_ID: PORTB = value; break;
    46ac:	e8 e3       	ldi	r30, 0x38	; 56
    46ae:	f0 e0       	ldi	r31, 0x00	; 0
    46b0:	8a 81       	ldd	r24, Y+2	; 0x02
    46b2:	80 83       	st	Z, r24
    46b4:	18 c0       	rjmp	.+48     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTC_ID: PORTC = value; break;
    46b6:	e5 e3       	ldi	r30, 0x35	; 53
    46b8:	f0 e0       	ldi	r31, 0x00	; 0
    46ba:	8a 81       	ldd	r24, Y+2	; 0x02
    46bc:	80 83       	st	Z, r24
    46be:	13 c0       	rjmp	.+38     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTD_ID: PORTD = value; break;
    46c0:	e2 e3       	ldi	r30, 0x32	; 50
    46c2:	f0 e0       	ldi	r31, 0x00	; 0
    46c4:	8a 81       	ldd	r24, Y+2	; 0x02
    46c6:	80 83       	st	Z, r24
    46c8:	0e c0       	rjmp	.+28     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTE_ID: PORTE = value; break;
    46ca:	e3 e2       	ldi	r30, 0x23	; 35
    46cc:	f0 e0       	ldi	r31, 0x00	; 0
    46ce:	8a 81       	ldd	r24, Y+2	; 0x02
    46d0:	80 83       	st	Z, r24
    46d2:	09 c0       	rjmp	.+18     	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTF_ID: PORTF = value; break;
    46d4:	e2 e6       	ldi	r30, 0x62	; 98
    46d6:	f0 e0       	ldi	r31, 0x00	; 0
    46d8:	8a 81       	ldd	r24, Y+2	; 0x02
    46da:	80 83       	st	Z, r24
    46dc:	04 c0       	rjmp	.+8      	; 0x46e6 <DIO_void_Set_Port_Value+0xb0>
	case PORTG_ID: PORTG = value; break;
    46de:	e5 e6       	ldi	r30, 0x65	; 101
    46e0:	f0 e0       	ldi	r31, 0x00	; 0
    46e2:	8a 81       	ldd	r24, Y+2	; 0x02
    46e4:	80 83       	st	Z, r24
	}
}
    46e6:	0f 90       	pop	r0
    46e8:	0f 90       	pop	r0
    46ea:	0f 90       	pop	r0
    46ec:	0f 90       	pop	r0
    46ee:	cf 91       	pop	r28
    46f0:	df 91       	pop	r29
    46f2:	08 95       	ret

000046f4 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L>:

void DIO_void_Set_Port_ValueNIPPLE_H_OR_L(port_no_type port_no, uint8 value,NIPPLE_H_OR_L_type nipple)
{
    46f4:	df 93       	push	r29
    46f6:	cf 93       	push	r28
    46f8:	cd b7       	in	r28, 0x3d	; 61
    46fa:	de b7       	in	r29, 0x3e	; 62
    46fc:	27 97       	sbiw	r28, 0x07	; 7
    46fe:	0f b6       	in	r0, 0x3f	; 63
    4700:	f8 94       	cli
    4702:	de bf       	out	0x3e, r29	; 62
    4704:	0f be       	out	0x3f, r0	; 63
    4706:	cd bf       	out	0x3d, r28	; 61
    4708:	89 83       	std	Y+1, r24	; 0x01
    470a:	6a 83       	std	Y+2, r22	; 0x02
    470c:	4b 83       	std	Y+3, r20	; 0x03
	if(nipple==NIPPLEL)
    470e:	8b 81       	ldd	r24, Y+3	; 0x03
    4710:	88 23       	and	r24, r24
    4712:	09 f0       	breq	.+2      	; 0x4716 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x22>
    4714:	85 c0       	rjmp	.+266    	; 0x4820 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x12c>
	{
		switch(port_no)
    4716:	89 81       	ldd	r24, Y+1	; 0x01
    4718:	28 2f       	mov	r18, r24
    471a:	30 e0       	ldi	r19, 0x00	; 0
    471c:	3f 83       	std	Y+7, r19	; 0x07
    471e:	2e 83       	std	Y+6, r18	; 0x06
    4720:	8e 81       	ldd	r24, Y+6	; 0x06
    4722:	9f 81       	ldd	r25, Y+7	; 0x07
    4724:	83 30       	cpi	r24, 0x03	; 3
    4726:	91 05       	cpc	r25, r1
    4728:	09 f4       	brne	.+2      	; 0x472c <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x38>
    472a:	4a c0       	rjmp	.+148    	; 0x47c0 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0xcc>
    472c:	2e 81       	ldd	r18, Y+6	; 0x06
    472e:	3f 81       	ldd	r19, Y+7	; 0x07
    4730:	24 30       	cpi	r18, 0x04	; 4
    4732:	31 05       	cpc	r19, r1
    4734:	7c f4       	brge	.+30     	; 0x4754 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x60>
    4736:	8e 81       	ldd	r24, Y+6	; 0x06
    4738:	9f 81       	ldd	r25, Y+7	; 0x07
    473a:	81 30       	cpi	r24, 0x01	; 1
    473c:	91 05       	cpc	r25, r1
    473e:	41 f1       	breq	.+80     	; 0x4790 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x9c>
    4740:	2e 81       	ldd	r18, Y+6	; 0x06
    4742:	3f 81       	ldd	r19, Y+7	; 0x07
    4744:	22 30       	cpi	r18, 0x02	; 2
    4746:	31 05       	cpc	r19, r1
    4748:	7c f5       	brge	.+94     	; 0x47a8 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0xb4>
    474a:	8e 81       	ldd	r24, Y+6	; 0x06
    474c:	9f 81       	ldd	r25, Y+7	; 0x07
    474e:	00 97       	sbiw	r24, 0x00	; 0
    4750:	99 f0       	breq	.+38     	; 0x4778 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x84>
    4752:	da c0       	rjmp	.+436    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
    4754:	2e 81       	ldd	r18, Y+6	; 0x06
    4756:	3f 81       	ldd	r19, Y+7	; 0x07
    4758:	25 30       	cpi	r18, 0x05	; 5
    475a:	31 05       	cpc	r19, r1
    475c:	09 f4       	brne	.+2      	; 0x4760 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x6c>
    475e:	48 c0       	rjmp	.+144    	; 0x47f0 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0xfc>
    4760:	8e 81       	ldd	r24, Y+6	; 0x06
    4762:	9f 81       	ldd	r25, Y+7	; 0x07
    4764:	85 30       	cpi	r24, 0x05	; 5
    4766:	91 05       	cpc	r25, r1
    4768:	bc f1       	brlt	.+110    	; 0x47d8 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0xe4>
    476a:	2e 81       	ldd	r18, Y+6	; 0x06
    476c:	3f 81       	ldd	r19, Y+7	; 0x07
    476e:	26 30       	cpi	r18, 0x06	; 6
    4770:	31 05       	cpc	r19, r1
    4772:	09 f4       	brne	.+2      	; 0x4776 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x82>
    4774:	49 c0       	rjmp	.+146    	; 0x4808 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x114>
    4776:	c8 c0       	rjmp	.+400    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			{
			case PORTA_ID: ASSIGN_NippleL(PORTA,value); break;
    4778:	ab e3       	ldi	r26, 0x3B	; 59
    477a:	b0 e0       	ldi	r27, 0x00	; 0
    477c:	eb e3       	ldi	r30, 0x3B	; 59
    477e:	f0 e0       	ldi	r31, 0x00	; 0
    4780:	80 81       	ld	r24, Z
    4782:	98 2f       	mov	r25, r24
    4784:	90 7f       	andi	r25, 0xF0	; 240
    4786:	8a 81       	ldd	r24, Y+2	; 0x02
    4788:	8f 70       	andi	r24, 0x0F	; 15
    478a:	89 2b       	or	r24, r25
    478c:	8c 93       	st	X, r24
    478e:	bc c0       	rjmp	.+376    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTB_ID: ASSIGN_NippleL(PORTB,value);break;
    4790:	a8 e3       	ldi	r26, 0x38	; 56
    4792:	b0 e0       	ldi	r27, 0x00	; 0
    4794:	e8 e3       	ldi	r30, 0x38	; 56
    4796:	f0 e0       	ldi	r31, 0x00	; 0
    4798:	80 81       	ld	r24, Z
    479a:	98 2f       	mov	r25, r24
    479c:	90 7f       	andi	r25, 0xF0	; 240
    479e:	8a 81       	ldd	r24, Y+2	; 0x02
    47a0:	8f 70       	andi	r24, 0x0F	; 15
    47a2:	89 2b       	or	r24, r25
    47a4:	8c 93       	st	X, r24
    47a6:	b0 c0       	rjmp	.+352    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTC_ID: ASSIGN_NippleL(PORTC,value); break;
    47a8:	a5 e3       	ldi	r26, 0x35	; 53
    47aa:	b0 e0       	ldi	r27, 0x00	; 0
    47ac:	e5 e3       	ldi	r30, 0x35	; 53
    47ae:	f0 e0       	ldi	r31, 0x00	; 0
    47b0:	80 81       	ld	r24, Z
    47b2:	98 2f       	mov	r25, r24
    47b4:	90 7f       	andi	r25, 0xF0	; 240
    47b6:	8a 81       	ldd	r24, Y+2	; 0x02
    47b8:	8f 70       	andi	r24, 0x0F	; 15
    47ba:	89 2b       	or	r24, r25
    47bc:	8c 93       	st	X, r24
    47be:	a4 c0       	rjmp	.+328    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTD_ID: ASSIGN_NippleL(PORTD,value); break;
    47c0:	a2 e3       	ldi	r26, 0x32	; 50
    47c2:	b0 e0       	ldi	r27, 0x00	; 0
    47c4:	e2 e3       	ldi	r30, 0x32	; 50
    47c6:	f0 e0       	ldi	r31, 0x00	; 0
    47c8:	80 81       	ld	r24, Z
    47ca:	98 2f       	mov	r25, r24
    47cc:	90 7f       	andi	r25, 0xF0	; 240
    47ce:	8a 81       	ldd	r24, Y+2	; 0x02
    47d0:	8f 70       	andi	r24, 0x0F	; 15
    47d2:	89 2b       	or	r24, r25
    47d4:	8c 93       	st	X, r24
    47d6:	98 c0       	rjmp	.+304    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTE_ID: ASSIGN_NippleL(PORTE,value); break;
    47d8:	a3 e2       	ldi	r26, 0x23	; 35
    47da:	b0 e0       	ldi	r27, 0x00	; 0
    47dc:	e3 e2       	ldi	r30, 0x23	; 35
    47de:	f0 e0       	ldi	r31, 0x00	; 0
    47e0:	80 81       	ld	r24, Z
    47e2:	98 2f       	mov	r25, r24
    47e4:	90 7f       	andi	r25, 0xF0	; 240
    47e6:	8a 81       	ldd	r24, Y+2	; 0x02
    47e8:	8f 70       	andi	r24, 0x0F	; 15
    47ea:	89 2b       	or	r24, r25
    47ec:	8c 93       	st	X, r24
    47ee:	8c c0       	rjmp	.+280    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTF_ID: ASSIGN_NippleL(PORTF,value); break;
    47f0:	a2 e6       	ldi	r26, 0x62	; 98
    47f2:	b0 e0       	ldi	r27, 0x00	; 0
    47f4:	e2 e6       	ldi	r30, 0x62	; 98
    47f6:	f0 e0       	ldi	r31, 0x00	; 0
    47f8:	80 81       	ld	r24, Z
    47fa:	98 2f       	mov	r25, r24
    47fc:	90 7f       	andi	r25, 0xF0	; 240
    47fe:	8a 81       	ldd	r24, Y+2	; 0x02
    4800:	8f 70       	andi	r24, 0x0F	; 15
    4802:	89 2b       	or	r24, r25
    4804:	8c 93       	st	X, r24
    4806:	80 c0       	rjmp	.+256    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			case PORTG_ID: ASSIGN_NippleL(PORTG,value); break;
    4808:	a5 e6       	ldi	r26, 0x65	; 101
    480a:	b0 e0       	ldi	r27, 0x00	; 0
    480c:	e5 e6       	ldi	r30, 0x65	; 101
    480e:	f0 e0       	ldi	r31, 0x00	; 0
    4810:	80 81       	ld	r24, Z
    4812:	98 2f       	mov	r25, r24
    4814:	90 7f       	andi	r25, 0xF0	; 240
    4816:	8a 81       	ldd	r24, Y+2	; 0x02
    4818:	8f 70       	andi	r24, 0x0F	; 15
    481a:	89 2b       	or	r24, r25
    481c:	8c 93       	st	X, r24
    481e:	74 c0       	rjmp	.+232    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
			}
	}
	else if(nipple==NIPPLEH)
    4820:	8b 81       	ldd	r24, Y+3	; 0x03
    4822:	81 30       	cpi	r24, 0x01	; 1
    4824:	09 f0       	breq	.+2      	; 0x4828 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x134>
    4826:	70 c0       	rjmp	.+224    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
	{
		switch(port_no)
    4828:	89 81       	ldd	r24, Y+1	; 0x01
    482a:	28 2f       	mov	r18, r24
    482c:	30 e0       	ldi	r19, 0x00	; 0
    482e:	3d 83       	std	Y+5, r19	; 0x05
    4830:	2c 83       	std	Y+4, r18	; 0x04
    4832:	8c 81       	ldd	r24, Y+4	; 0x04
    4834:	9d 81       	ldd	r25, Y+5	; 0x05
    4836:	82 30       	cpi	r24, 0x02	; 2
    4838:	91 05       	cpc	r25, r1
    483a:	b9 f1       	breq	.+110    	; 0x48aa <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x1b6>
    483c:	2c 81       	ldd	r18, Y+4	; 0x04
    483e:	3d 81       	ldd	r19, Y+5	; 0x05
    4840:	23 30       	cpi	r18, 0x03	; 3
    4842:	31 05       	cpc	r19, r1
    4844:	54 f4       	brge	.+20     	; 0x485a <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x166>
    4846:	8c 81       	ldd	r24, Y+4	; 0x04
    4848:	9d 81       	ldd	r25, Y+5	; 0x05
    484a:	00 97       	sbiw	r24, 0x00	; 0
    484c:	b1 f0       	breq	.+44     	; 0x487a <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x186>
    484e:	2c 81       	ldd	r18, Y+4	; 0x04
    4850:	3d 81       	ldd	r19, Y+5	; 0x05
    4852:	21 30       	cpi	r18, 0x01	; 1
    4854:	31 05       	cpc	r19, r1
    4856:	e9 f0       	breq	.+58     	; 0x4892 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x19e>
    4858:	57 c0       	rjmp	.+174    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
    485a:	8c 81       	ldd	r24, Y+4	; 0x04
    485c:	9d 81       	ldd	r25, Y+5	; 0x05
    485e:	84 30       	cpi	r24, 0x04	; 4
    4860:	91 05       	cpc	r25, r1
    4862:	d9 f1       	breq	.+118    	; 0x48da <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x1e6>
    4864:	2c 81       	ldd	r18, Y+4	; 0x04
    4866:	3d 81       	ldd	r19, Y+5	; 0x05
    4868:	24 30       	cpi	r18, 0x04	; 4
    486a:	31 05       	cpc	r19, r1
    486c:	54 f1       	brlt	.+84     	; 0x48c2 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x1ce>
    486e:	8c 81       	ldd	r24, Y+4	; 0x04
    4870:	9d 81       	ldd	r25, Y+5	; 0x05
    4872:	85 30       	cpi	r24, 0x05	; 5
    4874:	91 05       	cpc	r25, r1
    4876:	e9 f1       	breq	.+122    	; 0x48f2 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x1fe>
    4878:	47 c0       	rjmp	.+142    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					{
					case PORTA_ID: ASSIGN_NippleH(PORTA,value); break;
    487a:	ab e3       	ldi	r26, 0x3B	; 59
    487c:	b0 e0       	ldi	r27, 0x00	; 0
    487e:	eb e3       	ldi	r30, 0x3B	; 59
    4880:	f0 e0       	ldi	r31, 0x00	; 0
    4882:	80 81       	ld	r24, Z
    4884:	98 2f       	mov	r25, r24
    4886:	9f 70       	andi	r25, 0x0F	; 15
    4888:	8a 81       	ldd	r24, Y+2	; 0x02
    488a:	80 7f       	andi	r24, 0xF0	; 240
    488c:	89 2b       	or	r24, r25
    488e:	8c 93       	st	X, r24
    4890:	3b c0       	rjmp	.+118    	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					case PORTB_ID: ASSIGN_NippleH(PORTB,value);break;
    4892:	a8 e3       	ldi	r26, 0x38	; 56
    4894:	b0 e0       	ldi	r27, 0x00	; 0
    4896:	e8 e3       	ldi	r30, 0x38	; 56
    4898:	f0 e0       	ldi	r31, 0x00	; 0
    489a:	80 81       	ld	r24, Z
    489c:	98 2f       	mov	r25, r24
    489e:	9f 70       	andi	r25, 0x0F	; 15
    48a0:	8a 81       	ldd	r24, Y+2	; 0x02
    48a2:	80 7f       	andi	r24, 0xF0	; 240
    48a4:	89 2b       	or	r24, r25
    48a6:	8c 93       	st	X, r24
    48a8:	2f c0       	rjmp	.+94     	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					case PORTC_ID: ASSIGN_NippleH(PORTC,value); break;
    48aa:	a5 e3       	ldi	r26, 0x35	; 53
    48ac:	b0 e0       	ldi	r27, 0x00	; 0
    48ae:	e5 e3       	ldi	r30, 0x35	; 53
    48b0:	f0 e0       	ldi	r31, 0x00	; 0
    48b2:	80 81       	ld	r24, Z
    48b4:	98 2f       	mov	r25, r24
    48b6:	9f 70       	andi	r25, 0x0F	; 15
    48b8:	8a 81       	ldd	r24, Y+2	; 0x02
    48ba:	80 7f       	andi	r24, 0xF0	; 240
    48bc:	89 2b       	or	r24, r25
    48be:	8c 93       	st	X, r24
    48c0:	23 c0       	rjmp	.+70     	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					case PORTD_ID: ASSIGN_NippleH(PORTD,value); break;
    48c2:	a2 e3       	ldi	r26, 0x32	; 50
    48c4:	b0 e0       	ldi	r27, 0x00	; 0
    48c6:	e2 e3       	ldi	r30, 0x32	; 50
    48c8:	f0 e0       	ldi	r31, 0x00	; 0
    48ca:	80 81       	ld	r24, Z
    48cc:	98 2f       	mov	r25, r24
    48ce:	9f 70       	andi	r25, 0x0F	; 15
    48d0:	8a 81       	ldd	r24, Y+2	; 0x02
    48d2:	80 7f       	andi	r24, 0xF0	; 240
    48d4:	89 2b       	or	r24, r25
    48d6:	8c 93       	st	X, r24
    48d8:	17 c0       	rjmp	.+46     	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					case PORTE_ID: ASSIGN_NippleH(PORTE,value); break;
    48da:	a3 e2       	ldi	r26, 0x23	; 35
    48dc:	b0 e0       	ldi	r27, 0x00	; 0
    48de:	e3 e2       	ldi	r30, 0x23	; 35
    48e0:	f0 e0       	ldi	r31, 0x00	; 0
    48e2:	80 81       	ld	r24, Z
    48e4:	98 2f       	mov	r25, r24
    48e6:	9f 70       	andi	r25, 0x0F	; 15
    48e8:	8a 81       	ldd	r24, Y+2	; 0x02
    48ea:	80 7f       	andi	r24, 0xF0	; 240
    48ec:	89 2b       	or	r24, r25
    48ee:	8c 93       	st	X, r24
    48f0:	0b c0       	rjmp	.+22     	; 0x4908 <DIO_void_Set_Port_ValueNIPPLE_H_OR_L+0x214>
					case PORTF_ID: ASSIGN_NippleH(PORTF,value); break;
    48f2:	a2 e6       	ldi	r26, 0x62	; 98
    48f4:	b0 e0       	ldi	r27, 0x00	; 0
    48f6:	e2 e6       	ldi	r30, 0x62	; 98
    48f8:	f0 e0       	ldi	r31, 0x00	; 0
    48fa:	80 81       	ld	r24, Z
    48fc:	98 2f       	mov	r25, r24
    48fe:	9f 70       	andi	r25, 0x0F	; 15
    4900:	8a 81       	ldd	r24, Y+2	; 0x02
    4902:	80 7f       	andi	r24, 0xF0	; 240
    4904:	89 2b       	or	r24, r25
    4906:	8c 93       	st	X, r24
					case PORTG_ID:break;
					}
	}
}
    4908:	27 96       	adiw	r28, 0x07	; 7
    490a:	0f b6       	in	r0, 0x3f	; 63
    490c:	f8 94       	cli
    490e:	de bf       	out	0x3e, r29	; 62
    4910:	0f be       	out	0x3f, r0	; 63
    4912:	cd bf       	out	0x3d, r28	; 61
    4914:	cf 91       	pop	r28
    4916:	df 91       	pop	r29
    4918:	08 95       	ret

0000491a <DIO_uint8_Get_Port_Value>:
uint8 DIO_uint8_Get_Port_Value(port_no_type port_no)
{
    491a:	df 93       	push	r29
    491c:	cf 93       	push	r28
    491e:	00 d0       	rcall	.+0      	; 0x4920 <DIO_uint8_Get_Port_Value+0x6>
    4920:	00 d0       	rcall	.+0      	; 0x4922 <DIO_uint8_Get_Port_Value+0x8>
    4922:	cd b7       	in	r28, 0x3d	; 61
    4924:	de b7       	in	r29, 0x3e	; 62
    4926:	8a 83       	std	Y+2, r24	; 0x02
	uint8 return_value=0;
    4928:	19 82       	std	Y+1, r1	; 0x01
	switch(port_no)
    492a:	8a 81       	ldd	r24, Y+2	; 0x02
    492c:	28 2f       	mov	r18, r24
    492e:	30 e0       	ldi	r19, 0x00	; 0
    4930:	3c 83       	std	Y+4, r19	; 0x04
    4932:	2b 83       	std	Y+3, r18	; 0x03
    4934:	8b 81       	ldd	r24, Y+3	; 0x03
    4936:	9c 81       	ldd	r25, Y+4	; 0x04
    4938:	83 30       	cpi	r24, 0x03	; 3
    493a:	91 05       	cpc	r25, r1
    493c:	99 f1       	breq	.+102    	; 0x49a4 <DIO_uint8_Get_Port_Value+0x8a>
    493e:	2b 81       	ldd	r18, Y+3	; 0x03
    4940:	3c 81       	ldd	r19, Y+4	; 0x04
    4942:	24 30       	cpi	r18, 0x04	; 4
    4944:	31 05       	cpc	r19, r1
    4946:	7c f4       	brge	.+30     	; 0x4966 <DIO_uint8_Get_Port_Value+0x4c>
    4948:	8b 81       	ldd	r24, Y+3	; 0x03
    494a:	9c 81       	ldd	r25, Y+4	; 0x04
    494c:	81 30       	cpi	r24, 0x01	; 1
    494e:	91 05       	cpc	r25, r1
    4950:	f9 f0       	breq	.+62     	; 0x4990 <DIO_uint8_Get_Port_Value+0x76>
    4952:	2b 81       	ldd	r18, Y+3	; 0x03
    4954:	3c 81       	ldd	r19, Y+4	; 0x04
    4956:	22 30       	cpi	r18, 0x02	; 2
    4958:	31 05       	cpc	r19, r1
    495a:	fc f4       	brge	.+62     	; 0x499a <DIO_uint8_Get_Port_Value+0x80>
    495c:	8b 81       	ldd	r24, Y+3	; 0x03
    495e:	9c 81       	ldd	r25, Y+4	; 0x04
    4960:	00 97       	sbiw	r24, 0x00	; 0
    4962:	89 f0       	breq	.+34     	; 0x4986 <DIO_uint8_Get_Port_Value+0x6c>
    4964:	32 c0       	rjmp	.+100    	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
    4966:	2b 81       	ldd	r18, Y+3	; 0x03
    4968:	3c 81       	ldd	r19, Y+4	; 0x04
    496a:	25 30       	cpi	r18, 0x05	; 5
    496c:	31 05       	cpc	r19, r1
    496e:	21 f1       	breq	.+72     	; 0x49b8 <DIO_uint8_Get_Port_Value+0x9e>
    4970:	8b 81       	ldd	r24, Y+3	; 0x03
    4972:	9c 81       	ldd	r25, Y+4	; 0x04
    4974:	85 30       	cpi	r24, 0x05	; 5
    4976:	91 05       	cpc	r25, r1
    4978:	d4 f0       	brlt	.+52     	; 0x49ae <DIO_uint8_Get_Port_Value+0x94>
    497a:	2b 81       	ldd	r18, Y+3	; 0x03
    497c:	3c 81       	ldd	r19, Y+4	; 0x04
    497e:	26 30       	cpi	r18, 0x06	; 6
    4980:	31 05       	cpc	r19, r1
    4982:	f9 f0       	breq	.+62     	; 0x49c2 <DIO_uint8_Get_Port_Value+0xa8>
    4984:	22 c0       	rjmp	.+68     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	{
	case PORTA_ID:return_value =PINA;break;
    4986:	e9 e3       	ldi	r30, 0x39	; 57
    4988:	f0 e0       	ldi	r31, 0x00	; 0
    498a:	80 81       	ld	r24, Z
    498c:	89 83       	std	Y+1, r24	; 0x01
    498e:	1d c0       	rjmp	.+58     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTB_ID:return_value =PINB;break;
    4990:	e6 e3       	ldi	r30, 0x36	; 54
    4992:	f0 e0       	ldi	r31, 0x00	; 0
    4994:	80 81       	ld	r24, Z
    4996:	89 83       	std	Y+1, r24	; 0x01
    4998:	18 c0       	rjmp	.+48     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTC_ID:return_value =PINC;break;
    499a:	e3 e3       	ldi	r30, 0x33	; 51
    499c:	f0 e0       	ldi	r31, 0x00	; 0
    499e:	80 81       	ld	r24, Z
    49a0:	89 83       	std	Y+1, r24	; 0x01
    49a2:	13 c0       	rjmp	.+38     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTD_ID:return_value =PIND;break;
    49a4:	e0 e3       	ldi	r30, 0x30	; 48
    49a6:	f0 e0       	ldi	r31, 0x00	; 0
    49a8:	80 81       	ld	r24, Z
    49aa:	89 83       	std	Y+1, r24	; 0x01
    49ac:	0e c0       	rjmp	.+28     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTE_ID:return_value =PINE;break;
    49ae:	e1 e2       	ldi	r30, 0x21	; 33
    49b0:	f0 e0       	ldi	r31, 0x00	; 0
    49b2:	80 81       	ld	r24, Z
    49b4:	89 83       	std	Y+1, r24	; 0x01
    49b6:	09 c0       	rjmp	.+18     	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTF_ID:return_value =PINF;break;
    49b8:	e0 e2       	ldi	r30, 0x20	; 32
    49ba:	f0 e0       	ldi	r31, 0x00	; 0
    49bc:	80 81       	ld	r24, Z
    49be:	89 83       	std	Y+1, r24	; 0x01
    49c0:	04 c0       	rjmp	.+8      	; 0x49ca <DIO_uint8_Get_Port_Value+0xb0>
	case PORTG_ID:return_value =PING;break;
    49c2:	e3 e6       	ldi	r30, 0x63	; 99
    49c4:	f0 e0       	ldi	r31, 0x00	; 0
    49c6:	80 81       	ld	r24, Z
    49c8:	89 83       	std	Y+1, r24	; 0x01
	}

	return return_value;
    49ca:	89 81       	ldd	r24, Y+1	; 0x01
}
    49cc:	0f 90       	pop	r0
    49ce:	0f 90       	pop	r0
    49d0:	0f 90       	pop	r0
    49d2:	0f 90       	pop	r0
    49d4:	cf 91       	pop	r28
    49d6:	df 91       	pop	r29
    49d8:	08 95       	ret

000049da <Ultrasonic_init>:
#include"ULTRASONIC.h"
volatile uint8 f=0,c=0;
volatile uint16 t1=0,t2=0;

void Ultrasonic_init(void)
{
    49da:	df 93       	push	r29
    49dc:	cf 93       	push	r28
    49de:	cd b7       	in	r28, 0x3d	; 61
    49e0:	de b7       	in	r29, 0x3e	; 62
	DIO_void_Set_Pin_Dirction(trig_port,trig0,OUTPUT);
    49e2:	80 e0       	ldi	r24, 0x00	; 0
    49e4:	60 e0       	ldi	r22, 0x00	; 0
    49e6:	41 e0       	ldi	r20, 0x01	; 1
    49e8:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	DIO_void_Set_Pin_Dirction(trig_port,trig1,OUTPUT);
    49ec:	80 e0       	ldi	r24, 0x00	; 0
    49ee:	61 e0       	ldi	r22, 0x01	; 1
    49f0:	41 e0       	ldi	r20, 0x01	; 1
    49f2:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	DIO_void_Set_Pin_Dirction(trig_port,trig2,OUTPUT);
    49f6:	80 e0       	ldi	r24, 0x00	; 0
    49f8:	63 e0       	ldi	r22, 0x03	; 3
    49fa:	41 e0       	ldi	r20, 0x01	; 1
    49fc:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	DIO_void_Set_Pin_Dirction(trig_port,trig3,OUTPUT);
    4a00:	80 e0       	ldi	r24, 0x00	; 0
    4a02:	64 e0       	ldi	r22, 0x04	; 4
    4a04:	41 e0       	ldi	r20, 0x01	; 1
    4a06:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	DIO_void_Set_Pin_Dirction(trig_port,trig4,OUTPUT);
    4a0a:	80 e0       	ldi	r24, 0x00	; 0
    4a0c:	65 e0       	ldi	r22, 0x05	; 5
    4a0e:	41 e0       	ldi	r20, 0x01	; 1
    4a10:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	//TRY TO PUT ICU PIN INPUT
	Timer1_Init(timer1_Normal_mode,timer_scale_8,disconnected_1,disconnected_channel);
    4a14:	80 e0       	ldi	r24, 0x00	; 0
    4a16:	62 e0       	ldi	r22, 0x02	; 2
    4a18:	40 e0       	ldi	r20, 0x00	; 0
    4a1a:	20 e0       	ldi	r18, 0x00	; 0
    4a1c:	0e 94 d7 18 	call	0x31ae	; 0x31ae <Timer1_Init>
	Timer1_OV_InterruptEnable();
    4a20:	0e 94 71 1c 	call	0x38e2	; 0x38e2 <Timer1_OV_InterruptEnable>
}
    4a24:	cf 91       	pop	r28
    4a26:	df 91       	pop	r29
    4a28:	08 95       	ret

00004a2a <Ultrasonic_front_Get_Distance>:
uint32 Ultrasonic_front_Get_Distance(void)
{
    4a2a:	df 93       	push	r29
    4a2c:	cf 93       	push	r28
    4a2e:	cd b7       	in	r28, 0x3d	; 61
    4a30:	de b7       	in	r29, 0x3e	; 62
    4a32:	a0 97       	sbiw	r28, 0x20	; 32
    4a34:	0f b6       	in	r0, 0x3f	; 63
    4a36:	f8 94       	cli
    4a38:	de bf       	out	0x3e, r29	; 62
    4a3a:	0f be       	out	0x3f, r0	; 63
    4a3c:	cd bf       	out	0x3d, r28	; 61
	uint32 time=0,distance=0;
    4a3e:	1d 8e       	std	Y+29, r1	; 0x1d
    4a40:	1e 8e       	std	Y+30, r1	; 0x1e
    4a42:	1f 8e       	std	Y+31, r1	; 0x1f
    4a44:	18 a2       	std	Y+32, r1	; 0x20
    4a46:	19 8e       	std	Y+25, r1	; 0x19
    4a48:	1a 8e       	std	Y+26, r1	; 0x1a
    4a4a:	1b 8e       	std	Y+27, r1	; 0x1b
    4a4c:	1c 8e       	std	Y+28, r1	; 0x1c
		c = 0;
    4a4e:	10 92 7f 03 	sts	0x037F, r1
		TCNT1 = 0;
    4a52:	ec e4       	ldi	r30, 0x4C	; 76
    4a54:	f0 e0       	ldi	r31, 0x00	; 0
    4a56:	11 82       	std	Z+1, r1	; 0x01
    4a58:	10 82       	st	Z, r1
		f = 0;
    4a5a:	10 92 7e 03 	sts	0x037E, r1

		DIO_void_Set_Pin_Value(PORTA_ID,trig0,HIGH);
    4a5e:	80 e0       	ldi	r24, 0x00	; 0
    4a60:	60 e0       	ldi	r22, 0x00	; 0
    4a62:	41 e0       	ldi	r20, 0x01	; 1
    4a64:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    4a68:	80 e0       	ldi	r24, 0x00	; 0
    4a6a:	90 e0       	ldi	r25, 0x00	; 0
    4a6c:	a0 e2       	ldi	r26, 0x20	; 32
    4a6e:	b1 e4       	ldi	r27, 0x41	; 65
    4a70:	8d 8b       	std	Y+21, r24	; 0x15
    4a72:	9e 8b       	std	Y+22, r25	; 0x16
    4a74:	af 8b       	std	Y+23, r26	; 0x17
    4a76:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4a78:	6d 89       	ldd	r22, Y+21	; 0x15
    4a7a:	7e 89       	ldd	r23, Y+22	; 0x16
    4a7c:	8f 89       	ldd	r24, Y+23	; 0x17
    4a7e:	98 8d       	ldd	r25, Y+24	; 0x18
    4a80:	2b ea       	ldi	r18, 0xAB	; 171
    4a82:	3a ea       	ldi	r19, 0xAA	; 170
    4a84:	4a e2       	ldi	r20, 0x2A	; 42
    4a86:	50 e4       	ldi	r21, 0x40	; 64
    4a88:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4a8c:	dc 01       	movw	r26, r24
    4a8e:	cb 01       	movw	r24, r22
    4a90:	89 8b       	std	Y+17, r24	; 0x11
    4a92:	9a 8b       	std	Y+18, r25	; 0x12
    4a94:	ab 8b       	std	Y+19, r26	; 0x13
    4a96:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    4a98:	69 89       	ldd	r22, Y+17	; 0x11
    4a9a:	7a 89       	ldd	r23, Y+18	; 0x12
    4a9c:	8b 89       	ldd	r24, Y+19	; 0x13
    4a9e:	9c 89       	ldd	r25, Y+20	; 0x14
    4aa0:	20 e0       	ldi	r18, 0x00	; 0
    4aa2:	30 e0       	ldi	r19, 0x00	; 0
    4aa4:	40 e8       	ldi	r20, 0x80	; 128
    4aa6:	5f e3       	ldi	r21, 0x3F	; 63
    4aa8:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4aac:	88 23       	and	r24, r24
    4aae:	1c f4       	brge	.+6      	; 0x4ab6 <Ultrasonic_front_Get_Distance+0x8c>
		__ticks = 1;
    4ab0:	81 e0       	ldi	r24, 0x01	; 1
    4ab2:	88 8b       	std	Y+16, r24	; 0x10
    4ab4:	91 c0       	rjmp	.+290    	; 0x4bd8 <Ultrasonic_front_Get_Distance+0x1ae>
	else if (__tmp > 255)
    4ab6:	69 89       	ldd	r22, Y+17	; 0x11
    4ab8:	7a 89       	ldd	r23, Y+18	; 0x12
    4aba:	8b 89       	ldd	r24, Y+19	; 0x13
    4abc:	9c 89       	ldd	r25, Y+20	; 0x14
    4abe:	20 e0       	ldi	r18, 0x00	; 0
    4ac0:	30 e0       	ldi	r19, 0x00	; 0
    4ac2:	4f e7       	ldi	r20, 0x7F	; 127
    4ac4:	53 e4       	ldi	r21, 0x43	; 67
    4ac6:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4aca:	18 16       	cp	r1, r24
    4acc:	0c f0       	brlt	.+2      	; 0x4ad0 <Ultrasonic_front_Get_Distance+0xa6>
    4ace:	7b c0       	rjmp	.+246    	; 0x4bc6 <Ultrasonic_front_Get_Distance+0x19c>
	{
		_delay_ms(__us / 1000.0);
    4ad0:	6d 89       	ldd	r22, Y+21	; 0x15
    4ad2:	7e 89       	ldd	r23, Y+22	; 0x16
    4ad4:	8f 89       	ldd	r24, Y+23	; 0x17
    4ad6:	98 8d       	ldd	r25, Y+24	; 0x18
    4ad8:	20 e0       	ldi	r18, 0x00	; 0
    4ada:	30 e0       	ldi	r19, 0x00	; 0
    4adc:	4a e7       	ldi	r20, 0x7A	; 122
    4ade:	54 e4       	ldi	r21, 0x44	; 68
    4ae0:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divsf3>
    4ae4:	dc 01       	movw	r26, r24
    4ae6:	cb 01       	movw	r24, r22
    4ae8:	8c 87       	std	Y+12, r24	; 0x0c
    4aea:	9d 87       	std	Y+13, r25	; 0x0d
    4aec:	ae 87       	std	Y+14, r26	; 0x0e
    4aee:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4af0:	6c 85       	ldd	r22, Y+12	; 0x0c
    4af2:	7d 85       	ldd	r23, Y+13	; 0x0d
    4af4:	8e 85       	ldd	r24, Y+14	; 0x0e
    4af6:	9f 85       	ldd	r25, Y+15	; 0x0f
    4af8:	20 e0       	ldi	r18, 0x00	; 0
    4afa:	30 e0       	ldi	r19, 0x00	; 0
    4afc:	4a ef       	ldi	r20, 0xFA	; 250
    4afe:	54 e4       	ldi	r21, 0x44	; 68
    4b00:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4b04:	dc 01       	movw	r26, r24
    4b06:	cb 01       	movw	r24, r22
    4b08:	88 87       	std	Y+8, r24	; 0x08
    4b0a:	99 87       	std	Y+9, r25	; 0x09
    4b0c:	aa 87       	std	Y+10, r26	; 0x0a
    4b0e:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4b10:	68 85       	ldd	r22, Y+8	; 0x08
    4b12:	79 85       	ldd	r23, Y+9	; 0x09
    4b14:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b16:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b18:	20 e0       	ldi	r18, 0x00	; 0
    4b1a:	30 e0       	ldi	r19, 0x00	; 0
    4b1c:	40 e8       	ldi	r20, 0x80	; 128
    4b1e:	5f e3       	ldi	r21, 0x3F	; 63
    4b20:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4b24:	88 23       	and	r24, r24
    4b26:	2c f4       	brge	.+10     	; 0x4b32 <Ultrasonic_front_Get_Distance+0x108>
		__ticks = 1;
    4b28:	81 e0       	ldi	r24, 0x01	; 1
    4b2a:	90 e0       	ldi	r25, 0x00	; 0
    4b2c:	9f 83       	std	Y+7, r25	; 0x07
    4b2e:	8e 83       	std	Y+6, r24	; 0x06
    4b30:	3f c0       	rjmp	.+126    	; 0x4bb0 <Ultrasonic_front_Get_Distance+0x186>
	else if (__tmp > 65535)
    4b32:	68 85       	ldd	r22, Y+8	; 0x08
    4b34:	79 85       	ldd	r23, Y+9	; 0x09
    4b36:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b38:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b3a:	20 e0       	ldi	r18, 0x00	; 0
    4b3c:	3f ef       	ldi	r19, 0xFF	; 255
    4b3e:	4f e7       	ldi	r20, 0x7F	; 127
    4b40:	57 e4       	ldi	r21, 0x47	; 71
    4b42:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4b46:	18 16       	cp	r1, r24
    4b48:	4c f5       	brge	.+82     	; 0x4b9c <Ultrasonic_front_Get_Distance+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b4a:	6c 85       	ldd	r22, Y+12	; 0x0c
    4b4c:	7d 85       	ldd	r23, Y+13	; 0x0d
    4b4e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4b50:	9f 85       	ldd	r25, Y+15	; 0x0f
    4b52:	20 e0       	ldi	r18, 0x00	; 0
    4b54:	30 e0       	ldi	r19, 0x00	; 0
    4b56:	40 e2       	ldi	r20, 0x20	; 32
    4b58:	51 e4       	ldi	r21, 0x41	; 65
    4b5a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4b5e:	dc 01       	movw	r26, r24
    4b60:	cb 01       	movw	r24, r22
    4b62:	bc 01       	movw	r22, r24
    4b64:	cd 01       	movw	r24, r26
    4b66:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4b6a:	dc 01       	movw	r26, r24
    4b6c:	cb 01       	movw	r24, r22
    4b6e:	9f 83       	std	Y+7, r25	; 0x07
    4b70:	8e 83       	std	Y+6, r24	; 0x06
    4b72:	0f c0       	rjmp	.+30     	; 0x4b92 <Ultrasonic_front_Get_Distance+0x168>
    4b74:	88 ec       	ldi	r24, 0xC8	; 200
    4b76:	90 e0       	ldi	r25, 0x00	; 0
    4b78:	9d 83       	std	Y+5, r25	; 0x05
    4b7a:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4b7c:	8c 81       	ldd	r24, Y+4	; 0x04
    4b7e:	9d 81       	ldd	r25, Y+5	; 0x05
    4b80:	01 97       	sbiw	r24, 0x01	; 1
    4b82:	f1 f7       	brne	.-4      	; 0x4b80 <Ultrasonic_front_Get_Distance+0x156>
    4b84:	9d 83       	std	Y+5, r25	; 0x05
    4b86:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b88:	8e 81       	ldd	r24, Y+6	; 0x06
    4b8a:	9f 81       	ldd	r25, Y+7	; 0x07
    4b8c:	01 97       	sbiw	r24, 0x01	; 1
    4b8e:	9f 83       	std	Y+7, r25	; 0x07
    4b90:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b92:	8e 81       	ldd	r24, Y+6	; 0x06
    4b94:	9f 81       	ldd	r25, Y+7	; 0x07
    4b96:	00 97       	sbiw	r24, 0x00	; 0
    4b98:	69 f7       	brne	.-38     	; 0x4b74 <Ultrasonic_front_Get_Distance+0x14a>
    4b9a:	24 c0       	rjmp	.+72     	; 0x4be4 <Ultrasonic_front_Get_Distance+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b9c:	68 85       	ldd	r22, Y+8	; 0x08
    4b9e:	79 85       	ldd	r23, Y+9	; 0x09
    4ba0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ba2:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ba4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4ba8:	dc 01       	movw	r26, r24
    4baa:	cb 01       	movw	r24, r22
    4bac:	9f 83       	std	Y+7, r25	; 0x07
    4bae:	8e 83       	std	Y+6, r24	; 0x06
    4bb0:	8e 81       	ldd	r24, Y+6	; 0x06
    4bb2:	9f 81       	ldd	r25, Y+7	; 0x07
    4bb4:	9b 83       	std	Y+3, r25	; 0x03
    4bb6:	8a 83       	std	Y+2, r24	; 0x02
    4bb8:	8a 81       	ldd	r24, Y+2	; 0x02
    4bba:	9b 81       	ldd	r25, Y+3	; 0x03
    4bbc:	01 97       	sbiw	r24, 0x01	; 1
    4bbe:	f1 f7       	brne	.-4      	; 0x4bbc <Ultrasonic_front_Get_Distance+0x192>
    4bc0:	9b 83       	std	Y+3, r25	; 0x03
    4bc2:	8a 83       	std	Y+2, r24	; 0x02
    4bc4:	0f c0       	rjmp	.+30     	; 0x4be4 <Ultrasonic_front_Get_Distance+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4bc6:	69 89       	ldd	r22, Y+17	; 0x11
    4bc8:	7a 89       	ldd	r23, Y+18	; 0x12
    4bca:	8b 89       	ldd	r24, Y+19	; 0x13
    4bcc:	9c 89       	ldd	r25, Y+20	; 0x14
    4bce:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4bd2:	dc 01       	movw	r26, r24
    4bd4:	cb 01       	movw	r24, r22
    4bd6:	88 8b       	std	Y+16, r24	; 0x10
    4bd8:	88 89       	ldd	r24, Y+16	; 0x10
    4bda:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4bdc:	89 81       	ldd	r24, Y+1	; 0x01
    4bde:	8a 95       	dec	r24
    4be0:	f1 f7       	brne	.-4      	; 0x4bde <Ultrasonic_front_Get_Distance+0x1b4>
    4be2:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(10);
		DIO_void_Set_Pin_Value(PORTA_ID,trig0,LOW);
    4be4:	80 e0       	ldi	r24, 0x00	; 0
    4be6:	60 e0       	ldi	r22, 0x00	; 0
    4be8:	40 e0       	ldi	r20, 0x00	; 0
    4bea:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

		 Timer1_InputCaptureEdge(Rising);
    4bee:	81 e0       	ldi	r24, 0x01	; 1
    4bf0:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
         Timer1_ICU_InterruptEnable();
    4bf4:	0e 94 55 1c 	call	0x38aa	; 0x38aa <Timer1_ICU_InterruptEnable>
		 while(f<2);
    4bf8:	80 91 7e 03 	lds	r24, 0x037E
    4bfc:	82 30       	cpi	r24, 0x02	; 2
    4bfe:	e0 f3       	brcs	.-8      	; 0x4bf8 <Ultrasonic_front_Get_Distance+0x1ce>
		 time = (t2-t1);
    4c00:	20 91 82 03 	lds	r18, 0x0382
    4c04:	30 91 83 03 	lds	r19, 0x0383
    4c08:	80 91 80 03 	lds	r24, 0x0380
    4c0c:	90 91 81 03 	lds	r25, 0x0381
    4c10:	a9 01       	movw	r20, r18
    4c12:	48 1b       	sub	r20, r24
    4c14:	59 0b       	sbc	r21, r25
    4c16:	ca 01       	movw	r24, r20
    4c18:	cc 01       	movw	r24, r24
    4c1a:	a0 e0       	ldi	r26, 0x00	; 0
    4c1c:	b0 e0       	ldi	r27, 0x00	; 0
    4c1e:	8d 8f       	std	Y+29, r24	; 0x1d
    4c20:	9e 8f       	std	Y+30, r25	; 0x1e
    4c22:	af 8f       	std	Y+31, r26	; 0x1f
    4c24:	b8 a3       	std	Y+32, r27	; 0x20
		 distance = time /58;
    4c26:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4c28:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4c2a:	af 8d       	ldd	r26, Y+31	; 0x1f
    4c2c:	b8 a1       	ldd	r27, Y+32	; 0x20
    4c2e:	2a e3       	ldi	r18, 0x3A	; 58
    4c30:	30 e0       	ldi	r19, 0x00	; 0
    4c32:	40 e0       	ldi	r20, 0x00	; 0
    4c34:	50 e0       	ldi	r21, 0x00	; 0
    4c36:	bc 01       	movw	r22, r24
    4c38:	cd 01       	movw	r24, r26
    4c3a:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    4c3e:	da 01       	movw	r26, r20
    4c40:	c9 01       	movw	r24, r18
    4c42:	89 8f       	std	Y+25, r24	; 0x19
    4c44:	9a 8f       	std	Y+26, r25	; 0x1a
    4c46:	ab 8f       	std	Y+27, r26	; 0x1b
    4c48:	bc 8f       	std	Y+28, r27	; 0x1c
		 Timer1_ICU_InterruptDisable();
    4c4a:	0e 94 63 1c 	call	0x38c6	; 0x38c6 <Timer1_ICU_InterruptDisable>


		 return distance;
    4c4e:	89 8d       	ldd	r24, Y+25	; 0x19
    4c50:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4c52:	ab 8d       	ldd	r26, Y+27	; 0x1b
    4c54:	bc 8d       	ldd	r27, Y+28	; 0x1c
}
    4c56:	bc 01       	movw	r22, r24
    4c58:	cd 01       	movw	r24, r26
    4c5a:	a0 96       	adiw	r28, 0x20	; 32
    4c5c:	0f b6       	in	r0, 0x3f	; 63
    4c5e:	f8 94       	cli
    4c60:	de bf       	out	0x3e, r29	; 62
    4c62:	0f be       	out	0x3f, r0	; 63
    4c64:	cd bf       	out	0x3d, r28	; 61
    4c66:	cf 91       	pop	r28
    4c68:	df 91       	pop	r29
    4c6a:	08 95       	ret

00004c6c <Ultrasonic_right_front_Get_Distance>:

uint32 Ultrasonic_right_front_Get_Distance(void)
{
    4c6c:	df 93       	push	r29
    4c6e:	cf 93       	push	r28
    4c70:	cd b7       	in	r28, 0x3d	; 61
    4c72:	de b7       	in	r29, 0x3e	; 62
    4c74:	a0 97       	sbiw	r28, 0x20	; 32
    4c76:	0f b6       	in	r0, 0x3f	; 63
    4c78:	f8 94       	cli
    4c7a:	de bf       	out	0x3e, r29	; 62
    4c7c:	0f be       	out	0x3f, r0	; 63
    4c7e:	cd bf       	out	0x3d, r28	; 61
	uint32 time=0,distance=0;
    4c80:	1d 8e       	std	Y+29, r1	; 0x1d
    4c82:	1e 8e       	std	Y+30, r1	; 0x1e
    4c84:	1f 8e       	std	Y+31, r1	; 0x1f
    4c86:	18 a2       	std	Y+32, r1	; 0x20
    4c88:	19 8e       	std	Y+25, r1	; 0x19
    4c8a:	1a 8e       	std	Y+26, r1	; 0x1a
    4c8c:	1b 8e       	std	Y+27, r1	; 0x1b
    4c8e:	1c 8e       	std	Y+28, r1	; 0x1c
			c = 0;
    4c90:	10 92 7f 03 	sts	0x037F, r1
			TCNT1 = 0;
    4c94:	ec e4       	ldi	r30, 0x4C	; 76
    4c96:	f0 e0       	ldi	r31, 0x00	; 0
    4c98:	11 82       	std	Z+1, r1	; 0x01
    4c9a:	10 82       	st	Z, r1
			f = 0;
    4c9c:	10 92 7e 03 	sts	0x037E, r1

			DIO_void_Set_Pin_Value(PORTA_ID,trig1,HIGH);
    4ca0:	80 e0       	ldi	r24, 0x00	; 0
    4ca2:	61 e0       	ldi	r22, 0x01	; 1
    4ca4:	41 e0       	ldi	r20, 0x01	; 1
    4ca6:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    4caa:	80 e0       	ldi	r24, 0x00	; 0
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	a0 e2       	ldi	r26, 0x20	; 32
    4cb0:	b1 e4       	ldi	r27, 0x41	; 65
    4cb2:	8d 8b       	std	Y+21, r24	; 0x15
    4cb4:	9e 8b       	std	Y+22, r25	; 0x16
    4cb6:	af 8b       	std	Y+23, r26	; 0x17
    4cb8:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4cba:	6d 89       	ldd	r22, Y+21	; 0x15
    4cbc:	7e 89       	ldd	r23, Y+22	; 0x16
    4cbe:	8f 89       	ldd	r24, Y+23	; 0x17
    4cc0:	98 8d       	ldd	r25, Y+24	; 0x18
    4cc2:	2b ea       	ldi	r18, 0xAB	; 171
    4cc4:	3a ea       	ldi	r19, 0xAA	; 170
    4cc6:	4a e2       	ldi	r20, 0x2A	; 42
    4cc8:	50 e4       	ldi	r21, 0x40	; 64
    4cca:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4cce:	dc 01       	movw	r26, r24
    4cd0:	cb 01       	movw	r24, r22
    4cd2:	89 8b       	std	Y+17, r24	; 0x11
    4cd4:	9a 8b       	std	Y+18, r25	; 0x12
    4cd6:	ab 8b       	std	Y+19, r26	; 0x13
    4cd8:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    4cda:	69 89       	ldd	r22, Y+17	; 0x11
    4cdc:	7a 89       	ldd	r23, Y+18	; 0x12
    4cde:	8b 89       	ldd	r24, Y+19	; 0x13
    4ce0:	9c 89       	ldd	r25, Y+20	; 0x14
    4ce2:	20 e0       	ldi	r18, 0x00	; 0
    4ce4:	30 e0       	ldi	r19, 0x00	; 0
    4ce6:	40 e8       	ldi	r20, 0x80	; 128
    4ce8:	5f e3       	ldi	r21, 0x3F	; 63
    4cea:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4cee:	88 23       	and	r24, r24
    4cf0:	1c f4       	brge	.+6      	; 0x4cf8 <Ultrasonic_right_front_Get_Distance+0x8c>
		__ticks = 1;
    4cf2:	81 e0       	ldi	r24, 0x01	; 1
    4cf4:	88 8b       	std	Y+16, r24	; 0x10
    4cf6:	91 c0       	rjmp	.+290    	; 0x4e1a <Ultrasonic_right_front_Get_Distance+0x1ae>
	else if (__tmp > 255)
    4cf8:	69 89       	ldd	r22, Y+17	; 0x11
    4cfa:	7a 89       	ldd	r23, Y+18	; 0x12
    4cfc:	8b 89       	ldd	r24, Y+19	; 0x13
    4cfe:	9c 89       	ldd	r25, Y+20	; 0x14
    4d00:	20 e0       	ldi	r18, 0x00	; 0
    4d02:	30 e0       	ldi	r19, 0x00	; 0
    4d04:	4f e7       	ldi	r20, 0x7F	; 127
    4d06:	53 e4       	ldi	r21, 0x43	; 67
    4d08:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4d0c:	18 16       	cp	r1, r24
    4d0e:	0c f0       	brlt	.+2      	; 0x4d12 <Ultrasonic_right_front_Get_Distance+0xa6>
    4d10:	7b c0       	rjmp	.+246    	; 0x4e08 <Ultrasonic_right_front_Get_Distance+0x19c>
	{
		_delay_ms(__us / 1000.0);
    4d12:	6d 89       	ldd	r22, Y+21	; 0x15
    4d14:	7e 89       	ldd	r23, Y+22	; 0x16
    4d16:	8f 89       	ldd	r24, Y+23	; 0x17
    4d18:	98 8d       	ldd	r25, Y+24	; 0x18
    4d1a:	20 e0       	ldi	r18, 0x00	; 0
    4d1c:	30 e0       	ldi	r19, 0x00	; 0
    4d1e:	4a e7       	ldi	r20, 0x7A	; 122
    4d20:	54 e4       	ldi	r21, 0x44	; 68
    4d22:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divsf3>
    4d26:	dc 01       	movw	r26, r24
    4d28:	cb 01       	movw	r24, r22
    4d2a:	8c 87       	std	Y+12, r24	; 0x0c
    4d2c:	9d 87       	std	Y+13, r25	; 0x0d
    4d2e:	ae 87       	std	Y+14, r26	; 0x0e
    4d30:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d32:	6c 85       	ldd	r22, Y+12	; 0x0c
    4d34:	7d 85       	ldd	r23, Y+13	; 0x0d
    4d36:	8e 85       	ldd	r24, Y+14	; 0x0e
    4d38:	9f 85       	ldd	r25, Y+15	; 0x0f
    4d3a:	20 e0       	ldi	r18, 0x00	; 0
    4d3c:	30 e0       	ldi	r19, 0x00	; 0
    4d3e:	4a ef       	ldi	r20, 0xFA	; 250
    4d40:	54 e4       	ldi	r21, 0x44	; 68
    4d42:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4d46:	dc 01       	movw	r26, r24
    4d48:	cb 01       	movw	r24, r22
    4d4a:	88 87       	std	Y+8, r24	; 0x08
    4d4c:	99 87       	std	Y+9, r25	; 0x09
    4d4e:	aa 87       	std	Y+10, r26	; 0x0a
    4d50:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4d52:	68 85       	ldd	r22, Y+8	; 0x08
    4d54:	79 85       	ldd	r23, Y+9	; 0x09
    4d56:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d58:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d5a:	20 e0       	ldi	r18, 0x00	; 0
    4d5c:	30 e0       	ldi	r19, 0x00	; 0
    4d5e:	40 e8       	ldi	r20, 0x80	; 128
    4d60:	5f e3       	ldi	r21, 0x3F	; 63
    4d62:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4d66:	88 23       	and	r24, r24
    4d68:	2c f4       	brge	.+10     	; 0x4d74 <Ultrasonic_right_front_Get_Distance+0x108>
		__ticks = 1;
    4d6a:	81 e0       	ldi	r24, 0x01	; 1
    4d6c:	90 e0       	ldi	r25, 0x00	; 0
    4d6e:	9f 83       	std	Y+7, r25	; 0x07
    4d70:	8e 83       	std	Y+6, r24	; 0x06
    4d72:	3f c0       	rjmp	.+126    	; 0x4df2 <Ultrasonic_right_front_Get_Distance+0x186>
	else if (__tmp > 65535)
    4d74:	68 85       	ldd	r22, Y+8	; 0x08
    4d76:	79 85       	ldd	r23, Y+9	; 0x09
    4d78:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d7a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d7c:	20 e0       	ldi	r18, 0x00	; 0
    4d7e:	3f ef       	ldi	r19, 0xFF	; 255
    4d80:	4f e7       	ldi	r20, 0x7F	; 127
    4d82:	57 e4       	ldi	r21, 0x47	; 71
    4d84:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4d88:	18 16       	cp	r1, r24
    4d8a:	4c f5       	brge	.+82     	; 0x4dde <Ultrasonic_right_front_Get_Distance+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d8c:	6c 85       	ldd	r22, Y+12	; 0x0c
    4d8e:	7d 85       	ldd	r23, Y+13	; 0x0d
    4d90:	8e 85       	ldd	r24, Y+14	; 0x0e
    4d92:	9f 85       	ldd	r25, Y+15	; 0x0f
    4d94:	20 e0       	ldi	r18, 0x00	; 0
    4d96:	30 e0       	ldi	r19, 0x00	; 0
    4d98:	40 e2       	ldi	r20, 0x20	; 32
    4d9a:	51 e4       	ldi	r21, 0x41	; 65
    4d9c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4da0:	dc 01       	movw	r26, r24
    4da2:	cb 01       	movw	r24, r22
    4da4:	bc 01       	movw	r22, r24
    4da6:	cd 01       	movw	r24, r26
    4da8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4dac:	dc 01       	movw	r26, r24
    4dae:	cb 01       	movw	r24, r22
    4db0:	9f 83       	std	Y+7, r25	; 0x07
    4db2:	8e 83       	std	Y+6, r24	; 0x06
    4db4:	0f c0       	rjmp	.+30     	; 0x4dd4 <Ultrasonic_right_front_Get_Distance+0x168>
    4db6:	88 ec       	ldi	r24, 0xC8	; 200
    4db8:	90 e0       	ldi	r25, 0x00	; 0
    4dba:	9d 83       	std	Y+5, r25	; 0x05
    4dbc:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4dbe:	8c 81       	ldd	r24, Y+4	; 0x04
    4dc0:	9d 81       	ldd	r25, Y+5	; 0x05
    4dc2:	01 97       	sbiw	r24, 0x01	; 1
    4dc4:	f1 f7       	brne	.-4      	; 0x4dc2 <Ultrasonic_right_front_Get_Distance+0x156>
    4dc6:	9d 83       	std	Y+5, r25	; 0x05
    4dc8:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4dca:	8e 81       	ldd	r24, Y+6	; 0x06
    4dcc:	9f 81       	ldd	r25, Y+7	; 0x07
    4dce:	01 97       	sbiw	r24, 0x01	; 1
    4dd0:	9f 83       	std	Y+7, r25	; 0x07
    4dd2:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dd4:	8e 81       	ldd	r24, Y+6	; 0x06
    4dd6:	9f 81       	ldd	r25, Y+7	; 0x07
    4dd8:	00 97       	sbiw	r24, 0x00	; 0
    4dda:	69 f7       	brne	.-38     	; 0x4db6 <Ultrasonic_right_front_Get_Distance+0x14a>
    4ddc:	24 c0       	rjmp	.+72     	; 0x4e26 <Ultrasonic_right_front_Get_Distance+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4dde:	68 85       	ldd	r22, Y+8	; 0x08
    4de0:	79 85       	ldd	r23, Y+9	; 0x09
    4de2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4de4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4de6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4dea:	dc 01       	movw	r26, r24
    4dec:	cb 01       	movw	r24, r22
    4dee:	9f 83       	std	Y+7, r25	; 0x07
    4df0:	8e 83       	std	Y+6, r24	; 0x06
    4df2:	8e 81       	ldd	r24, Y+6	; 0x06
    4df4:	9f 81       	ldd	r25, Y+7	; 0x07
    4df6:	9b 83       	std	Y+3, r25	; 0x03
    4df8:	8a 83       	std	Y+2, r24	; 0x02
    4dfa:	8a 81       	ldd	r24, Y+2	; 0x02
    4dfc:	9b 81       	ldd	r25, Y+3	; 0x03
    4dfe:	01 97       	sbiw	r24, 0x01	; 1
    4e00:	f1 f7       	brne	.-4      	; 0x4dfe <Ultrasonic_right_front_Get_Distance+0x192>
    4e02:	9b 83       	std	Y+3, r25	; 0x03
    4e04:	8a 83       	std	Y+2, r24	; 0x02
    4e06:	0f c0       	rjmp	.+30     	; 0x4e26 <Ultrasonic_right_front_Get_Distance+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4e08:	69 89       	ldd	r22, Y+17	; 0x11
    4e0a:	7a 89       	ldd	r23, Y+18	; 0x12
    4e0c:	8b 89       	ldd	r24, Y+19	; 0x13
    4e0e:	9c 89       	ldd	r25, Y+20	; 0x14
    4e10:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4e14:	dc 01       	movw	r26, r24
    4e16:	cb 01       	movw	r24, r22
    4e18:	88 8b       	std	Y+16, r24	; 0x10
    4e1a:	88 89       	ldd	r24, Y+16	; 0x10
    4e1c:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4e1e:	89 81       	ldd	r24, Y+1	; 0x01
    4e20:	8a 95       	dec	r24
    4e22:	f1 f7       	brne	.-4      	; 0x4e20 <Ultrasonic_right_front_Get_Distance+0x1b4>
    4e24:	89 83       	std	Y+1, r24	; 0x01
			_delay_us(10);
			DIO_void_Set_Pin_Value(PORTA_ID,trig1,LOW);
    4e26:	80 e0       	ldi	r24, 0x00	; 0
    4e28:	61 e0       	ldi	r22, 0x01	; 1
    4e2a:	40 e0       	ldi	r20, 0x00	; 0
    4e2c:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

			 Timer1_InputCaptureEdge(Rising);
    4e30:	81 e0       	ldi	r24, 0x01	; 1
    4e32:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
	         Timer1_ICU_InterruptEnable();
    4e36:	0e 94 55 1c 	call	0x38aa	; 0x38aa <Timer1_ICU_InterruptEnable>
			 while(f<2);
    4e3a:	80 91 7e 03 	lds	r24, 0x037E
    4e3e:	82 30       	cpi	r24, 0x02	; 2
    4e40:	e0 f3       	brcs	.-8      	; 0x4e3a <Ultrasonic_right_front_Get_Distance+0x1ce>
			 time = (t2-t1);
    4e42:	20 91 82 03 	lds	r18, 0x0382
    4e46:	30 91 83 03 	lds	r19, 0x0383
    4e4a:	80 91 80 03 	lds	r24, 0x0380
    4e4e:	90 91 81 03 	lds	r25, 0x0381
    4e52:	a9 01       	movw	r20, r18
    4e54:	48 1b       	sub	r20, r24
    4e56:	59 0b       	sbc	r21, r25
    4e58:	ca 01       	movw	r24, r20
    4e5a:	cc 01       	movw	r24, r24
    4e5c:	a0 e0       	ldi	r26, 0x00	; 0
    4e5e:	b0 e0       	ldi	r27, 0x00	; 0
    4e60:	8d 8f       	std	Y+29, r24	; 0x1d
    4e62:	9e 8f       	std	Y+30, r25	; 0x1e
    4e64:	af 8f       	std	Y+31, r26	; 0x1f
    4e66:	b8 a3       	std	Y+32, r27	; 0x20
			 distance = time /58;
    4e68:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4e6a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4e6c:	af 8d       	ldd	r26, Y+31	; 0x1f
    4e6e:	b8 a1       	ldd	r27, Y+32	; 0x20
    4e70:	2a e3       	ldi	r18, 0x3A	; 58
    4e72:	30 e0       	ldi	r19, 0x00	; 0
    4e74:	40 e0       	ldi	r20, 0x00	; 0
    4e76:	50 e0       	ldi	r21, 0x00	; 0
    4e78:	bc 01       	movw	r22, r24
    4e7a:	cd 01       	movw	r24, r26
    4e7c:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    4e80:	da 01       	movw	r26, r20
    4e82:	c9 01       	movw	r24, r18
    4e84:	89 8f       	std	Y+25, r24	; 0x19
    4e86:	9a 8f       	std	Y+26, r25	; 0x1a
    4e88:	ab 8f       	std	Y+27, r26	; 0x1b
    4e8a:	bc 8f       	std	Y+28, r27	; 0x1c
			 Timer1_ICU_InterruptDisable();
    4e8c:	0e 94 63 1c 	call	0x38c6	; 0x38c6 <Timer1_ICU_InterruptDisable>


			 return distance;
    4e90:	89 8d       	ldd	r24, Y+25	; 0x19
    4e92:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4e94:	ab 8d       	ldd	r26, Y+27	; 0x1b
    4e96:	bc 8d       	ldd	r27, Y+28	; 0x1c
}
    4e98:	bc 01       	movw	r22, r24
    4e9a:	cd 01       	movw	r24, r26
    4e9c:	a0 96       	adiw	r28, 0x20	; 32
    4e9e:	0f b6       	in	r0, 0x3f	; 63
    4ea0:	f8 94       	cli
    4ea2:	de bf       	out	0x3e, r29	; 62
    4ea4:	0f be       	out	0x3f, r0	; 63
    4ea6:	cd bf       	out	0x3d, r28	; 61
    4ea8:	cf 91       	pop	r28
    4eaa:	df 91       	pop	r29
    4eac:	08 95       	ret

00004eae <Ultrasonic_right_back_Get_Distance>:
uint32 Ultrasonic_right_back_Get_Distance(void)
{
    4eae:	df 93       	push	r29
    4eb0:	cf 93       	push	r28
    4eb2:	cd b7       	in	r28, 0x3d	; 61
    4eb4:	de b7       	in	r29, 0x3e	; 62
    4eb6:	a0 97       	sbiw	r28, 0x20	; 32
    4eb8:	0f b6       	in	r0, 0x3f	; 63
    4eba:	f8 94       	cli
    4ebc:	de bf       	out	0x3e, r29	; 62
    4ebe:	0f be       	out	0x3f, r0	; 63
    4ec0:	cd bf       	out	0x3d, r28	; 61
	uint32 time=0,distance=0;
    4ec2:	1d 8e       	std	Y+29, r1	; 0x1d
    4ec4:	1e 8e       	std	Y+30, r1	; 0x1e
    4ec6:	1f 8e       	std	Y+31, r1	; 0x1f
    4ec8:	18 a2       	std	Y+32, r1	; 0x20
    4eca:	19 8e       	std	Y+25, r1	; 0x19
    4ecc:	1a 8e       	std	Y+26, r1	; 0x1a
    4ece:	1b 8e       	std	Y+27, r1	; 0x1b
    4ed0:	1c 8e       	std	Y+28, r1	; 0x1c
			c = 0;
    4ed2:	10 92 7f 03 	sts	0x037F, r1
			TCNT1 = 0;
    4ed6:	ec e4       	ldi	r30, 0x4C	; 76
    4ed8:	f0 e0       	ldi	r31, 0x00	; 0
    4eda:	11 82       	std	Z+1, r1	; 0x01
    4edc:	10 82       	st	Z, r1
			f = 0;
    4ede:	10 92 7e 03 	sts	0x037E, r1

			DIO_void_Set_Pin_Value(PORTA_ID,trig2,HIGH);
    4ee2:	80 e0       	ldi	r24, 0x00	; 0
    4ee4:	63 e0       	ldi	r22, 0x03	; 3
    4ee6:	41 e0       	ldi	r20, 0x01	; 1
    4ee8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    4eec:	80 e0       	ldi	r24, 0x00	; 0
    4eee:	90 e0       	ldi	r25, 0x00	; 0
    4ef0:	a0 e2       	ldi	r26, 0x20	; 32
    4ef2:	b1 e4       	ldi	r27, 0x41	; 65
    4ef4:	8d 8b       	std	Y+21, r24	; 0x15
    4ef6:	9e 8b       	std	Y+22, r25	; 0x16
    4ef8:	af 8b       	std	Y+23, r26	; 0x17
    4efa:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4efc:	6d 89       	ldd	r22, Y+21	; 0x15
    4efe:	7e 89       	ldd	r23, Y+22	; 0x16
    4f00:	8f 89       	ldd	r24, Y+23	; 0x17
    4f02:	98 8d       	ldd	r25, Y+24	; 0x18
    4f04:	2b ea       	ldi	r18, 0xAB	; 171
    4f06:	3a ea       	ldi	r19, 0xAA	; 170
    4f08:	4a e2       	ldi	r20, 0x2A	; 42
    4f0a:	50 e4       	ldi	r21, 0x40	; 64
    4f0c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4f10:	dc 01       	movw	r26, r24
    4f12:	cb 01       	movw	r24, r22
    4f14:	89 8b       	std	Y+17, r24	; 0x11
    4f16:	9a 8b       	std	Y+18, r25	; 0x12
    4f18:	ab 8b       	std	Y+19, r26	; 0x13
    4f1a:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    4f1c:	69 89       	ldd	r22, Y+17	; 0x11
    4f1e:	7a 89       	ldd	r23, Y+18	; 0x12
    4f20:	8b 89       	ldd	r24, Y+19	; 0x13
    4f22:	9c 89       	ldd	r25, Y+20	; 0x14
    4f24:	20 e0       	ldi	r18, 0x00	; 0
    4f26:	30 e0       	ldi	r19, 0x00	; 0
    4f28:	40 e8       	ldi	r20, 0x80	; 128
    4f2a:	5f e3       	ldi	r21, 0x3F	; 63
    4f2c:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4f30:	88 23       	and	r24, r24
    4f32:	1c f4       	brge	.+6      	; 0x4f3a <Ultrasonic_right_back_Get_Distance+0x8c>
		__ticks = 1;
    4f34:	81 e0       	ldi	r24, 0x01	; 1
    4f36:	88 8b       	std	Y+16, r24	; 0x10
    4f38:	91 c0       	rjmp	.+290    	; 0x505c <Ultrasonic_right_back_Get_Distance+0x1ae>
	else if (__tmp > 255)
    4f3a:	69 89       	ldd	r22, Y+17	; 0x11
    4f3c:	7a 89       	ldd	r23, Y+18	; 0x12
    4f3e:	8b 89       	ldd	r24, Y+19	; 0x13
    4f40:	9c 89       	ldd	r25, Y+20	; 0x14
    4f42:	20 e0       	ldi	r18, 0x00	; 0
    4f44:	30 e0       	ldi	r19, 0x00	; 0
    4f46:	4f e7       	ldi	r20, 0x7F	; 127
    4f48:	53 e4       	ldi	r21, 0x43	; 67
    4f4a:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4f4e:	18 16       	cp	r1, r24
    4f50:	0c f0       	brlt	.+2      	; 0x4f54 <Ultrasonic_right_back_Get_Distance+0xa6>
    4f52:	7b c0       	rjmp	.+246    	; 0x504a <Ultrasonic_right_back_Get_Distance+0x19c>
	{
		_delay_ms(__us / 1000.0);
    4f54:	6d 89       	ldd	r22, Y+21	; 0x15
    4f56:	7e 89       	ldd	r23, Y+22	; 0x16
    4f58:	8f 89       	ldd	r24, Y+23	; 0x17
    4f5a:	98 8d       	ldd	r25, Y+24	; 0x18
    4f5c:	20 e0       	ldi	r18, 0x00	; 0
    4f5e:	30 e0       	ldi	r19, 0x00	; 0
    4f60:	4a e7       	ldi	r20, 0x7A	; 122
    4f62:	54 e4       	ldi	r21, 0x44	; 68
    4f64:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divsf3>
    4f68:	dc 01       	movw	r26, r24
    4f6a:	cb 01       	movw	r24, r22
    4f6c:	8c 87       	std	Y+12, r24	; 0x0c
    4f6e:	9d 87       	std	Y+13, r25	; 0x0d
    4f70:	ae 87       	std	Y+14, r26	; 0x0e
    4f72:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f74:	6c 85       	ldd	r22, Y+12	; 0x0c
    4f76:	7d 85       	ldd	r23, Y+13	; 0x0d
    4f78:	8e 85       	ldd	r24, Y+14	; 0x0e
    4f7a:	9f 85       	ldd	r25, Y+15	; 0x0f
    4f7c:	20 e0       	ldi	r18, 0x00	; 0
    4f7e:	30 e0       	ldi	r19, 0x00	; 0
    4f80:	4a ef       	ldi	r20, 0xFA	; 250
    4f82:	54 e4       	ldi	r21, 0x44	; 68
    4f84:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4f88:	dc 01       	movw	r26, r24
    4f8a:	cb 01       	movw	r24, r22
    4f8c:	88 87       	std	Y+8, r24	; 0x08
    4f8e:	99 87       	std	Y+9, r25	; 0x09
    4f90:	aa 87       	std	Y+10, r26	; 0x0a
    4f92:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4f94:	68 85       	ldd	r22, Y+8	; 0x08
    4f96:	79 85       	ldd	r23, Y+9	; 0x09
    4f98:	8a 85       	ldd	r24, Y+10	; 0x0a
    4f9a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4f9c:	20 e0       	ldi	r18, 0x00	; 0
    4f9e:	30 e0       	ldi	r19, 0x00	; 0
    4fa0:	40 e8       	ldi	r20, 0x80	; 128
    4fa2:	5f e3       	ldi	r21, 0x3F	; 63
    4fa4:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    4fa8:	88 23       	and	r24, r24
    4faa:	2c f4       	brge	.+10     	; 0x4fb6 <Ultrasonic_right_back_Get_Distance+0x108>
		__ticks = 1;
    4fac:	81 e0       	ldi	r24, 0x01	; 1
    4fae:	90 e0       	ldi	r25, 0x00	; 0
    4fb0:	9f 83       	std	Y+7, r25	; 0x07
    4fb2:	8e 83       	std	Y+6, r24	; 0x06
    4fb4:	3f c0       	rjmp	.+126    	; 0x5034 <Ultrasonic_right_back_Get_Distance+0x186>
	else if (__tmp > 65535)
    4fb6:	68 85       	ldd	r22, Y+8	; 0x08
    4fb8:	79 85       	ldd	r23, Y+9	; 0x09
    4fba:	8a 85       	ldd	r24, Y+10	; 0x0a
    4fbc:	9b 85       	ldd	r25, Y+11	; 0x0b
    4fbe:	20 e0       	ldi	r18, 0x00	; 0
    4fc0:	3f ef       	ldi	r19, 0xFF	; 255
    4fc2:	4f e7       	ldi	r20, 0x7F	; 127
    4fc4:	57 e4       	ldi	r21, 0x47	; 71
    4fc6:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    4fca:	18 16       	cp	r1, r24
    4fcc:	4c f5       	brge	.+82     	; 0x5020 <Ultrasonic_right_back_Get_Distance+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fce:	6c 85       	ldd	r22, Y+12	; 0x0c
    4fd0:	7d 85       	ldd	r23, Y+13	; 0x0d
    4fd2:	8e 85       	ldd	r24, Y+14	; 0x0e
    4fd4:	9f 85       	ldd	r25, Y+15	; 0x0f
    4fd6:	20 e0       	ldi	r18, 0x00	; 0
    4fd8:	30 e0       	ldi	r19, 0x00	; 0
    4fda:	40 e2       	ldi	r20, 0x20	; 32
    4fdc:	51 e4       	ldi	r21, 0x41	; 65
    4fde:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    4fe2:	dc 01       	movw	r26, r24
    4fe4:	cb 01       	movw	r24, r22
    4fe6:	bc 01       	movw	r22, r24
    4fe8:	cd 01       	movw	r24, r26
    4fea:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    4fee:	dc 01       	movw	r26, r24
    4ff0:	cb 01       	movw	r24, r22
    4ff2:	9f 83       	std	Y+7, r25	; 0x07
    4ff4:	8e 83       	std	Y+6, r24	; 0x06
    4ff6:	0f c0       	rjmp	.+30     	; 0x5016 <Ultrasonic_right_back_Get_Distance+0x168>
    4ff8:	88 ec       	ldi	r24, 0xC8	; 200
    4ffa:	90 e0       	ldi	r25, 0x00	; 0
    4ffc:	9d 83       	std	Y+5, r25	; 0x05
    4ffe:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5000:	8c 81       	ldd	r24, Y+4	; 0x04
    5002:	9d 81       	ldd	r25, Y+5	; 0x05
    5004:	01 97       	sbiw	r24, 0x01	; 1
    5006:	f1 f7       	brne	.-4      	; 0x5004 <Ultrasonic_right_back_Get_Distance+0x156>
    5008:	9d 83       	std	Y+5, r25	; 0x05
    500a:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    500c:	8e 81       	ldd	r24, Y+6	; 0x06
    500e:	9f 81       	ldd	r25, Y+7	; 0x07
    5010:	01 97       	sbiw	r24, 0x01	; 1
    5012:	9f 83       	std	Y+7, r25	; 0x07
    5014:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5016:	8e 81       	ldd	r24, Y+6	; 0x06
    5018:	9f 81       	ldd	r25, Y+7	; 0x07
    501a:	00 97       	sbiw	r24, 0x00	; 0
    501c:	69 f7       	brne	.-38     	; 0x4ff8 <Ultrasonic_right_back_Get_Distance+0x14a>
    501e:	24 c0       	rjmp	.+72     	; 0x5068 <Ultrasonic_right_back_Get_Distance+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5020:	68 85       	ldd	r22, Y+8	; 0x08
    5022:	79 85       	ldd	r23, Y+9	; 0x09
    5024:	8a 85       	ldd	r24, Y+10	; 0x0a
    5026:	9b 85       	ldd	r25, Y+11	; 0x0b
    5028:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    502c:	dc 01       	movw	r26, r24
    502e:	cb 01       	movw	r24, r22
    5030:	9f 83       	std	Y+7, r25	; 0x07
    5032:	8e 83       	std	Y+6, r24	; 0x06
    5034:	8e 81       	ldd	r24, Y+6	; 0x06
    5036:	9f 81       	ldd	r25, Y+7	; 0x07
    5038:	9b 83       	std	Y+3, r25	; 0x03
    503a:	8a 83       	std	Y+2, r24	; 0x02
    503c:	8a 81       	ldd	r24, Y+2	; 0x02
    503e:	9b 81       	ldd	r25, Y+3	; 0x03
    5040:	01 97       	sbiw	r24, 0x01	; 1
    5042:	f1 f7       	brne	.-4      	; 0x5040 <Ultrasonic_right_back_Get_Distance+0x192>
    5044:	9b 83       	std	Y+3, r25	; 0x03
    5046:	8a 83       	std	Y+2, r24	; 0x02
    5048:	0f c0       	rjmp	.+30     	; 0x5068 <Ultrasonic_right_back_Get_Distance+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    504a:	69 89       	ldd	r22, Y+17	; 0x11
    504c:	7a 89       	ldd	r23, Y+18	; 0x12
    504e:	8b 89       	ldd	r24, Y+19	; 0x13
    5050:	9c 89       	ldd	r25, Y+20	; 0x14
    5052:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5056:	dc 01       	movw	r26, r24
    5058:	cb 01       	movw	r24, r22
    505a:	88 8b       	std	Y+16, r24	; 0x10
    505c:	88 89       	ldd	r24, Y+16	; 0x10
    505e:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    5060:	89 81       	ldd	r24, Y+1	; 0x01
    5062:	8a 95       	dec	r24
    5064:	f1 f7       	brne	.-4      	; 0x5062 <Ultrasonic_right_back_Get_Distance+0x1b4>
    5066:	89 83       	std	Y+1, r24	; 0x01
			_delay_us(10);
			DIO_void_Set_Pin_Value(PORTA_ID,trig2,LOW);
    5068:	80 e0       	ldi	r24, 0x00	; 0
    506a:	63 e0       	ldi	r22, 0x03	; 3
    506c:	40 e0       	ldi	r20, 0x00	; 0
    506e:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

			 Timer1_InputCaptureEdge(Rising);
    5072:	81 e0       	ldi	r24, 0x01	; 1
    5074:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
	         Timer1_ICU_InterruptEnable();
    5078:	0e 94 55 1c 	call	0x38aa	; 0x38aa <Timer1_ICU_InterruptEnable>
			 while(f<2);
    507c:	80 91 7e 03 	lds	r24, 0x037E
    5080:	82 30       	cpi	r24, 0x02	; 2
    5082:	e0 f3       	brcs	.-8      	; 0x507c <Ultrasonic_right_back_Get_Distance+0x1ce>
			 time = (t2-t1);
    5084:	20 91 82 03 	lds	r18, 0x0382
    5088:	30 91 83 03 	lds	r19, 0x0383
    508c:	80 91 80 03 	lds	r24, 0x0380
    5090:	90 91 81 03 	lds	r25, 0x0381
    5094:	a9 01       	movw	r20, r18
    5096:	48 1b       	sub	r20, r24
    5098:	59 0b       	sbc	r21, r25
    509a:	ca 01       	movw	r24, r20
    509c:	cc 01       	movw	r24, r24
    509e:	a0 e0       	ldi	r26, 0x00	; 0
    50a0:	b0 e0       	ldi	r27, 0x00	; 0
    50a2:	8d 8f       	std	Y+29, r24	; 0x1d
    50a4:	9e 8f       	std	Y+30, r25	; 0x1e
    50a6:	af 8f       	std	Y+31, r26	; 0x1f
    50a8:	b8 a3       	std	Y+32, r27	; 0x20
			 distance = time /58;
    50aa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    50ac:	9e 8d       	ldd	r25, Y+30	; 0x1e
    50ae:	af 8d       	ldd	r26, Y+31	; 0x1f
    50b0:	b8 a1       	ldd	r27, Y+32	; 0x20
    50b2:	2a e3       	ldi	r18, 0x3A	; 58
    50b4:	30 e0       	ldi	r19, 0x00	; 0
    50b6:	40 e0       	ldi	r20, 0x00	; 0
    50b8:	50 e0       	ldi	r21, 0x00	; 0
    50ba:	bc 01       	movw	r22, r24
    50bc:	cd 01       	movw	r24, r26
    50be:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    50c2:	da 01       	movw	r26, r20
    50c4:	c9 01       	movw	r24, r18
    50c6:	89 8f       	std	Y+25, r24	; 0x19
    50c8:	9a 8f       	std	Y+26, r25	; 0x1a
    50ca:	ab 8f       	std	Y+27, r26	; 0x1b
    50cc:	bc 8f       	std	Y+28, r27	; 0x1c
			 Timer1_ICU_InterruptDisable();
    50ce:	0e 94 63 1c 	call	0x38c6	; 0x38c6 <Timer1_ICU_InterruptDisable>


			 return distance;
    50d2:	89 8d       	ldd	r24, Y+25	; 0x19
    50d4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    50d6:	ab 8d       	ldd	r26, Y+27	; 0x1b
    50d8:	bc 8d       	ldd	r27, Y+28	; 0x1c
}
    50da:	bc 01       	movw	r22, r24
    50dc:	cd 01       	movw	r24, r26
    50de:	a0 96       	adiw	r28, 0x20	; 32
    50e0:	0f b6       	in	r0, 0x3f	; 63
    50e2:	f8 94       	cli
    50e4:	de bf       	out	0x3e, r29	; 62
    50e6:	0f be       	out	0x3f, r0	; 63
    50e8:	cd bf       	out	0x3d, r28	; 61
    50ea:	cf 91       	pop	r28
    50ec:	df 91       	pop	r29
    50ee:	08 95       	ret

000050f0 <Ultrasonic_back_Get_Distance>:
uint32 Ultrasonic_back_Get_Distance(void)
{
    50f0:	df 93       	push	r29
    50f2:	cf 93       	push	r28
    50f4:	cd b7       	in	r28, 0x3d	; 61
    50f6:	de b7       	in	r29, 0x3e	; 62
    50f8:	a0 97       	sbiw	r28, 0x20	; 32
    50fa:	0f b6       	in	r0, 0x3f	; 63
    50fc:	f8 94       	cli
    50fe:	de bf       	out	0x3e, r29	; 62
    5100:	0f be       	out	0x3f, r0	; 63
    5102:	cd bf       	out	0x3d, r28	; 61
	uint32 time=0,distance=0;
    5104:	1d 8e       	std	Y+29, r1	; 0x1d
    5106:	1e 8e       	std	Y+30, r1	; 0x1e
    5108:	1f 8e       	std	Y+31, r1	; 0x1f
    510a:	18 a2       	std	Y+32, r1	; 0x20
    510c:	19 8e       	std	Y+25, r1	; 0x19
    510e:	1a 8e       	std	Y+26, r1	; 0x1a
    5110:	1b 8e       	std	Y+27, r1	; 0x1b
    5112:	1c 8e       	std	Y+28, r1	; 0x1c
			c = 0;
    5114:	10 92 7f 03 	sts	0x037F, r1
			TCNT1 = 0;
    5118:	ec e4       	ldi	r30, 0x4C	; 76
    511a:	f0 e0       	ldi	r31, 0x00	; 0
    511c:	11 82       	std	Z+1, r1	; 0x01
    511e:	10 82       	st	Z, r1
			f = 0;
    5120:	10 92 7e 03 	sts	0x037E, r1

			DIO_void_Set_Pin_Value(PORTA_ID,trig3,HIGH);
    5124:	80 e0       	ldi	r24, 0x00	; 0
    5126:	64 e0       	ldi	r22, 0x04	; 4
    5128:	41 e0       	ldi	r20, 0x01	; 1
    512a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    512e:	80 e0       	ldi	r24, 0x00	; 0
    5130:	90 e0       	ldi	r25, 0x00	; 0
    5132:	a0 e2       	ldi	r26, 0x20	; 32
    5134:	b1 e4       	ldi	r27, 0x41	; 65
    5136:	8d 8b       	std	Y+21, r24	; 0x15
    5138:	9e 8b       	std	Y+22, r25	; 0x16
    513a:	af 8b       	std	Y+23, r26	; 0x17
    513c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    513e:	6d 89       	ldd	r22, Y+21	; 0x15
    5140:	7e 89       	ldd	r23, Y+22	; 0x16
    5142:	8f 89       	ldd	r24, Y+23	; 0x17
    5144:	98 8d       	ldd	r25, Y+24	; 0x18
    5146:	2b ea       	ldi	r18, 0xAB	; 171
    5148:	3a ea       	ldi	r19, 0xAA	; 170
    514a:	4a e2       	ldi	r20, 0x2A	; 42
    514c:	50 e4       	ldi	r21, 0x40	; 64
    514e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5152:	dc 01       	movw	r26, r24
    5154:	cb 01       	movw	r24, r22
    5156:	89 8b       	std	Y+17, r24	; 0x11
    5158:	9a 8b       	std	Y+18, r25	; 0x12
    515a:	ab 8b       	std	Y+19, r26	; 0x13
    515c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    515e:	69 89       	ldd	r22, Y+17	; 0x11
    5160:	7a 89       	ldd	r23, Y+18	; 0x12
    5162:	8b 89       	ldd	r24, Y+19	; 0x13
    5164:	9c 89       	ldd	r25, Y+20	; 0x14
    5166:	20 e0       	ldi	r18, 0x00	; 0
    5168:	30 e0       	ldi	r19, 0x00	; 0
    516a:	40 e8       	ldi	r20, 0x80	; 128
    516c:	5f e3       	ldi	r21, 0x3F	; 63
    516e:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5172:	88 23       	and	r24, r24
    5174:	1c f4       	brge	.+6      	; 0x517c <Ultrasonic_back_Get_Distance+0x8c>
		__ticks = 1;
    5176:	81 e0       	ldi	r24, 0x01	; 1
    5178:	88 8b       	std	Y+16, r24	; 0x10
    517a:	91 c0       	rjmp	.+290    	; 0x529e <Ultrasonic_back_Get_Distance+0x1ae>
	else if (__tmp > 255)
    517c:	69 89       	ldd	r22, Y+17	; 0x11
    517e:	7a 89       	ldd	r23, Y+18	; 0x12
    5180:	8b 89       	ldd	r24, Y+19	; 0x13
    5182:	9c 89       	ldd	r25, Y+20	; 0x14
    5184:	20 e0       	ldi	r18, 0x00	; 0
    5186:	30 e0       	ldi	r19, 0x00	; 0
    5188:	4f e7       	ldi	r20, 0x7F	; 127
    518a:	53 e4       	ldi	r21, 0x43	; 67
    518c:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5190:	18 16       	cp	r1, r24
    5192:	0c f0       	brlt	.+2      	; 0x5196 <Ultrasonic_back_Get_Distance+0xa6>
    5194:	7b c0       	rjmp	.+246    	; 0x528c <Ultrasonic_back_Get_Distance+0x19c>
	{
		_delay_ms(__us / 1000.0);
    5196:	6d 89       	ldd	r22, Y+21	; 0x15
    5198:	7e 89       	ldd	r23, Y+22	; 0x16
    519a:	8f 89       	ldd	r24, Y+23	; 0x17
    519c:	98 8d       	ldd	r25, Y+24	; 0x18
    519e:	20 e0       	ldi	r18, 0x00	; 0
    51a0:	30 e0       	ldi	r19, 0x00	; 0
    51a2:	4a e7       	ldi	r20, 0x7A	; 122
    51a4:	54 e4       	ldi	r21, 0x44	; 68
    51a6:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divsf3>
    51aa:	dc 01       	movw	r26, r24
    51ac:	cb 01       	movw	r24, r22
    51ae:	8c 87       	std	Y+12, r24	; 0x0c
    51b0:	9d 87       	std	Y+13, r25	; 0x0d
    51b2:	ae 87       	std	Y+14, r26	; 0x0e
    51b4:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51b6:	6c 85       	ldd	r22, Y+12	; 0x0c
    51b8:	7d 85       	ldd	r23, Y+13	; 0x0d
    51ba:	8e 85       	ldd	r24, Y+14	; 0x0e
    51bc:	9f 85       	ldd	r25, Y+15	; 0x0f
    51be:	20 e0       	ldi	r18, 0x00	; 0
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	4a ef       	ldi	r20, 0xFA	; 250
    51c4:	54 e4       	ldi	r21, 0x44	; 68
    51c6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    51ca:	dc 01       	movw	r26, r24
    51cc:	cb 01       	movw	r24, r22
    51ce:	88 87       	std	Y+8, r24	; 0x08
    51d0:	99 87       	std	Y+9, r25	; 0x09
    51d2:	aa 87       	std	Y+10, r26	; 0x0a
    51d4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    51d6:	68 85       	ldd	r22, Y+8	; 0x08
    51d8:	79 85       	ldd	r23, Y+9	; 0x09
    51da:	8a 85       	ldd	r24, Y+10	; 0x0a
    51dc:	9b 85       	ldd	r25, Y+11	; 0x0b
    51de:	20 e0       	ldi	r18, 0x00	; 0
    51e0:	30 e0       	ldi	r19, 0x00	; 0
    51e2:	40 e8       	ldi	r20, 0x80	; 128
    51e4:	5f e3       	ldi	r21, 0x3F	; 63
    51e6:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    51ea:	88 23       	and	r24, r24
    51ec:	2c f4       	brge	.+10     	; 0x51f8 <Ultrasonic_back_Get_Distance+0x108>
		__ticks = 1;
    51ee:	81 e0       	ldi	r24, 0x01	; 1
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	9f 83       	std	Y+7, r25	; 0x07
    51f4:	8e 83       	std	Y+6, r24	; 0x06
    51f6:	3f c0       	rjmp	.+126    	; 0x5276 <Ultrasonic_back_Get_Distance+0x186>
	else if (__tmp > 65535)
    51f8:	68 85       	ldd	r22, Y+8	; 0x08
    51fa:	79 85       	ldd	r23, Y+9	; 0x09
    51fc:	8a 85       	ldd	r24, Y+10	; 0x0a
    51fe:	9b 85       	ldd	r25, Y+11	; 0x0b
    5200:	20 e0       	ldi	r18, 0x00	; 0
    5202:	3f ef       	ldi	r19, 0xFF	; 255
    5204:	4f e7       	ldi	r20, 0x7F	; 127
    5206:	57 e4       	ldi	r21, 0x47	; 71
    5208:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    520c:	18 16       	cp	r1, r24
    520e:	4c f5       	brge	.+82     	; 0x5262 <Ultrasonic_back_Get_Distance+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5210:	6c 85       	ldd	r22, Y+12	; 0x0c
    5212:	7d 85       	ldd	r23, Y+13	; 0x0d
    5214:	8e 85       	ldd	r24, Y+14	; 0x0e
    5216:	9f 85       	ldd	r25, Y+15	; 0x0f
    5218:	20 e0       	ldi	r18, 0x00	; 0
    521a:	30 e0       	ldi	r19, 0x00	; 0
    521c:	40 e2       	ldi	r20, 0x20	; 32
    521e:	51 e4       	ldi	r21, 0x41	; 65
    5220:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5224:	dc 01       	movw	r26, r24
    5226:	cb 01       	movw	r24, r22
    5228:	bc 01       	movw	r22, r24
    522a:	cd 01       	movw	r24, r26
    522c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5230:	dc 01       	movw	r26, r24
    5232:	cb 01       	movw	r24, r22
    5234:	9f 83       	std	Y+7, r25	; 0x07
    5236:	8e 83       	std	Y+6, r24	; 0x06
    5238:	0f c0       	rjmp	.+30     	; 0x5258 <Ultrasonic_back_Get_Distance+0x168>
    523a:	88 ec       	ldi	r24, 0xC8	; 200
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	9d 83       	std	Y+5, r25	; 0x05
    5240:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5242:	8c 81       	ldd	r24, Y+4	; 0x04
    5244:	9d 81       	ldd	r25, Y+5	; 0x05
    5246:	01 97       	sbiw	r24, 0x01	; 1
    5248:	f1 f7       	brne	.-4      	; 0x5246 <Ultrasonic_back_Get_Distance+0x156>
    524a:	9d 83       	std	Y+5, r25	; 0x05
    524c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    524e:	8e 81       	ldd	r24, Y+6	; 0x06
    5250:	9f 81       	ldd	r25, Y+7	; 0x07
    5252:	01 97       	sbiw	r24, 0x01	; 1
    5254:	9f 83       	std	Y+7, r25	; 0x07
    5256:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5258:	8e 81       	ldd	r24, Y+6	; 0x06
    525a:	9f 81       	ldd	r25, Y+7	; 0x07
    525c:	00 97       	sbiw	r24, 0x00	; 0
    525e:	69 f7       	brne	.-38     	; 0x523a <Ultrasonic_back_Get_Distance+0x14a>
    5260:	24 c0       	rjmp	.+72     	; 0x52aa <Ultrasonic_back_Get_Distance+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5262:	68 85       	ldd	r22, Y+8	; 0x08
    5264:	79 85       	ldd	r23, Y+9	; 0x09
    5266:	8a 85       	ldd	r24, Y+10	; 0x0a
    5268:	9b 85       	ldd	r25, Y+11	; 0x0b
    526a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    526e:	dc 01       	movw	r26, r24
    5270:	cb 01       	movw	r24, r22
    5272:	9f 83       	std	Y+7, r25	; 0x07
    5274:	8e 83       	std	Y+6, r24	; 0x06
    5276:	8e 81       	ldd	r24, Y+6	; 0x06
    5278:	9f 81       	ldd	r25, Y+7	; 0x07
    527a:	9b 83       	std	Y+3, r25	; 0x03
    527c:	8a 83       	std	Y+2, r24	; 0x02
    527e:	8a 81       	ldd	r24, Y+2	; 0x02
    5280:	9b 81       	ldd	r25, Y+3	; 0x03
    5282:	01 97       	sbiw	r24, 0x01	; 1
    5284:	f1 f7       	brne	.-4      	; 0x5282 <Ultrasonic_back_Get_Distance+0x192>
    5286:	9b 83       	std	Y+3, r25	; 0x03
    5288:	8a 83       	std	Y+2, r24	; 0x02
    528a:	0f c0       	rjmp	.+30     	; 0x52aa <Ultrasonic_back_Get_Distance+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    528c:	69 89       	ldd	r22, Y+17	; 0x11
    528e:	7a 89       	ldd	r23, Y+18	; 0x12
    5290:	8b 89       	ldd	r24, Y+19	; 0x13
    5292:	9c 89       	ldd	r25, Y+20	; 0x14
    5294:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5298:	dc 01       	movw	r26, r24
    529a:	cb 01       	movw	r24, r22
    529c:	88 8b       	std	Y+16, r24	; 0x10
    529e:	88 89       	ldd	r24, Y+16	; 0x10
    52a0:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    52a2:	89 81       	ldd	r24, Y+1	; 0x01
    52a4:	8a 95       	dec	r24
    52a6:	f1 f7       	brne	.-4      	; 0x52a4 <Ultrasonic_back_Get_Distance+0x1b4>
    52a8:	89 83       	std	Y+1, r24	; 0x01
			_delay_us(10);
			DIO_void_Set_Pin_Value(PORTA_ID,trig3,LOW);
    52aa:	80 e0       	ldi	r24, 0x00	; 0
    52ac:	64 e0       	ldi	r22, 0x04	; 4
    52ae:	40 e0       	ldi	r20, 0x00	; 0
    52b0:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

			 Timer1_InputCaptureEdge(Rising);
    52b4:	81 e0       	ldi	r24, 0x01	; 1
    52b6:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
	         Timer1_ICU_InterruptEnable();
    52ba:	0e 94 55 1c 	call	0x38aa	; 0x38aa <Timer1_ICU_InterruptEnable>
			 while(f<2);
    52be:	80 91 7e 03 	lds	r24, 0x037E
    52c2:	82 30       	cpi	r24, 0x02	; 2
    52c4:	e0 f3       	brcs	.-8      	; 0x52be <Ultrasonic_back_Get_Distance+0x1ce>
			 time = (t2-t1);
    52c6:	20 91 82 03 	lds	r18, 0x0382
    52ca:	30 91 83 03 	lds	r19, 0x0383
    52ce:	80 91 80 03 	lds	r24, 0x0380
    52d2:	90 91 81 03 	lds	r25, 0x0381
    52d6:	a9 01       	movw	r20, r18
    52d8:	48 1b       	sub	r20, r24
    52da:	59 0b       	sbc	r21, r25
    52dc:	ca 01       	movw	r24, r20
    52de:	cc 01       	movw	r24, r24
    52e0:	a0 e0       	ldi	r26, 0x00	; 0
    52e2:	b0 e0       	ldi	r27, 0x00	; 0
    52e4:	8d 8f       	std	Y+29, r24	; 0x1d
    52e6:	9e 8f       	std	Y+30, r25	; 0x1e
    52e8:	af 8f       	std	Y+31, r26	; 0x1f
    52ea:	b8 a3       	std	Y+32, r27	; 0x20
			 distance = time /58;
    52ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52ee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52f0:	af 8d       	ldd	r26, Y+31	; 0x1f
    52f2:	b8 a1       	ldd	r27, Y+32	; 0x20
    52f4:	2a e3       	ldi	r18, 0x3A	; 58
    52f6:	30 e0       	ldi	r19, 0x00	; 0
    52f8:	40 e0       	ldi	r20, 0x00	; 0
    52fa:	50 e0       	ldi	r21, 0x00	; 0
    52fc:	bc 01       	movw	r22, r24
    52fe:	cd 01       	movw	r24, r26
    5300:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    5304:	da 01       	movw	r26, r20
    5306:	c9 01       	movw	r24, r18
    5308:	89 8f       	std	Y+25, r24	; 0x19
    530a:	9a 8f       	std	Y+26, r25	; 0x1a
    530c:	ab 8f       	std	Y+27, r26	; 0x1b
    530e:	bc 8f       	std	Y+28, r27	; 0x1c
			 Timer1_ICU_InterruptDisable();
    5310:	0e 94 63 1c 	call	0x38c6	; 0x38c6 <Timer1_ICU_InterruptDisable>


			 return distance;
    5314:	89 8d       	ldd	r24, Y+25	; 0x19
    5316:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5318:	ab 8d       	ldd	r26, Y+27	; 0x1b
    531a:	bc 8d       	ldd	r27, Y+28	; 0x1c
}
    531c:	bc 01       	movw	r22, r24
    531e:	cd 01       	movw	r24, r26
    5320:	a0 96       	adiw	r28, 0x20	; 32
    5322:	0f b6       	in	r0, 0x3f	; 63
    5324:	f8 94       	cli
    5326:	de bf       	out	0x3e, r29	; 62
    5328:	0f be       	out	0x3f, r0	; 63
    532a:	cd bf       	out	0x3d, r28	; 61
    532c:	cf 91       	pop	r28
    532e:	df 91       	pop	r29
    5330:	08 95       	ret

00005332 <Ultrasonic_back2_Get_Distance>:
uint32 Ultrasonic_back2_Get_Distance(void)
{
    5332:	df 93       	push	r29
    5334:	cf 93       	push	r28
    5336:	cd b7       	in	r28, 0x3d	; 61
    5338:	de b7       	in	r29, 0x3e	; 62
    533a:	a0 97       	sbiw	r28, 0x20	; 32
    533c:	0f b6       	in	r0, 0x3f	; 63
    533e:	f8 94       	cli
    5340:	de bf       	out	0x3e, r29	; 62
    5342:	0f be       	out	0x3f, r0	; 63
    5344:	cd bf       	out	0x3d, r28	; 61
	uint32 time=0,distance=0;
    5346:	1d 8e       	std	Y+29, r1	; 0x1d
    5348:	1e 8e       	std	Y+30, r1	; 0x1e
    534a:	1f 8e       	std	Y+31, r1	; 0x1f
    534c:	18 a2       	std	Y+32, r1	; 0x20
    534e:	19 8e       	std	Y+25, r1	; 0x19
    5350:	1a 8e       	std	Y+26, r1	; 0x1a
    5352:	1b 8e       	std	Y+27, r1	; 0x1b
    5354:	1c 8e       	std	Y+28, r1	; 0x1c
				c = 0;
    5356:	10 92 7f 03 	sts	0x037F, r1
				TCNT1 = 0;
    535a:	ec e4       	ldi	r30, 0x4C	; 76
    535c:	f0 e0       	ldi	r31, 0x00	; 0
    535e:	11 82       	std	Z+1, r1	; 0x01
    5360:	10 82       	st	Z, r1
				f = 0;
    5362:	10 92 7e 03 	sts	0x037E, r1

				DIO_void_Set_Pin_Value(PORTA_ID,trig4,HIGH);
    5366:	80 e0       	ldi	r24, 0x00	; 0
    5368:	65 e0       	ldi	r22, 0x05	; 5
    536a:	41 e0       	ldi	r20, 0x01	; 1
    536c:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    5370:	80 e0       	ldi	r24, 0x00	; 0
    5372:	90 e0       	ldi	r25, 0x00	; 0
    5374:	a0 e2       	ldi	r26, 0x20	; 32
    5376:	b1 e4       	ldi	r27, 0x41	; 65
    5378:	8d 8b       	std	Y+21, r24	; 0x15
    537a:	9e 8b       	std	Y+22, r25	; 0x16
    537c:	af 8b       	std	Y+23, r26	; 0x17
    537e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    5380:	6d 89       	ldd	r22, Y+21	; 0x15
    5382:	7e 89       	ldd	r23, Y+22	; 0x16
    5384:	8f 89       	ldd	r24, Y+23	; 0x17
    5386:	98 8d       	ldd	r25, Y+24	; 0x18
    5388:	2b ea       	ldi	r18, 0xAB	; 171
    538a:	3a ea       	ldi	r19, 0xAA	; 170
    538c:	4a e2       	ldi	r20, 0x2A	; 42
    538e:	50 e4       	ldi	r21, 0x40	; 64
    5390:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5394:	dc 01       	movw	r26, r24
    5396:	cb 01       	movw	r24, r22
    5398:	89 8b       	std	Y+17, r24	; 0x11
    539a:	9a 8b       	std	Y+18, r25	; 0x12
    539c:	ab 8b       	std	Y+19, r26	; 0x13
    539e:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    53a0:	69 89       	ldd	r22, Y+17	; 0x11
    53a2:	7a 89       	ldd	r23, Y+18	; 0x12
    53a4:	8b 89       	ldd	r24, Y+19	; 0x13
    53a6:	9c 89       	ldd	r25, Y+20	; 0x14
    53a8:	20 e0       	ldi	r18, 0x00	; 0
    53aa:	30 e0       	ldi	r19, 0x00	; 0
    53ac:	40 e8       	ldi	r20, 0x80	; 128
    53ae:	5f e3       	ldi	r21, 0x3F	; 63
    53b0:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    53b4:	88 23       	and	r24, r24
    53b6:	1c f4       	brge	.+6      	; 0x53be <Ultrasonic_back2_Get_Distance+0x8c>
		__ticks = 1;
    53b8:	81 e0       	ldi	r24, 0x01	; 1
    53ba:	88 8b       	std	Y+16, r24	; 0x10
    53bc:	91 c0       	rjmp	.+290    	; 0x54e0 <Ultrasonic_back2_Get_Distance+0x1ae>
	else if (__tmp > 255)
    53be:	69 89       	ldd	r22, Y+17	; 0x11
    53c0:	7a 89       	ldd	r23, Y+18	; 0x12
    53c2:	8b 89       	ldd	r24, Y+19	; 0x13
    53c4:	9c 89       	ldd	r25, Y+20	; 0x14
    53c6:	20 e0       	ldi	r18, 0x00	; 0
    53c8:	30 e0       	ldi	r19, 0x00	; 0
    53ca:	4f e7       	ldi	r20, 0x7F	; 127
    53cc:	53 e4       	ldi	r21, 0x43	; 67
    53ce:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    53d2:	18 16       	cp	r1, r24
    53d4:	0c f0       	brlt	.+2      	; 0x53d8 <Ultrasonic_back2_Get_Distance+0xa6>
    53d6:	7b c0       	rjmp	.+246    	; 0x54ce <Ultrasonic_back2_Get_Distance+0x19c>
	{
		_delay_ms(__us / 1000.0);
    53d8:	6d 89       	ldd	r22, Y+21	; 0x15
    53da:	7e 89       	ldd	r23, Y+22	; 0x16
    53dc:	8f 89       	ldd	r24, Y+23	; 0x17
    53de:	98 8d       	ldd	r25, Y+24	; 0x18
    53e0:	20 e0       	ldi	r18, 0x00	; 0
    53e2:	30 e0       	ldi	r19, 0x00	; 0
    53e4:	4a e7       	ldi	r20, 0x7A	; 122
    53e6:	54 e4       	ldi	r21, 0x44	; 68
    53e8:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divsf3>
    53ec:	dc 01       	movw	r26, r24
    53ee:	cb 01       	movw	r24, r22
    53f0:	8c 87       	std	Y+12, r24	; 0x0c
    53f2:	9d 87       	std	Y+13, r25	; 0x0d
    53f4:	ae 87       	std	Y+14, r26	; 0x0e
    53f6:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    53f8:	6c 85       	ldd	r22, Y+12	; 0x0c
    53fa:	7d 85       	ldd	r23, Y+13	; 0x0d
    53fc:	8e 85       	ldd	r24, Y+14	; 0x0e
    53fe:	9f 85       	ldd	r25, Y+15	; 0x0f
    5400:	20 e0       	ldi	r18, 0x00	; 0
    5402:	30 e0       	ldi	r19, 0x00	; 0
    5404:	4a ef       	ldi	r20, 0xFA	; 250
    5406:	54 e4       	ldi	r21, 0x44	; 68
    5408:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    540c:	dc 01       	movw	r26, r24
    540e:	cb 01       	movw	r24, r22
    5410:	88 87       	std	Y+8, r24	; 0x08
    5412:	99 87       	std	Y+9, r25	; 0x09
    5414:	aa 87       	std	Y+10, r26	; 0x0a
    5416:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    5418:	68 85       	ldd	r22, Y+8	; 0x08
    541a:	79 85       	ldd	r23, Y+9	; 0x09
    541c:	8a 85       	ldd	r24, Y+10	; 0x0a
    541e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5420:	20 e0       	ldi	r18, 0x00	; 0
    5422:	30 e0       	ldi	r19, 0x00	; 0
    5424:	40 e8       	ldi	r20, 0x80	; 128
    5426:	5f e3       	ldi	r21, 0x3F	; 63
    5428:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    542c:	88 23       	and	r24, r24
    542e:	2c f4       	brge	.+10     	; 0x543a <Ultrasonic_back2_Get_Distance+0x108>
		__ticks = 1;
    5430:	81 e0       	ldi	r24, 0x01	; 1
    5432:	90 e0       	ldi	r25, 0x00	; 0
    5434:	9f 83       	std	Y+7, r25	; 0x07
    5436:	8e 83       	std	Y+6, r24	; 0x06
    5438:	3f c0       	rjmp	.+126    	; 0x54b8 <Ultrasonic_back2_Get_Distance+0x186>
	else if (__tmp > 65535)
    543a:	68 85       	ldd	r22, Y+8	; 0x08
    543c:	79 85       	ldd	r23, Y+9	; 0x09
    543e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5440:	9b 85       	ldd	r25, Y+11	; 0x0b
    5442:	20 e0       	ldi	r18, 0x00	; 0
    5444:	3f ef       	ldi	r19, 0xFF	; 255
    5446:	4f e7       	ldi	r20, 0x7F	; 127
    5448:	57 e4       	ldi	r21, 0x47	; 71
    544a:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    544e:	18 16       	cp	r1, r24
    5450:	4c f5       	brge	.+82     	; 0x54a4 <Ultrasonic_back2_Get_Distance+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5452:	6c 85       	ldd	r22, Y+12	; 0x0c
    5454:	7d 85       	ldd	r23, Y+13	; 0x0d
    5456:	8e 85       	ldd	r24, Y+14	; 0x0e
    5458:	9f 85       	ldd	r25, Y+15	; 0x0f
    545a:	20 e0       	ldi	r18, 0x00	; 0
    545c:	30 e0       	ldi	r19, 0x00	; 0
    545e:	40 e2       	ldi	r20, 0x20	; 32
    5460:	51 e4       	ldi	r21, 0x41	; 65
    5462:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5466:	dc 01       	movw	r26, r24
    5468:	cb 01       	movw	r24, r22
    546a:	bc 01       	movw	r22, r24
    546c:	cd 01       	movw	r24, r26
    546e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5472:	dc 01       	movw	r26, r24
    5474:	cb 01       	movw	r24, r22
    5476:	9f 83       	std	Y+7, r25	; 0x07
    5478:	8e 83       	std	Y+6, r24	; 0x06
    547a:	0f c0       	rjmp	.+30     	; 0x549a <Ultrasonic_back2_Get_Distance+0x168>
    547c:	88 ec       	ldi	r24, 0xC8	; 200
    547e:	90 e0       	ldi	r25, 0x00	; 0
    5480:	9d 83       	std	Y+5, r25	; 0x05
    5482:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5484:	8c 81       	ldd	r24, Y+4	; 0x04
    5486:	9d 81       	ldd	r25, Y+5	; 0x05
    5488:	01 97       	sbiw	r24, 0x01	; 1
    548a:	f1 f7       	brne	.-4      	; 0x5488 <Ultrasonic_back2_Get_Distance+0x156>
    548c:	9d 83       	std	Y+5, r25	; 0x05
    548e:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5490:	8e 81       	ldd	r24, Y+6	; 0x06
    5492:	9f 81       	ldd	r25, Y+7	; 0x07
    5494:	01 97       	sbiw	r24, 0x01	; 1
    5496:	9f 83       	std	Y+7, r25	; 0x07
    5498:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    549a:	8e 81       	ldd	r24, Y+6	; 0x06
    549c:	9f 81       	ldd	r25, Y+7	; 0x07
    549e:	00 97       	sbiw	r24, 0x00	; 0
    54a0:	69 f7       	brne	.-38     	; 0x547c <Ultrasonic_back2_Get_Distance+0x14a>
    54a2:	24 c0       	rjmp	.+72     	; 0x54ec <Ultrasonic_back2_Get_Distance+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54a4:	68 85       	ldd	r22, Y+8	; 0x08
    54a6:	79 85       	ldd	r23, Y+9	; 0x09
    54a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    54aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    54ac:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    54b0:	dc 01       	movw	r26, r24
    54b2:	cb 01       	movw	r24, r22
    54b4:	9f 83       	std	Y+7, r25	; 0x07
    54b6:	8e 83       	std	Y+6, r24	; 0x06
    54b8:	8e 81       	ldd	r24, Y+6	; 0x06
    54ba:	9f 81       	ldd	r25, Y+7	; 0x07
    54bc:	9b 83       	std	Y+3, r25	; 0x03
    54be:	8a 83       	std	Y+2, r24	; 0x02
    54c0:	8a 81       	ldd	r24, Y+2	; 0x02
    54c2:	9b 81       	ldd	r25, Y+3	; 0x03
    54c4:	01 97       	sbiw	r24, 0x01	; 1
    54c6:	f1 f7       	brne	.-4      	; 0x54c4 <Ultrasonic_back2_Get_Distance+0x192>
    54c8:	9b 83       	std	Y+3, r25	; 0x03
    54ca:	8a 83       	std	Y+2, r24	; 0x02
    54cc:	0f c0       	rjmp	.+30     	; 0x54ec <Ultrasonic_back2_Get_Distance+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    54ce:	69 89       	ldd	r22, Y+17	; 0x11
    54d0:	7a 89       	ldd	r23, Y+18	; 0x12
    54d2:	8b 89       	ldd	r24, Y+19	; 0x13
    54d4:	9c 89       	ldd	r25, Y+20	; 0x14
    54d6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    54da:	dc 01       	movw	r26, r24
    54dc:	cb 01       	movw	r24, r22
    54de:	88 8b       	std	Y+16, r24	; 0x10
    54e0:	88 89       	ldd	r24, Y+16	; 0x10
    54e2:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    54e4:	89 81       	ldd	r24, Y+1	; 0x01
    54e6:	8a 95       	dec	r24
    54e8:	f1 f7       	brne	.-4      	; 0x54e6 <Ultrasonic_back2_Get_Distance+0x1b4>
    54ea:	89 83       	std	Y+1, r24	; 0x01
				_delay_us(10);
				DIO_void_Set_Pin_Value(PORTA_ID,trig4,LOW);
    54ec:	80 e0       	ldi	r24, 0x00	; 0
    54ee:	65 e0       	ldi	r22, 0x05	; 5
    54f0:	40 e0       	ldi	r20, 0x00	; 0
    54f2:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

				 Timer1_InputCaptureEdge(Rising);
    54f6:	81 e0       	ldi	r24, 0x01	; 1
    54f8:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
		         Timer1_ICU_InterruptEnable();
    54fc:	0e 94 55 1c 	call	0x38aa	; 0x38aa <Timer1_ICU_InterruptEnable>
				 while(f<2);
    5500:	80 91 7e 03 	lds	r24, 0x037E
    5504:	82 30       	cpi	r24, 0x02	; 2
    5506:	e0 f3       	brcs	.-8      	; 0x5500 <Ultrasonic_back2_Get_Distance+0x1ce>
				 time = (t2-t1);
    5508:	20 91 82 03 	lds	r18, 0x0382
    550c:	30 91 83 03 	lds	r19, 0x0383
    5510:	80 91 80 03 	lds	r24, 0x0380
    5514:	90 91 81 03 	lds	r25, 0x0381
    5518:	a9 01       	movw	r20, r18
    551a:	48 1b       	sub	r20, r24
    551c:	59 0b       	sbc	r21, r25
    551e:	ca 01       	movw	r24, r20
    5520:	cc 01       	movw	r24, r24
    5522:	a0 e0       	ldi	r26, 0x00	; 0
    5524:	b0 e0       	ldi	r27, 0x00	; 0
    5526:	8d 8f       	std	Y+29, r24	; 0x1d
    5528:	9e 8f       	std	Y+30, r25	; 0x1e
    552a:	af 8f       	std	Y+31, r26	; 0x1f
    552c:	b8 a3       	std	Y+32, r27	; 0x20
				 distance = time /58;
    552e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5530:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5532:	af 8d       	ldd	r26, Y+31	; 0x1f
    5534:	b8 a1       	ldd	r27, Y+32	; 0x20
    5536:	2a e3       	ldi	r18, 0x3A	; 58
    5538:	30 e0       	ldi	r19, 0x00	; 0
    553a:	40 e0       	ldi	r20, 0x00	; 0
    553c:	50 e0       	ldi	r21, 0x00	; 0
    553e:	bc 01       	movw	r22, r24
    5540:	cd 01       	movw	r24, r26
    5542:	0e 94 16 62 	call	0xc42c	; 0xc42c <__udivmodsi4>
    5546:	da 01       	movw	r26, r20
    5548:	c9 01       	movw	r24, r18
    554a:	89 8f       	std	Y+25, r24	; 0x19
    554c:	9a 8f       	std	Y+26, r25	; 0x1a
    554e:	ab 8f       	std	Y+27, r26	; 0x1b
    5550:	bc 8f       	std	Y+28, r27	; 0x1c
				 Timer1_ICU_InterruptDisable();
    5552:	0e 94 63 1c 	call	0x38c6	; 0x38c6 <Timer1_ICU_InterruptDisable>


				 return distance;
    5556:	89 8d       	ldd	r24, Y+25	; 0x19
    5558:	9a 8d       	ldd	r25, Y+26	; 0x1a
    555a:	ab 8d       	ldd	r26, Y+27	; 0x1b
    555c:	bc 8d       	ldd	r27, Y+28	; 0x1c
}
    555e:	bc 01       	movw	r22, r24
    5560:	cd 01       	movw	r24, r26
    5562:	a0 96       	adiw	r28, 0x20	; 32
    5564:	0f b6       	in	r0, 0x3f	; 63
    5566:	f8 94       	cli
    5568:	de bf       	out	0x3e, r29	; 62
    556a:	0f be       	out	0x3f, r0	; 63
    556c:	cd bf       	out	0x3d, r28	; 61
    556e:	cf 91       	pop	r28
    5570:	df 91       	pop	r29
    5572:	08 95       	ret

00005574 <__vector_11>:
ISR(TIMER1_CAPT_vect)
{
    5574:	1f 92       	push	r1
    5576:	0f 92       	push	r0
    5578:	0f b6       	in	r0, 0x3f	; 63
    557a:	0f 92       	push	r0
    557c:	00 90 5b 00 	lds	r0, 0x005B
    5580:	0f 92       	push	r0
    5582:	11 24       	eor	r1, r1
    5584:	2f 93       	push	r18
    5586:	3f 93       	push	r19
    5588:	4f 93       	push	r20
    558a:	5f 93       	push	r21
    558c:	6f 93       	push	r22
    558e:	7f 93       	push	r23
    5590:	8f 93       	push	r24
    5592:	9f 93       	push	r25
    5594:	af 93       	push	r26
    5596:	bf 93       	push	r27
    5598:	ef 93       	push	r30
    559a:	ff 93       	push	r31
    559c:	df 93       	push	r29
    559e:	cf 93       	push	r28
    55a0:	cd b7       	in	r28, 0x3d	; 61
    55a2:	de b7       	in	r29, 0x3e	; 62
if(f==0)
    55a4:	80 91 7e 03 	lds	r24, 0x037E
    55a8:	88 23       	and	r24, r24
    55aa:	79 f4       	brne	.+30     	; 0x55ca <__vector_11+0x56>
{
	t1=ICR1;
    55ac:	e6 e4       	ldi	r30, 0x46	; 70
    55ae:	f0 e0       	ldi	r31, 0x00	; 0
    55b0:	80 81       	ld	r24, Z
    55b2:	91 81       	ldd	r25, Z+1	; 0x01
    55b4:	90 93 81 03 	sts	0x0381, r25
    55b8:	80 93 80 03 	sts	0x0380, r24
	f=1;
    55bc:	81 e0       	ldi	r24, 0x01	; 1
    55be:	80 93 7e 03 	sts	0x037E, r24

Timer1_InputCaptureEdge(Falling);
    55c2:	80 e0       	ldi	r24, 0x00	; 0
    55c4:	0e 94 36 1c 	call	0x386c	; 0x386c <Timer1_InputCaptureEdge>
    55c8:	0f c0       	rjmp	.+30     	; 0x55e8 <__vector_11+0x74>
}

else if(f==1)
    55ca:	80 91 7e 03 	lds	r24, 0x037E
    55ce:	81 30       	cpi	r24, 0x01	; 1
    55d0:	59 f4       	brne	.+22     	; 0x55e8 <__vector_11+0x74>
{
	t2=ICR1;
    55d2:	e6 e4       	ldi	r30, 0x46	; 70
    55d4:	f0 e0       	ldi	r31, 0x00	; 0
    55d6:	80 81       	ld	r24, Z
    55d8:	91 81       	ldd	r25, Z+1	; 0x01
    55da:	90 93 83 03 	sts	0x0383, r25
    55de:	80 93 82 03 	sts	0x0382, r24
	f=2;
    55e2:	82 e0       	ldi	r24, 0x02	; 2
    55e4:	80 93 7e 03 	sts	0x037E, r24

}
}
    55e8:	cf 91       	pop	r28
    55ea:	df 91       	pop	r29
    55ec:	ff 91       	pop	r31
    55ee:	ef 91       	pop	r30
    55f0:	bf 91       	pop	r27
    55f2:	af 91       	pop	r26
    55f4:	9f 91       	pop	r25
    55f6:	8f 91       	pop	r24
    55f8:	7f 91       	pop	r23
    55fa:	6f 91       	pop	r22
    55fc:	5f 91       	pop	r21
    55fe:	4f 91       	pop	r20
    5600:	3f 91       	pop	r19
    5602:	2f 91       	pop	r18
    5604:	0f 90       	pop	r0
    5606:	00 92 5b 00 	sts	0x005B, r0
    560a:	0f 90       	pop	r0
    560c:	0f be       	out	0x3f, r0	; 63
    560e:	0f 90       	pop	r0
    5610:	1f 90       	pop	r1
    5612:	18 95       	reti

00005614 <__vector_14>:


ISR(TIMER1_OVF_vect)
{
    5614:	1f 92       	push	r1
    5616:	0f 92       	push	r0
    5618:	0f b6       	in	r0, 0x3f	; 63
    561a:	0f 92       	push	r0
    561c:	11 24       	eor	r1, r1
    561e:	8f 93       	push	r24
    5620:	df 93       	push	r29
    5622:	cf 93       	push	r28
    5624:	cd b7       	in	r28, 0x3d	; 61
    5626:	de b7       	in	r29, 0x3e	; 62
		c++;
    5628:	80 91 7f 03 	lds	r24, 0x037F
    562c:	8f 5f       	subi	r24, 0xFF	; 255
    562e:	80 93 7f 03 	sts	0x037F, r24
}
    5632:	cf 91       	pop	r28
    5634:	df 91       	pop	r29
    5636:	8f 91       	pop	r24
    5638:	0f 90       	pop	r0
    563a:	0f be       	out	0x3f, r0	; 63
    563c:	0f 90       	pop	r0
    563e:	1f 90       	pop	r1
    5640:	18 95       	reti

00005642 <Mag_Door_Init>:

#include"MAGNET_DOOR.h"

void Mag_Door_Init(void)
{
    5642:	df 93       	push	r29
    5644:	cf 93       	push	r28
    5646:	cd b7       	in	r28, 0x3d	; 61
    5648:	de b7       	in	r29, 0x3e	; 62
DIO_void_Set_Pin_Dirction(Magnet_Door_Port,Magnet_Door_Pin,INPUT);
    564a:	80 e0       	ldi	r24, 0x00	; 0
    564c:	67 e0       	ldi	r22, 0x07	; 7
    564e:	40 e0       	ldi	r20, 0x00	; 0
    5650:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
DIO_void_Set_Pin_Value(Magnet_Door_Port,Magnet_Door_Pin,HIGH);
    5654:	80 e0       	ldi	r24, 0x00	; 0
    5656:	67 e0       	ldi	r22, 0x07	; 7
    5658:	41 e0       	ldi	r20, 0x01	; 1
    565a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    565e:	cf 91       	pop	r28
    5660:	df 91       	pop	r29
    5662:	08 95       	ret

00005664 <Check_Door_Is_Closed>:

uint8 Check_Door_Is_Closed(void)
{
    5664:	df 93       	push	r29
    5666:	cf 93       	push	r28
    5668:	0f 92       	push	r0
    566a:	cd b7       	in	r28, 0x3d	; 61
    566c:	de b7       	in	r29, 0x3e	; 62
uint8 ret=0;
    566e:	19 82       	std	Y+1, r1	; 0x01
ret=DIO_value_type_Get_Pin_Value(Magnet_Door_Port,Magnet_Door_Pin);
    5670:	80 e0       	ldi	r24, 0x00	; 0
    5672:	67 e0       	ldi	r22, 0x07	; 7
    5674:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <DIO_value_type_Get_Pin_Value>
    5678:	89 83       	std	Y+1, r24	; 0x01
return ret;
    567a:	89 81       	ldd	r24, Y+1	; 0x01
}
    567c:	0f 90       	pop	r0
    567e:	cf 91       	pop	r28
    5680:	df 91       	pop	r29
    5682:	08 95       	ret

00005684 <LCD_vidDirections>:
#include"LCD_V2.h"
void LCD_vidDirections(void)
{
    5684:	df 93       	push	r29
    5686:	cf 93       	push	r28
    5688:	cd b7       	in	r28, 0x3d	; 61
    568a:	de b7       	in	r29, 0x3e	; 62
//SET LCD_PORT AS OUTPUT FOR DATA OF LCD
DIO_void_Set_Port_Dirction(LCD_PORT,0XFF);
    568c:	82 e0       	ldi	r24, 0x02	; 2
    568e:	6f ef       	ldi	r22, 0xFF	; 255
    5690:	0e 94 bc 22 	call	0x4578	; 0x4578 <DIO_void_Set_Port_Dirction>

//SET  AS O/P FOR RS AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,RS,OUTPUT);
    5694:	81 e0       	ldi	r24, 0x01	; 1
    5696:	65 e0       	ldi	r22, 0x05	; 5
    5698:	41 e0       	ldi	r20, 0x01	; 1
    569a:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>

//SET  AS O/P FOR R/W AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,RW,OUTPUT);
    569e:	81 e0       	ldi	r24, 0x01	; 1
    56a0:	66 e0       	ldi	r22, 0x06	; 6
    56a2:	41 e0       	ldi	r20, 0x01	; 1
    56a4:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>

//SET AS O/P FOR E AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,E,OUTPUT);
    56a8:	81 e0       	ldi	r24, 0x01	; 1
    56aa:	67 e0       	ldi	r22, 0x07	; 7
    56ac:	41 e0       	ldi	r20, 0x01	; 1
    56ae:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
}
    56b2:	cf 91       	pop	r28
    56b4:	df 91       	pop	r29
    56b6:	08 95       	ret

000056b8 <LCD_vidDirections4>:
//..................................................................................

void LCD_vidDirections4(void)
{
    56b8:	df 93       	push	r29
    56ba:	cf 93       	push	r28
    56bc:	cd b7       	in	r28, 0x3d	; 61
    56be:	de b7       	in	r29, 0x3e	; 62
//SET PORTD 4,5,6,7 AS OUTPUT FOR DATA OF LCD
DIO_void_Set_Pin_Dirction( LCD_PORT, Fourbit_4,OUTPUT);
    56c0:	82 e0       	ldi	r24, 0x02	; 2
    56c2:	64 e0       	ldi	r22, 0x04	; 4
    56c4:	41 e0       	ldi	r20, 0x01	; 1
    56c6:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
DIO_void_Set_Pin_Dirction( LCD_PORT, Fourbit_5,OUTPUT);
    56ca:	82 e0       	ldi	r24, 0x02	; 2
    56cc:	65 e0       	ldi	r22, 0x05	; 5
    56ce:	41 e0       	ldi	r20, 0x01	; 1
    56d0:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
DIO_void_Set_Pin_Dirction( LCD_PORT, Fourbit_6,OUTPUT);
    56d4:	82 e0       	ldi	r24, 0x02	; 2
    56d6:	66 e0       	ldi	r22, 0x06	; 6
    56d8:	41 e0       	ldi	r20, 0x01	; 1
    56da:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
DIO_void_Set_Pin_Dirction( LCD_PORT, Fourbit_7,OUTPUT);
    56de:	82 e0       	ldi	r24, 0x02	; 2
    56e0:	67 e0       	ldi	r22, 0x07	; 7
    56e2:	41 e0       	ldi	r20, 0x01	; 1
    56e4:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
//SET PIN 0 AS O/P FOR RS AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,RS,OUTPUT);
    56e8:	81 e0       	ldi	r24, 0x01	; 1
    56ea:	65 e0       	ldi	r22, 0x05	; 5
    56ec:	41 e0       	ldi	r20, 0x01	; 1
    56ee:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
//SET PIN 1 AS O/P FOR R/W AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,RW,OUTPUT);
    56f2:	81 e0       	ldi	r24, 0x01	; 1
    56f4:	66 e0       	ldi	r22, 0x06	; 6
    56f6:	41 e0       	ldi	r20, 0x01	; 1
    56f8:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>

//SET PIN 2 AS O/P FOR E AT LCD
DIO_void_Set_Pin_Dirction(LCD_CONTROL_PORT,E,OUTPUT);
    56fc:	81 e0       	ldi	r24, 0x01	; 1
    56fe:	67 e0       	ldi	r22, 0x07	; 7
    5700:	41 e0       	ldi	r20, 0x01	; 1
    5702:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
}
    5706:	cf 91       	pop	r28
    5708:	df 91       	pop	r29
    570a:	08 95       	ret

0000570c <LCD_vidInit>:
//..............................................................
void LCD_vidInit(void)
{
    570c:	0f 93       	push	r16
    570e:	1f 93       	push	r17
    5710:	df 93       	push	r29
    5712:	cf 93       	push	r28
    5714:	cd b7       	in	r28, 0x3d	; 61
    5716:	de b7       	in	r29, 0x3e	; 62
    5718:	c6 54       	subi	r28, 0x46	; 70
    571a:	d0 40       	sbci	r29, 0x00	; 0
    571c:	0f b6       	in	r0, 0x3f	; 63
    571e:	f8 94       	cli
    5720:	de bf       	out	0x3e, r29	; 62
    5722:	0f be       	out	0x3f, r0	; 63
    5724:	cd bf       	out	0x3d, r28	; 61
    5726:	fe 01       	movw	r30, r28
    5728:	ed 5b       	subi	r30, 0xBD	; 189
    572a:	ff 4f       	sbci	r31, 0xFF	; 255
    572c:	80 e0       	ldi	r24, 0x00	; 0
    572e:	90 e0       	ldi	r25, 0x00	; 0
    5730:	a8 e4       	ldi	r26, 0x48	; 72
    5732:	b2 e4       	ldi	r27, 0x42	; 66
    5734:	80 83       	st	Z, r24
    5736:	91 83       	std	Z+1, r25	; 0x01
    5738:	a2 83       	std	Z+2, r26	; 0x02
    573a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    573c:	8e 01       	movw	r16, r28
    573e:	01 5c       	subi	r16, 0xC1	; 193
    5740:	1f 4f       	sbci	r17, 0xFF	; 255
    5742:	fe 01       	movw	r30, r28
    5744:	ed 5b       	subi	r30, 0xBD	; 189
    5746:	ff 4f       	sbci	r31, 0xFF	; 255
    5748:	60 81       	ld	r22, Z
    574a:	71 81       	ldd	r23, Z+1	; 0x01
    574c:	82 81       	ldd	r24, Z+2	; 0x02
    574e:	93 81       	ldd	r25, Z+3	; 0x03
    5750:	20 e0       	ldi	r18, 0x00	; 0
    5752:	30 e0       	ldi	r19, 0x00	; 0
    5754:	4a ef       	ldi	r20, 0xFA	; 250
    5756:	54 e4       	ldi	r21, 0x44	; 68
    5758:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    575c:	dc 01       	movw	r26, r24
    575e:	cb 01       	movw	r24, r22
    5760:	f8 01       	movw	r30, r16
    5762:	80 83       	st	Z, r24
    5764:	91 83       	std	Z+1, r25	; 0x01
    5766:	a2 83       	std	Z+2, r26	; 0x02
    5768:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    576a:	fe 01       	movw	r30, r28
    576c:	ff 96       	adiw	r30, 0x3f	; 63
    576e:	60 81       	ld	r22, Z
    5770:	71 81       	ldd	r23, Z+1	; 0x01
    5772:	82 81       	ldd	r24, Z+2	; 0x02
    5774:	93 81       	ldd	r25, Z+3	; 0x03
    5776:	20 e0       	ldi	r18, 0x00	; 0
    5778:	30 e0       	ldi	r19, 0x00	; 0
    577a:	40 e8       	ldi	r20, 0x80	; 128
    577c:	5f e3       	ldi	r21, 0x3F	; 63
    577e:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5782:	88 23       	and	r24, r24
    5784:	2c f4       	brge	.+10     	; 0x5790 <LCD_vidInit+0x84>
		__ticks = 1;
    5786:	81 e0       	ldi	r24, 0x01	; 1
    5788:	90 e0       	ldi	r25, 0x00	; 0
    578a:	9e af       	std	Y+62, r25	; 0x3e
    578c:	8d af       	std	Y+61, r24	; 0x3d
    578e:	46 c0       	rjmp	.+140    	; 0x581c <LCD_vidInit+0x110>
	else if (__tmp > 65535)
    5790:	fe 01       	movw	r30, r28
    5792:	ff 96       	adiw	r30, 0x3f	; 63
    5794:	60 81       	ld	r22, Z
    5796:	71 81       	ldd	r23, Z+1	; 0x01
    5798:	82 81       	ldd	r24, Z+2	; 0x02
    579a:	93 81       	ldd	r25, Z+3	; 0x03
    579c:	20 e0       	ldi	r18, 0x00	; 0
    579e:	3f ef       	ldi	r19, 0xFF	; 255
    57a0:	4f e7       	ldi	r20, 0x7F	; 127
    57a2:	57 e4       	ldi	r21, 0x47	; 71
    57a4:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    57a8:	18 16       	cp	r1, r24
    57aa:	64 f5       	brge	.+88     	; 0x5804 <LCD_vidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    57ac:	fe 01       	movw	r30, r28
    57ae:	ed 5b       	subi	r30, 0xBD	; 189
    57b0:	ff 4f       	sbci	r31, 0xFF	; 255
    57b2:	60 81       	ld	r22, Z
    57b4:	71 81       	ldd	r23, Z+1	; 0x01
    57b6:	82 81       	ldd	r24, Z+2	; 0x02
    57b8:	93 81       	ldd	r25, Z+3	; 0x03
    57ba:	20 e0       	ldi	r18, 0x00	; 0
    57bc:	30 e0       	ldi	r19, 0x00	; 0
    57be:	40 e2       	ldi	r20, 0x20	; 32
    57c0:	51 e4       	ldi	r21, 0x41	; 65
    57c2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    57c6:	dc 01       	movw	r26, r24
    57c8:	cb 01       	movw	r24, r22
    57ca:	bc 01       	movw	r22, r24
    57cc:	cd 01       	movw	r24, r26
    57ce:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    57d2:	dc 01       	movw	r26, r24
    57d4:	cb 01       	movw	r24, r22
    57d6:	9e af       	std	Y+62, r25	; 0x3e
    57d8:	8d af       	std	Y+61, r24	; 0x3d
    57da:	0f c0       	rjmp	.+30     	; 0x57fa <LCD_vidInit+0xee>
    57dc:	88 ec       	ldi	r24, 0xC8	; 200
    57de:	90 e0       	ldi	r25, 0x00	; 0
    57e0:	9c af       	std	Y+60, r25	; 0x3c
    57e2:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    57e4:	8b ad       	ldd	r24, Y+59	; 0x3b
    57e6:	9c ad       	ldd	r25, Y+60	; 0x3c
    57e8:	01 97       	sbiw	r24, 0x01	; 1
    57ea:	f1 f7       	brne	.-4      	; 0x57e8 <LCD_vidInit+0xdc>
    57ec:	9c af       	std	Y+60, r25	; 0x3c
    57ee:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    57f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    57f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    57f4:	01 97       	sbiw	r24, 0x01	; 1
    57f6:	9e af       	std	Y+62, r25	; 0x3e
    57f8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    57fa:	8d ad       	ldd	r24, Y+61	; 0x3d
    57fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    57fe:	00 97       	sbiw	r24, 0x00	; 0
    5800:	69 f7       	brne	.-38     	; 0x57dc <LCD_vidInit+0xd0>
    5802:	16 c0       	rjmp	.+44     	; 0x5830 <LCD_vidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5804:	fe 01       	movw	r30, r28
    5806:	ff 96       	adiw	r30, 0x3f	; 63
    5808:	60 81       	ld	r22, Z
    580a:	71 81       	ldd	r23, Z+1	; 0x01
    580c:	82 81       	ldd	r24, Z+2	; 0x02
    580e:	93 81       	ldd	r25, Z+3	; 0x03
    5810:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5814:	dc 01       	movw	r26, r24
    5816:	cb 01       	movw	r24, r22
    5818:	9e af       	std	Y+62, r25	; 0x3e
    581a:	8d af       	std	Y+61, r24	; 0x3d
    581c:	8d ad       	ldd	r24, Y+61	; 0x3d
    581e:	9e ad       	ldd	r25, Y+62	; 0x3e
    5820:	9a af       	std	Y+58, r25	; 0x3a
    5822:	89 af       	std	Y+57, r24	; 0x39
    5824:	89 ad       	ldd	r24, Y+57	; 0x39
    5826:	9a ad       	ldd	r25, Y+58	; 0x3a
    5828:	01 97       	sbiw	r24, 0x01	; 1
    582a:	f1 f7       	brne	.-4      	; 0x5828 <LCD_vidInit+0x11c>
    582c:	9a af       	std	Y+58, r25	; 0x3a
    582e:	89 af       	std	Y+57, r24	; 0x39
	//wait for a time
   _delay_ms(50);
   //function  set
   LCD_vidSendCommand(0b00111000);
    5830:	88 e3       	ldi	r24, 0x38	; 56
    5832:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    5836:	80 e0       	ldi	r24, 0x00	; 0
    5838:	90 e0       	ldi	r25, 0x00	; 0
    583a:	a0 ea       	ldi	r26, 0xA0	; 160
    583c:	b1 e4       	ldi	r27, 0x41	; 65
    583e:	8d ab       	std	Y+53, r24	; 0x35
    5840:	9e ab       	std	Y+54, r25	; 0x36
    5842:	af ab       	std	Y+55, r26	; 0x37
    5844:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5846:	6d a9       	ldd	r22, Y+53	; 0x35
    5848:	7e a9       	ldd	r23, Y+54	; 0x36
    584a:	8f a9       	ldd	r24, Y+55	; 0x37
    584c:	98 ad       	ldd	r25, Y+56	; 0x38
    584e:	20 e0       	ldi	r18, 0x00	; 0
    5850:	30 e0       	ldi	r19, 0x00	; 0
    5852:	4a ef       	ldi	r20, 0xFA	; 250
    5854:	54 e4       	ldi	r21, 0x44	; 68
    5856:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    585a:	dc 01       	movw	r26, r24
    585c:	cb 01       	movw	r24, r22
    585e:	89 ab       	std	Y+49, r24	; 0x31
    5860:	9a ab       	std	Y+50, r25	; 0x32
    5862:	ab ab       	std	Y+51, r26	; 0x33
    5864:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5866:	69 a9       	ldd	r22, Y+49	; 0x31
    5868:	7a a9       	ldd	r23, Y+50	; 0x32
    586a:	8b a9       	ldd	r24, Y+51	; 0x33
    586c:	9c a9       	ldd	r25, Y+52	; 0x34
    586e:	20 e0       	ldi	r18, 0x00	; 0
    5870:	30 e0       	ldi	r19, 0x00	; 0
    5872:	40 e8       	ldi	r20, 0x80	; 128
    5874:	5f e3       	ldi	r21, 0x3F	; 63
    5876:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    587a:	88 23       	and	r24, r24
    587c:	2c f4       	brge	.+10     	; 0x5888 <LCD_vidInit+0x17c>
		__ticks = 1;
    587e:	81 e0       	ldi	r24, 0x01	; 1
    5880:	90 e0       	ldi	r25, 0x00	; 0
    5882:	98 ab       	std	Y+48, r25	; 0x30
    5884:	8f a7       	std	Y+47, r24	; 0x2f
    5886:	3f c0       	rjmp	.+126    	; 0x5906 <LCD_vidInit+0x1fa>
	else if (__tmp > 65535)
    5888:	69 a9       	ldd	r22, Y+49	; 0x31
    588a:	7a a9       	ldd	r23, Y+50	; 0x32
    588c:	8b a9       	ldd	r24, Y+51	; 0x33
    588e:	9c a9       	ldd	r25, Y+52	; 0x34
    5890:	20 e0       	ldi	r18, 0x00	; 0
    5892:	3f ef       	ldi	r19, 0xFF	; 255
    5894:	4f e7       	ldi	r20, 0x7F	; 127
    5896:	57 e4       	ldi	r21, 0x47	; 71
    5898:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    589c:	18 16       	cp	r1, r24
    589e:	4c f5       	brge	.+82     	; 0x58f2 <LCD_vidInit+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    58a0:	6d a9       	ldd	r22, Y+53	; 0x35
    58a2:	7e a9       	ldd	r23, Y+54	; 0x36
    58a4:	8f a9       	ldd	r24, Y+55	; 0x37
    58a6:	98 ad       	ldd	r25, Y+56	; 0x38
    58a8:	20 e0       	ldi	r18, 0x00	; 0
    58aa:	30 e0       	ldi	r19, 0x00	; 0
    58ac:	40 e2       	ldi	r20, 0x20	; 32
    58ae:	51 e4       	ldi	r21, 0x41	; 65
    58b0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    58b4:	dc 01       	movw	r26, r24
    58b6:	cb 01       	movw	r24, r22
    58b8:	bc 01       	movw	r22, r24
    58ba:	cd 01       	movw	r24, r26
    58bc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    58c0:	dc 01       	movw	r26, r24
    58c2:	cb 01       	movw	r24, r22
    58c4:	98 ab       	std	Y+48, r25	; 0x30
    58c6:	8f a7       	std	Y+47, r24	; 0x2f
    58c8:	0f c0       	rjmp	.+30     	; 0x58e8 <LCD_vidInit+0x1dc>
    58ca:	88 ec       	ldi	r24, 0xC8	; 200
    58cc:	90 e0       	ldi	r25, 0x00	; 0
    58ce:	9e a7       	std	Y+46, r25	; 0x2e
    58d0:	8d a7       	std	Y+45, r24	; 0x2d
    58d2:	8d a5       	ldd	r24, Y+45	; 0x2d
    58d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    58d6:	01 97       	sbiw	r24, 0x01	; 1
    58d8:	f1 f7       	brne	.-4      	; 0x58d6 <LCD_vidInit+0x1ca>
    58da:	9e a7       	std	Y+46, r25	; 0x2e
    58dc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    58de:	8f a5       	ldd	r24, Y+47	; 0x2f
    58e0:	98 a9       	ldd	r25, Y+48	; 0x30
    58e2:	01 97       	sbiw	r24, 0x01	; 1
    58e4:	98 ab       	std	Y+48, r25	; 0x30
    58e6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    58ea:	98 a9       	ldd	r25, Y+48	; 0x30
    58ec:	00 97       	sbiw	r24, 0x00	; 0
    58ee:	69 f7       	brne	.-38     	; 0x58ca <LCD_vidInit+0x1be>
    58f0:	14 c0       	rjmp	.+40     	; 0x591a <LCD_vidInit+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58f2:	69 a9       	ldd	r22, Y+49	; 0x31
    58f4:	7a a9       	ldd	r23, Y+50	; 0x32
    58f6:	8b a9       	ldd	r24, Y+51	; 0x33
    58f8:	9c a9       	ldd	r25, Y+52	; 0x34
    58fa:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    58fe:	dc 01       	movw	r26, r24
    5900:	cb 01       	movw	r24, r22
    5902:	98 ab       	std	Y+48, r25	; 0x30
    5904:	8f a7       	std	Y+47, r24	; 0x2f
    5906:	8f a5       	ldd	r24, Y+47	; 0x2f
    5908:	98 a9       	ldd	r25, Y+48	; 0x30
    590a:	9c a7       	std	Y+44, r25	; 0x2c
    590c:	8b a7       	std	Y+43, r24	; 0x2b
    590e:	8b a5       	ldd	r24, Y+43	; 0x2b
    5910:	9c a5       	ldd	r25, Y+44	; 0x2c
    5912:	01 97       	sbiw	r24, 0x01	; 1
    5914:	f1 f7       	brne	.-4      	; 0x5912 <LCD_vidInit+0x206>
    5916:	9c a7       	std	Y+44, r25	; 0x2c
    5918:	8b a7       	std	Y+43, r24	; 0x2b
   //wait for a time
   _delay_ms(20);
   //display on off
   LCD_vidSendCommand(0b00001100);
    591a:	8c e0       	ldi	r24, 0x0C	; 12
    591c:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    5920:	80 e0       	ldi	r24, 0x00	; 0
    5922:	90 e0       	ldi	r25, 0x00	; 0
    5924:	a0 ea       	ldi	r26, 0xA0	; 160
    5926:	b1 e4       	ldi	r27, 0x41	; 65
    5928:	8f a3       	std	Y+39, r24	; 0x27
    592a:	98 a7       	std	Y+40, r25	; 0x28
    592c:	a9 a7       	std	Y+41, r26	; 0x29
    592e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5930:	6f a1       	ldd	r22, Y+39	; 0x27
    5932:	78 a5       	ldd	r23, Y+40	; 0x28
    5934:	89 a5       	ldd	r24, Y+41	; 0x29
    5936:	9a a5       	ldd	r25, Y+42	; 0x2a
    5938:	20 e0       	ldi	r18, 0x00	; 0
    593a:	30 e0       	ldi	r19, 0x00	; 0
    593c:	4a ef       	ldi	r20, 0xFA	; 250
    593e:	54 e4       	ldi	r21, 0x44	; 68
    5940:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5944:	dc 01       	movw	r26, r24
    5946:	cb 01       	movw	r24, r22
    5948:	8b a3       	std	Y+35, r24	; 0x23
    594a:	9c a3       	std	Y+36, r25	; 0x24
    594c:	ad a3       	std	Y+37, r26	; 0x25
    594e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5950:	6b a1       	ldd	r22, Y+35	; 0x23
    5952:	7c a1       	ldd	r23, Y+36	; 0x24
    5954:	8d a1       	ldd	r24, Y+37	; 0x25
    5956:	9e a1       	ldd	r25, Y+38	; 0x26
    5958:	20 e0       	ldi	r18, 0x00	; 0
    595a:	30 e0       	ldi	r19, 0x00	; 0
    595c:	40 e8       	ldi	r20, 0x80	; 128
    595e:	5f e3       	ldi	r21, 0x3F	; 63
    5960:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5964:	88 23       	and	r24, r24
    5966:	2c f4       	brge	.+10     	; 0x5972 <LCD_vidInit+0x266>
		__ticks = 1;
    5968:	81 e0       	ldi	r24, 0x01	; 1
    596a:	90 e0       	ldi	r25, 0x00	; 0
    596c:	9a a3       	std	Y+34, r25	; 0x22
    596e:	89 a3       	std	Y+33, r24	; 0x21
    5970:	3f c0       	rjmp	.+126    	; 0x59f0 <LCD_vidInit+0x2e4>
	else if (__tmp > 65535)
    5972:	6b a1       	ldd	r22, Y+35	; 0x23
    5974:	7c a1       	ldd	r23, Y+36	; 0x24
    5976:	8d a1       	ldd	r24, Y+37	; 0x25
    5978:	9e a1       	ldd	r25, Y+38	; 0x26
    597a:	20 e0       	ldi	r18, 0x00	; 0
    597c:	3f ef       	ldi	r19, 0xFF	; 255
    597e:	4f e7       	ldi	r20, 0x7F	; 127
    5980:	57 e4       	ldi	r21, 0x47	; 71
    5982:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5986:	18 16       	cp	r1, r24
    5988:	4c f5       	brge	.+82     	; 0x59dc <LCD_vidInit+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    598a:	6f a1       	ldd	r22, Y+39	; 0x27
    598c:	78 a5       	ldd	r23, Y+40	; 0x28
    598e:	89 a5       	ldd	r24, Y+41	; 0x29
    5990:	9a a5       	ldd	r25, Y+42	; 0x2a
    5992:	20 e0       	ldi	r18, 0x00	; 0
    5994:	30 e0       	ldi	r19, 0x00	; 0
    5996:	40 e2       	ldi	r20, 0x20	; 32
    5998:	51 e4       	ldi	r21, 0x41	; 65
    599a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    599e:	dc 01       	movw	r26, r24
    59a0:	cb 01       	movw	r24, r22
    59a2:	bc 01       	movw	r22, r24
    59a4:	cd 01       	movw	r24, r26
    59a6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    59aa:	dc 01       	movw	r26, r24
    59ac:	cb 01       	movw	r24, r22
    59ae:	9a a3       	std	Y+34, r25	; 0x22
    59b0:	89 a3       	std	Y+33, r24	; 0x21
    59b2:	0f c0       	rjmp	.+30     	; 0x59d2 <LCD_vidInit+0x2c6>
    59b4:	88 ec       	ldi	r24, 0xC8	; 200
    59b6:	90 e0       	ldi	r25, 0x00	; 0
    59b8:	98 a3       	std	Y+32, r25	; 0x20
    59ba:	8f 8f       	std	Y+31, r24	; 0x1f
    59bc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    59be:	98 a1       	ldd	r25, Y+32	; 0x20
    59c0:	01 97       	sbiw	r24, 0x01	; 1
    59c2:	f1 f7       	brne	.-4      	; 0x59c0 <LCD_vidInit+0x2b4>
    59c4:	98 a3       	std	Y+32, r25	; 0x20
    59c6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    59c8:	89 a1       	ldd	r24, Y+33	; 0x21
    59ca:	9a a1       	ldd	r25, Y+34	; 0x22
    59cc:	01 97       	sbiw	r24, 0x01	; 1
    59ce:	9a a3       	std	Y+34, r25	; 0x22
    59d0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59d2:	89 a1       	ldd	r24, Y+33	; 0x21
    59d4:	9a a1       	ldd	r25, Y+34	; 0x22
    59d6:	00 97       	sbiw	r24, 0x00	; 0
    59d8:	69 f7       	brne	.-38     	; 0x59b4 <LCD_vidInit+0x2a8>
    59da:	14 c0       	rjmp	.+40     	; 0x5a04 <LCD_vidInit+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    59dc:	6b a1       	ldd	r22, Y+35	; 0x23
    59de:	7c a1       	ldd	r23, Y+36	; 0x24
    59e0:	8d a1       	ldd	r24, Y+37	; 0x25
    59e2:	9e a1       	ldd	r25, Y+38	; 0x26
    59e4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    59e8:	dc 01       	movw	r26, r24
    59ea:	cb 01       	movw	r24, r22
    59ec:	9a a3       	std	Y+34, r25	; 0x22
    59ee:	89 a3       	std	Y+33, r24	; 0x21
    59f0:	89 a1       	ldd	r24, Y+33	; 0x21
    59f2:	9a a1       	ldd	r25, Y+34	; 0x22
    59f4:	9e 8f       	std	Y+30, r25	; 0x1e
    59f6:	8d 8f       	std	Y+29, r24	; 0x1d
    59f8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    59fa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    59fc:	01 97       	sbiw	r24, 0x01	; 1
    59fe:	f1 f7       	brne	.-4      	; 0x59fc <LCD_vidInit+0x2f0>
    5a00:	9e 8f       	std	Y+30, r25	; 0x1e
    5a02:	8d 8f       	std	Y+29, r24	; 0x1d
   //wait for a time
    _delay_ms(20);
   //display clear
   LCD_vidSendCommand(0b00000001);
    5a04:	81 e0       	ldi	r24, 0x01	; 1
    5a06:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    5a0a:	80 e0       	ldi	r24, 0x00	; 0
    5a0c:	90 e0       	ldi	r25, 0x00	; 0
    5a0e:	a0 ea       	ldi	r26, 0xA0	; 160
    5a10:	b1 e4       	ldi	r27, 0x41	; 65
    5a12:	89 8f       	std	Y+25, r24	; 0x19
    5a14:	9a 8f       	std	Y+26, r25	; 0x1a
    5a16:	ab 8f       	std	Y+27, r26	; 0x1b
    5a18:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a1a:	69 8d       	ldd	r22, Y+25	; 0x19
    5a1c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5a1e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5a20:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5a22:	20 e0       	ldi	r18, 0x00	; 0
    5a24:	30 e0       	ldi	r19, 0x00	; 0
    5a26:	4a ef       	ldi	r20, 0xFA	; 250
    5a28:	54 e4       	ldi	r21, 0x44	; 68
    5a2a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5a2e:	dc 01       	movw	r26, r24
    5a30:	cb 01       	movw	r24, r22
    5a32:	8d 8b       	std	Y+21, r24	; 0x15
    5a34:	9e 8b       	std	Y+22, r25	; 0x16
    5a36:	af 8b       	std	Y+23, r26	; 0x17
    5a38:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5a3a:	6d 89       	ldd	r22, Y+21	; 0x15
    5a3c:	7e 89       	ldd	r23, Y+22	; 0x16
    5a3e:	8f 89       	ldd	r24, Y+23	; 0x17
    5a40:	98 8d       	ldd	r25, Y+24	; 0x18
    5a42:	20 e0       	ldi	r18, 0x00	; 0
    5a44:	30 e0       	ldi	r19, 0x00	; 0
    5a46:	40 e8       	ldi	r20, 0x80	; 128
    5a48:	5f e3       	ldi	r21, 0x3F	; 63
    5a4a:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5a4e:	88 23       	and	r24, r24
    5a50:	2c f4       	brge	.+10     	; 0x5a5c <LCD_vidInit+0x350>
		__ticks = 1;
    5a52:	81 e0       	ldi	r24, 0x01	; 1
    5a54:	90 e0       	ldi	r25, 0x00	; 0
    5a56:	9c 8b       	std	Y+20, r25	; 0x14
    5a58:	8b 8b       	std	Y+19, r24	; 0x13
    5a5a:	3f c0       	rjmp	.+126    	; 0x5ada <LCD_vidInit+0x3ce>
	else if (__tmp > 65535)
    5a5c:	6d 89       	ldd	r22, Y+21	; 0x15
    5a5e:	7e 89       	ldd	r23, Y+22	; 0x16
    5a60:	8f 89       	ldd	r24, Y+23	; 0x17
    5a62:	98 8d       	ldd	r25, Y+24	; 0x18
    5a64:	20 e0       	ldi	r18, 0x00	; 0
    5a66:	3f ef       	ldi	r19, 0xFF	; 255
    5a68:	4f e7       	ldi	r20, 0x7F	; 127
    5a6a:	57 e4       	ldi	r21, 0x47	; 71
    5a6c:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5a70:	18 16       	cp	r1, r24
    5a72:	4c f5       	brge	.+82     	; 0x5ac6 <LCD_vidInit+0x3ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a74:	69 8d       	ldd	r22, Y+25	; 0x19
    5a76:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5a78:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5a7a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5a7c:	20 e0       	ldi	r18, 0x00	; 0
    5a7e:	30 e0       	ldi	r19, 0x00	; 0
    5a80:	40 e2       	ldi	r20, 0x20	; 32
    5a82:	51 e4       	ldi	r21, 0x41	; 65
    5a84:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5a88:	dc 01       	movw	r26, r24
    5a8a:	cb 01       	movw	r24, r22
    5a8c:	bc 01       	movw	r22, r24
    5a8e:	cd 01       	movw	r24, r26
    5a90:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5a94:	dc 01       	movw	r26, r24
    5a96:	cb 01       	movw	r24, r22
    5a98:	9c 8b       	std	Y+20, r25	; 0x14
    5a9a:	8b 8b       	std	Y+19, r24	; 0x13
    5a9c:	0f c0       	rjmp	.+30     	; 0x5abc <LCD_vidInit+0x3b0>
    5a9e:	88 ec       	ldi	r24, 0xC8	; 200
    5aa0:	90 e0       	ldi	r25, 0x00	; 0
    5aa2:	9a 8b       	std	Y+18, r25	; 0x12
    5aa4:	89 8b       	std	Y+17, r24	; 0x11
    5aa6:	89 89       	ldd	r24, Y+17	; 0x11
    5aa8:	9a 89       	ldd	r25, Y+18	; 0x12
    5aaa:	01 97       	sbiw	r24, 0x01	; 1
    5aac:	f1 f7       	brne	.-4      	; 0x5aaa <LCD_vidInit+0x39e>
    5aae:	9a 8b       	std	Y+18, r25	; 0x12
    5ab0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ab2:	8b 89       	ldd	r24, Y+19	; 0x13
    5ab4:	9c 89       	ldd	r25, Y+20	; 0x14
    5ab6:	01 97       	sbiw	r24, 0x01	; 1
    5ab8:	9c 8b       	std	Y+20, r25	; 0x14
    5aba:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5abc:	8b 89       	ldd	r24, Y+19	; 0x13
    5abe:	9c 89       	ldd	r25, Y+20	; 0x14
    5ac0:	00 97       	sbiw	r24, 0x00	; 0
    5ac2:	69 f7       	brne	.-38     	; 0x5a9e <LCD_vidInit+0x392>
    5ac4:	14 c0       	rjmp	.+40     	; 0x5aee <LCD_vidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ac6:	6d 89       	ldd	r22, Y+21	; 0x15
    5ac8:	7e 89       	ldd	r23, Y+22	; 0x16
    5aca:	8f 89       	ldd	r24, Y+23	; 0x17
    5acc:	98 8d       	ldd	r25, Y+24	; 0x18
    5ace:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5ad2:	dc 01       	movw	r26, r24
    5ad4:	cb 01       	movw	r24, r22
    5ad6:	9c 8b       	std	Y+20, r25	; 0x14
    5ad8:	8b 8b       	std	Y+19, r24	; 0x13
    5ada:	8b 89       	ldd	r24, Y+19	; 0x13
    5adc:	9c 89       	ldd	r25, Y+20	; 0x14
    5ade:	98 8b       	std	Y+16, r25	; 0x10
    5ae0:	8f 87       	std	Y+15, r24	; 0x0f
    5ae2:	8f 85       	ldd	r24, Y+15	; 0x0f
    5ae4:	98 89       	ldd	r25, Y+16	; 0x10
    5ae6:	01 97       	sbiw	r24, 0x01	; 1
    5ae8:	f1 f7       	brne	.-4      	; 0x5ae6 <LCD_vidInit+0x3da>
    5aea:	98 8b       	std	Y+16, r25	; 0x10
    5aec:	8f 87       	std	Y+15, r24	; 0x0f
   //wait for a time
    _delay_ms(20);
    //entry mode set
    LCD_vidSendCommand(0b00000110);
    5aee:	86 e0       	ldi	r24, 0x06	; 6
    5af0:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    5af4:	80 e0       	ldi	r24, 0x00	; 0
    5af6:	90 e0       	ldi	r25, 0x00	; 0
    5af8:	a0 ea       	ldi	r26, 0xA0	; 160
    5afa:	b1 e4       	ldi	r27, 0x41	; 65
    5afc:	8b 87       	std	Y+11, r24	; 0x0b
    5afe:	9c 87       	std	Y+12, r25	; 0x0c
    5b00:	ad 87       	std	Y+13, r26	; 0x0d
    5b02:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b04:	6b 85       	ldd	r22, Y+11	; 0x0b
    5b06:	7c 85       	ldd	r23, Y+12	; 0x0c
    5b08:	8d 85       	ldd	r24, Y+13	; 0x0d
    5b0a:	9e 85       	ldd	r25, Y+14	; 0x0e
    5b0c:	20 e0       	ldi	r18, 0x00	; 0
    5b0e:	30 e0       	ldi	r19, 0x00	; 0
    5b10:	4a ef       	ldi	r20, 0xFA	; 250
    5b12:	54 e4       	ldi	r21, 0x44	; 68
    5b14:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5b18:	dc 01       	movw	r26, r24
    5b1a:	cb 01       	movw	r24, r22
    5b1c:	8f 83       	std	Y+7, r24	; 0x07
    5b1e:	98 87       	std	Y+8, r25	; 0x08
    5b20:	a9 87       	std	Y+9, r26	; 0x09
    5b22:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5b24:	6f 81       	ldd	r22, Y+7	; 0x07
    5b26:	78 85       	ldd	r23, Y+8	; 0x08
    5b28:	89 85       	ldd	r24, Y+9	; 0x09
    5b2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b2c:	20 e0       	ldi	r18, 0x00	; 0
    5b2e:	30 e0       	ldi	r19, 0x00	; 0
    5b30:	40 e8       	ldi	r20, 0x80	; 128
    5b32:	5f e3       	ldi	r21, 0x3F	; 63
    5b34:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5b38:	88 23       	and	r24, r24
    5b3a:	2c f4       	brge	.+10     	; 0x5b46 <LCD_vidInit+0x43a>
		__ticks = 1;
    5b3c:	81 e0       	ldi	r24, 0x01	; 1
    5b3e:	90 e0       	ldi	r25, 0x00	; 0
    5b40:	9e 83       	std	Y+6, r25	; 0x06
    5b42:	8d 83       	std	Y+5, r24	; 0x05
    5b44:	3f c0       	rjmp	.+126    	; 0x5bc4 <LCD_vidInit+0x4b8>
	else if (__tmp > 65535)
    5b46:	6f 81       	ldd	r22, Y+7	; 0x07
    5b48:	78 85       	ldd	r23, Y+8	; 0x08
    5b4a:	89 85       	ldd	r24, Y+9	; 0x09
    5b4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b4e:	20 e0       	ldi	r18, 0x00	; 0
    5b50:	3f ef       	ldi	r19, 0xFF	; 255
    5b52:	4f e7       	ldi	r20, 0x7F	; 127
    5b54:	57 e4       	ldi	r21, 0x47	; 71
    5b56:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5b5a:	18 16       	cp	r1, r24
    5b5c:	4c f5       	brge	.+82     	; 0x5bb0 <LCD_vidInit+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b5e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5b60:	7c 85       	ldd	r23, Y+12	; 0x0c
    5b62:	8d 85       	ldd	r24, Y+13	; 0x0d
    5b64:	9e 85       	ldd	r25, Y+14	; 0x0e
    5b66:	20 e0       	ldi	r18, 0x00	; 0
    5b68:	30 e0       	ldi	r19, 0x00	; 0
    5b6a:	40 e2       	ldi	r20, 0x20	; 32
    5b6c:	51 e4       	ldi	r21, 0x41	; 65
    5b6e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5b72:	dc 01       	movw	r26, r24
    5b74:	cb 01       	movw	r24, r22
    5b76:	bc 01       	movw	r22, r24
    5b78:	cd 01       	movw	r24, r26
    5b7a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5b7e:	dc 01       	movw	r26, r24
    5b80:	cb 01       	movw	r24, r22
    5b82:	9e 83       	std	Y+6, r25	; 0x06
    5b84:	8d 83       	std	Y+5, r24	; 0x05
    5b86:	0f c0       	rjmp	.+30     	; 0x5ba6 <LCD_vidInit+0x49a>
    5b88:	88 ec       	ldi	r24, 0xC8	; 200
    5b8a:	90 e0       	ldi	r25, 0x00	; 0
    5b8c:	9c 83       	std	Y+4, r25	; 0x04
    5b8e:	8b 83       	std	Y+3, r24	; 0x03
    5b90:	8b 81       	ldd	r24, Y+3	; 0x03
    5b92:	9c 81       	ldd	r25, Y+4	; 0x04
    5b94:	01 97       	sbiw	r24, 0x01	; 1
    5b96:	f1 f7       	brne	.-4      	; 0x5b94 <LCD_vidInit+0x488>
    5b98:	9c 83       	std	Y+4, r25	; 0x04
    5b9a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b9c:	8d 81       	ldd	r24, Y+5	; 0x05
    5b9e:	9e 81       	ldd	r25, Y+6	; 0x06
    5ba0:	01 97       	sbiw	r24, 0x01	; 1
    5ba2:	9e 83       	std	Y+6, r25	; 0x06
    5ba4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ba6:	8d 81       	ldd	r24, Y+5	; 0x05
    5ba8:	9e 81       	ldd	r25, Y+6	; 0x06
    5baa:	00 97       	sbiw	r24, 0x00	; 0
    5bac:	69 f7       	brne	.-38     	; 0x5b88 <LCD_vidInit+0x47c>
    5bae:	14 c0       	rjmp	.+40     	; 0x5bd8 <LCD_vidInit+0x4cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bb0:	6f 81       	ldd	r22, Y+7	; 0x07
    5bb2:	78 85       	ldd	r23, Y+8	; 0x08
    5bb4:	89 85       	ldd	r24, Y+9	; 0x09
    5bb6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bb8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5bbc:	dc 01       	movw	r26, r24
    5bbe:	cb 01       	movw	r24, r22
    5bc0:	9e 83       	std	Y+6, r25	; 0x06
    5bc2:	8d 83       	std	Y+5, r24	; 0x05
    5bc4:	8d 81       	ldd	r24, Y+5	; 0x05
    5bc6:	9e 81       	ldd	r25, Y+6	; 0x06
    5bc8:	9a 83       	std	Y+2, r25	; 0x02
    5bca:	89 83       	std	Y+1, r24	; 0x01
    5bcc:	89 81       	ldd	r24, Y+1	; 0x01
    5bce:	9a 81       	ldd	r25, Y+2	; 0x02
    5bd0:	01 97       	sbiw	r24, 0x01	; 1
    5bd2:	f1 f7       	brne	.-4      	; 0x5bd0 <LCD_vidInit+0x4c4>
    5bd4:	9a 83       	std	Y+2, r25	; 0x02
    5bd6:	89 83       	std	Y+1, r24	; 0x01
    //wait for a time
     _delay_ms(20);
}
    5bd8:	ca 5b       	subi	r28, 0xBA	; 186
    5bda:	df 4f       	sbci	r29, 0xFF	; 255
    5bdc:	0f b6       	in	r0, 0x3f	; 63
    5bde:	f8 94       	cli
    5be0:	de bf       	out	0x3e, r29	; 62
    5be2:	0f be       	out	0x3f, r0	; 63
    5be4:	cd bf       	out	0x3d, r28	; 61
    5be6:	cf 91       	pop	r28
    5be8:	df 91       	pop	r29
    5bea:	1f 91       	pop	r17
    5bec:	0f 91       	pop	r16
    5bee:	08 95       	ret

00005bf0 <LCD_vidSendCommand>:
//.........................................................................................
void LCD_vidSendCommand(uint8 u8CommandCpy)
{
    5bf0:	df 93       	push	r29
    5bf2:	cf 93       	push	r28
    5bf4:	cd b7       	in	r28, 0x3d	; 61
    5bf6:	de b7       	in	r29, 0x3e	; 62
    5bf8:	6d 97       	sbiw	r28, 0x1d	; 29
    5bfa:	0f b6       	in	r0, 0x3f	; 63
    5bfc:	f8 94       	cli
    5bfe:	de bf       	out	0x3e, r29	; 62
    5c00:	0f be       	out	0x3f, r0	; 63
    5c02:	cd bf       	out	0x3d, r28	; 61
    5c04:	8d 8f       	std	Y+29, r24	; 0x1d
	//put RS TO LOW TO WRITE OPERATION
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,RS,LOW);
    5c06:	81 e0       	ldi	r24, 0x01	; 1
    5c08:	65 e0       	ldi	r22, 0x05	; 5
    5c0a:	40 e0       	ldi	r20, 0x00	; 0
    5c0c:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	//PUT R/W TO LOW TO WRITE OPERATION
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,RW,LOW);
    5c10:	81 e0       	ldi	r24, 0x01	; 1
    5c12:	66 e0       	ldi	r22, 0x06	; 6
    5c14:	40 e0       	ldi	r20, 0x00	; 0
    5c16:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	//PUT E TO HIGH TO ENABLE
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,HIGH);
    5c1a:	81 e0       	ldi	r24, 0x01	; 1
    5c1c:	67 e0       	ldi	r22, 0x07	; 7
    5c1e:	41 e0       	ldi	r20, 0x01	; 1
    5c20:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

	DIO_void_Set_Port_Value(LCD_PORT,u8CommandCpy);
    5c24:	82 e0       	ldi	r24, 0x02	; 2
    5c26:	6d 8d       	ldd	r22, Y+29	; 0x1d
    5c28:	0e 94 1b 23 	call	0x4636	; 0x4636 <DIO_void_Set_Port_Value>

	//PUT E TO LOW TO COMPLETE SEND THE COMMAND
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,LOW);
    5c2c:	81 e0       	ldi	r24, 0x01	; 1
    5c2e:	67 e0       	ldi	r22, 0x07	; 7
    5c30:	40 e0       	ldi	r20, 0x00	; 0
    5c32:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    5c36:	80 e0       	ldi	r24, 0x00	; 0
    5c38:	90 e0       	ldi	r25, 0x00	; 0
    5c3a:	a0 e8       	ldi	r26, 0x80	; 128
    5c3c:	bf e3       	ldi	r27, 0x3F	; 63
    5c3e:	89 8f       	std	Y+25, r24	; 0x19
    5c40:	9a 8f       	std	Y+26, r25	; 0x1a
    5c42:	ab 8f       	std	Y+27, r26	; 0x1b
    5c44:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c46:	69 8d       	ldd	r22, Y+25	; 0x19
    5c48:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5c4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c4e:	20 e0       	ldi	r18, 0x00	; 0
    5c50:	30 e0       	ldi	r19, 0x00	; 0
    5c52:	4a ef       	ldi	r20, 0xFA	; 250
    5c54:	54 e4       	ldi	r21, 0x44	; 68
    5c56:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5c5a:	dc 01       	movw	r26, r24
    5c5c:	cb 01       	movw	r24, r22
    5c5e:	8d 8b       	std	Y+21, r24	; 0x15
    5c60:	9e 8b       	std	Y+22, r25	; 0x16
    5c62:	af 8b       	std	Y+23, r26	; 0x17
    5c64:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5c66:	6d 89       	ldd	r22, Y+21	; 0x15
    5c68:	7e 89       	ldd	r23, Y+22	; 0x16
    5c6a:	8f 89       	ldd	r24, Y+23	; 0x17
    5c6c:	98 8d       	ldd	r25, Y+24	; 0x18
    5c6e:	20 e0       	ldi	r18, 0x00	; 0
    5c70:	30 e0       	ldi	r19, 0x00	; 0
    5c72:	40 e8       	ldi	r20, 0x80	; 128
    5c74:	5f e3       	ldi	r21, 0x3F	; 63
    5c76:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5c7a:	88 23       	and	r24, r24
    5c7c:	2c f4       	brge	.+10     	; 0x5c88 <LCD_vidSendCommand+0x98>
		__ticks = 1;
    5c7e:	81 e0       	ldi	r24, 0x01	; 1
    5c80:	90 e0       	ldi	r25, 0x00	; 0
    5c82:	9c 8b       	std	Y+20, r25	; 0x14
    5c84:	8b 8b       	std	Y+19, r24	; 0x13
    5c86:	3f c0       	rjmp	.+126    	; 0x5d06 <LCD_vidSendCommand+0x116>
	else if (__tmp > 65535)
    5c88:	6d 89       	ldd	r22, Y+21	; 0x15
    5c8a:	7e 89       	ldd	r23, Y+22	; 0x16
    5c8c:	8f 89       	ldd	r24, Y+23	; 0x17
    5c8e:	98 8d       	ldd	r25, Y+24	; 0x18
    5c90:	20 e0       	ldi	r18, 0x00	; 0
    5c92:	3f ef       	ldi	r19, 0xFF	; 255
    5c94:	4f e7       	ldi	r20, 0x7F	; 127
    5c96:	57 e4       	ldi	r21, 0x47	; 71
    5c98:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5c9c:	18 16       	cp	r1, r24
    5c9e:	4c f5       	brge	.+82     	; 0x5cf2 <LCD_vidSendCommand+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5ca0:	69 8d       	ldd	r22, Y+25	; 0x19
    5ca2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5ca4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5ca6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5ca8:	20 e0       	ldi	r18, 0x00	; 0
    5caa:	30 e0       	ldi	r19, 0x00	; 0
    5cac:	40 e2       	ldi	r20, 0x20	; 32
    5cae:	51 e4       	ldi	r21, 0x41	; 65
    5cb0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5cb4:	dc 01       	movw	r26, r24
    5cb6:	cb 01       	movw	r24, r22
    5cb8:	bc 01       	movw	r22, r24
    5cba:	cd 01       	movw	r24, r26
    5cbc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5cc0:	dc 01       	movw	r26, r24
    5cc2:	cb 01       	movw	r24, r22
    5cc4:	9c 8b       	std	Y+20, r25	; 0x14
    5cc6:	8b 8b       	std	Y+19, r24	; 0x13
    5cc8:	0f c0       	rjmp	.+30     	; 0x5ce8 <LCD_vidSendCommand+0xf8>
    5cca:	88 ec       	ldi	r24, 0xC8	; 200
    5ccc:	90 e0       	ldi	r25, 0x00	; 0
    5cce:	9a 8b       	std	Y+18, r25	; 0x12
    5cd0:	89 8b       	std	Y+17, r24	; 0x11
    5cd2:	89 89       	ldd	r24, Y+17	; 0x11
    5cd4:	9a 89       	ldd	r25, Y+18	; 0x12
    5cd6:	01 97       	sbiw	r24, 0x01	; 1
    5cd8:	f1 f7       	brne	.-4      	; 0x5cd6 <LCD_vidSendCommand+0xe6>
    5cda:	9a 8b       	std	Y+18, r25	; 0x12
    5cdc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cde:	8b 89       	ldd	r24, Y+19	; 0x13
    5ce0:	9c 89       	ldd	r25, Y+20	; 0x14
    5ce2:	01 97       	sbiw	r24, 0x01	; 1
    5ce4:	9c 8b       	std	Y+20, r25	; 0x14
    5ce6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ce8:	8b 89       	ldd	r24, Y+19	; 0x13
    5cea:	9c 89       	ldd	r25, Y+20	; 0x14
    5cec:	00 97       	sbiw	r24, 0x00	; 0
    5cee:	69 f7       	brne	.-38     	; 0x5cca <LCD_vidSendCommand+0xda>
    5cf0:	14 c0       	rjmp	.+40     	; 0x5d1a <LCD_vidSendCommand+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5cf2:	6d 89       	ldd	r22, Y+21	; 0x15
    5cf4:	7e 89       	ldd	r23, Y+22	; 0x16
    5cf6:	8f 89       	ldd	r24, Y+23	; 0x17
    5cf8:	98 8d       	ldd	r25, Y+24	; 0x18
    5cfa:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5cfe:	dc 01       	movw	r26, r24
    5d00:	cb 01       	movw	r24, r22
    5d02:	9c 8b       	std	Y+20, r25	; 0x14
    5d04:	8b 8b       	std	Y+19, r24	; 0x13
    5d06:	8b 89       	ldd	r24, Y+19	; 0x13
    5d08:	9c 89       	ldd	r25, Y+20	; 0x14
    5d0a:	98 8b       	std	Y+16, r25	; 0x10
    5d0c:	8f 87       	std	Y+15, r24	; 0x0f
    5d0e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5d10:	98 89       	ldd	r25, Y+16	; 0x10
    5d12:	01 97       	sbiw	r24, 0x01	; 1
    5d14:	f1 f7       	brne	.-4      	; 0x5d12 <LCD_vidSendCommand+0x122>
    5d16:	98 8b       	std	Y+16, r25	; 0x10
    5d18:	8f 87       	std	Y+15, r24	; 0x0f
	//wait tc time
	_delay_ms(1);
	//put Eto high
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,HIGH);
    5d1a:	81 e0       	ldi	r24, 0x01	; 1
    5d1c:	67 e0       	ldi	r22, 0x07	; 7
    5d1e:	41 e0       	ldi	r20, 0x01	; 1
    5d20:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    5d24:	80 e0       	ldi	r24, 0x00	; 0
    5d26:	90 e0       	ldi	r25, 0x00	; 0
    5d28:	a0 e4       	ldi	r26, 0x40	; 64
    5d2a:	b0 e4       	ldi	r27, 0x40	; 64
    5d2c:	8b 87       	std	Y+11, r24	; 0x0b
    5d2e:	9c 87       	std	Y+12, r25	; 0x0c
    5d30:	ad 87       	std	Y+13, r26	; 0x0d
    5d32:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d34:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d36:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d38:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d3c:	20 e0       	ldi	r18, 0x00	; 0
    5d3e:	30 e0       	ldi	r19, 0x00	; 0
    5d40:	4a ef       	ldi	r20, 0xFA	; 250
    5d42:	54 e4       	ldi	r21, 0x44	; 68
    5d44:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5d48:	dc 01       	movw	r26, r24
    5d4a:	cb 01       	movw	r24, r22
    5d4c:	8f 83       	std	Y+7, r24	; 0x07
    5d4e:	98 87       	std	Y+8, r25	; 0x08
    5d50:	a9 87       	std	Y+9, r26	; 0x09
    5d52:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5d54:	6f 81       	ldd	r22, Y+7	; 0x07
    5d56:	78 85       	ldd	r23, Y+8	; 0x08
    5d58:	89 85       	ldd	r24, Y+9	; 0x09
    5d5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d5c:	20 e0       	ldi	r18, 0x00	; 0
    5d5e:	30 e0       	ldi	r19, 0x00	; 0
    5d60:	40 e8       	ldi	r20, 0x80	; 128
    5d62:	5f e3       	ldi	r21, 0x3F	; 63
    5d64:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5d68:	88 23       	and	r24, r24
    5d6a:	2c f4       	brge	.+10     	; 0x5d76 <LCD_vidSendCommand+0x186>
		__ticks = 1;
    5d6c:	81 e0       	ldi	r24, 0x01	; 1
    5d6e:	90 e0       	ldi	r25, 0x00	; 0
    5d70:	9e 83       	std	Y+6, r25	; 0x06
    5d72:	8d 83       	std	Y+5, r24	; 0x05
    5d74:	3f c0       	rjmp	.+126    	; 0x5df4 <LCD_vidSendCommand+0x204>
	else if (__tmp > 65535)
    5d76:	6f 81       	ldd	r22, Y+7	; 0x07
    5d78:	78 85       	ldd	r23, Y+8	; 0x08
    5d7a:	89 85       	ldd	r24, Y+9	; 0x09
    5d7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d7e:	20 e0       	ldi	r18, 0x00	; 0
    5d80:	3f ef       	ldi	r19, 0xFF	; 255
    5d82:	4f e7       	ldi	r20, 0x7F	; 127
    5d84:	57 e4       	ldi	r21, 0x47	; 71
    5d86:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5d8a:	18 16       	cp	r1, r24
    5d8c:	4c f5       	brge	.+82     	; 0x5de0 <LCD_vidSendCommand+0x1f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5d8e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d90:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d92:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d94:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d96:	20 e0       	ldi	r18, 0x00	; 0
    5d98:	30 e0       	ldi	r19, 0x00	; 0
    5d9a:	40 e2       	ldi	r20, 0x20	; 32
    5d9c:	51 e4       	ldi	r21, 0x41	; 65
    5d9e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5da2:	dc 01       	movw	r26, r24
    5da4:	cb 01       	movw	r24, r22
    5da6:	bc 01       	movw	r22, r24
    5da8:	cd 01       	movw	r24, r26
    5daa:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5dae:	dc 01       	movw	r26, r24
    5db0:	cb 01       	movw	r24, r22
    5db2:	9e 83       	std	Y+6, r25	; 0x06
    5db4:	8d 83       	std	Y+5, r24	; 0x05
    5db6:	0f c0       	rjmp	.+30     	; 0x5dd6 <LCD_vidSendCommand+0x1e6>
    5db8:	88 ec       	ldi	r24, 0xC8	; 200
    5dba:	90 e0       	ldi	r25, 0x00	; 0
    5dbc:	9c 83       	std	Y+4, r25	; 0x04
    5dbe:	8b 83       	std	Y+3, r24	; 0x03
    5dc0:	8b 81       	ldd	r24, Y+3	; 0x03
    5dc2:	9c 81       	ldd	r25, Y+4	; 0x04
    5dc4:	01 97       	sbiw	r24, 0x01	; 1
    5dc6:	f1 f7       	brne	.-4      	; 0x5dc4 <LCD_vidSendCommand+0x1d4>
    5dc8:	9c 83       	std	Y+4, r25	; 0x04
    5dca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5dcc:	8d 81       	ldd	r24, Y+5	; 0x05
    5dce:	9e 81       	ldd	r25, Y+6	; 0x06
    5dd0:	01 97       	sbiw	r24, 0x01	; 1
    5dd2:	9e 83       	std	Y+6, r25	; 0x06
    5dd4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    5dd8:	9e 81       	ldd	r25, Y+6	; 0x06
    5dda:	00 97       	sbiw	r24, 0x00	; 0
    5ddc:	69 f7       	brne	.-38     	; 0x5db8 <LCD_vidSendCommand+0x1c8>
    5dde:	14 c0       	rjmp	.+40     	; 0x5e08 <LCD_vidSendCommand+0x218>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5de0:	6f 81       	ldd	r22, Y+7	; 0x07
    5de2:	78 85       	ldd	r23, Y+8	; 0x08
    5de4:	89 85       	ldd	r24, Y+9	; 0x09
    5de6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5de8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5dec:	dc 01       	movw	r26, r24
    5dee:	cb 01       	movw	r24, r22
    5df0:	9e 83       	std	Y+6, r25	; 0x06
    5df2:	8d 83       	std	Y+5, r24	; 0x05
    5df4:	8d 81       	ldd	r24, Y+5	; 0x05
    5df6:	9e 81       	ldd	r25, Y+6	; 0x06
    5df8:	9a 83       	std	Y+2, r25	; 0x02
    5dfa:	89 83       	std	Y+1, r24	; 0x01
    5dfc:	89 81       	ldd	r24, Y+1	; 0x01
    5dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    5e00:	01 97       	sbiw	r24, 0x01	; 1
    5e02:	f1 f7       	brne	.-4      	; 0x5e00 <LCD_vidSendCommand+0x210>
    5e04:	9a 83       	std	Y+2, r25	; 0x02
    5e06:	89 83       	std	Y+1, r24	; 0x01
	//wait to let lcd excute the command
	_delay_ms(3);
}
    5e08:	6d 96       	adiw	r28, 0x1d	; 29
    5e0a:	0f b6       	in	r0, 0x3f	; 63
    5e0c:	f8 94       	cli
    5e0e:	de bf       	out	0x3e, r29	; 62
    5e10:	0f be       	out	0x3f, r0	; 63
    5e12:	cd bf       	out	0x3d, r28	; 61
    5e14:	cf 91       	pop	r28
    5e16:	df 91       	pop	r29
    5e18:	08 95       	ret

00005e1a <LCD_vidWriteCharacter>:
//....................................................................
void LCD_vidWriteCharacter(uint8 u8DataCpy)
{
    5e1a:	df 93       	push	r29
    5e1c:	cf 93       	push	r28
    5e1e:	cd b7       	in	r28, 0x3d	; 61
    5e20:	de b7       	in	r29, 0x3e	; 62
    5e22:	6d 97       	sbiw	r28, 0x1d	; 29
    5e24:	0f b6       	in	r0, 0x3f	; 63
    5e26:	f8 94       	cli
    5e28:	de bf       	out	0x3e, r29	; 62
    5e2a:	0f be       	out	0x3f, r0	; 63
    5e2c:	cd bf       	out	0x3d, r28	; 61
    5e2e:	8d 8f       	std	Y+29, r24	; 0x1d
	//put RS TO LOW TO WRITE OPERATION
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,RS,HIGH);
    5e30:	81 e0       	ldi	r24, 0x01	; 1
    5e32:	65 e0       	ldi	r22, 0x05	; 5
    5e34:	41 e0       	ldi	r20, 0x01	; 1
    5e36:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    //PUT R/W TO LOW TO WRITE OPERATION
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,RW,LOW);
    5e3a:	81 e0       	ldi	r24, 0x01	; 1
    5e3c:	66 e0       	ldi	r22, 0x06	; 6
    5e3e:	40 e0       	ldi	r20, 0x00	; 0
    5e40:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	//PUT E TO HIGH TO ENABLE
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,HIGH);
    5e44:	81 e0       	ldi	r24, 0x01	; 1
    5e46:	67 e0       	ldi	r22, 0x07	; 7
    5e48:	41 e0       	ldi	r20, 0x01	; 1
    5e4a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>

	DIO_void_Set_Port_Value(LCD_PORT,u8DataCpy);
    5e4e:	82 e0       	ldi	r24, 0x02	; 2
    5e50:	6d 8d       	ldd	r22, Y+29	; 0x1d
    5e52:	0e 94 1b 23 	call	0x4636	; 0x4636 <DIO_void_Set_Port_Value>

	//PUT E TO LOW TO COMPLETE SEND THE COMMAND
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,LOW);
    5e56:	81 e0       	ldi	r24, 0x01	; 1
    5e58:	67 e0       	ldi	r22, 0x07	; 7
    5e5a:	40 e0       	ldi	r20, 0x00	; 0
    5e5c:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    5e60:	80 e0       	ldi	r24, 0x00	; 0
    5e62:	90 e0       	ldi	r25, 0x00	; 0
    5e64:	a0 e8       	ldi	r26, 0x80	; 128
    5e66:	bf e3       	ldi	r27, 0x3F	; 63
    5e68:	89 8f       	std	Y+25, r24	; 0x19
    5e6a:	9a 8f       	std	Y+26, r25	; 0x1a
    5e6c:	ab 8f       	std	Y+27, r26	; 0x1b
    5e6e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e70:	69 8d       	ldd	r22, Y+25	; 0x19
    5e72:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5e74:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5e76:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5e78:	20 e0       	ldi	r18, 0x00	; 0
    5e7a:	30 e0       	ldi	r19, 0x00	; 0
    5e7c:	4a ef       	ldi	r20, 0xFA	; 250
    5e7e:	54 e4       	ldi	r21, 0x44	; 68
    5e80:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5e84:	dc 01       	movw	r26, r24
    5e86:	cb 01       	movw	r24, r22
    5e88:	8d 8b       	std	Y+21, r24	; 0x15
    5e8a:	9e 8b       	std	Y+22, r25	; 0x16
    5e8c:	af 8b       	std	Y+23, r26	; 0x17
    5e8e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5e90:	6d 89       	ldd	r22, Y+21	; 0x15
    5e92:	7e 89       	ldd	r23, Y+22	; 0x16
    5e94:	8f 89       	ldd	r24, Y+23	; 0x17
    5e96:	98 8d       	ldd	r25, Y+24	; 0x18
    5e98:	20 e0       	ldi	r18, 0x00	; 0
    5e9a:	30 e0       	ldi	r19, 0x00	; 0
    5e9c:	40 e8       	ldi	r20, 0x80	; 128
    5e9e:	5f e3       	ldi	r21, 0x3F	; 63
    5ea0:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5ea4:	88 23       	and	r24, r24
    5ea6:	2c f4       	brge	.+10     	; 0x5eb2 <LCD_vidWriteCharacter+0x98>
		__ticks = 1;
    5ea8:	81 e0       	ldi	r24, 0x01	; 1
    5eaa:	90 e0       	ldi	r25, 0x00	; 0
    5eac:	9c 8b       	std	Y+20, r25	; 0x14
    5eae:	8b 8b       	std	Y+19, r24	; 0x13
    5eb0:	3f c0       	rjmp	.+126    	; 0x5f30 <LCD_vidWriteCharacter+0x116>
	else if (__tmp > 65535)
    5eb2:	6d 89       	ldd	r22, Y+21	; 0x15
    5eb4:	7e 89       	ldd	r23, Y+22	; 0x16
    5eb6:	8f 89       	ldd	r24, Y+23	; 0x17
    5eb8:	98 8d       	ldd	r25, Y+24	; 0x18
    5eba:	20 e0       	ldi	r18, 0x00	; 0
    5ebc:	3f ef       	ldi	r19, 0xFF	; 255
    5ebe:	4f e7       	ldi	r20, 0x7F	; 127
    5ec0:	57 e4       	ldi	r21, 0x47	; 71
    5ec2:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5ec6:	18 16       	cp	r1, r24
    5ec8:	4c f5       	brge	.+82     	; 0x5f1c <LCD_vidWriteCharacter+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5eca:	69 8d       	ldd	r22, Y+25	; 0x19
    5ecc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5ece:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5ed0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5ed2:	20 e0       	ldi	r18, 0x00	; 0
    5ed4:	30 e0       	ldi	r19, 0x00	; 0
    5ed6:	40 e2       	ldi	r20, 0x20	; 32
    5ed8:	51 e4       	ldi	r21, 0x41	; 65
    5eda:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5ede:	dc 01       	movw	r26, r24
    5ee0:	cb 01       	movw	r24, r22
    5ee2:	bc 01       	movw	r22, r24
    5ee4:	cd 01       	movw	r24, r26
    5ee6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5eea:	dc 01       	movw	r26, r24
    5eec:	cb 01       	movw	r24, r22
    5eee:	9c 8b       	std	Y+20, r25	; 0x14
    5ef0:	8b 8b       	std	Y+19, r24	; 0x13
    5ef2:	0f c0       	rjmp	.+30     	; 0x5f12 <LCD_vidWriteCharacter+0xf8>
    5ef4:	88 ec       	ldi	r24, 0xC8	; 200
    5ef6:	90 e0       	ldi	r25, 0x00	; 0
    5ef8:	9a 8b       	std	Y+18, r25	; 0x12
    5efa:	89 8b       	std	Y+17, r24	; 0x11
    5efc:	89 89       	ldd	r24, Y+17	; 0x11
    5efe:	9a 89       	ldd	r25, Y+18	; 0x12
    5f00:	01 97       	sbiw	r24, 0x01	; 1
    5f02:	f1 f7       	brne	.-4      	; 0x5f00 <LCD_vidWriteCharacter+0xe6>
    5f04:	9a 8b       	std	Y+18, r25	; 0x12
    5f06:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f08:	8b 89       	ldd	r24, Y+19	; 0x13
    5f0a:	9c 89       	ldd	r25, Y+20	; 0x14
    5f0c:	01 97       	sbiw	r24, 0x01	; 1
    5f0e:	9c 8b       	std	Y+20, r25	; 0x14
    5f10:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f12:	8b 89       	ldd	r24, Y+19	; 0x13
    5f14:	9c 89       	ldd	r25, Y+20	; 0x14
    5f16:	00 97       	sbiw	r24, 0x00	; 0
    5f18:	69 f7       	brne	.-38     	; 0x5ef4 <LCD_vidWriteCharacter+0xda>
    5f1a:	14 c0       	rjmp	.+40     	; 0x5f44 <LCD_vidWriteCharacter+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f1c:	6d 89       	ldd	r22, Y+21	; 0x15
    5f1e:	7e 89       	ldd	r23, Y+22	; 0x16
    5f20:	8f 89       	ldd	r24, Y+23	; 0x17
    5f22:	98 8d       	ldd	r25, Y+24	; 0x18
    5f24:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5f28:	dc 01       	movw	r26, r24
    5f2a:	cb 01       	movw	r24, r22
    5f2c:	9c 8b       	std	Y+20, r25	; 0x14
    5f2e:	8b 8b       	std	Y+19, r24	; 0x13
    5f30:	8b 89       	ldd	r24, Y+19	; 0x13
    5f32:	9c 89       	ldd	r25, Y+20	; 0x14
    5f34:	98 8b       	std	Y+16, r25	; 0x10
    5f36:	8f 87       	std	Y+15, r24	; 0x0f
    5f38:	8f 85       	ldd	r24, Y+15	; 0x0f
    5f3a:	98 89       	ldd	r25, Y+16	; 0x10
    5f3c:	01 97       	sbiw	r24, 0x01	; 1
    5f3e:	f1 f7       	brne	.-4      	; 0x5f3c <LCD_vidWriteCharacter+0x122>
    5f40:	98 8b       	std	Y+16, r25	; 0x10
    5f42:	8f 87       	std	Y+15, r24	; 0x0f
	//wait tc time
	_delay_ms(1);
	//put E to high
	DIO_void_Set_Pin_Value(LCD_CONTROL_PORT,E,HIGH);
    5f44:	81 e0       	ldi	r24, 0x01	; 1
    5f46:	67 e0       	ldi	r22, 0x07	; 7
    5f48:	41 e0       	ldi	r20, 0x01	; 1
    5f4a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    5f4e:	80 e0       	ldi	r24, 0x00	; 0
    5f50:	90 e0       	ldi	r25, 0x00	; 0
    5f52:	a0 e4       	ldi	r26, 0x40	; 64
    5f54:	b0 e4       	ldi	r27, 0x40	; 64
    5f56:	8b 87       	std	Y+11, r24	; 0x0b
    5f58:	9c 87       	std	Y+12, r25	; 0x0c
    5f5a:	ad 87       	std	Y+13, r26	; 0x0d
    5f5c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f5e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5f60:	7c 85       	ldd	r23, Y+12	; 0x0c
    5f62:	8d 85       	ldd	r24, Y+13	; 0x0d
    5f64:	9e 85       	ldd	r25, Y+14	; 0x0e
    5f66:	20 e0       	ldi	r18, 0x00	; 0
    5f68:	30 e0       	ldi	r19, 0x00	; 0
    5f6a:	4a ef       	ldi	r20, 0xFA	; 250
    5f6c:	54 e4       	ldi	r21, 0x44	; 68
    5f6e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5f72:	dc 01       	movw	r26, r24
    5f74:	cb 01       	movw	r24, r22
    5f76:	8f 83       	std	Y+7, r24	; 0x07
    5f78:	98 87       	std	Y+8, r25	; 0x08
    5f7a:	a9 87       	std	Y+9, r26	; 0x09
    5f7c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5f7e:	6f 81       	ldd	r22, Y+7	; 0x07
    5f80:	78 85       	ldd	r23, Y+8	; 0x08
    5f82:	89 85       	ldd	r24, Y+9	; 0x09
    5f84:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f86:	20 e0       	ldi	r18, 0x00	; 0
    5f88:	30 e0       	ldi	r19, 0x00	; 0
    5f8a:	40 e8       	ldi	r20, 0x80	; 128
    5f8c:	5f e3       	ldi	r21, 0x3F	; 63
    5f8e:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    5f92:	88 23       	and	r24, r24
    5f94:	2c f4       	brge	.+10     	; 0x5fa0 <LCD_vidWriteCharacter+0x186>
		__ticks = 1;
    5f96:	81 e0       	ldi	r24, 0x01	; 1
    5f98:	90 e0       	ldi	r25, 0x00	; 0
    5f9a:	9e 83       	std	Y+6, r25	; 0x06
    5f9c:	8d 83       	std	Y+5, r24	; 0x05
    5f9e:	3f c0       	rjmp	.+126    	; 0x601e <LCD_vidWriteCharacter+0x204>
	else if (__tmp > 65535)
    5fa0:	6f 81       	ldd	r22, Y+7	; 0x07
    5fa2:	78 85       	ldd	r23, Y+8	; 0x08
    5fa4:	89 85       	ldd	r24, Y+9	; 0x09
    5fa6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5fa8:	20 e0       	ldi	r18, 0x00	; 0
    5faa:	3f ef       	ldi	r19, 0xFF	; 255
    5fac:	4f e7       	ldi	r20, 0x7F	; 127
    5fae:	57 e4       	ldi	r21, 0x47	; 71
    5fb0:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    5fb4:	18 16       	cp	r1, r24
    5fb6:	4c f5       	brge	.+82     	; 0x600a <LCD_vidWriteCharacter+0x1f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5fb8:	6b 85       	ldd	r22, Y+11	; 0x0b
    5fba:	7c 85       	ldd	r23, Y+12	; 0x0c
    5fbc:	8d 85       	ldd	r24, Y+13	; 0x0d
    5fbe:	9e 85       	ldd	r25, Y+14	; 0x0e
    5fc0:	20 e0       	ldi	r18, 0x00	; 0
    5fc2:	30 e0       	ldi	r19, 0x00	; 0
    5fc4:	40 e2       	ldi	r20, 0x20	; 32
    5fc6:	51 e4       	ldi	r21, 0x41	; 65
    5fc8:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    5fcc:	dc 01       	movw	r26, r24
    5fce:	cb 01       	movw	r24, r22
    5fd0:	bc 01       	movw	r22, r24
    5fd2:	cd 01       	movw	r24, r26
    5fd4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    5fd8:	dc 01       	movw	r26, r24
    5fda:	cb 01       	movw	r24, r22
    5fdc:	9e 83       	std	Y+6, r25	; 0x06
    5fde:	8d 83       	std	Y+5, r24	; 0x05
    5fe0:	0f c0       	rjmp	.+30     	; 0x6000 <LCD_vidWriteCharacter+0x1e6>
    5fe2:	88 ec       	ldi	r24, 0xC8	; 200
    5fe4:	90 e0       	ldi	r25, 0x00	; 0
    5fe6:	9c 83       	std	Y+4, r25	; 0x04
    5fe8:	8b 83       	std	Y+3, r24	; 0x03
    5fea:	8b 81       	ldd	r24, Y+3	; 0x03
    5fec:	9c 81       	ldd	r25, Y+4	; 0x04
    5fee:	01 97       	sbiw	r24, 0x01	; 1
    5ff0:	f1 f7       	brne	.-4      	; 0x5fee <LCD_vidWriteCharacter+0x1d4>
    5ff2:	9c 83       	std	Y+4, r25	; 0x04
    5ff4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ff6:	8d 81       	ldd	r24, Y+5	; 0x05
    5ff8:	9e 81       	ldd	r25, Y+6	; 0x06
    5ffa:	01 97       	sbiw	r24, 0x01	; 1
    5ffc:	9e 83       	std	Y+6, r25	; 0x06
    5ffe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6000:	8d 81       	ldd	r24, Y+5	; 0x05
    6002:	9e 81       	ldd	r25, Y+6	; 0x06
    6004:	00 97       	sbiw	r24, 0x00	; 0
    6006:	69 f7       	brne	.-38     	; 0x5fe2 <LCD_vidWriteCharacter+0x1c8>
    6008:	14 c0       	rjmp	.+40     	; 0x6032 <LCD_vidWriteCharacter+0x218>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    600a:	6f 81       	ldd	r22, Y+7	; 0x07
    600c:	78 85       	ldd	r23, Y+8	; 0x08
    600e:	89 85       	ldd	r24, Y+9	; 0x09
    6010:	9a 85       	ldd	r25, Y+10	; 0x0a
    6012:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6016:	dc 01       	movw	r26, r24
    6018:	cb 01       	movw	r24, r22
    601a:	9e 83       	std	Y+6, r25	; 0x06
    601c:	8d 83       	std	Y+5, r24	; 0x05
    601e:	8d 81       	ldd	r24, Y+5	; 0x05
    6020:	9e 81       	ldd	r25, Y+6	; 0x06
    6022:	9a 83       	std	Y+2, r25	; 0x02
    6024:	89 83       	std	Y+1, r24	; 0x01
    6026:	89 81       	ldd	r24, Y+1	; 0x01
    6028:	9a 81       	ldd	r25, Y+2	; 0x02
    602a:	01 97       	sbiw	r24, 0x01	; 1
    602c:	f1 f7       	brne	.-4      	; 0x602a <LCD_vidWriteCharacter+0x210>
    602e:	9a 83       	std	Y+2, r25	; 0x02
    6030:	89 83       	std	Y+1, r24	; 0x01
	//wait to let lcd excute the command
	_delay_ms(3);
}
    6032:	6d 96       	adiw	r28, 0x1d	; 29
    6034:	0f b6       	in	r0, 0x3f	; 63
    6036:	f8 94       	cli
    6038:	de bf       	out	0x3e, r29	; 62
    603a:	0f be       	out	0x3f, r0	; 63
    603c:	cd bf       	out	0x3d, r28	; 61
    603e:	cf 91       	pop	r28
    6040:	df 91       	pop	r29
    6042:	08 95       	ret

00006044 <LCD_vidSendCommand4>:

//....................................................................

void LCD_vidSendCommand4(uint8 u8CommandCpy)
{
    6044:	df 93       	push	r29
    6046:	cf 93       	push	r28
    6048:	0f 92       	push	r0
    604a:	cd b7       	in	r28, 0x3d	; 61
    604c:	de b7       	in	r29, 0x3e	; 62
    604e:	89 83       	std	Y+1, r24	; 0x01

	LCD_vidSendCommand( ( GET_NippleH(u8CommandCpy))<<4 );
    6050:	89 81       	ldd	r24, Y+1	; 0x01
    6052:	80 7f       	andi	r24, 0xF0	; 240
    6054:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	LCD_vidSendCommand(  (GET_NippleL(u8CommandCpy))<<4 );
    6058:	89 81       	ldd	r24, Y+1	; 0x01
    605a:	88 2f       	mov	r24, r24
    605c:	90 e0       	ldi	r25, 0x00	; 0
    605e:	82 95       	swap	r24
    6060:	92 95       	swap	r25
    6062:	90 7f       	andi	r25, 0xF0	; 240
    6064:	98 27       	eor	r25, r24
    6066:	80 7f       	andi	r24, 0xF0	; 240
    6068:	98 27       	eor	r25, r24
    606a:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
}
    606e:	0f 90       	pop	r0
    6070:	cf 91       	pop	r28
    6072:	df 91       	pop	r29
    6074:	08 95       	ret

00006076 <LCD_vidInit4>:
//........................................................................................
\
void LCD_vidInit4(void)
{
    6076:	0f 93       	push	r16
    6078:	1f 93       	push	r17
    607a:	df 93       	push	r29
    607c:	cf 93       	push	r28
    607e:	cd b7       	in	r28, 0x3d	; 61
    6080:	de b7       	in	r29, 0x3e	; 62
    6082:	c6 54       	subi	r28, 0x46	; 70
    6084:	d0 40       	sbci	r29, 0x00	; 0
    6086:	0f b6       	in	r0, 0x3f	; 63
    6088:	f8 94       	cli
    608a:	de bf       	out	0x3e, r29	; 62
    608c:	0f be       	out	0x3f, r0	; 63
    608e:	cd bf       	out	0x3d, r28	; 61
    6090:	fe 01       	movw	r30, r28
    6092:	ed 5b       	subi	r30, 0xBD	; 189
    6094:	ff 4f       	sbci	r31, 0xFF	; 255
    6096:	80 e0       	ldi	r24, 0x00	; 0
    6098:	90 e0       	ldi	r25, 0x00	; 0
    609a:	a8 e4       	ldi	r26, 0x48	; 72
    609c:	b2 e4       	ldi	r27, 0x42	; 66
    609e:	80 83       	st	Z, r24
    60a0:	91 83       	std	Z+1, r25	; 0x01
    60a2:	a2 83       	std	Z+2, r26	; 0x02
    60a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    60a6:	8e 01       	movw	r16, r28
    60a8:	01 5c       	subi	r16, 0xC1	; 193
    60aa:	1f 4f       	sbci	r17, 0xFF	; 255
    60ac:	fe 01       	movw	r30, r28
    60ae:	ed 5b       	subi	r30, 0xBD	; 189
    60b0:	ff 4f       	sbci	r31, 0xFF	; 255
    60b2:	60 81       	ld	r22, Z
    60b4:	71 81       	ldd	r23, Z+1	; 0x01
    60b6:	82 81       	ldd	r24, Z+2	; 0x02
    60b8:	93 81       	ldd	r25, Z+3	; 0x03
    60ba:	20 e0       	ldi	r18, 0x00	; 0
    60bc:	30 e0       	ldi	r19, 0x00	; 0
    60be:	4a ef       	ldi	r20, 0xFA	; 250
    60c0:	54 e4       	ldi	r21, 0x44	; 68
    60c2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    60c6:	dc 01       	movw	r26, r24
    60c8:	cb 01       	movw	r24, r22
    60ca:	f8 01       	movw	r30, r16
    60cc:	80 83       	st	Z, r24
    60ce:	91 83       	std	Z+1, r25	; 0x01
    60d0:	a2 83       	std	Z+2, r26	; 0x02
    60d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    60d4:	fe 01       	movw	r30, r28
    60d6:	ff 96       	adiw	r30, 0x3f	; 63
    60d8:	60 81       	ld	r22, Z
    60da:	71 81       	ldd	r23, Z+1	; 0x01
    60dc:	82 81       	ldd	r24, Z+2	; 0x02
    60de:	93 81       	ldd	r25, Z+3	; 0x03
    60e0:	20 e0       	ldi	r18, 0x00	; 0
    60e2:	30 e0       	ldi	r19, 0x00	; 0
    60e4:	40 e8       	ldi	r20, 0x80	; 128
    60e6:	5f e3       	ldi	r21, 0x3F	; 63
    60e8:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    60ec:	88 23       	and	r24, r24
    60ee:	2c f4       	brge	.+10     	; 0x60fa <LCD_vidInit4+0x84>
		__ticks = 1;
    60f0:	81 e0       	ldi	r24, 0x01	; 1
    60f2:	90 e0       	ldi	r25, 0x00	; 0
    60f4:	9e af       	std	Y+62, r25	; 0x3e
    60f6:	8d af       	std	Y+61, r24	; 0x3d
    60f8:	46 c0       	rjmp	.+140    	; 0x6186 <LCD_vidInit4+0x110>
	else if (__tmp > 65535)
    60fa:	fe 01       	movw	r30, r28
    60fc:	ff 96       	adiw	r30, 0x3f	; 63
    60fe:	60 81       	ld	r22, Z
    6100:	71 81       	ldd	r23, Z+1	; 0x01
    6102:	82 81       	ldd	r24, Z+2	; 0x02
    6104:	93 81       	ldd	r25, Z+3	; 0x03
    6106:	20 e0       	ldi	r18, 0x00	; 0
    6108:	3f ef       	ldi	r19, 0xFF	; 255
    610a:	4f e7       	ldi	r20, 0x7F	; 127
    610c:	57 e4       	ldi	r21, 0x47	; 71
    610e:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    6112:	18 16       	cp	r1, r24
    6114:	64 f5       	brge	.+88     	; 0x616e <LCD_vidInit4+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6116:	fe 01       	movw	r30, r28
    6118:	ed 5b       	subi	r30, 0xBD	; 189
    611a:	ff 4f       	sbci	r31, 0xFF	; 255
    611c:	60 81       	ld	r22, Z
    611e:	71 81       	ldd	r23, Z+1	; 0x01
    6120:	82 81       	ldd	r24, Z+2	; 0x02
    6122:	93 81       	ldd	r25, Z+3	; 0x03
    6124:	20 e0       	ldi	r18, 0x00	; 0
    6126:	30 e0       	ldi	r19, 0x00	; 0
    6128:	40 e2       	ldi	r20, 0x20	; 32
    612a:	51 e4       	ldi	r21, 0x41	; 65
    612c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    6130:	dc 01       	movw	r26, r24
    6132:	cb 01       	movw	r24, r22
    6134:	bc 01       	movw	r22, r24
    6136:	cd 01       	movw	r24, r26
    6138:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    613c:	dc 01       	movw	r26, r24
    613e:	cb 01       	movw	r24, r22
    6140:	9e af       	std	Y+62, r25	; 0x3e
    6142:	8d af       	std	Y+61, r24	; 0x3d
    6144:	0f c0       	rjmp	.+30     	; 0x6164 <LCD_vidInit4+0xee>
    6146:	88 ec       	ldi	r24, 0xC8	; 200
    6148:	90 e0       	ldi	r25, 0x00	; 0
    614a:	9c af       	std	Y+60, r25	; 0x3c
    614c:	8b af       	std	Y+59, r24	; 0x3b
    614e:	8b ad       	ldd	r24, Y+59	; 0x3b
    6150:	9c ad       	ldd	r25, Y+60	; 0x3c
    6152:	01 97       	sbiw	r24, 0x01	; 1
    6154:	f1 f7       	brne	.-4      	; 0x6152 <LCD_vidInit4+0xdc>
    6156:	9c af       	std	Y+60, r25	; 0x3c
    6158:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    615a:	8d ad       	ldd	r24, Y+61	; 0x3d
    615c:	9e ad       	ldd	r25, Y+62	; 0x3e
    615e:	01 97       	sbiw	r24, 0x01	; 1
    6160:	9e af       	std	Y+62, r25	; 0x3e
    6162:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6164:	8d ad       	ldd	r24, Y+61	; 0x3d
    6166:	9e ad       	ldd	r25, Y+62	; 0x3e
    6168:	00 97       	sbiw	r24, 0x00	; 0
    616a:	69 f7       	brne	.-38     	; 0x6146 <LCD_vidInit4+0xd0>
    616c:	16 c0       	rjmp	.+44     	; 0x619a <LCD_vidInit4+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    616e:	fe 01       	movw	r30, r28
    6170:	ff 96       	adiw	r30, 0x3f	; 63
    6172:	60 81       	ld	r22, Z
    6174:	71 81       	ldd	r23, Z+1	; 0x01
    6176:	82 81       	ldd	r24, Z+2	; 0x02
    6178:	93 81       	ldd	r25, Z+3	; 0x03
    617a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    617e:	dc 01       	movw	r26, r24
    6180:	cb 01       	movw	r24, r22
    6182:	9e af       	std	Y+62, r25	; 0x3e
    6184:	8d af       	std	Y+61, r24	; 0x3d
    6186:	8d ad       	ldd	r24, Y+61	; 0x3d
    6188:	9e ad       	ldd	r25, Y+62	; 0x3e
    618a:	9a af       	std	Y+58, r25	; 0x3a
    618c:	89 af       	std	Y+57, r24	; 0x39
    618e:	89 ad       	ldd	r24, Y+57	; 0x39
    6190:	9a ad       	ldd	r25, Y+58	; 0x3a
    6192:	01 97       	sbiw	r24, 0x01	; 1
    6194:	f1 f7       	brne	.-4      	; 0x6192 <LCD_vidInit4+0x11c>
    6196:	9a af       	std	Y+58, r25	; 0x3a
    6198:	89 af       	std	Y+57, r24	; 0x39
	 //wait for a time
	  _delay_ms(50);

	  //function  set
	  LCD_vidSendCommand(0b00100000);
    619a:	80 e2       	ldi	r24, 0x20	; 32
    619c:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	  LCD_vidSendCommand(0b00100000);
    61a0:	80 e2       	ldi	r24, 0x20	; 32
    61a2:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	  LCD_vidSendCommand(0b11000000);
    61a6:	80 ec       	ldi	r24, 0xC0	; 192
    61a8:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    61ac:	80 e0       	ldi	r24, 0x00	; 0
    61ae:	90 e0       	ldi	r25, 0x00	; 0
    61b0:	a8 e4       	ldi	r26, 0x48	; 72
    61b2:	b2 e4       	ldi	r27, 0x42	; 66
    61b4:	8d ab       	std	Y+53, r24	; 0x35
    61b6:	9e ab       	std	Y+54, r25	; 0x36
    61b8:	af ab       	std	Y+55, r26	; 0x37
    61ba:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    61bc:	6d a9       	ldd	r22, Y+53	; 0x35
    61be:	7e a9       	ldd	r23, Y+54	; 0x36
    61c0:	8f a9       	ldd	r24, Y+55	; 0x37
    61c2:	98 ad       	ldd	r25, Y+56	; 0x38
    61c4:	20 e0       	ldi	r18, 0x00	; 0
    61c6:	30 e0       	ldi	r19, 0x00	; 0
    61c8:	4a ef       	ldi	r20, 0xFA	; 250
    61ca:	54 e4       	ldi	r21, 0x44	; 68
    61cc:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    61d0:	dc 01       	movw	r26, r24
    61d2:	cb 01       	movw	r24, r22
    61d4:	89 ab       	std	Y+49, r24	; 0x31
    61d6:	9a ab       	std	Y+50, r25	; 0x32
    61d8:	ab ab       	std	Y+51, r26	; 0x33
    61da:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    61dc:	69 a9       	ldd	r22, Y+49	; 0x31
    61de:	7a a9       	ldd	r23, Y+50	; 0x32
    61e0:	8b a9       	ldd	r24, Y+51	; 0x33
    61e2:	9c a9       	ldd	r25, Y+52	; 0x34
    61e4:	20 e0       	ldi	r18, 0x00	; 0
    61e6:	30 e0       	ldi	r19, 0x00	; 0
    61e8:	40 e8       	ldi	r20, 0x80	; 128
    61ea:	5f e3       	ldi	r21, 0x3F	; 63
    61ec:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    61f0:	88 23       	and	r24, r24
    61f2:	2c f4       	brge	.+10     	; 0x61fe <LCD_vidInit4+0x188>
		__ticks = 1;
    61f4:	81 e0       	ldi	r24, 0x01	; 1
    61f6:	90 e0       	ldi	r25, 0x00	; 0
    61f8:	98 ab       	std	Y+48, r25	; 0x30
    61fa:	8f a7       	std	Y+47, r24	; 0x2f
    61fc:	3f c0       	rjmp	.+126    	; 0x627c <LCD_vidInit4+0x206>
	else if (__tmp > 65535)
    61fe:	69 a9       	ldd	r22, Y+49	; 0x31
    6200:	7a a9       	ldd	r23, Y+50	; 0x32
    6202:	8b a9       	ldd	r24, Y+51	; 0x33
    6204:	9c a9       	ldd	r25, Y+52	; 0x34
    6206:	20 e0       	ldi	r18, 0x00	; 0
    6208:	3f ef       	ldi	r19, 0xFF	; 255
    620a:	4f e7       	ldi	r20, 0x7F	; 127
    620c:	57 e4       	ldi	r21, 0x47	; 71
    620e:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    6212:	18 16       	cp	r1, r24
    6214:	4c f5       	brge	.+82     	; 0x6268 <LCD_vidInit4+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6216:	6d a9       	ldd	r22, Y+53	; 0x35
    6218:	7e a9       	ldd	r23, Y+54	; 0x36
    621a:	8f a9       	ldd	r24, Y+55	; 0x37
    621c:	98 ad       	ldd	r25, Y+56	; 0x38
    621e:	20 e0       	ldi	r18, 0x00	; 0
    6220:	30 e0       	ldi	r19, 0x00	; 0
    6222:	40 e2       	ldi	r20, 0x20	; 32
    6224:	51 e4       	ldi	r21, 0x41	; 65
    6226:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    622a:	dc 01       	movw	r26, r24
    622c:	cb 01       	movw	r24, r22
    622e:	bc 01       	movw	r22, r24
    6230:	cd 01       	movw	r24, r26
    6232:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6236:	dc 01       	movw	r26, r24
    6238:	cb 01       	movw	r24, r22
    623a:	98 ab       	std	Y+48, r25	; 0x30
    623c:	8f a7       	std	Y+47, r24	; 0x2f
    623e:	0f c0       	rjmp	.+30     	; 0x625e <LCD_vidInit4+0x1e8>
    6240:	88 ec       	ldi	r24, 0xC8	; 200
    6242:	90 e0       	ldi	r25, 0x00	; 0
    6244:	9e a7       	std	Y+46, r25	; 0x2e
    6246:	8d a7       	std	Y+45, r24	; 0x2d
    6248:	8d a5       	ldd	r24, Y+45	; 0x2d
    624a:	9e a5       	ldd	r25, Y+46	; 0x2e
    624c:	01 97       	sbiw	r24, 0x01	; 1
    624e:	f1 f7       	brne	.-4      	; 0x624c <LCD_vidInit4+0x1d6>
    6250:	9e a7       	std	Y+46, r25	; 0x2e
    6252:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6254:	8f a5       	ldd	r24, Y+47	; 0x2f
    6256:	98 a9       	ldd	r25, Y+48	; 0x30
    6258:	01 97       	sbiw	r24, 0x01	; 1
    625a:	98 ab       	std	Y+48, r25	; 0x30
    625c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    625e:	8f a5       	ldd	r24, Y+47	; 0x2f
    6260:	98 a9       	ldd	r25, Y+48	; 0x30
    6262:	00 97       	sbiw	r24, 0x00	; 0
    6264:	69 f7       	brne	.-38     	; 0x6240 <LCD_vidInit4+0x1ca>
    6266:	14 c0       	rjmp	.+40     	; 0x6290 <LCD_vidInit4+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6268:	69 a9       	ldd	r22, Y+49	; 0x31
    626a:	7a a9       	ldd	r23, Y+50	; 0x32
    626c:	8b a9       	ldd	r24, Y+51	; 0x33
    626e:	9c a9       	ldd	r25, Y+52	; 0x34
    6270:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6274:	dc 01       	movw	r26, r24
    6276:	cb 01       	movw	r24, r22
    6278:	98 ab       	std	Y+48, r25	; 0x30
    627a:	8f a7       	std	Y+47, r24	; 0x2f
    627c:	8f a5       	ldd	r24, Y+47	; 0x2f
    627e:	98 a9       	ldd	r25, Y+48	; 0x30
    6280:	9c a7       	std	Y+44, r25	; 0x2c
    6282:	8b a7       	std	Y+43, r24	; 0x2b
    6284:	8b a5       	ldd	r24, Y+43	; 0x2b
    6286:	9c a5       	ldd	r25, Y+44	; 0x2c
    6288:	01 97       	sbiw	r24, 0x01	; 1
    628a:	f1 f7       	brne	.-4      	; 0x6288 <LCD_vidInit4+0x212>
    628c:	9c a7       	std	Y+44, r25	; 0x2c
    628e:	8b a7       	std	Y+43, r24	; 0x2b

	  //wait for a time
	  _delay_ms(50);

	  //display on off
	  LCD_vidSendCommand(0b00000000);
    6290:	80 e0       	ldi	r24, 0x00	; 0
    6292:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	  LCD_vidSendCommand(0b11100000);
    6296:	80 ee       	ldi	r24, 0xE0	; 224
    6298:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    629c:	80 e0       	ldi	r24, 0x00	; 0
    629e:	90 e0       	ldi	r25, 0x00	; 0
    62a0:	a0 ef       	ldi	r26, 0xF0	; 240
    62a2:	b1 e4       	ldi	r27, 0x41	; 65
    62a4:	8f a3       	std	Y+39, r24	; 0x27
    62a6:	98 a7       	std	Y+40, r25	; 0x28
    62a8:	a9 a7       	std	Y+41, r26	; 0x29
    62aa:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    62ac:	6f a1       	ldd	r22, Y+39	; 0x27
    62ae:	78 a5       	ldd	r23, Y+40	; 0x28
    62b0:	89 a5       	ldd	r24, Y+41	; 0x29
    62b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    62b4:	20 e0       	ldi	r18, 0x00	; 0
    62b6:	30 e0       	ldi	r19, 0x00	; 0
    62b8:	4a ef       	ldi	r20, 0xFA	; 250
    62ba:	54 e4       	ldi	r21, 0x44	; 68
    62bc:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    62c0:	dc 01       	movw	r26, r24
    62c2:	cb 01       	movw	r24, r22
    62c4:	8b a3       	std	Y+35, r24	; 0x23
    62c6:	9c a3       	std	Y+36, r25	; 0x24
    62c8:	ad a3       	std	Y+37, r26	; 0x25
    62ca:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    62cc:	6b a1       	ldd	r22, Y+35	; 0x23
    62ce:	7c a1       	ldd	r23, Y+36	; 0x24
    62d0:	8d a1       	ldd	r24, Y+37	; 0x25
    62d2:	9e a1       	ldd	r25, Y+38	; 0x26
    62d4:	20 e0       	ldi	r18, 0x00	; 0
    62d6:	30 e0       	ldi	r19, 0x00	; 0
    62d8:	40 e8       	ldi	r20, 0x80	; 128
    62da:	5f e3       	ldi	r21, 0x3F	; 63
    62dc:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    62e0:	88 23       	and	r24, r24
    62e2:	2c f4       	brge	.+10     	; 0x62ee <LCD_vidInit4+0x278>
		__ticks = 1;
    62e4:	81 e0       	ldi	r24, 0x01	; 1
    62e6:	90 e0       	ldi	r25, 0x00	; 0
    62e8:	9a a3       	std	Y+34, r25	; 0x22
    62ea:	89 a3       	std	Y+33, r24	; 0x21
    62ec:	3f c0       	rjmp	.+126    	; 0x636c <LCD_vidInit4+0x2f6>
	else if (__tmp > 65535)
    62ee:	6b a1       	ldd	r22, Y+35	; 0x23
    62f0:	7c a1       	ldd	r23, Y+36	; 0x24
    62f2:	8d a1       	ldd	r24, Y+37	; 0x25
    62f4:	9e a1       	ldd	r25, Y+38	; 0x26
    62f6:	20 e0       	ldi	r18, 0x00	; 0
    62f8:	3f ef       	ldi	r19, 0xFF	; 255
    62fa:	4f e7       	ldi	r20, 0x7F	; 127
    62fc:	57 e4       	ldi	r21, 0x47	; 71
    62fe:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    6302:	18 16       	cp	r1, r24
    6304:	4c f5       	brge	.+82     	; 0x6358 <LCD_vidInit4+0x2e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6306:	6f a1       	ldd	r22, Y+39	; 0x27
    6308:	78 a5       	ldd	r23, Y+40	; 0x28
    630a:	89 a5       	ldd	r24, Y+41	; 0x29
    630c:	9a a5       	ldd	r25, Y+42	; 0x2a
    630e:	20 e0       	ldi	r18, 0x00	; 0
    6310:	30 e0       	ldi	r19, 0x00	; 0
    6312:	40 e2       	ldi	r20, 0x20	; 32
    6314:	51 e4       	ldi	r21, 0x41	; 65
    6316:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    631a:	dc 01       	movw	r26, r24
    631c:	cb 01       	movw	r24, r22
    631e:	bc 01       	movw	r22, r24
    6320:	cd 01       	movw	r24, r26
    6322:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6326:	dc 01       	movw	r26, r24
    6328:	cb 01       	movw	r24, r22
    632a:	9a a3       	std	Y+34, r25	; 0x22
    632c:	89 a3       	std	Y+33, r24	; 0x21
    632e:	0f c0       	rjmp	.+30     	; 0x634e <LCD_vidInit4+0x2d8>
    6330:	88 ec       	ldi	r24, 0xC8	; 200
    6332:	90 e0       	ldi	r25, 0x00	; 0
    6334:	98 a3       	std	Y+32, r25	; 0x20
    6336:	8f 8f       	std	Y+31, r24	; 0x1f
    6338:	8f 8d       	ldd	r24, Y+31	; 0x1f
    633a:	98 a1       	ldd	r25, Y+32	; 0x20
    633c:	01 97       	sbiw	r24, 0x01	; 1
    633e:	f1 f7       	brne	.-4      	; 0x633c <LCD_vidInit4+0x2c6>
    6340:	98 a3       	std	Y+32, r25	; 0x20
    6342:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6344:	89 a1       	ldd	r24, Y+33	; 0x21
    6346:	9a a1       	ldd	r25, Y+34	; 0x22
    6348:	01 97       	sbiw	r24, 0x01	; 1
    634a:	9a a3       	std	Y+34, r25	; 0x22
    634c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    634e:	89 a1       	ldd	r24, Y+33	; 0x21
    6350:	9a a1       	ldd	r25, Y+34	; 0x22
    6352:	00 97       	sbiw	r24, 0x00	; 0
    6354:	69 f7       	brne	.-38     	; 0x6330 <LCD_vidInit4+0x2ba>
    6356:	14 c0       	rjmp	.+40     	; 0x6380 <LCD_vidInit4+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6358:	6b a1       	ldd	r22, Y+35	; 0x23
    635a:	7c a1       	ldd	r23, Y+36	; 0x24
    635c:	8d a1       	ldd	r24, Y+37	; 0x25
    635e:	9e a1       	ldd	r25, Y+38	; 0x26
    6360:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6364:	dc 01       	movw	r26, r24
    6366:	cb 01       	movw	r24, r22
    6368:	9a a3       	std	Y+34, r25	; 0x22
    636a:	89 a3       	std	Y+33, r24	; 0x21
    636c:	89 a1       	ldd	r24, Y+33	; 0x21
    636e:	9a a1       	ldd	r25, Y+34	; 0x22
    6370:	9e 8f       	std	Y+30, r25	; 0x1e
    6372:	8d 8f       	std	Y+29, r24	; 0x1d
    6374:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6376:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6378:	01 97       	sbiw	r24, 0x01	; 1
    637a:	f1 f7       	brne	.-4      	; 0x6378 <LCD_vidInit4+0x302>
    637c:	9e 8f       	std	Y+30, r25	; 0x1e
    637e:	8d 8f       	std	Y+29, r24	; 0x1d

	  //wait for a time
	  _delay_ms(30);

	  //display clear
	  LCD_vidSendCommand(0b00000000);
    6380:	80 e0       	ldi	r24, 0x00	; 0
    6382:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	  LCD_vidSendCommand(0b00010000);
    6386:	80 e1       	ldi	r24, 0x10	; 16
    6388:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    638c:	80 e0       	ldi	r24, 0x00	; 0
    638e:	90 e0       	ldi	r25, 0x00	; 0
    6390:	a0 ef       	ldi	r26, 0xF0	; 240
    6392:	b1 e4       	ldi	r27, 0x41	; 65
    6394:	89 8f       	std	Y+25, r24	; 0x19
    6396:	9a 8f       	std	Y+26, r25	; 0x1a
    6398:	ab 8f       	std	Y+27, r26	; 0x1b
    639a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    639c:	69 8d       	ldd	r22, Y+25	; 0x19
    639e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    63a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    63a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    63a4:	20 e0       	ldi	r18, 0x00	; 0
    63a6:	30 e0       	ldi	r19, 0x00	; 0
    63a8:	4a ef       	ldi	r20, 0xFA	; 250
    63aa:	54 e4       	ldi	r21, 0x44	; 68
    63ac:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    63b0:	dc 01       	movw	r26, r24
    63b2:	cb 01       	movw	r24, r22
    63b4:	8d 8b       	std	Y+21, r24	; 0x15
    63b6:	9e 8b       	std	Y+22, r25	; 0x16
    63b8:	af 8b       	std	Y+23, r26	; 0x17
    63ba:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    63bc:	6d 89       	ldd	r22, Y+21	; 0x15
    63be:	7e 89       	ldd	r23, Y+22	; 0x16
    63c0:	8f 89       	ldd	r24, Y+23	; 0x17
    63c2:	98 8d       	ldd	r25, Y+24	; 0x18
    63c4:	20 e0       	ldi	r18, 0x00	; 0
    63c6:	30 e0       	ldi	r19, 0x00	; 0
    63c8:	40 e8       	ldi	r20, 0x80	; 128
    63ca:	5f e3       	ldi	r21, 0x3F	; 63
    63cc:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    63d0:	88 23       	and	r24, r24
    63d2:	2c f4       	brge	.+10     	; 0x63de <LCD_vidInit4+0x368>
		__ticks = 1;
    63d4:	81 e0       	ldi	r24, 0x01	; 1
    63d6:	90 e0       	ldi	r25, 0x00	; 0
    63d8:	9c 8b       	std	Y+20, r25	; 0x14
    63da:	8b 8b       	std	Y+19, r24	; 0x13
    63dc:	3f c0       	rjmp	.+126    	; 0x645c <LCD_vidInit4+0x3e6>
	else if (__tmp > 65535)
    63de:	6d 89       	ldd	r22, Y+21	; 0x15
    63e0:	7e 89       	ldd	r23, Y+22	; 0x16
    63e2:	8f 89       	ldd	r24, Y+23	; 0x17
    63e4:	98 8d       	ldd	r25, Y+24	; 0x18
    63e6:	20 e0       	ldi	r18, 0x00	; 0
    63e8:	3f ef       	ldi	r19, 0xFF	; 255
    63ea:	4f e7       	ldi	r20, 0x7F	; 127
    63ec:	57 e4       	ldi	r21, 0x47	; 71
    63ee:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    63f2:	18 16       	cp	r1, r24
    63f4:	4c f5       	brge	.+82     	; 0x6448 <LCD_vidInit4+0x3d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    63f6:	69 8d       	ldd	r22, Y+25	; 0x19
    63f8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    63fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    63fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    63fe:	20 e0       	ldi	r18, 0x00	; 0
    6400:	30 e0       	ldi	r19, 0x00	; 0
    6402:	40 e2       	ldi	r20, 0x20	; 32
    6404:	51 e4       	ldi	r21, 0x41	; 65
    6406:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    640a:	dc 01       	movw	r26, r24
    640c:	cb 01       	movw	r24, r22
    640e:	bc 01       	movw	r22, r24
    6410:	cd 01       	movw	r24, r26
    6412:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6416:	dc 01       	movw	r26, r24
    6418:	cb 01       	movw	r24, r22
    641a:	9c 8b       	std	Y+20, r25	; 0x14
    641c:	8b 8b       	std	Y+19, r24	; 0x13
    641e:	0f c0       	rjmp	.+30     	; 0x643e <LCD_vidInit4+0x3c8>
    6420:	88 ec       	ldi	r24, 0xC8	; 200
    6422:	90 e0       	ldi	r25, 0x00	; 0
    6424:	9a 8b       	std	Y+18, r25	; 0x12
    6426:	89 8b       	std	Y+17, r24	; 0x11
    6428:	89 89       	ldd	r24, Y+17	; 0x11
    642a:	9a 89       	ldd	r25, Y+18	; 0x12
    642c:	01 97       	sbiw	r24, 0x01	; 1
    642e:	f1 f7       	brne	.-4      	; 0x642c <LCD_vidInit4+0x3b6>
    6430:	9a 8b       	std	Y+18, r25	; 0x12
    6432:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6434:	8b 89       	ldd	r24, Y+19	; 0x13
    6436:	9c 89       	ldd	r25, Y+20	; 0x14
    6438:	01 97       	sbiw	r24, 0x01	; 1
    643a:	9c 8b       	std	Y+20, r25	; 0x14
    643c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    643e:	8b 89       	ldd	r24, Y+19	; 0x13
    6440:	9c 89       	ldd	r25, Y+20	; 0x14
    6442:	00 97       	sbiw	r24, 0x00	; 0
    6444:	69 f7       	brne	.-38     	; 0x6420 <LCD_vidInit4+0x3aa>
    6446:	14 c0       	rjmp	.+40     	; 0x6470 <LCD_vidInit4+0x3fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6448:	6d 89       	ldd	r22, Y+21	; 0x15
    644a:	7e 89       	ldd	r23, Y+22	; 0x16
    644c:	8f 89       	ldd	r24, Y+23	; 0x17
    644e:	98 8d       	ldd	r25, Y+24	; 0x18
    6450:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6454:	dc 01       	movw	r26, r24
    6456:	cb 01       	movw	r24, r22
    6458:	9c 8b       	std	Y+20, r25	; 0x14
    645a:	8b 8b       	std	Y+19, r24	; 0x13
    645c:	8b 89       	ldd	r24, Y+19	; 0x13
    645e:	9c 89       	ldd	r25, Y+20	; 0x14
    6460:	98 8b       	std	Y+16, r25	; 0x10
    6462:	8f 87       	std	Y+15, r24	; 0x0f
    6464:	8f 85       	ldd	r24, Y+15	; 0x0f
    6466:	98 89       	ldd	r25, Y+16	; 0x10
    6468:	01 97       	sbiw	r24, 0x01	; 1
    646a:	f1 f7       	brne	.-4      	; 0x6468 <LCD_vidInit4+0x3f2>
    646c:	98 8b       	std	Y+16, r25	; 0x10
    646e:	8f 87       	std	Y+15, r24	; 0x0f

	  //wait for a time
	  _delay_ms(30);

	  //entry mode set
	 LCD_vidSendCommand(0b00000000);
    6470:	80 e0       	ldi	r24, 0x00	; 0
    6472:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	  LCD_vidSendCommand(0b01100000);
    6476:	80 e6       	ldi	r24, 0x60	; 96
    6478:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    647c:	80 e0       	ldi	r24, 0x00	; 0
    647e:	90 e0       	ldi	r25, 0x00	; 0
    6480:	a0 ef       	ldi	r26, 0xF0	; 240
    6482:	b1 e4       	ldi	r27, 0x41	; 65
    6484:	8b 87       	std	Y+11, r24	; 0x0b
    6486:	9c 87       	std	Y+12, r25	; 0x0c
    6488:	ad 87       	std	Y+13, r26	; 0x0d
    648a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    648c:	6b 85       	ldd	r22, Y+11	; 0x0b
    648e:	7c 85       	ldd	r23, Y+12	; 0x0c
    6490:	8d 85       	ldd	r24, Y+13	; 0x0d
    6492:	9e 85       	ldd	r25, Y+14	; 0x0e
    6494:	20 e0       	ldi	r18, 0x00	; 0
    6496:	30 e0       	ldi	r19, 0x00	; 0
    6498:	4a ef       	ldi	r20, 0xFA	; 250
    649a:	54 e4       	ldi	r21, 0x44	; 68
    649c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    64a0:	dc 01       	movw	r26, r24
    64a2:	cb 01       	movw	r24, r22
    64a4:	8f 83       	std	Y+7, r24	; 0x07
    64a6:	98 87       	std	Y+8, r25	; 0x08
    64a8:	a9 87       	std	Y+9, r26	; 0x09
    64aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    64ac:	6f 81       	ldd	r22, Y+7	; 0x07
    64ae:	78 85       	ldd	r23, Y+8	; 0x08
    64b0:	89 85       	ldd	r24, Y+9	; 0x09
    64b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    64b4:	20 e0       	ldi	r18, 0x00	; 0
    64b6:	30 e0       	ldi	r19, 0x00	; 0
    64b8:	40 e8       	ldi	r20, 0x80	; 128
    64ba:	5f e3       	ldi	r21, 0x3F	; 63
    64bc:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    64c0:	88 23       	and	r24, r24
    64c2:	2c f4       	brge	.+10     	; 0x64ce <LCD_vidInit4+0x458>
		__ticks = 1;
    64c4:	81 e0       	ldi	r24, 0x01	; 1
    64c6:	90 e0       	ldi	r25, 0x00	; 0
    64c8:	9e 83       	std	Y+6, r25	; 0x06
    64ca:	8d 83       	std	Y+5, r24	; 0x05
    64cc:	3f c0       	rjmp	.+126    	; 0x654c <LCD_vidInit4+0x4d6>
	else if (__tmp > 65535)
    64ce:	6f 81       	ldd	r22, Y+7	; 0x07
    64d0:	78 85       	ldd	r23, Y+8	; 0x08
    64d2:	89 85       	ldd	r24, Y+9	; 0x09
    64d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    64d6:	20 e0       	ldi	r18, 0x00	; 0
    64d8:	3f ef       	ldi	r19, 0xFF	; 255
    64da:	4f e7       	ldi	r20, 0x7F	; 127
    64dc:	57 e4       	ldi	r21, 0x47	; 71
    64de:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    64e2:	18 16       	cp	r1, r24
    64e4:	4c f5       	brge	.+82     	; 0x6538 <LCD_vidInit4+0x4c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    64e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    64e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    64ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    64ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    64ee:	20 e0       	ldi	r18, 0x00	; 0
    64f0:	30 e0       	ldi	r19, 0x00	; 0
    64f2:	40 e2       	ldi	r20, 0x20	; 32
    64f4:	51 e4       	ldi	r21, 0x41	; 65
    64f6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    64fa:	dc 01       	movw	r26, r24
    64fc:	cb 01       	movw	r24, r22
    64fe:	bc 01       	movw	r22, r24
    6500:	cd 01       	movw	r24, r26
    6502:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6506:	dc 01       	movw	r26, r24
    6508:	cb 01       	movw	r24, r22
    650a:	9e 83       	std	Y+6, r25	; 0x06
    650c:	8d 83       	std	Y+5, r24	; 0x05
    650e:	0f c0       	rjmp	.+30     	; 0x652e <LCD_vidInit4+0x4b8>
    6510:	88 ec       	ldi	r24, 0xC8	; 200
    6512:	90 e0       	ldi	r25, 0x00	; 0
    6514:	9c 83       	std	Y+4, r25	; 0x04
    6516:	8b 83       	std	Y+3, r24	; 0x03
    6518:	8b 81       	ldd	r24, Y+3	; 0x03
    651a:	9c 81       	ldd	r25, Y+4	; 0x04
    651c:	01 97       	sbiw	r24, 0x01	; 1
    651e:	f1 f7       	brne	.-4      	; 0x651c <LCD_vidInit4+0x4a6>
    6520:	9c 83       	std	Y+4, r25	; 0x04
    6522:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6524:	8d 81       	ldd	r24, Y+5	; 0x05
    6526:	9e 81       	ldd	r25, Y+6	; 0x06
    6528:	01 97       	sbiw	r24, 0x01	; 1
    652a:	9e 83       	std	Y+6, r25	; 0x06
    652c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    652e:	8d 81       	ldd	r24, Y+5	; 0x05
    6530:	9e 81       	ldd	r25, Y+6	; 0x06
    6532:	00 97       	sbiw	r24, 0x00	; 0
    6534:	69 f7       	brne	.-38     	; 0x6510 <LCD_vidInit4+0x49a>
    6536:	14 c0       	rjmp	.+40     	; 0x6560 <LCD_vidInit4+0x4ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6538:	6f 81       	ldd	r22, Y+7	; 0x07
    653a:	78 85       	ldd	r23, Y+8	; 0x08
    653c:	89 85       	ldd	r24, Y+9	; 0x09
    653e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6540:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    6544:	dc 01       	movw	r26, r24
    6546:	cb 01       	movw	r24, r22
    6548:	9e 83       	std	Y+6, r25	; 0x06
    654a:	8d 83       	std	Y+5, r24	; 0x05
    654c:	8d 81       	ldd	r24, Y+5	; 0x05
    654e:	9e 81       	ldd	r25, Y+6	; 0x06
    6550:	9a 83       	std	Y+2, r25	; 0x02
    6552:	89 83       	std	Y+1, r24	; 0x01
    6554:	89 81       	ldd	r24, Y+1	; 0x01
    6556:	9a 81       	ldd	r25, Y+2	; 0x02
    6558:	01 97       	sbiw	r24, 0x01	; 1
    655a:	f1 f7       	brne	.-4      	; 0x6558 <LCD_vidInit4+0x4e2>
    655c:	9a 83       	std	Y+2, r25	; 0x02
    655e:	89 83       	std	Y+1, r24	; 0x01

	  //wait for a time
	  _delay_ms(30);
}
    6560:	ca 5b       	subi	r28, 0xBA	; 186
    6562:	df 4f       	sbci	r29, 0xFF	; 255
    6564:	0f b6       	in	r0, 0x3f	; 63
    6566:	f8 94       	cli
    6568:	de bf       	out	0x3e, r29	; 62
    656a:	0f be       	out	0x3f, r0	; 63
    656c:	cd bf       	out	0x3d, r28	; 61
    656e:	cf 91       	pop	r28
    6570:	df 91       	pop	r29
    6572:	1f 91       	pop	r17
    6574:	0f 91       	pop	r16
    6576:	08 95       	ret

00006578 <LCD_vidWriteCharacter4>:

//....................................................................

void LCD_vidWriteCharacter4(uint8 u8DataCpy)
{
    6578:	df 93       	push	r29
    657a:	cf 93       	push	r28
    657c:	0f 92       	push	r0
    657e:	cd b7       	in	r28, 0x3d	; 61
    6580:	de b7       	in	r29, 0x3e	; 62
    6582:	89 83       	std	Y+1, r24	; 0x01
	LCD_vidWriteCharacter((GET_NippleH(u8DataCpy))<<4);
    6584:	89 81       	ldd	r24, Y+1	; 0x01
    6586:	80 7f       	andi	r24, 0xF0	; 240
    6588:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
	LCD_vidWriteCharacter((GET_NippleL(u8DataCpy))<<4);
    658c:	89 81       	ldd	r24, Y+1	; 0x01
    658e:	88 2f       	mov	r24, r24
    6590:	90 e0       	ldi	r25, 0x00	; 0
    6592:	82 95       	swap	r24
    6594:	92 95       	swap	r25
    6596:	90 7f       	andi	r25, 0xF0	; 240
    6598:	98 27       	eor	r25, r24
    659a:	80 7f       	andi	r24, 0xF0	; 240
    659c:	98 27       	eor	r25, r24
    659e:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
}
    65a2:	0f 90       	pop	r0
    65a4:	cf 91       	pop	r28
    65a6:	df 91       	pop	r29
    65a8:	08 95       	ret

000065aa <LCD_vidWriteString>:


void LCD_vidWriteString(uint8 *pu8StringCpy)
{
    65aa:	df 93       	push	r29
    65ac:	cf 93       	push	r28
    65ae:	cd b7       	in	r28, 0x3d	; 61
    65b0:	de b7       	in	r29, 0x3e	; 62
    65b2:	61 97       	sbiw	r28, 0x11	; 17
    65b4:	0f b6       	in	r0, 0x3f	; 63
    65b6:	f8 94       	cli
    65b8:	de bf       	out	0x3e, r29	; 62
    65ba:	0f be       	out	0x3f, r0	; 63
    65bc:	cd bf       	out	0x3d, r28	; 61
    65be:	99 8b       	std	Y+17, r25	; 0x11
    65c0:	88 8b       	std	Y+16, r24	; 0x10
	uint8 u8_index=0;
    65c2:	1f 86       	std	Y+15, r1	; 0x0f
    65c4:	80 c0       	rjmp	.+256    	; 0x66c6 <LCD_vidWriteString+0x11c>

	while(pu8StringCpy[u8_index]!='\0')

	{
		LCD_vidWriteCharacter(pu8StringCpy[u8_index]);
    65c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    65c8:	28 2f       	mov	r18, r24
    65ca:	30 e0       	ldi	r19, 0x00	; 0
    65cc:	88 89       	ldd	r24, Y+16	; 0x10
    65ce:	99 89       	ldd	r25, Y+17	; 0x11
    65d0:	fc 01       	movw	r30, r24
    65d2:	e2 0f       	add	r30, r18
    65d4:	f3 1f       	adc	r31, r19
    65d6:	80 81       	ld	r24, Z
    65d8:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
		u8_index++;
    65dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    65de:	8f 5f       	subi	r24, 0xFF	; 255
    65e0:	8f 87       	std	Y+15, r24	; 0x0f
    65e2:	80 e0       	ldi	r24, 0x00	; 0
    65e4:	90 e0       	ldi	r25, 0x00	; 0
    65e6:	a0 e0       	ldi	r26, 0x00	; 0
    65e8:	b0 e4       	ldi	r27, 0x40	; 64
    65ea:	8b 87       	std	Y+11, r24	; 0x0b
    65ec:	9c 87       	std	Y+12, r25	; 0x0c
    65ee:	ad 87       	std	Y+13, r26	; 0x0d
    65f0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    65f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    65f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    65f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    65f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    65fa:	20 e0       	ldi	r18, 0x00	; 0
    65fc:	30 e0       	ldi	r19, 0x00	; 0
    65fe:	4a ef       	ldi	r20, 0xFA	; 250
    6600:	54 e4       	ldi	r21, 0x44	; 68
    6602:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    6606:	dc 01       	movw	r26, r24
    6608:	cb 01       	movw	r24, r22
    660a:	8f 83       	std	Y+7, r24	; 0x07
    660c:	98 87       	std	Y+8, r25	; 0x08
    660e:	a9 87       	std	Y+9, r26	; 0x09
    6610:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6612:	6f 81       	ldd	r22, Y+7	; 0x07
    6614:	78 85       	ldd	r23, Y+8	; 0x08
    6616:	89 85       	ldd	r24, Y+9	; 0x09
    6618:	9a 85       	ldd	r25, Y+10	; 0x0a
    661a:	20 e0       	ldi	r18, 0x00	; 0
    661c:	30 e0       	ldi	r19, 0x00	; 0
    661e:	40 e8       	ldi	r20, 0x80	; 128
    6620:	5f e3       	ldi	r21, 0x3F	; 63
    6622:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    6626:	88 23       	and	r24, r24
    6628:	2c f4       	brge	.+10     	; 0x6634 <LCD_vidWriteString+0x8a>
		__ticks = 1;
    662a:	81 e0       	ldi	r24, 0x01	; 1
    662c:	90 e0       	ldi	r25, 0x00	; 0
    662e:	9e 83       	std	Y+6, r25	; 0x06
    6630:	8d 83       	std	Y+5, r24	; 0x05
    6632:	3f c0       	rjmp	.+126    	; 0x66b2 <LCD_vidWriteString+0x108>
	else if (__tmp > 65535)
    6634:	6f 81       	ldd	r22, Y+7	; 0x07
    6636:	78 85       	ldd	r23, Y+8	; 0x08
    6638:	89 85       	ldd	r24, Y+9	; 0x09
    663a:	9a 85       	ldd	r25, Y+10	; 0x0a
    663c:	20 e0       	ldi	r18, 0x00	; 0
    663e:	3f ef       	ldi	r19, 0xFF	; 255
    6640:	4f e7       	ldi	r20, 0x7F	; 127
    6642:	57 e4       	ldi	r21, 0x47	; 71
    6644:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    6648:	18 16       	cp	r1, r24
    664a:	4c f5       	brge	.+82     	; 0x669e <LCD_vidWriteString+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    664c:	6b 85       	ldd	r22, Y+11	; 0x0b
    664e:	7c 85       	ldd	r23, Y+12	; 0x0c
    6650:	8d 85       	ldd	r24, Y+13	; 0x0d
    6652:	9e 85       	ldd	r25, Y+14	; 0x0e
    6654:	20 e0       	ldi	r18, 0x00	; 0
    6656:	30 e0       	ldi	r19, 0x00	; 0
    6658:	40 e2       	ldi	r20, 0x20	; 32
    665a:	51 e4       	ldi	r21, 0x41	; 65
    665c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    6660:	dc 01       	movw	r26, r24
    6662:	cb 01       	movw	r24, r22
    6664:	bc 01       	movw	r22, r24
    6666:	cd 01       	movw	r24, r26
    6668:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    666c:	dc 01       	movw	r26, r24
    666e:	cb 01       	movw	r24, r22
    6670:	9e 83       	std	Y+6, r25	; 0x06
    6672:	8d 83       	std	Y+5, r24	; 0x05
    6674:	0f c0       	rjmp	.+30     	; 0x6694 <LCD_vidWriteString+0xea>
    6676:	88 ec       	ldi	r24, 0xC8	; 200
    6678:	90 e0       	ldi	r25, 0x00	; 0
    667a:	9c 83       	std	Y+4, r25	; 0x04
    667c:	8b 83       	std	Y+3, r24	; 0x03
    667e:	8b 81       	ldd	r24, Y+3	; 0x03
    6680:	9c 81       	ldd	r25, Y+4	; 0x04
    6682:	01 97       	sbiw	r24, 0x01	; 1
    6684:	f1 f7       	brne	.-4      	; 0x6682 <LCD_vidWriteString+0xd8>
    6686:	9c 83       	std	Y+4, r25	; 0x04
    6688:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    668a:	8d 81       	ldd	r24, Y+5	; 0x05
    668c:	9e 81       	ldd	r25, Y+6	; 0x06
    668e:	01 97       	sbiw	r24, 0x01	; 1
    6690:	9e 83       	std	Y+6, r25	; 0x06
    6692:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6694:	8d 81       	ldd	r24, Y+5	; 0x05
    6696:	9e 81       	ldd	r25, Y+6	; 0x06
    6698:	00 97       	sbiw	r24, 0x00	; 0
    669a:	69 f7       	brne	.-38     	; 0x6676 <LCD_vidWriteString+0xcc>
    669c:	14 c0       	rjmp	.+40     	; 0x66c6 <LCD_vidWriteString+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    669e:	6f 81       	ldd	r22, Y+7	; 0x07
    66a0:	78 85       	ldd	r23, Y+8	; 0x08
    66a2:	89 85       	ldd	r24, Y+9	; 0x09
    66a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    66a6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    66aa:	dc 01       	movw	r26, r24
    66ac:	cb 01       	movw	r24, r22
    66ae:	9e 83       	std	Y+6, r25	; 0x06
    66b0:	8d 83       	std	Y+5, r24	; 0x05
    66b2:	8d 81       	ldd	r24, Y+5	; 0x05
    66b4:	9e 81       	ldd	r25, Y+6	; 0x06
    66b6:	9a 83       	std	Y+2, r25	; 0x02
    66b8:	89 83       	std	Y+1, r24	; 0x01
    66ba:	89 81       	ldd	r24, Y+1	; 0x01
    66bc:	9a 81       	ldd	r25, Y+2	; 0x02
    66be:	01 97       	sbiw	r24, 0x01	; 1
    66c0:	f1 f7       	brne	.-4      	; 0x66be <LCD_vidWriteString+0x114>
    66c2:	9a 83       	std	Y+2, r25	; 0x02
    66c4:	89 83       	std	Y+1, r24	; 0x01

void LCD_vidWriteString(uint8 *pu8StringCpy)
{
	uint8 u8_index=0;

	while(pu8StringCpy[u8_index]!='\0')
    66c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    66c8:	28 2f       	mov	r18, r24
    66ca:	30 e0       	ldi	r19, 0x00	; 0
    66cc:	88 89       	ldd	r24, Y+16	; 0x10
    66ce:	99 89       	ldd	r25, Y+17	; 0x11
    66d0:	fc 01       	movw	r30, r24
    66d2:	e2 0f       	add	r30, r18
    66d4:	f3 1f       	adc	r31, r19
    66d6:	80 81       	ld	r24, Z
    66d8:	88 23       	and	r24, r24
    66da:	09 f0       	breq	.+2      	; 0x66de <LCD_vidWriteString+0x134>
    66dc:	74 cf       	rjmp	.-280    	; 0x65c6 <LCD_vidWriteString+0x1c>
	{
		LCD_vidWriteCharacter(pu8StringCpy[u8_index]);
		u8_index++;
		_delay_ms(2);
	}
}
    66de:	61 96       	adiw	r28, 0x11	; 17
    66e0:	0f b6       	in	r0, 0x3f	; 63
    66e2:	f8 94       	cli
    66e4:	de bf       	out	0x3e, r29	; 62
    66e6:	0f be       	out	0x3f, r0	; 63
    66e8:	cd bf       	out	0x3d, r28	; 61
    66ea:	cf 91       	pop	r28
    66ec:	df 91       	pop	r29
    66ee:	08 95       	ret

000066f0 <LCD_vidWriteString4>:
//...................................................................................
void LCD_vidWriteString4(uint8 *pu8StringCpy)
{
    66f0:	df 93       	push	r29
    66f2:	cf 93       	push	r28
    66f4:	cd b7       	in	r28, 0x3d	; 61
    66f6:	de b7       	in	r29, 0x3e	; 62
    66f8:	61 97       	sbiw	r28, 0x11	; 17
    66fa:	0f b6       	in	r0, 0x3f	; 63
    66fc:	f8 94       	cli
    66fe:	de bf       	out	0x3e, r29	; 62
    6700:	0f be       	out	0x3f, r0	; 63
    6702:	cd bf       	out	0x3d, r28	; 61
    6704:	99 8b       	std	Y+17, r25	; 0x11
    6706:	88 8b       	std	Y+16, r24	; 0x10
	uint8 u8_index=0;
    6708:	1f 86       	std	Y+15, r1	; 0x0f
    670a:	80 c0       	rjmp	.+256    	; 0x680c <LCD_vidWriteString4+0x11c>

		while(pu8StringCpy[u8_index]!='\0')

		{
			LCD_vidWriteCharacter4(pu8StringCpy[u8_index]);
    670c:	8f 85       	ldd	r24, Y+15	; 0x0f
    670e:	28 2f       	mov	r18, r24
    6710:	30 e0       	ldi	r19, 0x00	; 0
    6712:	88 89       	ldd	r24, Y+16	; 0x10
    6714:	99 89       	ldd	r25, Y+17	; 0x11
    6716:	fc 01       	movw	r30, r24
    6718:	e2 0f       	add	r30, r18
    671a:	f3 1f       	adc	r31, r19
    671c:	80 81       	ld	r24, Z
    671e:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
			u8_index++;
    6722:	8f 85       	ldd	r24, Y+15	; 0x0f
    6724:	8f 5f       	subi	r24, 0xFF	; 255
    6726:	8f 87       	std	Y+15, r24	; 0x0f
    6728:	80 e0       	ldi	r24, 0x00	; 0
    672a:	90 e0       	ldi	r25, 0x00	; 0
    672c:	a0 e8       	ldi	r26, 0x80	; 128
    672e:	bf e3       	ldi	r27, 0x3F	; 63
    6730:	8b 87       	std	Y+11, r24	; 0x0b
    6732:	9c 87       	std	Y+12, r25	; 0x0c
    6734:	ad 87       	std	Y+13, r26	; 0x0d
    6736:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6738:	6b 85       	ldd	r22, Y+11	; 0x0b
    673a:	7c 85       	ldd	r23, Y+12	; 0x0c
    673c:	8d 85       	ldd	r24, Y+13	; 0x0d
    673e:	9e 85       	ldd	r25, Y+14	; 0x0e
    6740:	20 e0       	ldi	r18, 0x00	; 0
    6742:	30 e0       	ldi	r19, 0x00	; 0
    6744:	4a ef       	ldi	r20, 0xFA	; 250
    6746:	54 e4       	ldi	r21, 0x44	; 68
    6748:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    674c:	dc 01       	movw	r26, r24
    674e:	cb 01       	movw	r24, r22
    6750:	8f 83       	std	Y+7, r24	; 0x07
    6752:	98 87       	std	Y+8, r25	; 0x08
    6754:	a9 87       	std	Y+9, r26	; 0x09
    6756:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6758:	6f 81       	ldd	r22, Y+7	; 0x07
    675a:	78 85       	ldd	r23, Y+8	; 0x08
    675c:	89 85       	ldd	r24, Y+9	; 0x09
    675e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6760:	20 e0       	ldi	r18, 0x00	; 0
    6762:	30 e0       	ldi	r19, 0x00	; 0
    6764:	40 e8       	ldi	r20, 0x80	; 128
    6766:	5f e3       	ldi	r21, 0x3F	; 63
    6768:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    676c:	88 23       	and	r24, r24
    676e:	2c f4       	brge	.+10     	; 0x677a <LCD_vidWriteString4+0x8a>
		__ticks = 1;
    6770:	81 e0       	ldi	r24, 0x01	; 1
    6772:	90 e0       	ldi	r25, 0x00	; 0
    6774:	9e 83       	std	Y+6, r25	; 0x06
    6776:	8d 83       	std	Y+5, r24	; 0x05
    6778:	3f c0       	rjmp	.+126    	; 0x67f8 <LCD_vidWriteString4+0x108>
	else if (__tmp > 65535)
    677a:	6f 81       	ldd	r22, Y+7	; 0x07
    677c:	78 85       	ldd	r23, Y+8	; 0x08
    677e:	89 85       	ldd	r24, Y+9	; 0x09
    6780:	9a 85       	ldd	r25, Y+10	; 0x0a
    6782:	20 e0       	ldi	r18, 0x00	; 0
    6784:	3f ef       	ldi	r19, 0xFF	; 255
    6786:	4f e7       	ldi	r20, 0x7F	; 127
    6788:	57 e4       	ldi	r21, 0x47	; 71
    678a:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    678e:	18 16       	cp	r1, r24
    6790:	4c f5       	brge	.+82     	; 0x67e4 <LCD_vidWriteString4+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6792:	6b 85       	ldd	r22, Y+11	; 0x0b
    6794:	7c 85       	ldd	r23, Y+12	; 0x0c
    6796:	8d 85       	ldd	r24, Y+13	; 0x0d
    6798:	9e 85       	ldd	r25, Y+14	; 0x0e
    679a:	20 e0       	ldi	r18, 0x00	; 0
    679c:	30 e0       	ldi	r19, 0x00	; 0
    679e:	40 e2       	ldi	r20, 0x20	; 32
    67a0:	51 e4       	ldi	r21, 0x41	; 65
    67a2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    67a6:	dc 01       	movw	r26, r24
    67a8:	cb 01       	movw	r24, r22
    67aa:	bc 01       	movw	r22, r24
    67ac:	cd 01       	movw	r24, r26
    67ae:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    67b2:	dc 01       	movw	r26, r24
    67b4:	cb 01       	movw	r24, r22
    67b6:	9e 83       	std	Y+6, r25	; 0x06
    67b8:	8d 83       	std	Y+5, r24	; 0x05
    67ba:	0f c0       	rjmp	.+30     	; 0x67da <LCD_vidWriteString4+0xea>
    67bc:	88 ec       	ldi	r24, 0xC8	; 200
    67be:	90 e0       	ldi	r25, 0x00	; 0
    67c0:	9c 83       	std	Y+4, r25	; 0x04
    67c2:	8b 83       	std	Y+3, r24	; 0x03
    67c4:	8b 81       	ldd	r24, Y+3	; 0x03
    67c6:	9c 81       	ldd	r25, Y+4	; 0x04
    67c8:	01 97       	sbiw	r24, 0x01	; 1
    67ca:	f1 f7       	brne	.-4      	; 0x67c8 <LCD_vidWriteString4+0xd8>
    67cc:	9c 83       	std	Y+4, r25	; 0x04
    67ce:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    67d0:	8d 81       	ldd	r24, Y+5	; 0x05
    67d2:	9e 81       	ldd	r25, Y+6	; 0x06
    67d4:	01 97       	sbiw	r24, 0x01	; 1
    67d6:	9e 83       	std	Y+6, r25	; 0x06
    67d8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67da:	8d 81       	ldd	r24, Y+5	; 0x05
    67dc:	9e 81       	ldd	r25, Y+6	; 0x06
    67de:	00 97       	sbiw	r24, 0x00	; 0
    67e0:	69 f7       	brne	.-38     	; 0x67bc <LCD_vidWriteString4+0xcc>
    67e2:	14 c0       	rjmp	.+40     	; 0x680c <LCD_vidWriteString4+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    67e4:	6f 81       	ldd	r22, Y+7	; 0x07
    67e6:	78 85       	ldd	r23, Y+8	; 0x08
    67e8:	89 85       	ldd	r24, Y+9	; 0x09
    67ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    67ec:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    67f0:	dc 01       	movw	r26, r24
    67f2:	cb 01       	movw	r24, r22
    67f4:	9e 83       	std	Y+6, r25	; 0x06
    67f6:	8d 83       	std	Y+5, r24	; 0x05
    67f8:	8d 81       	ldd	r24, Y+5	; 0x05
    67fa:	9e 81       	ldd	r25, Y+6	; 0x06
    67fc:	9a 83       	std	Y+2, r25	; 0x02
    67fe:	89 83       	std	Y+1, r24	; 0x01
    6800:	89 81       	ldd	r24, Y+1	; 0x01
    6802:	9a 81       	ldd	r25, Y+2	; 0x02
    6804:	01 97       	sbiw	r24, 0x01	; 1
    6806:	f1 f7       	brne	.-4      	; 0x6804 <LCD_vidWriteString4+0x114>
    6808:	9a 83       	std	Y+2, r25	; 0x02
    680a:	89 83       	std	Y+1, r24	; 0x01
//...................................................................................
void LCD_vidWriteString4(uint8 *pu8StringCpy)
{
	uint8 u8_index=0;

		while(pu8StringCpy[u8_index]!='\0')
    680c:	8f 85       	ldd	r24, Y+15	; 0x0f
    680e:	28 2f       	mov	r18, r24
    6810:	30 e0       	ldi	r19, 0x00	; 0
    6812:	88 89       	ldd	r24, Y+16	; 0x10
    6814:	99 89       	ldd	r25, Y+17	; 0x11
    6816:	fc 01       	movw	r30, r24
    6818:	e2 0f       	add	r30, r18
    681a:	f3 1f       	adc	r31, r19
    681c:	80 81       	ld	r24, Z
    681e:	88 23       	and	r24, r24
    6820:	09 f0       	breq	.+2      	; 0x6824 <LCD_vidWriteString4+0x134>
    6822:	74 cf       	rjmp	.-280    	; 0x670c <LCD_vidWriteString4+0x1c>
		{
			LCD_vidWriteCharacter4(pu8StringCpy[u8_index]);
			u8_index++;
			_delay_ms(1);
		}
}
    6824:	61 96       	adiw	r28, 0x11	; 17
    6826:	0f b6       	in	r0, 0x3f	; 63
    6828:	f8 94       	cli
    682a:	de bf       	out	0x3e, r29	; 62
    682c:	0f be       	out	0x3f, r0	; 63
    682e:	cd bf       	out	0x3d, r28	; 61
    6830:	cf 91       	pop	r28
    6832:	df 91       	pop	r29
    6834:	08 95       	ret

00006836 <LCD_vidWriteUnSignedInteger>:
//..........................................................................................
void LCD_vidWriteUnSignedInteger(uint64 number)
{
    6836:	8f 92       	push	r8
    6838:	9f 92       	push	r9
    683a:	af 92       	push	r10
    683c:	bf 92       	push	r11
    683e:	cf 92       	push	r12
    6840:	df 92       	push	r13
    6842:	ef 92       	push	r14
    6844:	ff 92       	push	r15
    6846:	0f 93       	push	r16
    6848:	1f 93       	push	r17
    684a:	df 93       	push	r29
    684c:	cf 93       	push	r28
    684e:	cd b7       	in	r28, 0x3d	; 61
    6850:	de b7       	in	r29, 0x3e	; 62
    6852:	6d 97       	sbiw	r28, 0x1d	; 29
    6854:	0f b6       	in	r0, 0x3f	; 63
    6856:	f8 94       	cli
    6858:	de bf       	out	0x3e, r29	; 62
    685a:	0f be       	out	0x3f, r0	; 63
    685c:	cd bf       	out	0x3d, r28	; 61
    685e:	2e 8b       	std	Y+22, r18	; 0x16
    6860:	3f 8b       	std	Y+23, r19	; 0x17
    6862:	48 8f       	std	Y+24, r20	; 0x18
    6864:	59 8f       	std	Y+25, r21	; 0x19
    6866:	6a 8f       	std	Y+26, r22	; 0x1a
    6868:	7b 8f       	std	Y+27, r23	; 0x1b
    686a:	8c 8f       	std	Y+28, r24	; 0x1c
    686c:	9d 8f       	std	Y+29, r25	; 0x1d
	uint8 arr[20]={};
    686e:	84 e1       	ldi	r24, 0x14	; 20
    6870:	fe 01       	movw	r30, r28
    6872:	32 96       	adiw	r30, 0x02	; 2
    6874:	df 01       	movw	r26, r30
    6876:	98 2f       	mov	r25, r24
    6878:	1d 92       	st	X+, r1
    687a:	9a 95       	dec	r25
    687c:	e9 f7       	brne	.-6      	; 0x6878 <LCD_vidWriteUnSignedInteger+0x42>
    uint8 i=0;
    687e:	19 82       	std	Y+1, r1	; 0x01

    if(number==0)
    6880:	8e 89       	ldd	r24, Y+22	; 0x16
    6882:	9f 89       	ldd	r25, Y+23	; 0x17
    6884:	89 2b       	or	r24, r25
    6886:	98 8d       	ldd	r25, Y+24	; 0x18
    6888:	89 2b       	or	r24, r25
    688a:	99 8d       	ldd	r25, Y+25	; 0x19
    688c:	89 2b       	or	r24, r25
    688e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    6890:	89 2b       	or	r24, r25
    6892:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6894:	89 2b       	or	r24, r25
    6896:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6898:	89 2b       	or	r24, r25
    689a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    689c:	89 2b       	or	r24, r25
    689e:	88 23       	and	r24, r24
    68a0:	09 f0       	breq	.+2      	; 0x68a4 <LCD_vidWriteUnSignedInteger+0x6e>
    68a2:	6b c0       	rjmp	.+214    	; 0x697a <LCD_vidWriteUnSignedInteger+0x144>
    {
    	LCD_vidWriteCharacter(number+48);
    68a4:	8e 89       	ldd	r24, Y+22	; 0x16
    68a6:	80 5d       	subi	r24, 0xD0	; 208
    68a8:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    68ac:	8e c0       	rjmp	.+284    	; 0x69ca <LCD_vidWriteUnSignedInteger+0x194>
    }
    else{
   while((i<20)&&(number!=0))
   {   arr[i++]=number%10;
    68ae:	89 81       	ldd	r24, Y+1	; 0x01
    68b0:	88 2e       	mov	r8, r24
    68b2:	99 24       	eor	r9, r9
    68b4:	ae 88       	ldd	r10, Y+22	; 0x16
    68b6:	bf 88       	ldd	r11, Y+23	; 0x17
    68b8:	c8 8c       	ldd	r12, Y+24	; 0x18
    68ba:	d9 8c       	ldd	r13, Y+25	; 0x19
    68bc:	ea 8c       	ldd	r14, Y+26	; 0x1a
    68be:	fb 8c       	ldd	r15, Y+27	; 0x1b
    68c0:	0c 8d       	ldd	r16, Y+28	; 0x1c
    68c2:	1d 8d       	ldd	r17, Y+29	; 0x1d
    68c4:	2a 2d       	mov	r18, r10
    68c6:	3b 2d       	mov	r19, r11
    68c8:	4c 2d       	mov	r20, r12
    68ca:	5d 2d       	mov	r21, r13
    68cc:	6e 2d       	mov	r22, r14
    68ce:	7f 2d       	mov	r23, r15
    68d0:	80 2f       	mov	r24, r16
    68d2:	91 2f       	mov	r25, r17
    68d4:	0f 2e       	mov	r0, r31
    68d6:	fa e0       	ldi	r31, 0x0A	; 10
    68d8:	af 2e       	mov	r10, r31
    68da:	f0 2d       	mov	r31, r0
    68dc:	bb 24       	eor	r11, r11
    68de:	cc 24       	eor	r12, r12
    68e0:	dd 24       	eor	r13, r13
    68e2:	ee 24       	eor	r14, r14
    68e4:	ff 24       	eor	r15, r15
    68e6:	00 e0       	ldi	r16, 0x00	; 0
    68e8:	10 e0       	ldi	r17, 0x00	; 0
    68ea:	0e 94 87 07 	call	0xf0e	; 0xf0e <__umoddi3>
    68ee:	a2 2e       	mov	r10, r18
    68f0:	b3 2e       	mov	r11, r19
    68f2:	c4 2e       	mov	r12, r20
    68f4:	d5 2e       	mov	r13, r21
    68f6:	e6 2e       	mov	r14, r22
    68f8:	f7 2e       	mov	r15, r23
    68fa:	08 2f       	mov	r16, r24
    68fc:	19 2f       	mov	r17, r25
    68fe:	2a 2d       	mov	r18, r10
    6900:	3b 2d       	mov	r19, r11
    6902:	4c 2d       	mov	r20, r12
    6904:	5d 2d       	mov	r21, r13
    6906:	6e 2d       	mov	r22, r14
    6908:	7f 2d       	mov	r23, r15
    690a:	80 2f       	mov	r24, r16
    690c:	91 2f       	mov	r25, r17
    690e:	ce 01       	movw	r24, r28
    6910:	02 96       	adiw	r24, 0x02	; 2
    6912:	fc 01       	movw	r30, r24
    6914:	e8 0d       	add	r30, r8
    6916:	f9 1d       	adc	r31, r9
    6918:	20 83       	st	Z, r18
    691a:	89 81       	ldd	r24, Y+1	; 0x01
    691c:	8f 5f       	subi	r24, 0xFF	; 255
    691e:	89 83       	std	Y+1, r24	; 0x01

	       number/=10;
    6920:	ae 88       	ldd	r10, Y+22	; 0x16
    6922:	bf 88       	ldd	r11, Y+23	; 0x17
    6924:	c8 8c       	ldd	r12, Y+24	; 0x18
    6926:	d9 8c       	ldd	r13, Y+25	; 0x19
    6928:	ea 8c       	ldd	r14, Y+26	; 0x1a
    692a:	fb 8c       	ldd	r15, Y+27	; 0x1b
    692c:	0c 8d       	ldd	r16, Y+28	; 0x1c
    692e:	1d 8d       	ldd	r17, Y+29	; 0x1d
    6930:	2a 2d       	mov	r18, r10
    6932:	3b 2d       	mov	r19, r11
    6934:	4c 2d       	mov	r20, r12
    6936:	5d 2d       	mov	r21, r13
    6938:	6e 2d       	mov	r22, r14
    693a:	7f 2d       	mov	r23, r15
    693c:	80 2f       	mov	r24, r16
    693e:	91 2f       	mov	r25, r17
    6940:	0f 2e       	mov	r0, r31
    6942:	fa e0       	ldi	r31, 0x0A	; 10
    6944:	af 2e       	mov	r10, r31
    6946:	f0 2d       	mov	r31, r0
    6948:	bb 24       	eor	r11, r11
    694a:	cc 24       	eor	r12, r12
    694c:	dd 24       	eor	r13, r13
    694e:	ee 24       	eor	r14, r14
    6950:	ff 24       	eor	r15, r15
    6952:	00 e0       	ldi	r16, 0x00	; 0
    6954:	10 e0       	ldi	r17, 0x00	; 0
    6956:	0e 94 12 01 	call	0x224	; 0x224 <__udivdi3>
    695a:	a2 2e       	mov	r10, r18
    695c:	b3 2e       	mov	r11, r19
    695e:	c4 2e       	mov	r12, r20
    6960:	d5 2e       	mov	r13, r21
    6962:	e6 2e       	mov	r14, r22
    6964:	f7 2e       	mov	r15, r23
    6966:	08 2f       	mov	r16, r24
    6968:	19 2f       	mov	r17, r25
    696a:	ae 8a       	std	Y+22, r10	; 0x16
    696c:	bf 8a       	std	Y+23, r11	; 0x17
    696e:	c8 8e       	std	Y+24, r12	; 0x18
    6970:	d9 8e       	std	Y+25, r13	; 0x19
    6972:	ea 8e       	std	Y+26, r14	; 0x1a
    6974:	fb 8e       	std	Y+27, r15	; 0x1b
    6976:	0c 8f       	std	Y+28, r16	; 0x1c
    6978:	1d 8f       	std	Y+29, r17	; 0x1d
    if(number==0)
    {
    	LCD_vidWriteCharacter(number+48);
    }
    else{
   while((i<20)&&(number!=0))
    697a:	89 81       	ldd	r24, Y+1	; 0x01
    697c:	84 31       	cpi	r24, 0x14	; 20
    697e:	10 f5       	brcc	.+68     	; 0x69c4 <LCD_vidWriteUnSignedInteger+0x18e>
    6980:	8e 89       	ldd	r24, Y+22	; 0x16
    6982:	9f 89       	ldd	r25, Y+23	; 0x17
    6984:	89 2b       	or	r24, r25
    6986:	98 8d       	ldd	r25, Y+24	; 0x18
    6988:	89 2b       	or	r24, r25
    698a:	99 8d       	ldd	r25, Y+25	; 0x19
    698c:	89 2b       	or	r24, r25
    698e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    6990:	89 2b       	or	r24, r25
    6992:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6994:	89 2b       	or	r24, r25
    6996:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6998:	89 2b       	or	r24, r25
    699a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    699c:	89 2b       	or	r24, r25
    699e:	88 23       	and	r24, r24
    69a0:	09 f0       	breq	.+2      	; 0x69a4 <LCD_vidWriteUnSignedInteger+0x16e>
    69a2:	85 cf       	rjmp	.-246    	; 0x68ae <LCD_vidWriteUnSignedInteger+0x78>
    69a4:	0f c0       	rjmp	.+30     	; 0x69c4 <LCD_vidWriteUnSignedInteger+0x18e>
	       number/=10;

   }

       while(i!=0){
    	LCD_vidWriteCharacter(arr[--i]+48);
    69a6:	89 81       	ldd	r24, Y+1	; 0x01
    69a8:	81 50       	subi	r24, 0x01	; 1
    69aa:	89 83       	std	Y+1, r24	; 0x01
    69ac:	89 81       	ldd	r24, Y+1	; 0x01
    69ae:	28 2f       	mov	r18, r24
    69b0:	30 e0       	ldi	r19, 0x00	; 0
    69b2:	ce 01       	movw	r24, r28
    69b4:	02 96       	adiw	r24, 0x02	; 2
    69b6:	fc 01       	movw	r30, r24
    69b8:	e2 0f       	add	r30, r18
    69ba:	f3 1f       	adc	r31, r19
    69bc:	80 81       	ld	r24, Z
    69be:	80 5d       	subi	r24, 0xD0	; 208
    69c0:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>

	       number/=10;

   }

       while(i!=0){
    69c4:	89 81       	ldd	r24, Y+1	; 0x01
    69c6:	88 23       	and	r24, r24
    69c8:	71 f7       	brne	.-36     	; 0x69a6 <LCD_vidWriteUnSignedInteger+0x170>
    	LCD_vidWriteCharacter(arr[--i]+48);

       }
    }
}
    69ca:	6d 96       	adiw	r28, 0x1d	; 29
    69cc:	0f b6       	in	r0, 0x3f	; 63
    69ce:	f8 94       	cli
    69d0:	de bf       	out	0x3e, r29	; 62
    69d2:	0f be       	out	0x3f, r0	; 63
    69d4:	cd bf       	out	0x3d, r28	; 61
    69d6:	cf 91       	pop	r28
    69d8:	df 91       	pop	r29
    69da:	1f 91       	pop	r17
    69dc:	0f 91       	pop	r16
    69de:	ff 90       	pop	r15
    69e0:	ef 90       	pop	r14
    69e2:	df 90       	pop	r13
    69e4:	cf 90       	pop	r12
    69e6:	bf 90       	pop	r11
    69e8:	af 90       	pop	r10
    69ea:	9f 90       	pop	r9
    69ec:	8f 90       	pop	r8
    69ee:	08 95       	ret

000069f0 <LCD_vidWriteUnSignedInteger4>:
//............................................................................................
void LCD_vidWriteUnSignedInteger4(uint64 number)
{
    69f0:	8f 92       	push	r8
    69f2:	9f 92       	push	r9
    69f4:	af 92       	push	r10
    69f6:	bf 92       	push	r11
    69f8:	cf 92       	push	r12
    69fa:	df 92       	push	r13
    69fc:	ef 92       	push	r14
    69fe:	ff 92       	push	r15
    6a00:	0f 93       	push	r16
    6a02:	1f 93       	push	r17
    6a04:	df 93       	push	r29
    6a06:	cf 93       	push	r28
    6a08:	cd b7       	in	r28, 0x3d	; 61
    6a0a:	de b7       	in	r29, 0x3e	; 62
    6a0c:	6d 97       	sbiw	r28, 0x1d	; 29
    6a0e:	0f b6       	in	r0, 0x3f	; 63
    6a10:	f8 94       	cli
    6a12:	de bf       	out	0x3e, r29	; 62
    6a14:	0f be       	out	0x3f, r0	; 63
    6a16:	cd bf       	out	0x3d, r28	; 61
    6a18:	2e 8b       	std	Y+22, r18	; 0x16
    6a1a:	3f 8b       	std	Y+23, r19	; 0x17
    6a1c:	48 8f       	std	Y+24, r20	; 0x18
    6a1e:	59 8f       	std	Y+25, r21	; 0x19
    6a20:	6a 8f       	std	Y+26, r22	; 0x1a
    6a22:	7b 8f       	std	Y+27, r23	; 0x1b
    6a24:	8c 8f       	std	Y+28, r24	; 0x1c
    6a26:	9d 8f       	std	Y+29, r25	; 0x1d
	uint8 arr[20]={};
    6a28:	84 e1       	ldi	r24, 0x14	; 20
    6a2a:	fe 01       	movw	r30, r28
    6a2c:	32 96       	adiw	r30, 0x02	; 2
    6a2e:	df 01       	movw	r26, r30
    6a30:	98 2f       	mov	r25, r24
    6a32:	1d 92       	st	X+, r1
    6a34:	9a 95       	dec	r25
    6a36:	e9 f7       	brne	.-6      	; 0x6a32 <LCD_vidWriteUnSignedInteger4+0x42>
    uint8 i=0;
    6a38:	19 82       	std	Y+1, r1	; 0x01

    if(number==0)
    6a3a:	8e 89       	ldd	r24, Y+22	; 0x16
    6a3c:	9f 89       	ldd	r25, Y+23	; 0x17
    6a3e:	89 2b       	or	r24, r25
    6a40:	98 8d       	ldd	r25, Y+24	; 0x18
    6a42:	89 2b       	or	r24, r25
    6a44:	99 8d       	ldd	r25, Y+25	; 0x19
    6a46:	89 2b       	or	r24, r25
    6a48:	9a 8d       	ldd	r25, Y+26	; 0x1a
    6a4a:	89 2b       	or	r24, r25
    6a4c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6a4e:	89 2b       	or	r24, r25
    6a50:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6a52:	89 2b       	or	r24, r25
    6a54:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6a56:	89 2b       	or	r24, r25
    6a58:	88 23       	and	r24, r24
    6a5a:	09 f0       	breq	.+2      	; 0x6a5e <LCD_vidWriteUnSignedInteger4+0x6e>
    6a5c:	6b c0       	rjmp	.+214    	; 0x6b34 <LCD_vidWriteUnSignedInteger4+0x144>
    {
    	LCD_vidWriteCharacter4(number+48);
    6a5e:	8e 89       	ldd	r24, Y+22	; 0x16
    6a60:	80 5d       	subi	r24, 0xD0	; 208
    6a62:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
    6a66:	8e c0       	rjmp	.+284    	; 0x6b84 <LCD_vidWriteUnSignedInteger4+0x194>
    }
    else{
   while((i<20)&&(number!=0))
   {   arr[i++]=number%10;
    6a68:	89 81       	ldd	r24, Y+1	; 0x01
    6a6a:	88 2e       	mov	r8, r24
    6a6c:	99 24       	eor	r9, r9
    6a6e:	ae 88       	ldd	r10, Y+22	; 0x16
    6a70:	bf 88       	ldd	r11, Y+23	; 0x17
    6a72:	c8 8c       	ldd	r12, Y+24	; 0x18
    6a74:	d9 8c       	ldd	r13, Y+25	; 0x19
    6a76:	ea 8c       	ldd	r14, Y+26	; 0x1a
    6a78:	fb 8c       	ldd	r15, Y+27	; 0x1b
    6a7a:	0c 8d       	ldd	r16, Y+28	; 0x1c
    6a7c:	1d 8d       	ldd	r17, Y+29	; 0x1d
    6a7e:	2a 2d       	mov	r18, r10
    6a80:	3b 2d       	mov	r19, r11
    6a82:	4c 2d       	mov	r20, r12
    6a84:	5d 2d       	mov	r21, r13
    6a86:	6e 2d       	mov	r22, r14
    6a88:	7f 2d       	mov	r23, r15
    6a8a:	80 2f       	mov	r24, r16
    6a8c:	91 2f       	mov	r25, r17
    6a8e:	0f 2e       	mov	r0, r31
    6a90:	fa e0       	ldi	r31, 0x0A	; 10
    6a92:	af 2e       	mov	r10, r31
    6a94:	f0 2d       	mov	r31, r0
    6a96:	bb 24       	eor	r11, r11
    6a98:	cc 24       	eor	r12, r12
    6a9a:	dd 24       	eor	r13, r13
    6a9c:	ee 24       	eor	r14, r14
    6a9e:	ff 24       	eor	r15, r15
    6aa0:	00 e0       	ldi	r16, 0x00	; 0
    6aa2:	10 e0       	ldi	r17, 0x00	; 0
    6aa4:	0e 94 87 07 	call	0xf0e	; 0xf0e <__umoddi3>
    6aa8:	a2 2e       	mov	r10, r18
    6aaa:	b3 2e       	mov	r11, r19
    6aac:	c4 2e       	mov	r12, r20
    6aae:	d5 2e       	mov	r13, r21
    6ab0:	e6 2e       	mov	r14, r22
    6ab2:	f7 2e       	mov	r15, r23
    6ab4:	08 2f       	mov	r16, r24
    6ab6:	19 2f       	mov	r17, r25
    6ab8:	2a 2d       	mov	r18, r10
    6aba:	3b 2d       	mov	r19, r11
    6abc:	4c 2d       	mov	r20, r12
    6abe:	5d 2d       	mov	r21, r13
    6ac0:	6e 2d       	mov	r22, r14
    6ac2:	7f 2d       	mov	r23, r15
    6ac4:	80 2f       	mov	r24, r16
    6ac6:	91 2f       	mov	r25, r17
    6ac8:	ce 01       	movw	r24, r28
    6aca:	02 96       	adiw	r24, 0x02	; 2
    6acc:	fc 01       	movw	r30, r24
    6ace:	e8 0d       	add	r30, r8
    6ad0:	f9 1d       	adc	r31, r9
    6ad2:	20 83       	st	Z, r18
    6ad4:	89 81       	ldd	r24, Y+1	; 0x01
    6ad6:	8f 5f       	subi	r24, 0xFF	; 255
    6ad8:	89 83       	std	Y+1, r24	; 0x01

	       number/=10;
    6ada:	ae 88       	ldd	r10, Y+22	; 0x16
    6adc:	bf 88       	ldd	r11, Y+23	; 0x17
    6ade:	c8 8c       	ldd	r12, Y+24	; 0x18
    6ae0:	d9 8c       	ldd	r13, Y+25	; 0x19
    6ae2:	ea 8c       	ldd	r14, Y+26	; 0x1a
    6ae4:	fb 8c       	ldd	r15, Y+27	; 0x1b
    6ae6:	0c 8d       	ldd	r16, Y+28	; 0x1c
    6ae8:	1d 8d       	ldd	r17, Y+29	; 0x1d
    6aea:	2a 2d       	mov	r18, r10
    6aec:	3b 2d       	mov	r19, r11
    6aee:	4c 2d       	mov	r20, r12
    6af0:	5d 2d       	mov	r21, r13
    6af2:	6e 2d       	mov	r22, r14
    6af4:	7f 2d       	mov	r23, r15
    6af6:	80 2f       	mov	r24, r16
    6af8:	91 2f       	mov	r25, r17
    6afa:	0f 2e       	mov	r0, r31
    6afc:	fa e0       	ldi	r31, 0x0A	; 10
    6afe:	af 2e       	mov	r10, r31
    6b00:	f0 2d       	mov	r31, r0
    6b02:	bb 24       	eor	r11, r11
    6b04:	cc 24       	eor	r12, r12
    6b06:	dd 24       	eor	r13, r13
    6b08:	ee 24       	eor	r14, r14
    6b0a:	ff 24       	eor	r15, r15
    6b0c:	00 e0       	ldi	r16, 0x00	; 0
    6b0e:	10 e0       	ldi	r17, 0x00	; 0
    6b10:	0e 94 12 01 	call	0x224	; 0x224 <__udivdi3>
    6b14:	a2 2e       	mov	r10, r18
    6b16:	b3 2e       	mov	r11, r19
    6b18:	c4 2e       	mov	r12, r20
    6b1a:	d5 2e       	mov	r13, r21
    6b1c:	e6 2e       	mov	r14, r22
    6b1e:	f7 2e       	mov	r15, r23
    6b20:	08 2f       	mov	r16, r24
    6b22:	19 2f       	mov	r17, r25
    6b24:	ae 8a       	std	Y+22, r10	; 0x16
    6b26:	bf 8a       	std	Y+23, r11	; 0x17
    6b28:	c8 8e       	std	Y+24, r12	; 0x18
    6b2a:	d9 8e       	std	Y+25, r13	; 0x19
    6b2c:	ea 8e       	std	Y+26, r14	; 0x1a
    6b2e:	fb 8e       	std	Y+27, r15	; 0x1b
    6b30:	0c 8f       	std	Y+28, r16	; 0x1c
    6b32:	1d 8f       	std	Y+29, r17	; 0x1d
    if(number==0)
    {
    	LCD_vidWriteCharacter4(number+48);
    }
    else{
   while((i<20)&&(number!=0))
    6b34:	89 81       	ldd	r24, Y+1	; 0x01
    6b36:	84 31       	cpi	r24, 0x14	; 20
    6b38:	10 f5       	brcc	.+68     	; 0x6b7e <LCD_vidWriteUnSignedInteger4+0x18e>
    6b3a:	8e 89       	ldd	r24, Y+22	; 0x16
    6b3c:	9f 89       	ldd	r25, Y+23	; 0x17
    6b3e:	89 2b       	or	r24, r25
    6b40:	98 8d       	ldd	r25, Y+24	; 0x18
    6b42:	89 2b       	or	r24, r25
    6b44:	99 8d       	ldd	r25, Y+25	; 0x19
    6b46:	89 2b       	or	r24, r25
    6b48:	9a 8d       	ldd	r25, Y+26	; 0x1a
    6b4a:	89 2b       	or	r24, r25
    6b4c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6b4e:	89 2b       	or	r24, r25
    6b50:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6b52:	89 2b       	or	r24, r25
    6b54:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6b56:	89 2b       	or	r24, r25
    6b58:	88 23       	and	r24, r24
    6b5a:	09 f0       	breq	.+2      	; 0x6b5e <LCD_vidWriteUnSignedInteger4+0x16e>
    6b5c:	85 cf       	rjmp	.-246    	; 0x6a68 <LCD_vidWriteUnSignedInteger4+0x78>
    6b5e:	0f c0       	rjmp	.+30     	; 0x6b7e <LCD_vidWriteUnSignedInteger4+0x18e>
	       number/=10;

   }

       while(i!=0){
    	LCD_vidWriteCharacter4(arr[--i]+48);
    6b60:	89 81       	ldd	r24, Y+1	; 0x01
    6b62:	81 50       	subi	r24, 0x01	; 1
    6b64:	89 83       	std	Y+1, r24	; 0x01
    6b66:	89 81       	ldd	r24, Y+1	; 0x01
    6b68:	28 2f       	mov	r18, r24
    6b6a:	30 e0       	ldi	r19, 0x00	; 0
    6b6c:	ce 01       	movw	r24, r28
    6b6e:	02 96       	adiw	r24, 0x02	; 2
    6b70:	fc 01       	movw	r30, r24
    6b72:	e2 0f       	add	r30, r18
    6b74:	f3 1f       	adc	r31, r19
    6b76:	80 81       	ld	r24, Z
    6b78:	80 5d       	subi	r24, 0xD0	; 208
    6b7a:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>

	       number/=10;

   }

       while(i!=0){
    6b7e:	89 81       	ldd	r24, Y+1	; 0x01
    6b80:	88 23       	and	r24, r24
    6b82:	71 f7       	brne	.-36     	; 0x6b60 <LCD_vidWriteUnSignedInteger4+0x170>
    	LCD_vidWriteCharacter4(arr[--i]+48);

       }
    }
}
    6b84:	6d 96       	adiw	r28, 0x1d	; 29
    6b86:	0f b6       	in	r0, 0x3f	; 63
    6b88:	f8 94       	cli
    6b8a:	de bf       	out	0x3e, r29	; 62
    6b8c:	0f be       	out	0x3f, r0	; 63
    6b8e:	cd bf       	out	0x3d, r28	; 61
    6b90:	cf 91       	pop	r28
    6b92:	df 91       	pop	r29
    6b94:	1f 91       	pop	r17
    6b96:	0f 91       	pop	r16
    6b98:	ff 90       	pop	r15
    6b9a:	ef 90       	pop	r14
    6b9c:	df 90       	pop	r13
    6b9e:	cf 90       	pop	r12
    6ba0:	bf 90       	pop	r11
    6ba2:	af 90       	pop	r10
    6ba4:	9f 90       	pop	r9
    6ba6:	8f 90       	pop	r8
    6ba8:	08 95       	ret

00006baa <LCD_vidWriteSignedInteger>:
//......................................................................................
void LCD_vidWriteSignedInteger(sint64 s64SignedNumCpy)
{
    6baa:	af 92       	push	r10
    6bac:	bf 92       	push	r11
    6bae:	cf 92       	push	r12
    6bb0:	df 92       	push	r13
    6bb2:	ef 92       	push	r14
    6bb4:	ff 92       	push	r15
    6bb6:	0f 93       	push	r16
    6bb8:	1f 93       	push	r17
    6bba:	df 93       	push	r29
    6bbc:	cf 93       	push	r28
    6bbe:	cd b7       	in	r28, 0x3d	; 61
    6bc0:	de b7       	in	r29, 0x3e	; 62
    6bc2:	ec 97       	sbiw	r28, 0x3c	; 60
    6bc4:	0f b6       	in	r0, 0x3f	; 63
    6bc6:	f8 94       	cli
    6bc8:	de bf       	out	0x3e, r29	; 62
    6bca:	0f be       	out	0x3f, r0	; 63
    6bcc:	cd bf       	out	0x3d, r28	; 61
    6bce:	29 87       	std	Y+9, r18	; 0x09
    6bd0:	3a 87       	std	Y+10, r19	; 0x0a
    6bd2:	4b 87       	std	Y+11, r20	; 0x0b
    6bd4:	5c 87       	std	Y+12, r21	; 0x0c
    6bd6:	6d 87       	std	Y+13, r22	; 0x0d
    6bd8:	7e 87       	std	Y+14, r23	; 0x0e
    6bda:	8f 87       	std	Y+15, r24	; 0x0f
    6bdc:	98 8b       	std	Y+16, r25	; 0x10
	uint64 u64UnsignedNumCpy=0;
    6bde:	19 82       	std	Y+1, r1	; 0x01
    6be0:	1a 82       	std	Y+2, r1	; 0x02
    6be2:	1b 82       	std	Y+3, r1	; 0x03
    6be4:	1c 82       	std	Y+4, r1	; 0x04
    6be6:	1d 82       	std	Y+5, r1	; 0x05
    6be8:	1e 82       	std	Y+6, r1	; 0x06
    6bea:	1f 82       	std	Y+7, r1	; 0x07
    6bec:	18 86       	std	Y+8, r1	; 0x08
	if(s64SignedNumCpy<(sint64)0)
    6bee:	88 89       	ldd	r24, Y+16	; 0x10
    6bf0:	88 23       	and	r24, r24
    6bf2:	d4 f0       	brlt	.+52     	; 0x6c28 <LCD_vidWriteSignedInteger+0x7e>
    6bf4:	88 89       	ldd	r24, Y+16	; 0x10
    6bf6:	88 23       	and	r24, r24
    6bf8:	09 f0       	breq	.+2      	; 0x6bfc <LCD_vidWriteSignedInteger+0x52>
    6bfa:	fd c0       	rjmp	.+506    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6bfc:	8f 85       	ldd	r24, Y+15	; 0x0f
    6bfe:	88 23       	and	r24, r24
    6c00:	09 f0       	breq	.+2      	; 0x6c04 <LCD_vidWriteSignedInteger+0x5a>
    6c02:	f9 c0       	rjmp	.+498    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6c04:	8e 85       	ldd	r24, Y+14	; 0x0e
    6c06:	88 23       	and	r24, r24
    6c08:	09 f0       	breq	.+2      	; 0x6c0c <LCD_vidWriteSignedInteger+0x62>
    6c0a:	f5 c0       	rjmp	.+490    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6c0c:	8d 85       	ldd	r24, Y+13	; 0x0d
    6c0e:	88 23       	and	r24, r24
    6c10:	09 f0       	breq	.+2      	; 0x6c14 <LCD_vidWriteSignedInteger+0x6a>
    6c12:	f1 c0       	rjmp	.+482    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6c14:	8c 85       	ldd	r24, Y+12	; 0x0c
    6c16:	88 23       	and	r24, r24
    6c18:	09 f0       	breq	.+2      	; 0x6c1c <LCD_vidWriteSignedInteger+0x72>
    6c1a:	ed c0       	rjmp	.+474    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6c1c:	8b 85       	ldd	r24, Y+11	; 0x0b
    6c1e:	88 23       	and	r24, r24
    6c20:	09 f0       	breq	.+2      	; 0x6c24 <LCD_vidWriteSignedInteger+0x7a>
    6c22:	e9 c0       	rjmp	.+466    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
    6c24:	8a 85       	ldd	r24, Y+10	; 0x0a
    6c26:	e7 c0       	rjmp	.+462    	; 0x6df6 <LCD_vidWriteSignedInteger+0x24c>
	{
		u64UnsignedNumCpy=s64SignedNumCpy*(-1);
    6c28:	1a 8a       	std	Y+18, r1	; 0x12
    6c2a:	1b 8a       	std	Y+19, r1	; 0x13
    6c2c:	1c 8a       	std	Y+20, r1	; 0x14
    6c2e:	1d 8a       	std	Y+21, r1	; 0x15
    6c30:	1e 8a       	std	Y+22, r1	; 0x16
    6c32:	1f 8a       	std	Y+23, r1	; 0x17
    6c34:	18 8e       	std	Y+24, r1	; 0x18
    6c36:	19 8e       	std	Y+25, r1	; 0x19
    6c38:	99 85       	ldd	r25, Y+9	; 0x09
    6c3a:	9a 8f       	std	Y+26, r25	; 0x1a
    6c3c:	8a 85       	ldd	r24, Y+10	; 0x0a
    6c3e:	8b 8f       	std	Y+27, r24	; 0x1b
    6c40:	9b 85       	ldd	r25, Y+11	; 0x0b
    6c42:	9c 8f       	std	Y+28, r25	; 0x1c
    6c44:	8c 85       	ldd	r24, Y+12	; 0x0c
    6c46:	8d 8f       	std	Y+29, r24	; 0x1d
    6c48:	9d 85       	ldd	r25, Y+13	; 0x0d
    6c4a:	9e 8f       	std	Y+30, r25	; 0x1e
    6c4c:	8e 85       	ldd	r24, Y+14	; 0x0e
    6c4e:	8f 8f       	std	Y+31, r24	; 0x1f
    6c50:	9f 85       	ldd	r25, Y+15	; 0x0f
    6c52:	98 a3       	std	Y+32, r25	; 0x20
    6c54:	88 89       	ldd	r24, Y+16	; 0x10
    6c56:	89 a3       	std	Y+33, r24	; 0x21
    6c58:	9a 89       	ldd	r25, Y+18	; 0x12
    6c5a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    6c5c:	98 1b       	sub	r25, r24
    6c5e:	9a a3       	std	Y+34, r25	; 0x22
    6c60:	91 e0       	ldi	r25, 0x01	; 1
    6c62:	9a a7       	std	Y+42, r25	; 0x2a
    6c64:	8a a1       	ldd	r24, Y+34	; 0x22
    6c66:	9a 89       	ldd	r25, Y+18	; 0x12
    6c68:	98 17       	cp	r25, r24
    6c6a:	08 f0       	brcs	.+2      	; 0x6c6e <LCD_vidWriteSignedInteger+0xc4>
    6c6c:	1a a6       	std	Y+42, r1	; 0x2a
    6c6e:	8b 89       	ldd	r24, Y+19	; 0x13
    6c70:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6c72:	89 1b       	sub	r24, r25
    6c74:	8b a3       	std	Y+35, r24	; 0x23
    6c76:	81 e0       	ldi	r24, 0x01	; 1
    6c78:	8b a7       	std	Y+43, r24	; 0x2b
    6c7a:	9b a1       	ldd	r25, Y+35	; 0x23
    6c7c:	8b 89       	ldd	r24, Y+19	; 0x13
    6c7e:	89 17       	cp	r24, r25
    6c80:	08 f0       	brcs	.+2      	; 0x6c84 <LCD_vidWriteSignedInteger+0xda>
    6c82:	1b a6       	std	Y+43, r1	; 0x2b
    6c84:	9b a1       	ldd	r25, Y+35	; 0x23
    6c86:	8a a5       	ldd	r24, Y+42	; 0x2a
    6c88:	98 1b       	sub	r25, r24
    6c8a:	9c a7       	std	Y+44, r25	; 0x2c
    6c8c:	91 e0       	ldi	r25, 0x01	; 1
    6c8e:	9d a7       	std	Y+45, r25	; 0x2d
    6c90:	8c a5       	ldd	r24, Y+44	; 0x2c
    6c92:	9b a1       	ldd	r25, Y+35	; 0x23
    6c94:	98 17       	cp	r25, r24
    6c96:	08 f0       	brcs	.+2      	; 0x6c9a <LCD_vidWriteSignedInteger+0xf0>
    6c98:	1d a6       	std	Y+45, r1	; 0x2d
    6c9a:	8b a5       	ldd	r24, Y+43	; 0x2b
    6c9c:	9d a5       	ldd	r25, Y+45	; 0x2d
    6c9e:	89 2b       	or	r24, r25
    6ca0:	8b a7       	std	Y+43, r24	; 0x2b
    6ca2:	8c a5       	ldd	r24, Y+44	; 0x2c
    6ca4:	8b a3       	std	Y+35, r24	; 0x23
    6ca6:	9c 89       	ldd	r25, Y+20	; 0x14
    6ca8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6caa:	98 1b       	sub	r25, r24
    6cac:	9c a3       	std	Y+36, r25	; 0x24
    6cae:	91 e0       	ldi	r25, 0x01	; 1
    6cb0:	9e a7       	std	Y+46, r25	; 0x2e
    6cb2:	8c a1       	ldd	r24, Y+36	; 0x24
    6cb4:	9c 89       	ldd	r25, Y+20	; 0x14
    6cb6:	98 17       	cp	r25, r24
    6cb8:	08 f0       	brcs	.+2      	; 0x6cbc <LCD_vidWriteSignedInteger+0x112>
    6cba:	1e a6       	std	Y+46, r1	; 0x2e
    6cbc:	8c a1       	ldd	r24, Y+36	; 0x24
    6cbe:	9b a5       	ldd	r25, Y+43	; 0x2b
    6cc0:	89 1b       	sub	r24, r25
    6cc2:	8f a7       	std	Y+47, r24	; 0x2f
    6cc4:	81 e0       	ldi	r24, 0x01	; 1
    6cc6:	88 ab       	std	Y+48, r24	; 0x30
    6cc8:	9f a5       	ldd	r25, Y+47	; 0x2f
    6cca:	8c a1       	ldd	r24, Y+36	; 0x24
    6ccc:	89 17       	cp	r24, r25
    6cce:	08 f0       	brcs	.+2      	; 0x6cd2 <LCD_vidWriteSignedInteger+0x128>
    6cd0:	18 aa       	std	Y+48, r1	; 0x30
    6cd2:	9e a5       	ldd	r25, Y+46	; 0x2e
    6cd4:	88 a9       	ldd	r24, Y+48	; 0x30
    6cd6:	98 2b       	or	r25, r24
    6cd8:	9e a7       	std	Y+46, r25	; 0x2e
    6cda:	9f a5       	ldd	r25, Y+47	; 0x2f
    6cdc:	9c a3       	std	Y+36, r25	; 0x24
    6cde:	8d 89       	ldd	r24, Y+21	; 0x15
    6ce0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6ce2:	89 1b       	sub	r24, r25
    6ce4:	8d a3       	std	Y+37, r24	; 0x25
    6ce6:	81 e0       	ldi	r24, 0x01	; 1
    6ce8:	89 ab       	std	Y+49, r24	; 0x31
    6cea:	9d a1       	ldd	r25, Y+37	; 0x25
    6cec:	8d 89       	ldd	r24, Y+21	; 0x15
    6cee:	89 17       	cp	r24, r25
    6cf0:	08 f0       	brcs	.+2      	; 0x6cf4 <LCD_vidWriteSignedInteger+0x14a>
    6cf2:	19 aa       	std	Y+49, r1	; 0x31
    6cf4:	9d a1       	ldd	r25, Y+37	; 0x25
    6cf6:	8e a5       	ldd	r24, Y+46	; 0x2e
    6cf8:	98 1b       	sub	r25, r24
    6cfa:	9a ab       	std	Y+50, r25	; 0x32
    6cfc:	91 e0       	ldi	r25, 0x01	; 1
    6cfe:	9b ab       	std	Y+51, r25	; 0x33
    6d00:	8a a9       	ldd	r24, Y+50	; 0x32
    6d02:	9d a1       	ldd	r25, Y+37	; 0x25
    6d04:	98 17       	cp	r25, r24
    6d06:	08 f0       	brcs	.+2      	; 0x6d0a <LCD_vidWriteSignedInteger+0x160>
    6d08:	1b aa       	std	Y+51, r1	; 0x33
    6d0a:	89 a9       	ldd	r24, Y+49	; 0x31
    6d0c:	9b a9       	ldd	r25, Y+51	; 0x33
    6d0e:	89 2b       	or	r24, r25
    6d10:	89 ab       	std	Y+49, r24	; 0x31
    6d12:	8a a9       	ldd	r24, Y+50	; 0x32
    6d14:	8d a3       	std	Y+37, r24	; 0x25
    6d16:	9e 89       	ldd	r25, Y+22	; 0x16
    6d18:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6d1a:	98 1b       	sub	r25, r24
    6d1c:	9e a3       	std	Y+38, r25	; 0x26
    6d1e:	91 e0       	ldi	r25, 0x01	; 1
    6d20:	9c ab       	std	Y+52, r25	; 0x34
    6d22:	8e a1       	ldd	r24, Y+38	; 0x26
    6d24:	9e 89       	ldd	r25, Y+22	; 0x16
    6d26:	98 17       	cp	r25, r24
    6d28:	08 f0       	brcs	.+2      	; 0x6d2c <LCD_vidWriteSignedInteger+0x182>
    6d2a:	1c aa       	std	Y+52, r1	; 0x34
    6d2c:	8e a1       	ldd	r24, Y+38	; 0x26
    6d2e:	99 a9       	ldd	r25, Y+49	; 0x31
    6d30:	89 1b       	sub	r24, r25
    6d32:	8d ab       	std	Y+53, r24	; 0x35
    6d34:	81 e0       	ldi	r24, 0x01	; 1
    6d36:	8e ab       	std	Y+54, r24	; 0x36
    6d38:	9d a9       	ldd	r25, Y+53	; 0x35
    6d3a:	8e a1       	ldd	r24, Y+38	; 0x26
    6d3c:	89 17       	cp	r24, r25
    6d3e:	08 f0       	brcs	.+2      	; 0x6d42 <LCD_vidWriteSignedInteger+0x198>
    6d40:	1e aa       	std	Y+54, r1	; 0x36
    6d42:	9c a9       	ldd	r25, Y+52	; 0x34
    6d44:	8e a9       	ldd	r24, Y+54	; 0x36
    6d46:	98 2b       	or	r25, r24
    6d48:	9c ab       	std	Y+52, r25	; 0x34
    6d4a:	9d a9       	ldd	r25, Y+53	; 0x35
    6d4c:	9e a3       	std	Y+38, r25	; 0x26
    6d4e:	8f 89       	ldd	r24, Y+23	; 0x17
    6d50:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6d52:	89 1b       	sub	r24, r25
    6d54:	8f a3       	std	Y+39, r24	; 0x27
    6d56:	81 e0       	ldi	r24, 0x01	; 1
    6d58:	8f ab       	std	Y+55, r24	; 0x37
    6d5a:	9f a1       	ldd	r25, Y+39	; 0x27
    6d5c:	8f 89       	ldd	r24, Y+23	; 0x17
    6d5e:	89 17       	cp	r24, r25
    6d60:	08 f0       	brcs	.+2      	; 0x6d64 <LCD_vidWriteSignedInteger+0x1ba>
    6d62:	1f aa       	std	Y+55, r1	; 0x37
    6d64:	9f a1       	ldd	r25, Y+39	; 0x27
    6d66:	8c a9       	ldd	r24, Y+52	; 0x34
    6d68:	98 1b       	sub	r25, r24
    6d6a:	98 af       	std	Y+56, r25	; 0x38
    6d6c:	91 e0       	ldi	r25, 0x01	; 1
    6d6e:	99 af       	std	Y+57, r25	; 0x39
    6d70:	88 ad       	ldd	r24, Y+56	; 0x38
    6d72:	9f a1       	ldd	r25, Y+39	; 0x27
    6d74:	98 17       	cp	r25, r24
    6d76:	08 f0       	brcs	.+2      	; 0x6d7a <LCD_vidWriteSignedInteger+0x1d0>
    6d78:	19 ae       	std	Y+57, r1	; 0x39
    6d7a:	8f a9       	ldd	r24, Y+55	; 0x37
    6d7c:	99 ad       	ldd	r25, Y+57	; 0x39
    6d7e:	89 2b       	or	r24, r25
    6d80:	8f ab       	std	Y+55, r24	; 0x37
    6d82:	88 ad       	ldd	r24, Y+56	; 0x38
    6d84:	8f a3       	std	Y+39, r24	; 0x27
    6d86:	98 8d       	ldd	r25, Y+24	; 0x18
    6d88:	88 a1       	ldd	r24, Y+32	; 0x20
    6d8a:	98 1b       	sub	r25, r24
    6d8c:	98 a7       	std	Y+40, r25	; 0x28
    6d8e:	91 e0       	ldi	r25, 0x01	; 1
    6d90:	9a af       	std	Y+58, r25	; 0x3a
    6d92:	88 a5       	ldd	r24, Y+40	; 0x28
    6d94:	98 8d       	ldd	r25, Y+24	; 0x18
    6d96:	98 17       	cp	r25, r24
    6d98:	08 f0       	brcs	.+2      	; 0x6d9c <LCD_vidWriteSignedInteger+0x1f2>
    6d9a:	1a ae       	std	Y+58, r1	; 0x3a
    6d9c:	88 a5       	ldd	r24, Y+40	; 0x28
    6d9e:	9f a9       	ldd	r25, Y+55	; 0x37
    6da0:	89 1b       	sub	r24, r25
    6da2:	8b af       	std	Y+59, r24	; 0x3b
    6da4:	81 e0       	ldi	r24, 0x01	; 1
    6da6:	8c af       	std	Y+60, r24	; 0x3c
    6da8:	9b ad       	ldd	r25, Y+59	; 0x3b
    6daa:	88 a5       	ldd	r24, Y+40	; 0x28
    6dac:	89 17       	cp	r24, r25
    6dae:	08 f0       	brcs	.+2      	; 0x6db2 <LCD_vidWriteSignedInteger+0x208>
    6db0:	1c ae       	std	Y+60, r1	; 0x3c
    6db2:	9a ad       	ldd	r25, Y+58	; 0x3a
    6db4:	8c ad       	ldd	r24, Y+60	; 0x3c
    6db6:	98 2b       	or	r25, r24
    6db8:	9a af       	std	Y+58, r25	; 0x3a
    6dba:	9b ad       	ldd	r25, Y+59	; 0x3b
    6dbc:	98 a7       	std	Y+40, r25	; 0x28
    6dbe:	89 8d       	ldd	r24, Y+25	; 0x19
    6dc0:	99 a1       	ldd	r25, Y+33	; 0x21
    6dc2:	89 1b       	sub	r24, r25
    6dc4:	89 a7       	std	Y+41, r24	; 0x29
    6dc6:	89 a5       	ldd	r24, Y+41	; 0x29
    6dc8:	9a ad       	ldd	r25, Y+58	; 0x3a
    6dca:	89 1b       	sub	r24, r25
    6dcc:	89 a7       	std	Y+41, r24	; 0x29
    6dce:	2a a1       	ldd	r18, Y+34	; 0x22
    6dd0:	3b a1       	ldd	r19, Y+35	; 0x23
    6dd2:	4c a1       	ldd	r20, Y+36	; 0x24
    6dd4:	5d a1       	ldd	r21, Y+37	; 0x25
    6dd6:	6e a1       	ldd	r22, Y+38	; 0x26
    6dd8:	7f a1       	ldd	r23, Y+39	; 0x27
    6dda:	88 a5       	ldd	r24, Y+40	; 0x28
    6ddc:	99 a5       	ldd	r25, Y+41	; 0x29
    6dde:	29 83       	std	Y+1, r18	; 0x01
    6de0:	3a 83       	std	Y+2, r19	; 0x02
    6de2:	4b 83       	std	Y+3, r20	; 0x03
    6de4:	5c 83       	std	Y+4, r21	; 0x04
    6de6:	6d 83       	std	Y+5, r22	; 0x05
    6de8:	7e 83       	std	Y+6, r23	; 0x06
    6dea:	8f 83       	std	Y+7, r24	; 0x07
    6dec:	98 87       	std	Y+8, r25	; 0x08
        LCD_vidWriteCharacter('-');
    6dee:	8d e2       	ldi	r24, 0x2D	; 45
    6df0:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    6df4:	10 c0       	rjmp	.+32     	; 0x6e16 <LCD_vidWriteSignedInteger+0x26c>
	}
	else
	{
		u64UnsignedNumCpy=s64SignedNumCpy;
    6df6:	89 85       	ldd	r24, Y+9	; 0x09
    6df8:	89 83       	std	Y+1, r24	; 0x01
    6dfa:	8a 85       	ldd	r24, Y+10	; 0x0a
    6dfc:	8a 83       	std	Y+2, r24	; 0x02
    6dfe:	8b 85       	ldd	r24, Y+11	; 0x0b
    6e00:	8b 83       	std	Y+3, r24	; 0x03
    6e02:	8c 85       	ldd	r24, Y+12	; 0x0c
    6e04:	8c 83       	std	Y+4, r24	; 0x04
    6e06:	8d 85       	ldd	r24, Y+13	; 0x0d
    6e08:	8d 83       	std	Y+5, r24	; 0x05
    6e0a:	8e 85       	ldd	r24, Y+14	; 0x0e
    6e0c:	8e 83       	std	Y+6, r24	; 0x06
    6e0e:	8f 85       	ldd	r24, Y+15	; 0x0f
    6e10:	8f 83       	std	Y+7, r24	; 0x07
    6e12:	88 89       	ldd	r24, Y+16	; 0x10
    6e14:	88 87       	std	Y+8, r24	; 0x08
	}

	LCD_vidWriteUnSignedInteger(u64UnsignedNumCpy);
    6e16:	a9 80       	ldd	r10, Y+1	; 0x01
    6e18:	ba 80       	ldd	r11, Y+2	; 0x02
    6e1a:	cb 80       	ldd	r12, Y+3	; 0x03
    6e1c:	dc 80       	ldd	r13, Y+4	; 0x04
    6e1e:	ed 80       	ldd	r14, Y+5	; 0x05
    6e20:	fe 80       	ldd	r15, Y+6	; 0x06
    6e22:	0f 81       	ldd	r16, Y+7	; 0x07
    6e24:	18 85       	ldd	r17, Y+8	; 0x08
    6e26:	2a 2d       	mov	r18, r10
    6e28:	3b 2d       	mov	r19, r11
    6e2a:	4c 2d       	mov	r20, r12
    6e2c:	5d 2d       	mov	r21, r13
    6e2e:	6e 2d       	mov	r22, r14
    6e30:	7f 2d       	mov	r23, r15
    6e32:	80 2f       	mov	r24, r16
    6e34:	91 2f       	mov	r25, r17
    6e36:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>


}
    6e3a:	ec 96       	adiw	r28, 0x3c	; 60
    6e3c:	0f b6       	in	r0, 0x3f	; 63
    6e3e:	f8 94       	cli
    6e40:	de bf       	out	0x3e, r29	; 62
    6e42:	0f be       	out	0x3f, r0	; 63
    6e44:	cd bf       	out	0x3d, r28	; 61
    6e46:	cf 91       	pop	r28
    6e48:	df 91       	pop	r29
    6e4a:	1f 91       	pop	r17
    6e4c:	0f 91       	pop	r16
    6e4e:	ff 90       	pop	r15
    6e50:	ef 90       	pop	r14
    6e52:	df 90       	pop	r13
    6e54:	cf 90       	pop	r12
    6e56:	bf 90       	pop	r11
    6e58:	af 90       	pop	r10
    6e5a:	08 95       	ret

00006e5c <LCD_vidWriteSignedInteger4>:
//......................................................................................
void LCD_vidWriteSignedInteger4(sint64 s64SignedNumCpy)
{
    6e5c:	af 92       	push	r10
    6e5e:	bf 92       	push	r11
    6e60:	cf 92       	push	r12
    6e62:	df 92       	push	r13
    6e64:	ef 92       	push	r14
    6e66:	ff 92       	push	r15
    6e68:	0f 93       	push	r16
    6e6a:	1f 93       	push	r17
    6e6c:	df 93       	push	r29
    6e6e:	cf 93       	push	r28
    6e70:	cd b7       	in	r28, 0x3d	; 61
    6e72:	de b7       	in	r29, 0x3e	; 62
    6e74:	ec 97       	sbiw	r28, 0x3c	; 60
    6e76:	0f b6       	in	r0, 0x3f	; 63
    6e78:	f8 94       	cli
    6e7a:	de bf       	out	0x3e, r29	; 62
    6e7c:	0f be       	out	0x3f, r0	; 63
    6e7e:	cd bf       	out	0x3d, r28	; 61
    6e80:	29 87       	std	Y+9, r18	; 0x09
    6e82:	3a 87       	std	Y+10, r19	; 0x0a
    6e84:	4b 87       	std	Y+11, r20	; 0x0b
    6e86:	5c 87       	std	Y+12, r21	; 0x0c
    6e88:	6d 87       	std	Y+13, r22	; 0x0d
    6e8a:	7e 87       	std	Y+14, r23	; 0x0e
    6e8c:	8f 87       	std	Y+15, r24	; 0x0f
    6e8e:	98 8b       	std	Y+16, r25	; 0x10
	uint64 u64UnsignedNumCpy=0;
    6e90:	19 82       	std	Y+1, r1	; 0x01
    6e92:	1a 82       	std	Y+2, r1	; 0x02
    6e94:	1b 82       	std	Y+3, r1	; 0x03
    6e96:	1c 82       	std	Y+4, r1	; 0x04
    6e98:	1d 82       	std	Y+5, r1	; 0x05
    6e9a:	1e 82       	std	Y+6, r1	; 0x06
    6e9c:	1f 82       	std	Y+7, r1	; 0x07
    6e9e:	18 86       	std	Y+8, r1	; 0x08
		if(s64SignedNumCpy<(sint64)0)
    6ea0:	88 89       	ldd	r24, Y+16	; 0x10
    6ea2:	88 23       	and	r24, r24
    6ea4:	d4 f0       	brlt	.+52     	; 0x6eda <LCD_vidWriteSignedInteger4+0x7e>
    6ea6:	88 89       	ldd	r24, Y+16	; 0x10
    6ea8:	88 23       	and	r24, r24
    6eaa:	09 f0       	breq	.+2      	; 0x6eae <LCD_vidWriteSignedInteger4+0x52>
    6eac:	fd c0       	rjmp	.+506    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6eae:	8f 85       	ldd	r24, Y+15	; 0x0f
    6eb0:	88 23       	and	r24, r24
    6eb2:	09 f0       	breq	.+2      	; 0x6eb6 <LCD_vidWriteSignedInteger4+0x5a>
    6eb4:	f9 c0       	rjmp	.+498    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6eb6:	8e 85       	ldd	r24, Y+14	; 0x0e
    6eb8:	88 23       	and	r24, r24
    6eba:	09 f0       	breq	.+2      	; 0x6ebe <LCD_vidWriteSignedInteger4+0x62>
    6ebc:	f5 c0       	rjmp	.+490    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6ebe:	8d 85       	ldd	r24, Y+13	; 0x0d
    6ec0:	88 23       	and	r24, r24
    6ec2:	09 f0       	breq	.+2      	; 0x6ec6 <LCD_vidWriteSignedInteger4+0x6a>
    6ec4:	f1 c0       	rjmp	.+482    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6ec6:	8c 85       	ldd	r24, Y+12	; 0x0c
    6ec8:	88 23       	and	r24, r24
    6eca:	09 f0       	breq	.+2      	; 0x6ece <LCD_vidWriteSignedInteger4+0x72>
    6ecc:	ed c0       	rjmp	.+474    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6ece:	8b 85       	ldd	r24, Y+11	; 0x0b
    6ed0:	88 23       	and	r24, r24
    6ed2:	09 f0       	breq	.+2      	; 0x6ed6 <LCD_vidWriteSignedInteger4+0x7a>
    6ed4:	e9 c0       	rjmp	.+466    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
    6ed6:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ed8:	e7 c0       	rjmp	.+462    	; 0x70a8 <LCD_vidWriteSignedInteger4+0x24c>
		{
			u64UnsignedNumCpy=s64SignedNumCpy*(-1);
    6eda:	1a 8a       	std	Y+18, r1	; 0x12
    6edc:	1b 8a       	std	Y+19, r1	; 0x13
    6ede:	1c 8a       	std	Y+20, r1	; 0x14
    6ee0:	1d 8a       	std	Y+21, r1	; 0x15
    6ee2:	1e 8a       	std	Y+22, r1	; 0x16
    6ee4:	1f 8a       	std	Y+23, r1	; 0x17
    6ee6:	18 8e       	std	Y+24, r1	; 0x18
    6ee8:	19 8e       	std	Y+25, r1	; 0x19
    6eea:	99 85       	ldd	r25, Y+9	; 0x09
    6eec:	9a 8f       	std	Y+26, r25	; 0x1a
    6eee:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ef0:	8b 8f       	std	Y+27, r24	; 0x1b
    6ef2:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ef4:	9c 8f       	std	Y+28, r25	; 0x1c
    6ef6:	8c 85       	ldd	r24, Y+12	; 0x0c
    6ef8:	8d 8f       	std	Y+29, r24	; 0x1d
    6efa:	9d 85       	ldd	r25, Y+13	; 0x0d
    6efc:	9e 8f       	std	Y+30, r25	; 0x1e
    6efe:	8e 85       	ldd	r24, Y+14	; 0x0e
    6f00:	8f 8f       	std	Y+31, r24	; 0x1f
    6f02:	9f 85       	ldd	r25, Y+15	; 0x0f
    6f04:	98 a3       	std	Y+32, r25	; 0x20
    6f06:	88 89       	ldd	r24, Y+16	; 0x10
    6f08:	89 a3       	std	Y+33, r24	; 0x21
    6f0a:	9a 89       	ldd	r25, Y+18	; 0x12
    6f0c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    6f0e:	98 1b       	sub	r25, r24
    6f10:	9a a3       	std	Y+34, r25	; 0x22
    6f12:	91 e0       	ldi	r25, 0x01	; 1
    6f14:	9a a7       	std	Y+42, r25	; 0x2a
    6f16:	8a a1       	ldd	r24, Y+34	; 0x22
    6f18:	9a 89       	ldd	r25, Y+18	; 0x12
    6f1a:	98 17       	cp	r25, r24
    6f1c:	08 f0       	brcs	.+2      	; 0x6f20 <LCD_vidWriteSignedInteger4+0xc4>
    6f1e:	1a a6       	std	Y+42, r1	; 0x2a
    6f20:	8b 89       	ldd	r24, Y+19	; 0x13
    6f22:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6f24:	89 1b       	sub	r24, r25
    6f26:	8b a3       	std	Y+35, r24	; 0x23
    6f28:	81 e0       	ldi	r24, 0x01	; 1
    6f2a:	8b a7       	std	Y+43, r24	; 0x2b
    6f2c:	9b a1       	ldd	r25, Y+35	; 0x23
    6f2e:	8b 89       	ldd	r24, Y+19	; 0x13
    6f30:	89 17       	cp	r24, r25
    6f32:	08 f0       	brcs	.+2      	; 0x6f36 <LCD_vidWriteSignedInteger4+0xda>
    6f34:	1b a6       	std	Y+43, r1	; 0x2b
    6f36:	9b a1       	ldd	r25, Y+35	; 0x23
    6f38:	8a a5       	ldd	r24, Y+42	; 0x2a
    6f3a:	98 1b       	sub	r25, r24
    6f3c:	9c a7       	std	Y+44, r25	; 0x2c
    6f3e:	91 e0       	ldi	r25, 0x01	; 1
    6f40:	9d a7       	std	Y+45, r25	; 0x2d
    6f42:	8c a5       	ldd	r24, Y+44	; 0x2c
    6f44:	9b a1       	ldd	r25, Y+35	; 0x23
    6f46:	98 17       	cp	r25, r24
    6f48:	08 f0       	brcs	.+2      	; 0x6f4c <LCD_vidWriteSignedInteger4+0xf0>
    6f4a:	1d a6       	std	Y+45, r1	; 0x2d
    6f4c:	8b a5       	ldd	r24, Y+43	; 0x2b
    6f4e:	9d a5       	ldd	r25, Y+45	; 0x2d
    6f50:	89 2b       	or	r24, r25
    6f52:	8b a7       	std	Y+43, r24	; 0x2b
    6f54:	8c a5       	ldd	r24, Y+44	; 0x2c
    6f56:	8b a3       	std	Y+35, r24	; 0x23
    6f58:	9c 89       	ldd	r25, Y+20	; 0x14
    6f5a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6f5c:	98 1b       	sub	r25, r24
    6f5e:	9c a3       	std	Y+36, r25	; 0x24
    6f60:	91 e0       	ldi	r25, 0x01	; 1
    6f62:	9e a7       	std	Y+46, r25	; 0x2e
    6f64:	8c a1       	ldd	r24, Y+36	; 0x24
    6f66:	9c 89       	ldd	r25, Y+20	; 0x14
    6f68:	98 17       	cp	r25, r24
    6f6a:	08 f0       	brcs	.+2      	; 0x6f6e <LCD_vidWriteSignedInteger4+0x112>
    6f6c:	1e a6       	std	Y+46, r1	; 0x2e
    6f6e:	8c a1       	ldd	r24, Y+36	; 0x24
    6f70:	9b a5       	ldd	r25, Y+43	; 0x2b
    6f72:	89 1b       	sub	r24, r25
    6f74:	8f a7       	std	Y+47, r24	; 0x2f
    6f76:	81 e0       	ldi	r24, 0x01	; 1
    6f78:	88 ab       	std	Y+48, r24	; 0x30
    6f7a:	9f a5       	ldd	r25, Y+47	; 0x2f
    6f7c:	8c a1       	ldd	r24, Y+36	; 0x24
    6f7e:	89 17       	cp	r24, r25
    6f80:	08 f0       	brcs	.+2      	; 0x6f84 <LCD_vidWriteSignedInteger4+0x128>
    6f82:	18 aa       	std	Y+48, r1	; 0x30
    6f84:	9e a5       	ldd	r25, Y+46	; 0x2e
    6f86:	88 a9       	ldd	r24, Y+48	; 0x30
    6f88:	98 2b       	or	r25, r24
    6f8a:	9e a7       	std	Y+46, r25	; 0x2e
    6f8c:	9f a5       	ldd	r25, Y+47	; 0x2f
    6f8e:	9c a3       	std	Y+36, r25	; 0x24
    6f90:	8d 89       	ldd	r24, Y+21	; 0x15
    6f92:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6f94:	89 1b       	sub	r24, r25
    6f96:	8d a3       	std	Y+37, r24	; 0x25
    6f98:	81 e0       	ldi	r24, 0x01	; 1
    6f9a:	89 ab       	std	Y+49, r24	; 0x31
    6f9c:	9d a1       	ldd	r25, Y+37	; 0x25
    6f9e:	8d 89       	ldd	r24, Y+21	; 0x15
    6fa0:	89 17       	cp	r24, r25
    6fa2:	08 f0       	brcs	.+2      	; 0x6fa6 <LCD_vidWriteSignedInteger4+0x14a>
    6fa4:	19 aa       	std	Y+49, r1	; 0x31
    6fa6:	9d a1       	ldd	r25, Y+37	; 0x25
    6fa8:	8e a5       	ldd	r24, Y+46	; 0x2e
    6faa:	98 1b       	sub	r25, r24
    6fac:	9a ab       	std	Y+50, r25	; 0x32
    6fae:	91 e0       	ldi	r25, 0x01	; 1
    6fb0:	9b ab       	std	Y+51, r25	; 0x33
    6fb2:	8a a9       	ldd	r24, Y+50	; 0x32
    6fb4:	9d a1       	ldd	r25, Y+37	; 0x25
    6fb6:	98 17       	cp	r25, r24
    6fb8:	08 f0       	brcs	.+2      	; 0x6fbc <LCD_vidWriteSignedInteger4+0x160>
    6fba:	1b aa       	std	Y+51, r1	; 0x33
    6fbc:	89 a9       	ldd	r24, Y+49	; 0x31
    6fbe:	9b a9       	ldd	r25, Y+51	; 0x33
    6fc0:	89 2b       	or	r24, r25
    6fc2:	89 ab       	std	Y+49, r24	; 0x31
    6fc4:	8a a9       	ldd	r24, Y+50	; 0x32
    6fc6:	8d a3       	std	Y+37, r24	; 0x25
    6fc8:	9e 89       	ldd	r25, Y+22	; 0x16
    6fca:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6fcc:	98 1b       	sub	r25, r24
    6fce:	9e a3       	std	Y+38, r25	; 0x26
    6fd0:	91 e0       	ldi	r25, 0x01	; 1
    6fd2:	9c ab       	std	Y+52, r25	; 0x34
    6fd4:	8e a1       	ldd	r24, Y+38	; 0x26
    6fd6:	9e 89       	ldd	r25, Y+22	; 0x16
    6fd8:	98 17       	cp	r25, r24
    6fda:	08 f0       	brcs	.+2      	; 0x6fde <LCD_vidWriteSignedInteger4+0x182>
    6fdc:	1c aa       	std	Y+52, r1	; 0x34
    6fde:	8e a1       	ldd	r24, Y+38	; 0x26
    6fe0:	99 a9       	ldd	r25, Y+49	; 0x31
    6fe2:	89 1b       	sub	r24, r25
    6fe4:	8d ab       	std	Y+53, r24	; 0x35
    6fe6:	81 e0       	ldi	r24, 0x01	; 1
    6fe8:	8e ab       	std	Y+54, r24	; 0x36
    6fea:	9d a9       	ldd	r25, Y+53	; 0x35
    6fec:	8e a1       	ldd	r24, Y+38	; 0x26
    6fee:	89 17       	cp	r24, r25
    6ff0:	08 f0       	brcs	.+2      	; 0x6ff4 <LCD_vidWriteSignedInteger4+0x198>
    6ff2:	1e aa       	std	Y+54, r1	; 0x36
    6ff4:	9c a9       	ldd	r25, Y+52	; 0x34
    6ff6:	8e a9       	ldd	r24, Y+54	; 0x36
    6ff8:	98 2b       	or	r25, r24
    6ffa:	9c ab       	std	Y+52, r25	; 0x34
    6ffc:	9d a9       	ldd	r25, Y+53	; 0x35
    6ffe:	9e a3       	std	Y+38, r25	; 0x26
    7000:	8f 89       	ldd	r24, Y+23	; 0x17
    7002:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7004:	89 1b       	sub	r24, r25
    7006:	8f a3       	std	Y+39, r24	; 0x27
    7008:	81 e0       	ldi	r24, 0x01	; 1
    700a:	8f ab       	std	Y+55, r24	; 0x37
    700c:	9f a1       	ldd	r25, Y+39	; 0x27
    700e:	8f 89       	ldd	r24, Y+23	; 0x17
    7010:	89 17       	cp	r24, r25
    7012:	08 f0       	brcs	.+2      	; 0x7016 <LCD_vidWriteSignedInteger4+0x1ba>
    7014:	1f aa       	std	Y+55, r1	; 0x37
    7016:	9f a1       	ldd	r25, Y+39	; 0x27
    7018:	8c a9       	ldd	r24, Y+52	; 0x34
    701a:	98 1b       	sub	r25, r24
    701c:	98 af       	std	Y+56, r25	; 0x38
    701e:	91 e0       	ldi	r25, 0x01	; 1
    7020:	99 af       	std	Y+57, r25	; 0x39
    7022:	88 ad       	ldd	r24, Y+56	; 0x38
    7024:	9f a1       	ldd	r25, Y+39	; 0x27
    7026:	98 17       	cp	r25, r24
    7028:	08 f0       	brcs	.+2      	; 0x702c <LCD_vidWriteSignedInteger4+0x1d0>
    702a:	19 ae       	std	Y+57, r1	; 0x39
    702c:	8f a9       	ldd	r24, Y+55	; 0x37
    702e:	99 ad       	ldd	r25, Y+57	; 0x39
    7030:	89 2b       	or	r24, r25
    7032:	8f ab       	std	Y+55, r24	; 0x37
    7034:	88 ad       	ldd	r24, Y+56	; 0x38
    7036:	8f a3       	std	Y+39, r24	; 0x27
    7038:	98 8d       	ldd	r25, Y+24	; 0x18
    703a:	88 a1       	ldd	r24, Y+32	; 0x20
    703c:	98 1b       	sub	r25, r24
    703e:	98 a7       	std	Y+40, r25	; 0x28
    7040:	91 e0       	ldi	r25, 0x01	; 1
    7042:	9a af       	std	Y+58, r25	; 0x3a
    7044:	88 a5       	ldd	r24, Y+40	; 0x28
    7046:	98 8d       	ldd	r25, Y+24	; 0x18
    7048:	98 17       	cp	r25, r24
    704a:	08 f0       	brcs	.+2      	; 0x704e <LCD_vidWriteSignedInteger4+0x1f2>
    704c:	1a ae       	std	Y+58, r1	; 0x3a
    704e:	88 a5       	ldd	r24, Y+40	; 0x28
    7050:	9f a9       	ldd	r25, Y+55	; 0x37
    7052:	89 1b       	sub	r24, r25
    7054:	8b af       	std	Y+59, r24	; 0x3b
    7056:	81 e0       	ldi	r24, 0x01	; 1
    7058:	8c af       	std	Y+60, r24	; 0x3c
    705a:	9b ad       	ldd	r25, Y+59	; 0x3b
    705c:	88 a5       	ldd	r24, Y+40	; 0x28
    705e:	89 17       	cp	r24, r25
    7060:	08 f0       	brcs	.+2      	; 0x7064 <LCD_vidWriteSignedInteger4+0x208>
    7062:	1c ae       	std	Y+60, r1	; 0x3c
    7064:	9a ad       	ldd	r25, Y+58	; 0x3a
    7066:	8c ad       	ldd	r24, Y+60	; 0x3c
    7068:	98 2b       	or	r25, r24
    706a:	9a af       	std	Y+58, r25	; 0x3a
    706c:	9b ad       	ldd	r25, Y+59	; 0x3b
    706e:	98 a7       	std	Y+40, r25	; 0x28
    7070:	89 8d       	ldd	r24, Y+25	; 0x19
    7072:	99 a1       	ldd	r25, Y+33	; 0x21
    7074:	89 1b       	sub	r24, r25
    7076:	89 a7       	std	Y+41, r24	; 0x29
    7078:	89 a5       	ldd	r24, Y+41	; 0x29
    707a:	9a ad       	ldd	r25, Y+58	; 0x3a
    707c:	89 1b       	sub	r24, r25
    707e:	89 a7       	std	Y+41, r24	; 0x29
    7080:	2a a1       	ldd	r18, Y+34	; 0x22
    7082:	3b a1       	ldd	r19, Y+35	; 0x23
    7084:	4c a1       	ldd	r20, Y+36	; 0x24
    7086:	5d a1       	ldd	r21, Y+37	; 0x25
    7088:	6e a1       	ldd	r22, Y+38	; 0x26
    708a:	7f a1       	ldd	r23, Y+39	; 0x27
    708c:	88 a5       	ldd	r24, Y+40	; 0x28
    708e:	99 a5       	ldd	r25, Y+41	; 0x29
    7090:	29 83       	std	Y+1, r18	; 0x01
    7092:	3a 83       	std	Y+2, r19	; 0x02
    7094:	4b 83       	std	Y+3, r20	; 0x03
    7096:	5c 83       	std	Y+4, r21	; 0x04
    7098:	6d 83       	std	Y+5, r22	; 0x05
    709a:	7e 83       	std	Y+6, r23	; 0x06
    709c:	8f 83       	std	Y+7, r24	; 0x07
    709e:	98 87       	std	Y+8, r25	; 0x08
	        LCD_vidWriteCharacter4('-');
    70a0:	8d e2       	ldi	r24, 0x2D	; 45
    70a2:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
    70a6:	10 c0       	rjmp	.+32     	; 0x70c8 <LCD_vidWriteSignedInteger4+0x26c>
		}
		else
		{
			u64UnsignedNumCpy=s64SignedNumCpy;
    70a8:	89 85       	ldd	r24, Y+9	; 0x09
    70aa:	89 83       	std	Y+1, r24	; 0x01
    70ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    70ae:	8a 83       	std	Y+2, r24	; 0x02
    70b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    70b2:	8b 83       	std	Y+3, r24	; 0x03
    70b4:	8c 85       	ldd	r24, Y+12	; 0x0c
    70b6:	8c 83       	std	Y+4, r24	; 0x04
    70b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    70ba:	8d 83       	std	Y+5, r24	; 0x05
    70bc:	8e 85       	ldd	r24, Y+14	; 0x0e
    70be:	8e 83       	std	Y+6, r24	; 0x06
    70c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    70c2:	8f 83       	std	Y+7, r24	; 0x07
    70c4:	88 89       	ldd	r24, Y+16	; 0x10
    70c6:	88 87       	std	Y+8, r24	; 0x08
		}

		LCD_vidWriteUnSignedInteger4(u64UnsignedNumCpy);
    70c8:	a9 80       	ldd	r10, Y+1	; 0x01
    70ca:	ba 80       	ldd	r11, Y+2	; 0x02
    70cc:	cb 80       	ldd	r12, Y+3	; 0x03
    70ce:	dc 80       	ldd	r13, Y+4	; 0x04
    70d0:	ed 80       	ldd	r14, Y+5	; 0x05
    70d2:	fe 80       	ldd	r15, Y+6	; 0x06
    70d4:	0f 81       	ldd	r16, Y+7	; 0x07
    70d6:	18 85       	ldd	r17, Y+8	; 0x08
    70d8:	2a 2d       	mov	r18, r10
    70da:	3b 2d       	mov	r19, r11
    70dc:	4c 2d       	mov	r20, r12
    70de:	5d 2d       	mov	r21, r13
    70e0:	6e 2d       	mov	r22, r14
    70e2:	7f 2d       	mov	r23, r15
    70e4:	80 2f       	mov	r24, r16
    70e6:	91 2f       	mov	r25, r17
    70e8:	0e 94 f8 34 	call	0x69f0	; 0x69f0 <LCD_vidWriteUnSignedInteger4>

}
    70ec:	ec 96       	adiw	r28, 0x3c	; 60
    70ee:	0f b6       	in	r0, 0x3f	; 63
    70f0:	f8 94       	cli
    70f2:	de bf       	out	0x3e, r29	; 62
    70f4:	0f be       	out	0x3f, r0	; 63
    70f6:	cd bf       	out	0x3d, r28	; 61
    70f8:	cf 91       	pop	r28
    70fa:	df 91       	pop	r29
    70fc:	1f 91       	pop	r17
    70fe:	0f 91       	pop	r16
    7100:	ff 90       	pop	r15
    7102:	ef 90       	pop	r14
    7104:	df 90       	pop	r13
    7106:	cf 90       	pop	r12
    7108:	bf 90       	pop	r11
    710a:	af 90       	pop	r10
    710c:	08 95       	ret

0000710e <LCD_vidGotoxy>:



//...............................................................................................
void LCD_vidGotoxy(uint8 u8Numx,uint8 u8Numy)
{
    710e:	df 93       	push	r29
    7110:	cf 93       	push	r28
    7112:	00 d0       	rcall	.+0      	; 0x7114 <LCD_vidGotoxy+0x6>
    7114:	00 d0       	rcall	.+0      	; 0x7116 <LCD_vidGotoxy+0x8>
    7116:	cd b7       	in	r28, 0x3d	; 61
    7118:	de b7       	in	r29, 0x3e	; 62
    711a:	89 83       	std	Y+1, r24	; 0x01
    711c:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8Numy)
    711e:	8a 81       	ldd	r24, Y+2	; 0x02
    7120:	28 2f       	mov	r18, r24
    7122:	30 e0       	ldi	r19, 0x00	; 0
    7124:	3c 83       	std	Y+4, r19	; 0x04
    7126:	2b 83       	std	Y+3, r18	; 0x03
    7128:	8b 81       	ldd	r24, Y+3	; 0x03
    712a:	9c 81       	ldd	r25, Y+4	; 0x04
    712c:	00 97       	sbiw	r24, 0x00	; 0
    712e:	31 f0       	breq	.+12     	; 0x713c <LCD_vidGotoxy+0x2e>
    7130:	2b 81       	ldd	r18, Y+3	; 0x03
    7132:	3c 81       	ldd	r19, Y+4	; 0x04
    7134:	21 30       	cpi	r18, 0x01	; 1
    7136:	31 05       	cpc	r19, r1
    7138:	49 f0       	breq	.+18     	; 0x714c <LCD_vidGotoxy+0x3e>
    713a:	0f c0       	rjmp	.+30     	; 0x715a <LCD_vidGotoxy+0x4c>
	{
	case 0 : if((u8Numx<16)&&(u8Numx>=0))
    713c:	89 81       	ldd	r24, Y+1	; 0x01
    713e:	80 31       	cpi	r24, 0x10	; 16
    7140:	60 f4       	brcc	.+24     	; 0x715a <LCD_vidGotoxy+0x4c>
		    LCD_vidSendCommand(0x80+u8Numx);
    7142:	89 81       	ldd	r24, Y+1	; 0x01
    7144:	80 58       	subi	r24, 0x80	; 128
    7146:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    714a:	07 c0       	rjmp	.+14     	; 0x715a <LCD_vidGotoxy+0x4c>
	        break;

	case 1:if((u8Numx<16)&&(u8Numx>=0))
    714c:	89 81       	ldd	r24, Y+1	; 0x01
    714e:	80 31       	cpi	r24, 0x10	; 16
    7150:	20 f4       	brcc	.+8      	; 0x715a <LCD_vidGotoxy+0x4c>
	          LCD_vidSendCommand(0xc0+u8Numx);
    7152:	89 81       	ldd	r24, Y+1	; 0x01
    7154:	80 54       	subi	r24, 0x40	; 64
    7156:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
                break;
	}
}
    715a:	0f 90       	pop	r0
    715c:	0f 90       	pop	r0
    715e:	0f 90       	pop	r0
    7160:	0f 90       	pop	r0
    7162:	cf 91       	pop	r28
    7164:	df 91       	pop	r29
    7166:	08 95       	ret

00007168 <LCD_vidGotoxy4>:
//...........................................................................................
void LCD_vidGotoxy4(uint8 u8Numx,uint8 u8Numy)
{
    7168:	df 93       	push	r29
    716a:	cf 93       	push	r28
    716c:	00 d0       	rcall	.+0      	; 0x716e <LCD_vidGotoxy4+0x6>
    716e:	00 d0       	rcall	.+0      	; 0x7170 <LCD_vidGotoxy4+0x8>
    7170:	cd b7       	in	r28, 0x3d	; 61
    7172:	de b7       	in	r29, 0x3e	; 62
    7174:	89 83       	std	Y+1, r24	; 0x01
    7176:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8Numy)
    7178:	8a 81       	ldd	r24, Y+2	; 0x02
    717a:	28 2f       	mov	r18, r24
    717c:	30 e0       	ldi	r19, 0x00	; 0
    717e:	3c 83       	std	Y+4, r19	; 0x04
    7180:	2b 83       	std	Y+3, r18	; 0x03
    7182:	8b 81       	ldd	r24, Y+3	; 0x03
    7184:	9c 81       	ldd	r25, Y+4	; 0x04
    7186:	00 97       	sbiw	r24, 0x00	; 0
    7188:	31 f0       	breq	.+12     	; 0x7196 <LCD_vidGotoxy4+0x2e>
    718a:	2b 81       	ldd	r18, Y+3	; 0x03
    718c:	3c 81       	ldd	r19, Y+4	; 0x04
    718e:	21 30       	cpi	r18, 0x01	; 1
    7190:	31 05       	cpc	r19, r1
    7192:	49 f0       	breq	.+18     	; 0x71a6 <LCD_vidGotoxy4+0x3e>
    7194:	0f c0       	rjmp	.+30     	; 0x71b4 <LCD_vidGotoxy4+0x4c>
		{
		case 0 : if((u8Numx<16)&&(u8Numx>=0))
    7196:	89 81       	ldd	r24, Y+1	; 0x01
    7198:	80 31       	cpi	r24, 0x10	; 16
    719a:	60 f4       	brcc	.+24     	; 0x71b4 <LCD_vidGotoxy4+0x4c>
			LCD_vidSendCommand4(0x80+u8Numx);
    719c:	89 81       	ldd	r24, Y+1	; 0x01
    719e:	80 58       	subi	r24, 0x80	; 128
    71a0:	0e 94 22 30 	call	0x6044	; 0x6044 <LCD_vidSendCommand4>
    71a4:	07 c0       	rjmp	.+14     	; 0x71b4 <LCD_vidGotoxy4+0x4c>
		        break;

		case 1:if((u8Numx<16)&&(u8Numx>=0))
    71a6:	89 81       	ldd	r24, Y+1	; 0x01
    71a8:	80 31       	cpi	r24, 0x10	; 16
    71aa:	20 f4       	brcc	.+8      	; 0x71b4 <LCD_vidGotoxy4+0x4c>
			LCD_vidSendCommand4(0xc0+u8Numx);
    71ac:	89 81       	ldd	r24, Y+1	; 0x01
    71ae:	80 54       	subi	r24, 0x40	; 64
    71b0:	0e 94 22 30 	call	0x6044	; 0x6044 <LCD_vidSendCommand4>
	                break;
		}
}
    71b4:	0f 90       	pop	r0
    71b6:	0f 90       	pop	r0
    71b8:	0f 90       	pop	r0
    71ba:	0f 90       	pop	r0
    71bc:	cf 91       	pop	r28
    71be:	df 91       	pop	r29
    71c0:	08 95       	ret

000071c2 <LCD_vidShiftDisplayCursor>:
//.........................................................................................
void LCD_vidShiftDisplayCursor(uint8 u8Direction,uint8 u8ShiftNumber,uint8 u8DisplayOrcursor)

{   uint8 u8CommandValue=0x10;
    71c2:	df 93       	push	r29
    71c4:	cf 93       	push	r28
    71c6:	cd b7       	in	r28, 0x3d	; 61
    71c8:	de b7       	in	r29, 0x3e	; 62
    71ca:	66 97       	sbiw	r28, 0x16	; 22
    71cc:	0f b6       	in	r0, 0x3f	; 63
    71ce:	f8 94       	cli
    71d0:	de bf       	out	0x3e, r29	; 62
    71d2:	0f be       	out	0x3f, r0	; 63
    71d4:	cd bf       	out	0x3d, r28	; 61
    71d6:	88 8b       	std	Y+16, r24	; 0x10
    71d8:	69 8b       	std	Y+17, r22	; 0x11
    71da:	4a 8b       	std	Y+18, r20	; 0x12
    71dc:	80 e1       	ldi	r24, 0x10	; 16
    71de:	8f 87       	std	Y+15, r24	; 0x0f
	switch(u8Direction)
    71e0:	88 89       	ldd	r24, Y+16	; 0x10
    71e2:	28 2f       	mov	r18, r24
    71e4:	30 e0       	ldi	r19, 0x00	; 0
    71e6:	3e 8b       	std	Y+22, r19	; 0x16
    71e8:	2d 8b       	std	Y+21, r18	; 0x15
    71ea:	8d 89       	ldd	r24, Y+21	; 0x15
    71ec:	9e 89       	ldd	r25, Y+22	; 0x16
    71ee:	00 97       	sbiw	r24, 0x00	; 0
    71f0:	49 f0       	breq	.+18     	; 0x7204 <LCD_vidShiftDisplayCursor+0x42>
    71f2:	2d 89       	ldd	r18, Y+21	; 0x15
    71f4:	3e 89       	ldd	r19, Y+22	; 0x16
    71f6:	21 30       	cpi	r18, 0x01	; 1
    71f8:	31 05       	cpc	r19, r1
    71fa:	39 f4       	brne	.+14     	; 0x720a <LCD_vidShiftDisplayCursor+0x48>
	{
	case Right:SET_BIT(u8CommandValue,2);
    71fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    71fe:	84 60       	ori	r24, 0x04	; 4
    7200:	8f 87       	std	Y+15, r24	; 0x0f
    7202:	03 c0       	rjmp	.+6      	; 0x720a <LCD_vidShiftDisplayCursor+0x48>
	            break;

	case Left:CLR_BIT(u8CommandValue,2);
    7204:	8f 85       	ldd	r24, Y+15	; 0x0f
    7206:	8b 7f       	andi	r24, 0xFB	; 251
    7208:	8f 87       	std	Y+15, r24	; 0x0f
	          break;

	}

	switch(u8DisplayOrcursor)
    720a:	8a 89       	ldd	r24, Y+18	; 0x12
    720c:	28 2f       	mov	r18, r24
    720e:	30 e0       	ldi	r19, 0x00	; 0
    7210:	3c 8b       	std	Y+20, r19	; 0x14
    7212:	2b 8b       	std	Y+19, r18	; 0x13
    7214:	8b 89       	ldd	r24, Y+19	; 0x13
    7216:	9c 89       	ldd	r25, Y+20	; 0x14
    7218:	00 97       	sbiw	r24, 0x00	; 0
    721a:	51 f0       	breq	.+20     	; 0x7230 <LCD_vidShiftDisplayCursor+0x6e>
    721c:	2b 89       	ldd	r18, Y+19	; 0x13
    721e:	3c 89       	ldd	r19, Y+20	; 0x14
    7220:	21 30       	cpi	r18, 0x01	; 1
    7222:	31 05       	cpc	r19, r1
    7224:	09 f0       	breq	.+2      	; 0x7228 <LCD_vidShiftDisplayCursor+0x66>
    7226:	80 c0       	rjmp	.+256    	; 0x7328 <LCD_vidShiftDisplayCursor+0x166>
	{
	case Display:SET_BIT(u8CommandValue,3);
    7228:	8f 85       	ldd	r24, Y+15	; 0x0f
    722a:	88 60       	ori	r24, 0x08	; 8
    722c:	8f 87       	std	Y+15, r24	; 0x0f
    722e:	7c c0       	rjmp	.+248    	; 0x7328 <LCD_vidShiftDisplayCursor+0x166>
	               break;
	case Cursor:CLR_BIT(u8CommandValue,3);
    7230:	8f 85       	ldd	r24, Y+15	; 0x0f
    7232:	87 7f       	andi	r24, 0xF7	; 247
    7234:	8f 87       	std	Y+15, r24	; 0x0f
    7236:	78 c0       	rjmp	.+240    	; 0x7328 <LCD_vidShiftDisplayCursor+0x166>
                 break;
	}

	while(u8ShiftNumber!=0)
	{
		 LCD_vidSendCommand(u8CommandValue);
    7238:	8f 85       	ldd	r24, Y+15	; 0x0f
    723a:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
		 u8ShiftNumber--;
    723e:	89 89       	ldd	r24, Y+17	; 0x11
    7240:	81 50       	subi	r24, 0x01	; 1
    7242:	89 8b       	std	Y+17, r24	; 0x11
    7244:	80 e0       	ldi	r24, 0x00	; 0
    7246:	90 e0       	ldi	r25, 0x00	; 0
    7248:	a0 e2       	ldi	r26, 0x20	; 32
    724a:	b1 e4       	ldi	r27, 0x41	; 65
    724c:	8b 87       	std	Y+11, r24	; 0x0b
    724e:	9c 87       	std	Y+12, r25	; 0x0c
    7250:	ad 87       	std	Y+13, r26	; 0x0d
    7252:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7254:	6b 85       	ldd	r22, Y+11	; 0x0b
    7256:	7c 85       	ldd	r23, Y+12	; 0x0c
    7258:	8d 85       	ldd	r24, Y+13	; 0x0d
    725a:	9e 85       	ldd	r25, Y+14	; 0x0e
    725c:	20 e0       	ldi	r18, 0x00	; 0
    725e:	30 e0       	ldi	r19, 0x00	; 0
    7260:	4a ef       	ldi	r20, 0xFA	; 250
    7262:	54 e4       	ldi	r21, 0x44	; 68
    7264:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    7268:	dc 01       	movw	r26, r24
    726a:	cb 01       	movw	r24, r22
    726c:	8f 83       	std	Y+7, r24	; 0x07
    726e:	98 87       	std	Y+8, r25	; 0x08
    7270:	a9 87       	std	Y+9, r26	; 0x09
    7272:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7274:	6f 81       	ldd	r22, Y+7	; 0x07
    7276:	78 85       	ldd	r23, Y+8	; 0x08
    7278:	89 85       	ldd	r24, Y+9	; 0x09
    727a:	9a 85       	ldd	r25, Y+10	; 0x0a
    727c:	20 e0       	ldi	r18, 0x00	; 0
    727e:	30 e0       	ldi	r19, 0x00	; 0
    7280:	40 e8       	ldi	r20, 0x80	; 128
    7282:	5f e3       	ldi	r21, 0x3F	; 63
    7284:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    7288:	88 23       	and	r24, r24
    728a:	2c f4       	brge	.+10     	; 0x7296 <LCD_vidShiftDisplayCursor+0xd4>
		__ticks = 1;
    728c:	81 e0       	ldi	r24, 0x01	; 1
    728e:	90 e0       	ldi	r25, 0x00	; 0
    7290:	9e 83       	std	Y+6, r25	; 0x06
    7292:	8d 83       	std	Y+5, r24	; 0x05
    7294:	3f c0       	rjmp	.+126    	; 0x7314 <LCD_vidShiftDisplayCursor+0x152>
	else if (__tmp > 65535)
    7296:	6f 81       	ldd	r22, Y+7	; 0x07
    7298:	78 85       	ldd	r23, Y+8	; 0x08
    729a:	89 85       	ldd	r24, Y+9	; 0x09
    729c:	9a 85       	ldd	r25, Y+10	; 0x0a
    729e:	20 e0       	ldi	r18, 0x00	; 0
    72a0:	3f ef       	ldi	r19, 0xFF	; 255
    72a2:	4f e7       	ldi	r20, 0x7F	; 127
    72a4:	57 e4       	ldi	r21, 0x47	; 71
    72a6:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    72aa:	18 16       	cp	r1, r24
    72ac:	4c f5       	brge	.+82     	; 0x7300 <LCD_vidShiftDisplayCursor+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    72ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    72b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    72b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    72b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    72b6:	20 e0       	ldi	r18, 0x00	; 0
    72b8:	30 e0       	ldi	r19, 0x00	; 0
    72ba:	40 e2       	ldi	r20, 0x20	; 32
    72bc:	51 e4       	ldi	r21, 0x41	; 65
    72be:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    72c2:	dc 01       	movw	r26, r24
    72c4:	cb 01       	movw	r24, r22
    72c6:	bc 01       	movw	r22, r24
    72c8:	cd 01       	movw	r24, r26
    72ca:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    72ce:	dc 01       	movw	r26, r24
    72d0:	cb 01       	movw	r24, r22
    72d2:	9e 83       	std	Y+6, r25	; 0x06
    72d4:	8d 83       	std	Y+5, r24	; 0x05
    72d6:	0f c0       	rjmp	.+30     	; 0x72f6 <LCD_vidShiftDisplayCursor+0x134>
    72d8:	88 ec       	ldi	r24, 0xC8	; 200
    72da:	90 e0       	ldi	r25, 0x00	; 0
    72dc:	9c 83       	std	Y+4, r25	; 0x04
    72de:	8b 83       	std	Y+3, r24	; 0x03
    72e0:	8b 81       	ldd	r24, Y+3	; 0x03
    72e2:	9c 81       	ldd	r25, Y+4	; 0x04
    72e4:	01 97       	sbiw	r24, 0x01	; 1
    72e6:	f1 f7       	brne	.-4      	; 0x72e4 <LCD_vidShiftDisplayCursor+0x122>
    72e8:	9c 83       	std	Y+4, r25	; 0x04
    72ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    72ec:	8d 81       	ldd	r24, Y+5	; 0x05
    72ee:	9e 81       	ldd	r25, Y+6	; 0x06
    72f0:	01 97       	sbiw	r24, 0x01	; 1
    72f2:	9e 83       	std	Y+6, r25	; 0x06
    72f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    72f6:	8d 81       	ldd	r24, Y+5	; 0x05
    72f8:	9e 81       	ldd	r25, Y+6	; 0x06
    72fa:	00 97       	sbiw	r24, 0x00	; 0
    72fc:	69 f7       	brne	.-38     	; 0x72d8 <LCD_vidShiftDisplayCursor+0x116>
    72fe:	14 c0       	rjmp	.+40     	; 0x7328 <LCD_vidShiftDisplayCursor+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7300:	6f 81       	ldd	r22, Y+7	; 0x07
    7302:	78 85       	ldd	r23, Y+8	; 0x08
    7304:	89 85       	ldd	r24, Y+9	; 0x09
    7306:	9a 85       	ldd	r25, Y+10	; 0x0a
    7308:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    730c:	dc 01       	movw	r26, r24
    730e:	cb 01       	movw	r24, r22
    7310:	9e 83       	std	Y+6, r25	; 0x06
    7312:	8d 83       	std	Y+5, r24	; 0x05
    7314:	8d 81       	ldd	r24, Y+5	; 0x05
    7316:	9e 81       	ldd	r25, Y+6	; 0x06
    7318:	9a 83       	std	Y+2, r25	; 0x02
    731a:	89 83       	std	Y+1, r24	; 0x01
    731c:	89 81       	ldd	r24, Y+1	; 0x01
    731e:	9a 81       	ldd	r25, Y+2	; 0x02
    7320:	01 97       	sbiw	r24, 0x01	; 1
    7322:	f1 f7       	brne	.-4      	; 0x7320 <LCD_vidShiftDisplayCursor+0x15e>
    7324:	9a 83       	std	Y+2, r25	; 0x02
    7326:	89 83       	std	Y+1, r24	; 0x01
	               break;
	case Cursor:CLR_BIT(u8CommandValue,3);
                 break;
	}

	while(u8ShiftNumber!=0)
    7328:	89 89       	ldd	r24, Y+17	; 0x11
    732a:	88 23       	and	r24, r24
    732c:	09 f0       	breq	.+2      	; 0x7330 <LCD_vidShiftDisplayCursor+0x16e>
    732e:	84 cf       	rjmp	.-248    	; 0x7238 <LCD_vidShiftDisplayCursor+0x76>
		 LCD_vidSendCommand(u8CommandValue);
		 u8ShiftNumber--;
		 _delay_ms(10);
	}

}
    7330:	66 96       	adiw	r28, 0x16	; 22
    7332:	0f b6       	in	r0, 0x3f	; 63
    7334:	f8 94       	cli
    7336:	de bf       	out	0x3e, r29	; 62
    7338:	0f be       	out	0x3f, r0	; 63
    733a:	cd bf       	out	0x3d, r28	; 61
    733c:	cf 91       	pop	r28
    733e:	df 91       	pop	r29
    7340:	08 95       	ret

00007342 <LCD_vidShiftDisplayCursor4>:

//.....................................................................................
void LCD_vidShiftDisplayCursor4(uint8 u8Direction,uint8 u8ShiftNumber,uint8 u8DisplayOrcursor)
{
    7342:	df 93       	push	r29
    7344:	cf 93       	push	r28
    7346:	cd b7       	in	r28, 0x3d	; 61
    7348:	de b7       	in	r29, 0x3e	; 62
    734a:	28 97       	sbiw	r28, 0x08	; 8
    734c:	0f b6       	in	r0, 0x3f	; 63
    734e:	f8 94       	cli
    7350:	de bf       	out	0x3e, r29	; 62
    7352:	0f be       	out	0x3f, r0	; 63
    7354:	cd bf       	out	0x3d, r28	; 61
    7356:	8a 83       	std	Y+2, r24	; 0x02
    7358:	6b 83       	std	Y+3, r22	; 0x03
    735a:	4c 83       	std	Y+4, r20	; 0x04
	 uint8 u8CommandValue=0x10;
    735c:	80 e1       	ldi	r24, 0x10	; 16
    735e:	89 83       	std	Y+1, r24	; 0x01
		switch( u8Direction)
    7360:	8a 81       	ldd	r24, Y+2	; 0x02
    7362:	28 2f       	mov	r18, r24
    7364:	30 e0       	ldi	r19, 0x00	; 0
    7366:	38 87       	std	Y+8, r19	; 0x08
    7368:	2f 83       	std	Y+7, r18	; 0x07
    736a:	8f 81       	ldd	r24, Y+7	; 0x07
    736c:	98 85       	ldd	r25, Y+8	; 0x08
    736e:	00 97       	sbiw	r24, 0x00	; 0
    7370:	49 f0       	breq	.+18     	; 0x7384 <LCD_vidShiftDisplayCursor4+0x42>
    7372:	2f 81       	ldd	r18, Y+7	; 0x07
    7374:	38 85       	ldd	r19, Y+8	; 0x08
    7376:	21 30       	cpi	r18, 0x01	; 1
    7378:	31 05       	cpc	r19, r1
    737a:	39 f4       	brne	.+14     	; 0x738a <LCD_vidShiftDisplayCursor4+0x48>
		{
		case Right:SET_BIT(u8CommandValue,2);
    737c:	89 81       	ldd	r24, Y+1	; 0x01
    737e:	84 60       	ori	r24, 0x04	; 4
    7380:	89 83       	std	Y+1, r24	; 0x01
    7382:	03 c0       	rjmp	.+6      	; 0x738a <LCD_vidShiftDisplayCursor4+0x48>
		            break;

		case Left:CLR_BIT(u8CommandValue,2);
    7384:	89 81       	ldd	r24, Y+1	; 0x01
    7386:	8b 7f       	andi	r24, 0xFB	; 251
    7388:	89 83       	std	Y+1, r24	; 0x01
		          break;

		}

		switch( u8DisplayOrcursor)
    738a:	8c 81       	ldd	r24, Y+4	; 0x04
    738c:	28 2f       	mov	r18, r24
    738e:	30 e0       	ldi	r19, 0x00	; 0
    7390:	3e 83       	std	Y+6, r19	; 0x06
    7392:	2d 83       	std	Y+5, r18	; 0x05
    7394:	8d 81       	ldd	r24, Y+5	; 0x05
    7396:	9e 81       	ldd	r25, Y+6	; 0x06
    7398:	00 97       	sbiw	r24, 0x00	; 0
    739a:	49 f0       	breq	.+18     	; 0x73ae <LCD_vidShiftDisplayCursor4+0x6c>
    739c:	2d 81       	ldd	r18, Y+5	; 0x05
    739e:	3e 81       	ldd	r19, Y+6	; 0x06
    73a0:	21 30       	cpi	r18, 0x01	; 1
    73a2:	31 05       	cpc	r19, r1
    73a4:	71 f4       	brne	.+28     	; 0x73c2 <LCD_vidShiftDisplayCursor4+0x80>
		{
		case Display:SET_BIT(u8CommandValue,3);
    73a6:	89 81       	ldd	r24, Y+1	; 0x01
    73a8:	88 60       	ori	r24, 0x08	; 8
    73aa:	89 83       	std	Y+1, r24	; 0x01
    73ac:	0a c0       	rjmp	.+20     	; 0x73c2 <LCD_vidShiftDisplayCursor4+0x80>
		               break;
		case Cursor:CLR_BIT(u8CommandValue,3);
    73ae:	89 81       	ldd	r24, Y+1	; 0x01
    73b0:	87 7f       	andi	r24, 0xF7	; 247
    73b2:	89 83       	std	Y+1, r24	; 0x01
    73b4:	06 c0       	rjmp	.+12     	; 0x73c2 <LCD_vidShiftDisplayCursor4+0x80>
	                 break;
		}
		while(u8ShiftNumber!=0)
		{
			 LCD_vidSendCommand4(u8CommandValue);
    73b6:	89 81       	ldd	r24, Y+1	; 0x01
    73b8:	0e 94 22 30 	call	0x6044	; 0x6044 <LCD_vidSendCommand4>
			 u8ShiftNumber--;
    73bc:	8b 81       	ldd	r24, Y+3	; 0x03
    73be:	81 50       	subi	r24, 0x01	; 1
    73c0:	8b 83       	std	Y+3, r24	; 0x03
		case Display:SET_BIT(u8CommandValue,3);
		               break;
		case Cursor:CLR_BIT(u8CommandValue,3);
	                 break;
		}
		while(u8ShiftNumber!=0)
    73c2:	8b 81       	ldd	r24, Y+3	; 0x03
    73c4:	88 23       	and	r24, r24
    73c6:	b9 f7       	brne	.-18     	; 0x73b6 <LCD_vidShiftDisplayCursor4+0x74>
		{
			 LCD_vidSendCommand4(u8CommandValue);
			 u8ShiftNumber--;
		}

}
    73c8:	28 96       	adiw	r28, 0x08	; 8
    73ca:	0f b6       	in	r0, 0x3f	; 63
    73cc:	f8 94       	cli
    73ce:	de bf       	out	0x3e, r29	; 62
    73d0:	0f be       	out	0x3f, r0	; 63
    73d2:	cd bf       	out	0x3d, r28	; 61
    73d4:	cf 91       	pop	r28
    73d6:	df 91       	pop	r29
    73d8:	08 95       	ret

000073da <LCD_vidPrint>:

//.......................................................................................
void LCD_vidPrint(uint8 str[])
{
    73da:	df 93       	push	r29
    73dc:	cf 93       	push	r28
    73de:	00 d0       	rcall	.+0      	; 0x73e0 <LCD_vidPrint+0x6>
    73e0:	0f 92       	push	r0
    73e2:	cd b7       	in	r28, 0x3d	; 61
    73e4:	de b7       	in	r29, 0x3e	; 62
    73e6:	9b 83       	std	Y+3, r25	; 0x03
    73e8:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    73ea:	19 82       	std	Y+1, r1	; 0x01
    73ec:	0f c0       	rjmp	.+30     	; 0x740c <LCD_vidPrint+0x32>
	while(str[i]!=0)
	{
		LCD_vidWriteCharacter(str[i++]);
    73ee:	89 81       	ldd	r24, Y+1	; 0x01
    73f0:	28 2f       	mov	r18, r24
    73f2:	30 e0       	ldi	r19, 0x00	; 0
    73f4:	8a 81       	ldd	r24, Y+2	; 0x02
    73f6:	9b 81       	ldd	r25, Y+3	; 0x03
    73f8:	fc 01       	movw	r30, r24
    73fa:	e2 0f       	add	r30, r18
    73fc:	f3 1f       	adc	r31, r19
    73fe:	90 81       	ld	r25, Z
    7400:	89 81       	ldd	r24, Y+1	; 0x01
    7402:	8f 5f       	subi	r24, 0xFF	; 255
    7404:	89 83       	std	Y+1, r24	; 0x01
    7406:	89 2f       	mov	r24, r25
    7408:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>

//.......................................................................................
void LCD_vidPrint(uint8 str[])
{
	uint8 i=0;
	while(str[i]!=0)
    740c:	89 81       	ldd	r24, Y+1	; 0x01
    740e:	28 2f       	mov	r18, r24
    7410:	30 e0       	ldi	r19, 0x00	; 0
    7412:	8a 81       	ldd	r24, Y+2	; 0x02
    7414:	9b 81       	ldd	r25, Y+3	; 0x03
    7416:	fc 01       	movw	r30, r24
    7418:	e2 0f       	add	r30, r18
    741a:	f3 1f       	adc	r31, r19
    741c:	80 81       	ld	r24, Z
    741e:	88 23       	and	r24, r24
    7420:	31 f7       	brne	.-52     	; 0x73ee <LCD_vidPrint+0x14>
	{
		LCD_vidWriteCharacter(str[i++]);
	}
}
    7422:	0f 90       	pop	r0
    7424:	0f 90       	pop	r0
    7426:	0f 90       	pop	r0
    7428:	cf 91       	pop	r28
    742a:	df 91       	pop	r29
    742c:	08 95       	ret

0000742e <LCD_vidPrintInTwoLines>:
//.........................................................................................
void LCD_vidPrintInTwoLines(uint8 str[])
{
    742e:	df 93       	push	r29
    7430:	cf 93       	push	r28
    7432:	00 d0       	rcall	.+0      	; 0x7434 <LCD_vidPrintInTwoLines+0x6>
    7434:	0f 92       	push	r0
    7436:	cd b7       	in	r28, 0x3d	; 61
    7438:	de b7       	in	r29, 0x3e	; 62
    743a:	9b 83       	std	Y+3, r25	; 0x03
    743c:	8a 83       	std	Y+2, r24	; 0x02

	uint8 i=0;
    743e:	19 82       	std	Y+1, r1	; 0x01
    7440:	5b c0       	rjmp	.+182    	; 0x74f8 <LCD_vidPrintInTwoLines+0xca>
		while(str[i]!=0)
		{
			if(i<=15){
    7442:	89 81       	ldd	r24, Y+1	; 0x01
    7444:	80 31       	cpi	r24, 0x10	; 16
    7446:	a0 f4       	brcc	.+40     	; 0x7470 <LCD_vidPrintInTwoLines+0x42>

			LCD_vidGotoxy(i,0);
    7448:	89 81       	ldd	r24, Y+1	; 0x01
    744a:	60 e0       	ldi	r22, 0x00	; 0
    744c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
			LCD_vidWriteCharacter(str[i++]);
    7450:	89 81       	ldd	r24, Y+1	; 0x01
    7452:	28 2f       	mov	r18, r24
    7454:	30 e0       	ldi	r19, 0x00	; 0
    7456:	8a 81       	ldd	r24, Y+2	; 0x02
    7458:	9b 81       	ldd	r25, Y+3	; 0x03
    745a:	fc 01       	movw	r30, r24
    745c:	e2 0f       	add	r30, r18
    745e:	f3 1f       	adc	r31, r19
    7460:	90 81       	ld	r25, Z
    7462:	89 81       	ldd	r24, Y+1	; 0x01
    7464:	8f 5f       	subi	r24, 0xFF	; 255
    7466:	89 83       	std	Y+1, r24	; 0x01
    7468:	89 2f       	mov	r24, r25
    746a:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    746e:	44 c0       	rjmp	.+136    	; 0x74f8 <LCD_vidPrintInTwoLines+0xca>
		}
			else if(i<=31)
    7470:	89 81       	ldd	r24, Y+1	; 0x01
    7472:	80 32       	cpi	r24, 0x20	; 32
    7474:	a8 f4       	brcc	.+42     	; 0x74a0 <LCD_vidPrintInTwoLines+0x72>
			{

				LCD_vidGotoxy(i-16,1);
    7476:	89 81       	ldd	r24, Y+1	; 0x01
    7478:	80 51       	subi	r24, 0x10	; 16
    747a:	61 e0       	ldi	r22, 0x01	; 1
    747c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
				LCD_vidWriteCharacter(str[i++]);
    7480:	89 81       	ldd	r24, Y+1	; 0x01
    7482:	28 2f       	mov	r18, r24
    7484:	30 e0       	ldi	r19, 0x00	; 0
    7486:	8a 81       	ldd	r24, Y+2	; 0x02
    7488:	9b 81       	ldd	r25, Y+3	; 0x03
    748a:	fc 01       	movw	r30, r24
    748c:	e2 0f       	add	r30, r18
    748e:	f3 1f       	adc	r31, r19
    7490:	90 81       	ld	r25, Z
    7492:	89 81       	ldd	r24, Y+1	; 0x01
    7494:	8f 5f       	subi	r24, 0xFF	; 255
    7496:	89 83       	std	Y+1, r24	; 0x01
    7498:	89 2f       	mov	r24, r25
    749a:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    749e:	2c c0       	rjmp	.+88     	; 0x74f8 <LCD_vidPrintInTwoLines+0xca>

			}
			else if(i>31)
    74a0:	89 81       	ldd	r24, Y+1	; 0x01
    74a2:	80 32       	cpi	r24, 0x20	; 32
    74a4:	a8 f0       	brcs	.+42     	; 0x74d0 <LCD_vidPrintInTwoLines+0xa2>
				{
					LCD_vidGotoxy(i-32,0);
    74a6:	89 81       	ldd	r24, Y+1	; 0x01
    74a8:	80 52       	subi	r24, 0x20	; 32
    74aa:	60 e0       	ldi	r22, 0x00	; 0
    74ac:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
					LCD_vidWriteCharacter(str[i++]);
    74b0:	89 81       	ldd	r24, Y+1	; 0x01
    74b2:	28 2f       	mov	r18, r24
    74b4:	30 e0       	ldi	r19, 0x00	; 0
    74b6:	8a 81       	ldd	r24, Y+2	; 0x02
    74b8:	9b 81       	ldd	r25, Y+3	; 0x03
    74ba:	fc 01       	movw	r30, r24
    74bc:	e2 0f       	add	r30, r18
    74be:	f3 1f       	adc	r31, r19
    74c0:	90 81       	ld	r25, Z
    74c2:	89 81       	ldd	r24, Y+1	; 0x01
    74c4:	8f 5f       	subi	r24, 0xFF	; 255
    74c6:	89 83       	std	Y+1, r24	; 0x01
    74c8:	89 2f       	mov	r24, r25
    74ca:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    74ce:	14 c0       	rjmp	.+40     	; 0x74f8 <LCD_vidPrintInTwoLines+0xca>
				}
			else
			{

				LCD_vidGotoxy(i-64,1);
    74d0:	89 81       	ldd	r24, Y+1	; 0x01
    74d2:	80 54       	subi	r24, 0x40	; 64
    74d4:	61 e0       	ldi	r22, 0x01	; 1
    74d6:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
				LCD_vidWriteCharacter(str[i++]);
    74da:	89 81       	ldd	r24, Y+1	; 0x01
    74dc:	28 2f       	mov	r18, r24
    74de:	30 e0       	ldi	r19, 0x00	; 0
    74e0:	8a 81       	ldd	r24, Y+2	; 0x02
    74e2:	9b 81       	ldd	r25, Y+3	; 0x03
    74e4:	fc 01       	movw	r30, r24
    74e6:	e2 0f       	add	r30, r18
    74e8:	f3 1f       	adc	r31, r19
    74ea:	90 81       	ld	r25, Z
    74ec:	89 81       	ldd	r24, Y+1	; 0x01
    74ee:	8f 5f       	subi	r24, 0xFF	; 255
    74f0:	89 83       	std	Y+1, r24	; 0x01
    74f2:	89 2f       	mov	r24, r25
    74f4:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
//.........................................................................................
void LCD_vidPrintInTwoLines(uint8 str[])
{

	uint8 i=0;
		while(str[i]!=0)
    74f8:	89 81       	ldd	r24, Y+1	; 0x01
    74fa:	28 2f       	mov	r18, r24
    74fc:	30 e0       	ldi	r19, 0x00	; 0
    74fe:	8a 81       	ldd	r24, Y+2	; 0x02
    7500:	9b 81       	ldd	r25, Y+3	; 0x03
    7502:	fc 01       	movw	r30, r24
    7504:	e2 0f       	add	r30, r18
    7506:	f3 1f       	adc	r31, r19
    7508:	80 81       	ld	r24, Z
    750a:	88 23       	and	r24, r24
    750c:	09 f0       	breq	.+2      	; 0x7510 <LCD_vidPrintInTwoLines+0xe2>
    750e:	99 cf       	rjmp	.-206    	; 0x7442 <LCD_vidPrintInTwoLines+0x14>

				}

}

}
    7510:	0f 90       	pop	r0
    7512:	0f 90       	pop	r0
    7514:	0f 90       	pop	r0
    7516:	cf 91       	pop	r28
    7518:	df 91       	pop	r29
    751a:	08 95       	ret

0000751c <LCD_vidPrint4>:
//.........................................................................................
void LCD_vidPrint4(uint8 str[])
{
    751c:	df 93       	push	r29
    751e:	cf 93       	push	r28
    7520:	00 d0       	rcall	.+0      	; 0x7522 <LCD_vidPrint4+0x6>
    7522:	0f 92       	push	r0
    7524:	cd b7       	in	r28, 0x3d	; 61
    7526:	de b7       	in	r29, 0x3e	; 62
    7528:	9b 83       	std	Y+3, r25	; 0x03
    752a:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i=0;
    752c:	19 82       	std	Y+1, r1	; 0x01
    752e:	0f c0       	rjmp	.+30     	; 0x754e <LCD_vidPrint4+0x32>
	while(str[i]!=0)
	{
		LCD_vidWriteCharacter4(str[i++]);
    7530:	89 81       	ldd	r24, Y+1	; 0x01
    7532:	28 2f       	mov	r18, r24
    7534:	30 e0       	ldi	r19, 0x00	; 0
    7536:	8a 81       	ldd	r24, Y+2	; 0x02
    7538:	9b 81       	ldd	r25, Y+3	; 0x03
    753a:	fc 01       	movw	r30, r24
    753c:	e2 0f       	add	r30, r18
    753e:	f3 1f       	adc	r31, r19
    7540:	90 81       	ld	r25, Z
    7542:	89 81       	ldd	r24, Y+1	; 0x01
    7544:	8f 5f       	subi	r24, 0xFF	; 255
    7546:	89 83       	std	Y+1, r24	; 0x01
    7548:	89 2f       	mov	r24, r25
    754a:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
}
//.........................................................................................
void LCD_vidPrint4(uint8 str[])
{
	uint8 i=0;
	while(str[i]!=0)
    754e:	89 81       	ldd	r24, Y+1	; 0x01
    7550:	28 2f       	mov	r18, r24
    7552:	30 e0       	ldi	r19, 0x00	; 0
    7554:	8a 81       	ldd	r24, Y+2	; 0x02
    7556:	9b 81       	ldd	r25, Y+3	; 0x03
    7558:	fc 01       	movw	r30, r24
    755a:	e2 0f       	add	r30, r18
    755c:	f3 1f       	adc	r31, r19
    755e:	80 81       	ld	r24, Z
    7560:	88 23       	and	r24, r24
    7562:	31 f7       	brne	.-52     	; 0x7530 <LCD_vidPrint4+0x14>
	{
		LCD_vidWriteCharacter4(str[i++]);
	}
}
    7564:	0f 90       	pop	r0
    7566:	0f 90       	pop	r0
    7568:	0f 90       	pop	r0
    756a:	cf 91       	pop	r28
    756c:	df 91       	pop	r29
    756e:	08 95       	ret

00007570 <LCD_vidPrintInTwoLines4>:

//......................................................................................
void LCD_vidPrintInTwoLines4(uint8 str[])
{
    7570:	df 93       	push	r29
    7572:	cf 93       	push	r28
    7574:	00 d0       	rcall	.+0      	; 0x7576 <LCD_vidPrintInTwoLines4+0x6>
    7576:	0f 92       	push	r0
    7578:	cd b7       	in	r28, 0x3d	; 61
    757a:	de b7       	in	r29, 0x3e	; 62
    757c:	9b 83       	std	Y+3, r25	; 0x03
    757e:	8a 83       	std	Y+2, r24	; 0x02

	uint8 i=0;
    7580:	19 82       	std	Y+1, r1	; 0x01
    7582:	2b c0       	rjmp	.+86     	; 0x75da <LCD_vidPrintInTwoLines4+0x6a>
		while(str[i]!=0)
		{
			if(i<=15)
    7584:	89 81       	ldd	r24, Y+1	; 0x01
    7586:	80 31       	cpi	r24, 0x10	; 16
    7588:	a0 f4       	brcc	.+40     	; 0x75b2 <LCD_vidPrintInTwoLines4+0x42>
			{

			LCD_vidGotoxy4(i,0);
    758a:	89 81       	ldd	r24, Y+1	; 0x01
    758c:	60 e0       	ldi	r22, 0x00	; 0
    758e:	0e 94 b4 38 	call	0x7168	; 0x7168 <LCD_vidGotoxy4>
			LCD_vidWriteCharacter4(str[i++]);
    7592:	89 81       	ldd	r24, Y+1	; 0x01
    7594:	28 2f       	mov	r18, r24
    7596:	30 e0       	ldi	r19, 0x00	; 0
    7598:	8a 81       	ldd	r24, Y+2	; 0x02
    759a:	9b 81       	ldd	r25, Y+3	; 0x03
    759c:	fc 01       	movw	r30, r24
    759e:	e2 0f       	add	r30, r18
    75a0:	f3 1f       	adc	r31, r19
    75a2:	90 81       	ld	r25, Z
    75a4:	89 81       	ldd	r24, Y+1	; 0x01
    75a6:	8f 5f       	subi	r24, 0xFF	; 255
    75a8:	89 83       	std	Y+1, r24	; 0x01
    75aa:	89 2f       	mov	r24, r25
    75ac:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
    75b0:	14 c0       	rjmp	.+40     	; 0x75da <LCD_vidPrintInTwoLines4+0x6a>
		}
			else
			{
				LCD_vidGotoxy4(i-16,1);
    75b2:	89 81       	ldd	r24, Y+1	; 0x01
    75b4:	80 51       	subi	r24, 0x10	; 16
    75b6:	61 e0       	ldi	r22, 0x01	; 1
    75b8:	0e 94 b4 38 	call	0x7168	; 0x7168 <LCD_vidGotoxy4>
				LCD_vidWriteCharacter4(str[i++]);
    75bc:	89 81       	ldd	r24, Y+1	; 0x01
    75be:	28 2f       	mov	r18, r24
    75c0:	30 e0       	ldi	r19, 0x00	; 0
    75c2:	8a 81       	ldd	r24, Y+2	; 0x02
    75c4:	9b 81       	ldd	r25, Y+3	; 0x03
    75c6:	fc 01       	movw	r30, r24
    75c8:	e2 0f       	add	r30, r18
    75ca:	f3 1f       	adc	r31, r19
    75cc:	90 81       	ld	r25, Z
    75ce:	89 81       	ldd	r24, Y+1	; 0x01
    75d0:	8f 5f       	subi	r24, 0xFF	; 255
    75d2:	89 83       	std	Y+1, r24	; 0x01
    75d4:	89 2f       	mov	r24, r25
    75d6:	0e 94 bc 32 	call	0x6578	; 0x6578 <LCD_vidWriteCharacter4>
//......................................................................................
void LCD_vidPrintInTwoLines4(uint8 str[])
{

	uint8 i=0;
		while(str[i]!=0)
    75da:	89 81       	ldd	r24, Y+1	; 0x01
    75dc:	28 2f       	mov	r18, r24
    75de:	30 e0       	ldi	r19, 0x00	; 0
    75e0:	8a 81       	ldd	r24, Y+2	; 0x02
    75e2:	9b 81       	ldd	r25, Y+3	; 0x03
    75e4:	fc 01       	movw	r30, r24
    75e6:	e2 0f       	add	r30, r18
    75e8:	f3 1f       	adc	r31, r19
    75ea:	80 81       	ld	r24, Z
    75ec:	88 23       	and	r24, r24
    75ee:	51 f6       	brne	.-108    	; 0x7584 <LCD_vidPrintInTwoLines4+0x14>

			}

		}

}
    75f0:	0f 90       	pop	r0
    75f2:	0f 90       	pop	r0
    75f4:	0f 90       	pop	r0
    75f6:	cf 91       	pop	r28
    75f8:	df 91       	pop	r29
    75fa:	08 95       	ret

000075fc <Buzzer_Init>:
#include"BUZZER.h"

void Buzzer_Init(void)
{
    75fc:	df 93       	push	r29
    75fe:	cf 93       	push	r28
    7600:	cd b7       	in	r28, 0x3d	; 61
    7602:	de b7       	in	r29, 0x3e	; 62
	DIO_void_Set_Pin_Dirction(BUZZER_PORT,BUZZER_PIN,OUTPUT);
    7604:	84 e0       	ldi	r24, 0x04	; 4
    7606:	67 e0       	ldi	r22, 0x07	; 7
    7608:	41 e0       	ldi	r20, 0x01	; 1
    760a:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
}
    760e:	cf 91       	pop	r28
    7610:	df 91       	pop	r29
    7612:	08 95       	ret

00007614 <Buzzer_On>:
void Buzzer_On(void)
{
    7614:	df 93       	push	r29
    7616:	cf 93       	push	r28
    7618:	cd b7       	in	r28, 0x3d	; 61
    761a:	de b7       	in	r29, 0x3e	; 62
DIO_void_Set_Pin_Value(BUZZER_PORT,BUZZER_PIN,HIGH);
    761c:	84 e0       	ldi	r24, 0x04	; 4
    761e:	67 e0       	ldi	r22, 0x07	; 7
    7620:	41 e0       	ldi	r20, 0x01	; 1
    7622:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    7626:	cf 91       	pop	r28
    7628:	df 91       	pop	r29
    762a:	08 95       	ret

0000762c <Buzzer_Off>:

void Buzzer_Off(void)
{
    762c:	df 93       	push	r29
    762e:	cf 93       	push	r28
    7630:	cd b7       	in	r28, 0x3d	; 61
    7632:	de b7       	in	r29, 0x3e	; 62
	DIO_void_Set_Pin_Value(BUZZER_PORT,BUZZER_PIN,LOW);
    7634:	84 e0       	ldi	r24, 0x04	; 4
    7636:	67 e0       	ldi	r22, 0x07	; 7
    7638:	40 e0       	ldi	r20, 0x00	; 0
    763a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    763e:	cf 91       	pop	r28
    7640:	df 91       	pop	r29
    7642:	08 95       	ret

00007644 <project_init>:
volatile uint8 flag_check=0;
volatile uint64 length_rf,length_rb;
volatile uint64 time_rf,time_rb;
volatile uint64 t_rf,t_rb,c_rf,c_rb;
void project_init(void)
{
    7644:	df 93       	push	r29
    7646:	cf 93       	push	r28
    7648:	cd b7       	in	r28, 0x3d	; 61
    764a:	de b7       	in	r29, 0x3e	; 62
	 DIO_void_Set_Pin_Dirction(PORTE_ID,PIN0,INPUT);
    764c:	84 e0       	ldi	r24, 0x04	; 4
    764e:	60 e0       	ldi	r22, 0x00	; 0
    7650:	40 e0       	ldi	r20, 0x00	; 0
    7652:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	 DIO_void_Set_Pin_Dirction(PORTE_ID,PIN1,OUTPUT);
    7656:	84 e0       	ldi	r24, 0x04	; 4
    7658:	61 e0       	ldi	r22, 0x01	; 1
    765a:	41 e0       	ldi	r20, 0x01	; 1
    765c:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>

	//AUTOPARK
   DIO_void_Set_Pin_Dirction(auto_park_port,auto_park_pin,INPUT);
    7660:	83 e0       	ldi	r24, 0x03	; 3
    7662:	60 e0       	ldi	r22, 0x00	; 0
    7664:	40 e0       	ldi	r20, 0x00	; 0
    7666:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Value(auto_park_port,auto_park_pin,HIGH);
    766a:	83 e0       	ldi	r24, 0x03	; 3
    766c:	60 e0       	ldi	r22, 0x00	; 0
    766e:	41 e0       	ldi	r20, 0x01	; 1
    7670:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   //antipark
   DIO_void_Set_Pin_Dirction(auto_park_port,no_park_pin,INPUT);
    7674:	83 e0       	ldi	r24, 0x03	; 3
    7676:	61 e0       	ldi	r22, 0x01	; 1
    7678:	40 e0       	ldi	r20, 0x00	; 0
    767a:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Value(auto_park_port,no_park_pin,HIGH);
    767e:	83 e0       	ldi	r24, 0x03	; 3
    7680:	61 e0       	ldi	r22, 0x01	; 1
    7682:	41 e0       	ldi	r20, 0x01	; 1
    7684:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   //LCD INIT
   LCD_vidDirections();
    7688:	0e 94 42 2b 	call	0x5684	; 0x5684 <LCD_vidDirections>
   LCD_vidInit();
    768c:	0e 94 86 2b 	call	0x570c	; 0x570c <LCD_vidInit>
   LCD_LIGHT();
    7690:	0e 94 ad 5c 	call	0xb95a	; 0xb95a <LCD_LIGHT>
   //...........................
   Ultrasonic_init();
    7694:	0e 94 ed 24 	call	0x49da	; 0x49da <Ultrasonic_init>
   //...........................
   //CAR CONTROL
   DIO_void_Set_Pin_Dirction(car_control,forward,OUTPUT);
    7698:	84 e0       	ldi	r24, 0x04	; 4
    769a:	63 e0       	ldi	r22, 0x03	; 3
    769c:	41 e0       	ldi	r20, 0x01	; 1
    769e:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Dirction(car_control,backword,OUTPUT);
    76a2:	84 e0       	ldi	r24, 0x04	; 4
    76a4:	65 e0       	ldi	r22, 0x05	; 5
    76a6:	41 e0       	ldi	r20, 0x01	; 1
    76a8:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Dirction(car_control,left_wheel,OUTPUT);
    76ac:	84 e0       	ldi	r24, 0x04	; 4
    76ae:	66 e0       	ldi	r22, 0x06	; 6
    76b0:	41 e0       	ldi	r20, 0x01	; 1
    76b2:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Dirction(car_control,right_wheel,OUTPUT);
    76b6:	84 e0       	ldi	r24, 0x04	; 4
    76b8:	67 e0       	ldi	r22, 0x07	; 7
    76ba:	41 e0       	ldi	r20, 0x01	; 1
    76bc:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   DIO_void_Set_Pin_Dirction(car_control,stop,OUTPUT);
    76c0:	84 e0       	ldi	r24, 0x04	; 4
    76c2:	62 e0       	ldi	r22, 0x02	; 2
    76c4:	41 e0       	ldi	r20, 0x01	; 1
    76c6:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>

   DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    76ca:	84 e0       	ldi	r24, 0x04	; 4
    76cc:	63 e0       	ldi	r22, 0x03	; 3
    76ce:	41 e0       	ldi	r20, 0x01	; 1
    76d0:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   DIO_void_Set_Pin_Value(car_control,backword,HIGH);
    76d4:	84 e0       	ldi	r24, 0x04	; 4
    76d6:	65 e0       	ldi	r22, 0x05	; 5
    76d8:	41 e0       	ldi	r20, 0x01	; 1
    76da:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    76de:	84 e0       	ldi	r24, 0x04	; 4
    76e0:	66 e0       	ldi	r22, 0x06	; 6
    76e2:	41 e0       	ldi	r20, 0x01	; 1
    76e4:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    76e8:	84 e0       	ldi	r24, 0x04	; 4
    76ea:	67 e0       	ldi	r22, 0x07	; 7
    76ec:	41 e0       	ldi	r20, 0x01	; 1
    76ee:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   DIO_void_Set_Pin_Value(car_control,stop,HIGH);
    76f2:	84 e0       	ldi	r24, 0x04	; 4
    76f4:	62 e0       	ldi	r22, 0x02	; 2
    76f6:	41 e0       	ldi	r20, 0x01	; 1
    76f8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   //
   sei();
    76fc:	78 94       	sei
   Buzzer_Init();
    76fe:	0e 94 fe 3a 	call	0x75fc	; 0x75fc <Buzzer_Init>
   //
   Mag_Door_Init();
    7702:	0e 94 21 2b 	call	0x5642	; 0x5642 <Mag_Door_Init>
   Timer0_OVInterrupt_Enable();
    7706:	0e 94 58 1e 	call	0x3cb0	; 0x3cb0 <Timer0_OVInterrupt_Enable>
  }
    770a:	cf 91       	pop	r28
    770c:	df 91       	pop	r29
    770e:	08 95       	ret

00007710 <CAR_Width_Check>:



void CAR_Width_Check(void)
{
    7710:	af 92       	push	r10
    7712:	bf 92       	push	r11
    7714:	cf 92       	push	r12
    7716:	df 92       	push	r13
    7718:	ef 92       	push	r14
    771a:	ff 92       	push	r15
    771c:	0f 93       	push	r16
    771e:	1f 93       	push	r17
    7720:	df 93       	push	r29
    7722:	cf 93       	push	r28
    7724:	cd b7       	in	r28, 0x3d	; 61
    7726:	de b7       	in	r29, 0x3e	; 62
	//MOVE FORWARD
    forward_move();
    7728:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
    LCD_vidSendCommand(1);
    772c:	81 e0       	ldi	r24, 0x01	; 1
    772e:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

    	do{
    	   LCD_vidGotoxy(0,0);
    7732:	80 e0       	ldi	r24, 0x00	; 0
    7734:	60 e0       	ldi	r22, 0x00	; 0
    7736:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    	   LCD_vidWriteString("CAR CHECK WIDTH");
    773a:	80 e0       	ldi	r24, 0x00	; 0
    773c:	91 e0       	ldi	r25, 0x01	; 1
    773e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    	   ultra_right_front=Ultrasonic_right_front_Get_Distance();
    7742:	0e 94 36 26 	call	0x4c6c	; 0x4c6c <Ultrasonic_right_front_Get_Distance>
    7746:	dc 01       	movw	r26, r24
    7748:	cb 01       	movw	r24, r22
    774a:	80 93 8e 03 	sts	0x038E, r24
    774e:	90 93 8f 03 	sts	0x038F, r25
    7752:	a0 93 90 03 	sts	0x0390, r26
    7756:	b0 93 91 03 	sts	0x0391, r27
    	   LCD_vidGotoxy(0,1);
    775a:	80 e0       	ldi	r24, 0x00	; 0
    775c:	61 e0       	ldi	r22, 0x01	; 1
    775e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    	   LCD_vidWriteString("DISTANCE:");
    7762:	80 e1       	ldi	r24, 0x10	; 16
    7764:	91 e0       	ldi	r25, 0x01	; 1
    7766:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    	   LCD_vidGotoxy(10,1);
    776a:	8a e0       	ldi	r24, 0x0A	; 10
    776c:	61 e0       	ldi	r22, 0x01	; 1
    776e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    	   LCD_vidWriteUnSignedInteger(ultra_right_front);
    7772:	80 91 8e 03 	lds	r24, 0x038E
    7776:	90 91 8f 03 	lds	r25, 0x038F
    777a:	a0 91 90 03 	lds	r26, 0x0390
    777e:	b0 91 91 03 	lds	r27, 0x0391
    7782:	5c 01       	movw	r10, r24
    7784:	6d 01       	movw	r12, r26
    7786:	ee 24       	eor	r14, r14
    7788:	ff 24       	eor	r15, r15
    778a:	87 01       	movw	r16, r14
    778c:	2a 2d       	mov	r18, r10
    778e:	3b 2d       	mov	r19, r11
    7790:	4c 2d       	mov	r20, r12
    7792:	5d 2d       	mov	r21, r13
    7794:	6e 2d       	mov	r22, r14
    7796:	7f 2d       	mov	r23, r15
    7798:	80 2f       	mov	r24, r16
    779a:	91 2f       	mov	r25, r17
    779c:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>

    	}while(Ultrasonic_right_front_Get_Distance()<100);
    77a0:	0e 94 36 26 	call	0x4c6c	; 0x4c6c <Ultrasonic_right_front_Get_Distance>
    77a4:	dc 01       	movw	r26, r24
    77a6:	cb 01       	movw	r24, r22
    77a8:	84 36       	cpi	r24, 0x64	; 100
    77aa:	91 05       	cpc	r25, r1
    77ac:	a1 05       	cpc	r26, r1
    77ae:	b1 05       	cpc	r27, r1
    77b0:	08 f4       	brcc	.+2      	; 0x77b4 <CAR_Width_Check+0xa4>
    77b2:	bf cf       	rjmp	.-130    	; 0x7732 <CAR_Width_Check+0x22>

}
    77b4:	cf 91       	pop	r28
    77b6:	df 91       	pop	r29
    77b8:	1f 91       	pop	r17
    77ba:	0f 91       	pop	r16
    77bc:	ff 90       	pop	r15
    77be:	ef 90       	pop	r14
    77c0:	df 90       	pop	r13
    77c2:	cf 90       	pop	r12
    77c4:	bf 90       	pop	r11
    77c6:	af 90       	pop	r10
    77c8:	08 95       	ret

000077ca <distance_rf>:
uint64 distance_rf(void)
{
    77ca:	af 92       	push	r10
    77cc:	bf 92       	push	r11
    77ce:	cf 92       	push	r12
    77d0:	df 92       	push	r13
    77d2:	ef 92       	push	r14
    77d4:	ff 92       	push	r15
    77d6:	0f 93       	push	r16
    77d8:	1f 93       	push	r17
    77da:	df 93       	push	r29
    77dc:	cf 93       	push	r28
    77de:	cd b7       	in	r28, 0x3d	; 61
    77e0:	de b7       	in	r29, 0x3e	; 62
    77e2:	c9 57       	subi	r28, 0x79	; 121
    77e4:	d0 40       	sbci	r29, 0x00	; 0
    77e6:	0f b6       	in	r0, 0x3f	; 63
    77e8:	f8 94       	cli
    77ea:	de bf       	out	0x3e, r29	; 62
    77ec:	0f be       	out	0x3f, r0	; 63
    77ee:	cd bf       	out	0x3d, r28	; 61
  t_rf=TCNT0;
    77f0:	e2 e5       	ldi	r30, 0x52	; 82
    77f2:	f0 e0       	ldi	r31, 0x00	; 0
    77f4:	80 81       	ld	r24, Z
    77f6:	28 2f       	mov	r18, r24
    77f8:	30 e0       	ldi	r19, 0x00	; 0
    77fa:	40 e0       	ldi	r20, 0x00	; 0
    77fc:	50 e0       	ldi	r21, 0x00	; 0
    77fe:	60 e0       	ldi	r22, 0x00	; 0
    7800:	70 e0       	ldi	r23, 0x00	; 0
    7802:	80 e0       	ldi	r24, 0x00	; 0
    7804:	90 e0       	ldi	r25, 0x00	; 0
    7806:	20 93 b5 03 	sts	0x03B5, r18
    780a:	30 93 b6 03 	sts	0x03B6, r19
    780e:	40 93 b7 03 	sts	0x03B7, r20
    7812:	50 93 b8 03 	sts	0x03B8, r21
    7816:	60 93 b9 03 	sts	0x03B9, r22
    781a:	70 93 ba 03 	sts	0x03BA, r23
    781e:	80 93 bb 03 	sts	0x03BB, r24
    7822:	90 93 bc 03 	sts	0x03BC, r25
  c_rf=count_right_front;
    7826:	80 91 84 03 	lds	r24, 0x0384
    782a:	90 91 85 03 	lds	r25, 0x0385
    782e:	9c 01       	movw	r18, r24
    7830:	40 e0       	ldi	r20, 0x00	; 0
    7832:	50 e0       	ldi	r21, 0x00	; 0
    7834:	60 e0       	ldi	r22, 0x00	; 0
    7836:	70 e0       	ldi	r23, 0x00	; 0
    7838:	80 e0       	ldi	r24, 0x00	; 0
    783a:	90 e0       	ldi	r25, 0x00	; 0
    783c:	20 93 bd 03 	sts	0x03BD, r18
    7840:	30 93 be 03 	sts	0x03BE, r19
    7844:	40 93 bf 03 	sts	0x03BF, r20
    7848:	50 93 c0 03 	sts	0x03C0, r21
    784c:	60 93 c1 03 	sts	0x03C1, r22
    7850:	70 93 c2 03 	sts	0x03C2, r23
    7854:	80 93 c3 03 	sts	0x03C3, r24
    7858:	90 93 c4 03 	sts	0x03C4, r25
  time_rf=(uint64)t_rf+((uint64)c_rf*256);
    785c:	a0 90 bd 03 	lds	r10, 0x03BD
    7860:	b0 90 be 03 	lds	r11, 0x03BE
    7864:	c0 90 bf 03 	lds	r12, 0x03BF
    7868:	d0 90 c0 03 	lds	r13, 0x03C0
    786c:	e0 90 c1 03 	lds	r14, 0x03C1
    7870:	f0 90 c2 03 	lds	r15, 0x03C2
    7874:	00 91 c3 03 	lds	r16, 0x03C3
    7878:	10 91 c4 03 	lds	r17, 0x03C4
    787c:	2a 2d       	mov	r18, r10
    787e:	3b 2d       	mov	r19, r11
    7880:	4c 2d       	mov	r20, r12
    7882:	5d 2d       	mov	r21, r13
    7884:	6e 2d       	mov	r22, r14
    7886:	7f 2d       	mov	r23, r15
    7888:	80 2f       	mov	r24, r16
    788a:	91 2f       	mov	r25, r17
    788c:	08 e0       	ldi	r16, 0x08	; 8
    788e:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    7892:	a2 2e       	mov	r10, r18
    7894:	b3 2e       	mov	r11, r19
    7896:	c4 2e       	mov	r12, r20
    7898:	d5 2e       	mov	r13, r21
    789a:	e6 2e       	mov	r14, r22
    789c:	f7 2e       	mov	r15, r23
    789e:	08 2f       	mov	r16, r24
    78a0:	19 2f       	mov	r17, r25
    78a2:	a9 8a       	std	Y+17, r10	; 0x11
    78a4:	ba 8a       	std	Y+18, r11	; 0x12
    78a6:	cb 8a       	std	Y+19, r12	; 0x13
    78a8:	dc 8a       	std	Y+20, r13	; 0x14
    78aa:	ed 8a       	std	Y+21, r14	; 0x15
    78ac:	fe 8a       	std	Y+22, r15	; 0x16
    78ae:	0f 8b       	std	Y+23, r16	; 0x17
    78b0:	18 8f       	std	Y+24, r17	; 0x18
    78b2:	80 91 b5 03 	lds	r24, 0x03B5
    78b6:	89 87       	std	Y+9, r24	; 0x09
    78b8:	90 91 b6 03 	lds	r25, 0x03B6
    78bc:	9a 87       	std	Y+10, r25	; 0x0a
    78be:	80 91 b7 03 	lds	r24, 0x03B7
    78c2:	8b 87       	std	Y+11, r24	; 0x0b
    78c4:	90 91 b8 03 	lds	r25, 0x03B8
    78c8:	9c 87       	std	Y+12, r25	; 0x0c
    78ca:	80 91 b9 03 	lds	r24, 0x03B9
    78ce:	8d 87       	std	Y+13, r24	; 0x0d
    78d0:	90 91 ba 03 	lds	r25, 0x03BA
    78d4:	9e 87       	std	Y+14, r25	; 0x0e
    78d6:	80 91 bb 03 	lds	r24, 0x03BB
    78da:	8f 87       	std	Y+15, r24	; 0x0f
    78dc:	90 91 bc 03 	lds	r25, 0x03BC
    78e0:	98 8b       	std	Y+16, r25	; 0x10
    78e2:	89 89       	ldd	r24, Y+17	; 0x11
    78e4:	99 85       	ldd	r25, Y+9	; 0x09
    78e6:	89 0f       	add	r24, r25
    78e8:	89 8f       	std	Y+25, r24	; 0x19
    78ea:	81 e0       	ldi	r24, 0x01	; 1
    78ec:	89 a3       	std	Y+33, r24	; 0x21
    78ee:	99 8d       	ldd	r25, Y+25	; 0x19
    78f0:	89 89       	ldd	r24, Y+17	; 0x11
    78f2:	98 17       	cp	r25, r24
    78f4:	08 f0       	brcs	.+2      	; 0x78f8 <distance_rf+0x12e>
    78f6:	19 a2       	std	Y+33, r1	; 0x21
    78f8:	9a 89       	ldd	r25, Y+18	; 0x12
    78fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    78fc:	98 0f       	add	r25, r24
    78fe:	9a 8f       	std	Y+26, r25	; 0x1a
    7900:	91 e0       	ldi	r25, 0x01	; 1
    7902:	9a a3       	std	Y+34, r25	; 0x22
    7904:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7906:	9a 89       	ldd	r25, Y+18	; 0x12
    7908:	89 17       	cp	r24, r25
    790a:	08 f0       	brcs	.+2      	; 0x790e <distance_rf+0x144>
    790c:	1a a2       	std	Y+34, r1	; 0x22
    790e:	89 a1       	ldd	r24, Y+33	; 0x21
    7910:	9a 8d       	ldd	r25, Y+26	; 0x1a
    7912:	89 0f       	add	r24, r25
    7914:	8b a3       	std	Y+35, r24	; 0x23
    7916:	81 e0       	ldi	r24, 0x01	; 1
    7918:	8c a3       	std	Y+36, r24	; 0x24
    791a:	9b a1       	ldd	r25, Y+35	; 0x23
    791c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    791e:	98 17       	cp	r25, r24
    7920:	08 f0       	brcs	.+2      	; 0x7924 <distance_rf+0x15a>
    7922:	1c a2       	std	Y+36, r1	; 0x24
    7924:	9a a1       	ldd	r25, Y+34	; 0x22
    7926:	8c a1       	ldd	r24, Y+36	; 0x24
    7928:	98 2b       	or	r25, r24
    792a:	9a a3       	std	Y+34, r25	; 0x22
    792c:	9b a1       	ldd	r25, Y+35	; 0x23
    792e:	9a 8f       	std	Y+26, r25	; 0x1a
    7930:	8b 89       	ldd	r24, Y+19	; 0x13
    7932:	9b 85       	ldd	r25, Y+11	; 0x0b
    7934:	89 0f       	add	r24, r25
    7936:	8b 8f       	std	Y+27, r24	; 0x1b
    7938:	81 e0       	ldi	r24, 0x01	; 1
    793a:	8d a3       	std	Y+37, r24	; 0x25
    793c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    793e:	8b 89       	ldd	r24, Y+19	; 0x13
    7940:	98 17       	cp	r25, r24
    7942:	08 f0       	brcs	.+2      	; 0x7946 <distance_rf+0x17c>
    7944:	1d a2       	std	Y+37, r1	; 0x25
    7946:	9a a1       	ldd	r25, Y+34	; 0x22
    7948:	8b 8d       	ldd	r24, Y+27	; 0x1b
    794a:	98 0f       	add	r25, r24
    794c:	9e a3       	std	Y+38, r25	; 0x26
    794e:	91 e0       	ldi	r25, 0x01	; 1
    7950:	9f a3       	std	Y+39, r25	; 0x27
    7952:	8e a1       	ldd	r24, Y+38	; 0x26
    7954:	9b 8d       	ldd	r25, Y+27	; 0x1b
    7956:	89 17       	cp	r24, r25
    7958:	08 f0       	brcs	.+2      	; 0x795c <distance_rf+0x192>
    795a:	1f a2       	std	Y+39, r1	; 0x27
    795c:	8d a1       	ldd	r24, Y+37	; 0x25
    795e:	9f a1       	ldd	r25, Y+39	; 0x27
    7960:	89 2b       	or	r24, r25
    7962:	8d a3       	std	Y+37, r24	; 0x25
    7964:	8e a1       	ldd	r24, Y+38	; 0x26
    7966:	8b 8f       	std	Y+27, r24	; 0x1b
    7968:	9c 89       	ldd	r25, Y+20	; 0x14
    796a:	8c 85       	ldd	r24, Y+12	; 0x0c
    796c:	98 0f       	add	r25, r24
    796e:	9c 8f       	std	Y+28, r25	; 0x1c
    7970:	91 e0       	ldi	r25, 0x01	; 1
    7972:	98 a7       	std	Y+40, r25	; 0x28
    7974:	8c 8d       	ldd	r24, Y+28	; 0x1c
    7976:	9c 89       	ldd	r25, Y+20	; 0x14
    7978:	89 17       	cp	r24, r25
    797a:	08 f0       	brcs	.+2      	; 0x797e <distance_rf+0x1b4>
    797c:	18 a6       	std	Y+40, r1	; 0x28
    797e:	8d a1       	ldd	r24, Y+37	; 0x25
    7980:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7982:	89 0f       	add	r24, r25
    7984:	89 a7       	std	Y+41, r24	; 0x29
    7986:	81 e0       	ldi	r24, 0x01	; 1
    7988:	8a a7       	std	Y+42, r24	; 0x2a
    798a:	99 a5       	ldd	r25, Y+41	; 0x29
    798c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    798e:	98 17       	cp	r25, r24
    7990:	08 f0       	brcs	.+2      	; 0x7994 <distance_rf+0x1ca>
    7992:	1a a6       	std	Y+42, r1	; 0x2a
    7994:	98 a5       	ldd	r25, Y+40	; 0x28
    7996:	8a a5       	ldd	r24, Y+42	; 0x2a
    7998:	98 2b       	or	r25, r24
    799a:	98 a7       	std	Y+40, r25	; 0x28
    799c:	99 a5       	ldd	r25, Y+41	; 0x29
    799e:	9c 8f       	std	Y+28, r25	; 0x1c
    79a0:	8d 89       	ldd	r24, Y+21	; 0x15
    79a2:	9d 85       	ldd	r25, Y+13	; 0x0d
    79a4:	89 0f       	add	r24, r25
    79a6:	8d 8f       	std	Y+29, r24	; 0x1d
    79a8:	81 e0       	ldi	r24, 0x01	; 1
    79aa:	8b a7       	std	Y+43, r24	; 0x2b
    79ac:	9d 8d       	ldd	r25, Y+29	; 0x1d
    79ae:	8d 89       	ldd	r24, Y+21	; 0x15
    79b0:	98 17       	cp	r25, r24
    79b2:	08 f0       	brcs	.+2      	; 0x79b6 <distance_rf+0x1ec>
    79b4:	1b a6       	std	Y+43, r1	; 0x2b
    79b6:	98 a5       	ldd	r25, Y+40	; 0x28
    79b8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    79ba:	98 0f       	add	r25, r24
    79bc:	9c a7       	std	Y+44, r25	; 0x2c
    79be:	91 e0       	ldi	r25, 0x01	; 1
    79c0:	9d a7       	std	Y+45, r25	; 0x2d
    79c2:	8c a5       	ldd	r24, Y+44	; 0x2c
    79c4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    79c6:	89 17       	cp	r24, r25
    79c8:	08 f0       	brcs	.+2      	; 0x79cc <distance_rf+0x202>
    79ca:	1d a6       	std	Y+45, r1	; 0x2d
    79cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    79ce:	9d a5       	ldd	r25, Y+45	; 0x2d
    79d0:	89 2b       	or	r24, r25
    79d2:	8b a7       	std	Y+43, r24	; 0x2b
    79d4:	8c a5       	ldd	r24, Y+44	; 0x2c
    79d6:	8d 8f       	std	Y+29, r24	; 0x1d
    79d8:	9e 89       	ldd	r25, Y+22	; 0x16
    79da:	8e 85       	ldd	r24, Y+14	; 0x0e
    79dc:	98 0f       	add	r25, r24
    79de:	9e 8f       	std	Y+30, r25	; 0x1e
    79e0:	91 e0       	ldi	r25, 0x01	; 1
    79e2:	9e a7       	std	Y+46, r25	; 0x2e
    79e4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    79e6:	9e 89       	ldd	r25, Y+22	; 0x16
    79e8:	89 17       	cp	r24, r25
    79ea:	08 f0       	brcs	.+2      	; 0x79ee <distance_rf+0x224>
    79ec:	1e a6       	std	Y+46, r1	; 0x2e
    79ee:	8b a5       	ldd	r24, Y+43	; 0x2b
    79f0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    79f2:	89 0f       	add	r24, r25
    79f4:	8f a7       	std	Y+47, r24	; 0x2f
    79f6:	81 e0       	ldi	r24, 0x01	; 1
    79f8:	88 ab       	std	Y+48, r24	; 0x30
    79fa:	9f a5       	ldd	r25, Y+47	; 0x2f
    79fc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    79fe:	98 17       	cp	r25, r24
    7a00:	08 f0       	brcs	.+2      	; 0x7a04 <distance_rf+0x23a>
    7a02:	18 aa       	std	Y+48, r1	; 0x30
    7a04:	9e a5       	ldd	r25, Y+46	; 0x2e
    7a06:	88 a9       	ldd	r24, Y+48	; 0x30
    7a08:	98 2b       	or	r25, r24
    7a0a:	9e a7       	std	Y+46, r25	; 0x2e
    7a0c:	9f a5       	ldd	r25, Y+47	; 0x2f
    7a0e:	9e 8f       	std	Y+30, r25	; 0x1e
    7a10:	8f 89       	ldd	r24, Y+23	; 0x17
    7a12:	9f 85       	ldd	r25, Y+15	; 0x0f
    7a14:	89 0f       	add	r24, r25
    7a16:	8f 8f       	std	Y+31, r24	; 0x1f
    7a18:	81 e0       	ldi	r24, 0x01	; 1
    7a1a:	89 ab       	std	Y+49, r24	; 0x31
    7a1c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7a1e:	8f 89       	ldd	r24, Y+23	; 0x17
    7a20:	98 17       	cp	r25, r24
    7a22:	08 f0       	brcs	.+2      	; 0x7a26 <distance_rf+0x25c>
    7a24:	19 aa       	std	Y+49, r1	; 0x31
    7a26:	9e a5       	ldd	r25, Y+46	; 0x2e
    7a28:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7a2a:	98 0f       	add	r25, r24
    7a2c:	9a ab       	std	Y+50, r25	; 0x32
    7a2e:	91 e0       	ldi	r25, 0x01	; 1
    7a30:	9b ab       	std	Y+51, r25	; 0x33
    7a32:	8a a9       	ldd	r24, Y+50	; 0x32
    7a34:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7a36:	89 17       	cp	r24, r25
    7a38:	08 f0       	brcs	.+2      	; 0x7a3c <distance_rf+0x272>
    7a3a:	1b aa       	std	Y+51, r1	; 0x33
    7a3c:	89 a9       	ldd	r24, Y+49	; 0x31
    7a3e:	9b a9       	ldd	r25, Y+51	; 0x33
    7a40:	89 2b       	or	r24, r25
    7a42:	89 ab       	std	Y+49, r24	; 0x31
    7a44:	8a a9       	ldd	r24, Y+50	; 0x32
    7a46:	8f 8f       	std	Y+31, r24	; 0x1f
    7a48:	98 8d       	ldd	r25, Y+24	; 0x18
    7a4a:	88 89       	ldd	r24, Y+16	; 0x10
    7a4c:	98 0f       	add	r25, r24
    7a4e:	98 a3       	std	Y+32, r25	; 0x20
    7a50:	89 a9       	ldd	r24, Y+49	; 0x31
    7a52:	98 a1       	ldd	r25, Y+32	; 0x20
    7a54:	89 0f       	add	r24, r25
    7a56:	88 a3       	std	Y+32, r24	; 0x20
    7a58:	29 8d       	ldd	r18, Y+25	; 0x19
    7a5a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    7a5c:	4b 8d       	ldd	r20, Y+27	; 0x1b
    7a5e:	5c 8d       	ldd	r21, Y+28	; 0x1c
    7a60:	6d 8d       	ldd	r22, Y+29	; 0x1d
    7a62:	7e 8d       	ldd	r23, Y+30	; 0x1e
    7a64:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7a66:	98 a1       	ldd	r25, Y+32	; 0x20
    7a68:	20 93 c5 03 	sts	0x03C5, r18
    7a6c:	30 93 c6 03 	sts	0x03C6, r19
    7a70:	40 93 c7 03 	sts	0x03C7, r20
    7a74:	50 93 c8 03 	sts	0x03C8, r21
    7a78:	60 93 c9 03 	sts	0x03C9, r22
    7a7c:	70 93 ca 03 	sts	0x03CA, r23
    7a80:	80 93 cb 03 	sts	0x03CB, r24
    7a84:	90 93 cc 03 	sts	0x03CC, r25
  length_rf=((((uint64)time_rf*13))/1000000);
    7a88:	80 91 c5 03 	lds	r24, 0x03C5
    7a8c:	89 83       	std	Y+1, r24	; 0x01
    7a8e:	90 91 c6 03 	lds	r25, 0x03C6
    7a92:	9a 83       	std	Y+2, r25	; 0x02
    7a94:	80 91 c7 03 	lds	r24, 0x03C7
    7a98:	8b 83       	std	Y+3, r24	; 0x03
    7a9a:	90 91 c8 03 	lds	r25, 0x03C8
    7a9e:	9c 83       	std	Y+4, r25	; 0x04
    7aa0:	80 91 c9 03 	lds	r24, 0x03C9
    7aa4:	8d 83       	std	Y+5, r24	; 0x05
    7aa6:	90 91 ca 03 	lds	r25, 0x03CA
    7aaa:	9e 83       	std	Y+6, r25	; 0x06
    7aac:	80 91 cb 03 	lds	r24, 0x03CB
    7ab0:	8f 83       	std	Y+7, r24	; 0x07
    7ab2:	90 91 cc 03 	lds	r25, 0x03CC
    7ab6:	98 87       	std	Y+8, r25	; 0x08
    7ab8:	a9 80       	ldd	r10, Y+1	; 0x01
    7aba:	ba 80       	ldd	r11, Y+2	; 0x02
    7abc:	cb 80       	ldd	r12, Y+3	; 0x03
    7abe:	dc 80       	ldd	r13, Y+4	; 0x04
    7ac0:	ed 80       	ldd	r14, Y+5	; 0x05
    7ac2:	fe 80       	ldd	r15, Y+6	; 0x06
    7ac4:	0f 81       	ldd	r16, Y+7	; 0x07
    7ac6:	18 85       	ldd	r17, Y+8	; 0x08
    7ac8:	2a 2d       	mov	r18, r10
    7aca:	3b 2d       	mov	r19, r11
    7acc:	4c 2d       	mov	r20, r12
    7ace:	5d 2d       	mov	r21, r13
    7ad0:	6e 2d       	mov	r22, r14
    7ad2:	7f 2d       	mov	r23, r15
    7ad4:	80 2f       	mov	r24, r16
    7ad6:	91 2f       	mov	r25, r17
    7ad8:	02 e0       	ldi	r16, 0x02	; 2
    7ada:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    7ade:	2c ab       	std	Y+52, r18	; 0x34
    7ae0:	3d ab       	std	Y+53, r19	; 0x35
    7ae2:	4e ab       	std	Y+54, r20	; 0x36
    7ae4:	5f ab       	std	Y+55, r21	; 0x37
    7ae6:	68 af       	std	Y+56, r22	; 0x38
    7ae8:	79 af       	std	Y+57, r23	; 0x39
    7aea:	8a af       	std	Y+58, r24	; 0x3a
    7aec:	9b af       	std	Y+59, r25	; 0x3b
    7aee:	2c a9       	ldd	r18, Y+52	; 0x34
    7af0:	3d a9       	ldd	r19, Y+53	; 0x35
    7af2:	4e a9       	ldd	r20, Y+54	; 0x36
    7af4:	5f a9       	ldd	r21, Y+55	; 0x37
    7af6:	68 ad       	ldd	r22, Y+56	; 0x38
    7af8:	79 ad       	ldd	r23, Y+57	; 0x39
    7afa:	8a ad       	ldd	r24, Y+58	; 0x3a
    7afc:	9b ad       	ldd	r25, Y+59	; 0x3b
    7afe:	02 e0       	ldi	r16, 0x02	; 2
    7b00:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    7b04:	2c af       	std	Y+60, r18	; 0x3c
    7b06:	3d af       	std	Y+61, r19	; 0x3d
    7b08:	4e af       	std	Y+62, r20	; 0x3e
    7b0a:	5f af       	std	Y+63, r21	; 0x3f
    7b0c:	21 96       	adiw	r28, 0x01	; 1
    7b0e:	6f af       	std	Y+63, r22	; 0x3f
    7b10:	21 97       	sbiw	r28, 0x01	; 1
    7b12:	22 96       	adiw	r28, 0x02	; 2
    7b14:	7f af       	std	Y+63, r23	; 0x3f
    7b16:	22 97       	sbiw	r28, 0x02	; 2
    7b18:	23 96       	adiw	r28, 0x03	; 3
    7b1a:	8f af       	std	Y+63, r24	; 0x3f
    7b1c:	23 97       	sbiw	r28, 0x03	; 3
    7b1e:	24 96       	adiw	r28, 0x04	; 4
    7b20:	9f af       	std	Y+63, r25	; 0x3f
    7b22:	24 97       	sbiw	r28, 0x04	; 4
    7b24:	8c ad       	ldd	r24, Y+60	; 0x3c
    7b26:	9c a9       	ldd	r25, Y+52	; 0x34
    7b28:	89 1b       	sub	r24, r25
    7b2a:	25 96       	adiw	r28, 0x05	; 5
    7b2c:	8f af       	std	Y+63, r24	; 0x3f
    7b2e:	25 97       	sbiw	r28, 0x05	; 5
    7b30:	81 e0       	ldi	r24, 0x01	; 1
    7b32:	2d 96       	adiw	r28, 0x0d	; 13
    7b34:	8f af       	std	Y+63, r24	; 0x3f
    7b36:	2d 97       	sbiw	r28, 0x0d	; 13
    7b38:	25 96       	adiw	r28, 0x05	; 5
    7b3a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7b3c:	25 97       	sbiw	r28, 0x05	; 5
    7b3e:	8c ad       	ldd	r24, Y+60	; 0x3c
    7b40:	89 17       	cp	r24, r25
    7b42:	18 f0       	brcs	.+6      	; 0x7b4a <distance_rf+0x380>
    7b44:	2d 96       	adiw	r28, 0x0d	; 13
    7b46:	1f ae       	std	Y+63, r1	; 0x3f
    7b48:	2d 97       	sbiw	r28, 0x0d	; 13
    7b4a:	9d ad       	ldd	r25, Y+61	; 0x3d
    7b4c:	8d a9       	ldd	r24, Y+53	; 0x35
    7b4e:	98 1b       	sub	r25, r24
    7b50:	26 96       	adiw	r28, 0x06	; 6
    7b52:	9f af       	std	Y+63, r25	; 0x3f
    7b54:	26 97       	sbiw	r28, 0x06	; 6
    7b56:	91 e0       	ldi	r25, 0x01	; 1
    7b58:	2e 96       	adiw	r28, 0x0e	; 14
    7b5a:	9f af       	std	Y+63, r25	; 0x3f
    7b5c:	2e 97       	sbiw	r28, 0x0e	; 14
    7b5e:	26 96       	adiw	r28, 0x06	; 6
    7b60:	8f ad       	ldd	r24, Y+63	; 0x3f
    7b62:	26 97       	sbiw	r28, 0x06	; 6
    7b64:	9d ad       	ldd	r25, Y+61	; 0x3d
    7b66:	98 17       	cp	r25, r24
    7b68:	18 f0       	brcs	.+6      	; 0x7b70 <distance_rf+0x3a6>
    7b6a:	2e 96       	adiw	r28, 0x0e	; 14
    7b6c:	1f ae       	std	Y+63, r1	; 0x3f
    7b6e:	2e 97       	sbiw	r28, 0x0e	; 14
    7b70:	26 96       	adiw	r28, 0x06	; 6
    7b72:	8f ad       	ldd	r24, Y+63	; 0x3f
    7b74:	26 97       	sbiw	r28, 0x06	; 6
    7b76:	2d 96       	adiw	r28, 0x0d	; 13
    7b78:	9f ad       	ldd	r25, Y+63	; 0x3f
    7b7a:	2d 97       	sbiw	r28, 0x0d	; 13
    7b7c:	89 1b       	sub	r24, r25
    7b7e:	2f 96       	adiw	r28, 0x0f	; 15
    7b80:	8f af       	std	Y+63, r24	; 0x3f
    7b82:	2f 97       	sbiw	r28, 0x0f	; 15
    7b84:	81 e0       	ldi	r24, 0x01	; 1
    7b86:	60 96       	adiw	r28, 0x10	; 16
    7b88:	8f af       	std	Y+63, r24	; 0x3f
    7b8a:	60 97       	sbiw	r28, 0x10	; 16
    7b8c:	2f 96       	adiw	r28, 0x0f	; 15
    7b8e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7b90:	2f 97       	sbiw	r28, 0x0f	; 15
    7b92:	26 96       	adiw	r28, 0x06	; 6
    7b94:	8f ad       	ldd	r24, Y+63	; 0x3f
    7b96:	26 97       	sbiw	r28, 0x06	; 6
    7b98:	89 17       	cp	r24, r25
    7b9a:	18 f0       	brcs	.+6      	; 0x7ba2 <distance_rf+0x3d8>
    7b9c:	60 96       	adiw	r28, 0x10	; 16
    7b9e:	1f ae       	std	Y+63, r1	; 0x3f
    7ba0:	60 97       	sbiw	r28, 0x10	; 16
    7ba2:	2e 96       	adiw	r28, 0x0e	; 14
    7ba4:	9f ad       	ldd	r25, Y+63	; 0x3f
    7ba6:	2e 97       	sbiw	r28, 0x0e	; 14
    7ba8:	60 96       	adiw	r28, 0x10	; 16
    7baa:	8f ad       	ldd	r24, Y+63	; 0x3f
    7bac:	60 97       	sbiw	r28, 0x10	; 16
    7bae:	98 2b       	or	r25, r24
    7bb0:	2e 96       	adiw	r28, 0x0e	; 14
    7bb2:	9f af       	std	Y+63, r25	; 0x3f
    7bb4:	2e 97       	sbiw	r28, 0x0e	; 14
    7bb6:	2f 96       	adiw	r28, 0x0f	; 15
    7bb8:	9f ad       	ldd	r25, Y+63	; 0x3f
    7bba:	2f 97       	sbiw	r28, 0x0f	; 15
    7bbc:	26 96       	adiw	r28, 0x06	; 6
    7bbe:	9f af       	std	Y+63, r25	; 0x3f
    7bc0:	26 97       	sbiw	r28, 0x06	; 6
    7bc2:	8e ad       	ldd	r24, Y+62	; 0x3e
    7bc4:	9e a9       	ldd	r25, Y+54	; 0x36
    7bc6:	89 1b       	sub	r24, r25
    7bc8:	27 96       	adiw	r28, 0x07	; 7
    7bca:	8f af       	std	Y+63, r24	; 0x3f
    7bcc:	27 97       	sbiw	r28, 0x07	; 7
    7bce:	81 e0       	ldi	r24, 0x01	; 1
    7bd0:	61 96       	adiw	r28, 0x11	; 17
    7bd2:	8f af       	std	Y+63, r24	; 0x3f
    7bd4:	61 97       	sbiw	r28, 0x11	; 17
    7bd6:	27 96       	adiw	r28, 0x07	; 7
    7bd8:	9f ad       	ldd	r25, Y+63	; 0x3f
    7bda:	27 97       	sbiw	r28, 0x07	; 7
    7bdc:	8e ad       	ldd	r24, Y+62	; 0x3e
    7bde:	89 17       	cp	r24, r25
    7be0:	18 f0       	brcs	.+6      	; 0x7be8 <distance_rf+0x41e>
    7be2:	61 96       	adiw	r28, 0x11	; 17
    7be4:	1f ae       	std	Y+63, r1	; 0x3f
    7be6:	61 97       	sbiw	r28, 0x11	; 17
    7be8:	27 96       	adiw	r28, 0x07	; 7
    7bea:	9f ad       	ldd	r25, Y+63	; 0x3f
    7bec:	27 97       	sbiw	r28, 0x07	; 7
    7bee:	2e 96       	adiw	r28, 0x0e	; 14
    7bf0:	8f ad       	ldd	r24, Y+63	; 0x3f
    7bf2:	2e 97       	sbiw	r28, 0x0e	; 14
    7bf4:	98 1b       	sub	r25, r24
    7bf6:	62 96       	adiw	r28, 0x12	; 18
    7bf8:	9f af       	std	Y+63, r25	; 0x3f
    7bfa:	62 97       	sbiw	r28, 0x12	; 18
    7bfc:	91 e0       	ldi	r25, 0x01	; 1
    7bfe:	63 96       	adiw	r28, 0x13	; 19
    7c00:	9f af       	std	Y+63, r25	; 0x3f
    7c02:	63 97       	sbiw	r28, 0x13	; 19
    7c04:	62 96       	adiw	r28, 0x12	; 18
    7c06:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c08:	62 97       	sbiw	r28, 0x12	; 18
    7c0a:	27 96       	adiw	r28, 0x07	; 7
    7c0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c0e:	27 97       	sbiw	r28, 0x07	; 7
    7c10:	98 17       	cp	r25, r24
    7c12:	18 f0       	brcs	.+6      	; 0x7c1a <distance_rf+0x450>
    7c14:	63 96       	adiw	r28, 0x13	; 19
    7c16:	1f ae       	std	Y+63, r1	; 0x3f
    7c18:	63 97       	sbiw	r28, 0x13	; 19
    7c1a:	61 96       	adiw	r28, 0x11	; 17
    7c1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c1e:	61 97       	sbiw	r28, 0x11	; 17
    7c20:	63 96       	adiw	r28, 0x13	; 19
    7c22:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c24:	63 97       	sbiw	r28, 0x13	; 19
    7c26:	89 2b       	or	r24, r25
    7c28:	61 96       	adiw	r28, 0x11	; 17
    7c2a:	8f af       	std	Y+63, r24	; 0x3f
    7c2c:	61 97       	sbiw	r28, 0x11	; 17
    7c2e:	62 96       	adiw	r28, 0x12	; 18
    7c30:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c32:	62 97       	sbiw	r28, 0x12	; 18
    7c34:	27 96       	adiw	r28, 0x07	; 7
    7c36:	8f af       	std	Y+63, r24	; 0x3f
    7c38:	27 97       	sbiw	r28, 0x07	; 7
    7c3a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c3c:	8f a9       	ldd	r24, Y+55	; 0x37
    7c3e:	98 1b       	sub	r25, r24
    7c40:	28 96       	adiw	r28, 0x08	; 8
    7c42:	9f af       	std	Y+63, r25	; 0x3f
    7c44:	28 97       	sbiw	r28, 0x08	; 8
    7c46:	91 e0       	ldi	r25, 0x01	; 1
    7c48:	64 96       	adiw	r28, 0x14	; 20
    7c4a:	9f af       	std	Y+63, r25	; 0x3f
    7c4c:	64 97       	sbiw	r28, 0x14	; 20
    7c4e:	28 96       	adiw	r28, 0x08	; 8
    7c50:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c52:	28 97       	sbiw	r28, 0x08	; 8
    7c54:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c56:	98 17       	cp	r25, r24
    7c58:	18 f0       	brcs	.+6      	; 0x7c60 <distance_rf+0x496>
    7c5a:	64 96       	adiw	r28, 0x14	; 20
    7c5c:	1f ae       	std	Y+63, r1	; 0x3f
    7c5e:	64 97       	sbiw	r28, 0x14	; 20
    7c60:	28 96       	adiw	r28, 0x08	; 8
    7c62:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c64:	28 97       	sbiw	r28, 0x08	; 8
    7c66:	61 96       	adiw	r28, 0x11	; 17
    7c68:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c6a:	61 97       	sbiw	r28, 0x11	; 17
    7c6c:	89 1b       	sub	r24, r25
    7c6e:	65 96       	adiw	r28, 0x15	; 21
    7c70:	8f af       	std	Y+63, r24	; 0x3f
    7c72:	65 97       	sbiw	r28, 0x15	; 21
    7c74:	81 e0       	ldi	r24, 0x01	; 1
    7c76:	66 96       	adiw	r28, 0x16	; 22
    7c78:	8f af       	std	Y+63, r24	; 0x3f
    7c7a:	66 97       	sbiw	r28, 0x16	; 22
    7c7c:	65 96       	adiw	r28, 0x15	; 21
    7c7e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c80:	65 97       	sbiw	r28, 0x15	; 21
    7c82:	28 96       	adiw	r28, 0x08	; 8
    7c84:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c86:	28 97       	sbiw	r28, 0x08	; 8
    7c88:	89 17       	cp	r24, r25
    7c8a:	18 f0       	brcs	.+6      	; 0x7c92 <distance_rf+0x4c8>
    7c8c:	66 96       	adiw	r28, 0x16	; 22
    7c8e:	1f ae       	std	Y+63, r1	; 0x3f
    7c90:	66 97       	sbiw	r28, 0x16	; 22
    7c92:	64 96       	adiw	r28, 0x14	; 20
    7c94:	9f ad       	ldd	r25, Y+63	; 0x3f
    7c96:	64 97       	sbiw	r28, 0x14	; 20
    7c98:	66 96       	adiw	r28, 0x16	; 22
    7c9a:	8f ad       	ldd	r24, Y+63	; 0x3f
    7c9c:	66 97       	sbiw	r28, 0x16	; 22
    7c9e:	98 2b       	or	r25, r24
    7ca0:	64 96       	adiw	r28, 0x14	; 20
    7ca2:	9f af       	std	Y+63, r25	; 0x3f
    7ca4:	64 97       	sbiw	r28, 0x14	; 20
    7ca6:	65 96       	adiw	r28, 0x15	; 21
    7ca8:	9f ad       	ldd	r25, Y+63	; 0x3f
    7caa:	65 97       	sbiw	r28, 0x15	; 21
    7cac:	28 96       	adiw	r28, 0x08	; 8
    7cae:	9f af       	std	Y+63, r25	; 0x3f
    7cb0:	28 97       	sbiw	r28, 0x08	; 8
    7cb2:	21 96       	adiw	r28, 0x01	; 1
    7cb4:	8f ad       	ldd	r24, Y+63	; 0x3f
    7cb6:	21 97       	sbiw	r28, 0x01	; 1
    7cb8:	98 ad       	ldd	r25, Y+56	; 0x38
    7cba:	89 1b       	sub	r24, r25
    7cbc:	29 96       	adiw	r28, 0x09	; 9
    7cbe:	8f af       	std	Y+63, r24	; 0x3f
    7cc0:	29 97       	sbiw	r28, 0x09	; 9
    7cc2:	81 e0       	ldi	r24, 0x01	; 1
    7cc4:	67 96       	adiw	r28, 0x17	; 23
    7cc6:	8f af       	std	Y+63, r24	; 0x3f
    7cc8:	67 97       	sbiw	r28, 0x17	; 23
    7cca:	29 96       	adiw	r28, 0x09	; 9
    7ccc:	9f ad       	ldd	r25, Y+63	; 0x3f
    7cce:	29 97       	sbiw	r28, 0x09	; 9
    7cd0:	21 96       	adiw	r28, 0x01	; 1
    7cd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    7cd4:	21 97       	sbiw	r28, 0x01	; 1
    7cd6:	89 17       	cp	r24, r25
    7cd8:	18 f0       	brcs	.+6      	; 0x7ce0 <distance_rf+0x516>
    7cda:	67 96       	adiw	r28, 0x17	; 23
    7cdc:	1f ae       	std	Y+63, r1	; 0x3f
    7cde:	67 97       	sbiw	r28, 0x17	; 23
    7ce0:	29 96       	adiw	r28, 0x09	; 9
    7ce2:	9f ad       	ldd	r25, Y+63	; 0x3f
    7ce4:	29 97       	sbiw	r28, 0x09	; 9
    7ce6:	64 96       	adiw	r28, 0x14	; 20
    7ce8:	8f ad       	ldd	r24, Y+63	; 0x3f
    7cea:	64 97       	sbiw	r28, 0x14	; 20
    7cec:	98 1b       	sub	r25, r24
    7cee:	68 96       	adiw	r28, 0x18	; 24
    7cf0:	9f af       	std	Y+63, r25	; 0x3f
    7cf2:	68 97       	sbiw	r28, 0x18	; 24
    7cf4:	91 e0       	ldi	r25, 0x01	; 1
    7cf6:	69 96       	adiw	r28, 0x19	; 25
    7cf8:	9f af       	std	Y+63, r25	; 0x3f
    7cfa:	69 97       	sbiw	r28, 0x19	; 25
    7cfc:	68 96       	adiw	r28, 0x18	; 24
    7cfe:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d00:	68 97       	sbiw	r28, 0x18	; 24
    7d02:	29 96       	adiw	r28, 0x09	; 9
    7d04:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d06:	29 97       	sbiw	r28, 0x09	; 9
    7d08:	98 17       	cp	r25, r24
    7d0a:	18 f0       	brcs	.+6      	; 0x7d12 <distance_rf+0x548>
    7d0c:	69 96       	adiw	r28, 0x19	; 25
    7d0e:	1f ae       	std	Y+63, r1	; 0x3f
    7d10:	69 97       	sbiw	r28, 0x19	; 25
    7d12:	67 96       	adiw	r28, 0x17	; 23
    7d14:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d16:	67 97       	sbiw	r28, 0x17	; 23
    7d18:	69 96       	adiw	r28, 0x19	; 25
    7d1a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d1c:	69 97       	sbiw	r28, 0x19	; 25
    7d1e:	89 2b       	or	r24, r25
    7d20:	67 96       	adiw	r28, 0x17	; 23
    7d22:	8f af       	std	Y+63, r24	; 0x3f
    7d24:	67 97       	sbiw	r28, 0x17	; 23
    7d26:	68 96       	adiw	r28, 0x18	; 24
    7d28:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d2a:	68 97       	sbiw	r28, 0x18	; 24
    7d2c:	29 96       	adiw	r28, 0x09	; 9
    7d2e:	8f af       	std	Y+63, r24	; 0x3f
    7d30:	29 97       	sbiw	r28, 0x09	; 9
    7d32:	22 96       	adiw	r28, 0x02	; 2
    7d34:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d36:	22 97       	sbiw	r28, 0x02	; 2
    7d38:	89 ad       	ldd	r24, Y+57	; 0x39
    7d3a:	98 1b       	sub	r25, r24
    7d3c:	2a 96       	adiw	r28, 0x0a	; 10
    7d3e:	9f af       	std	Y+63, r25	; 0x3f
    7d40:	2a 97       	sbiw	r28, 0x0a	; 10
    7d42:	91 e0       	ldi	r25, 0x01	; 1
    7d44:	6a 96       	adiw	r28, 0x1a	; 26
    7d46:	9f af       	std	Y+63, r25	; 0x3f
    7d48:	6a 97       	sbiw	r28, 0x1a	; 26
    7d4a:	2a 96       	adiw	r28, 0x0a	; 10
    7d4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d4e:	2a 97       	sbiw	r28, 0x0a	; 10
    7d50:	22 96       	adiw	r28, 0x02	; 2
    7d52:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d54:	22 97       	sbiw	r28, 0x02	; 2
    7d56:	98 17       	cp	r25, r24
    7d58:	18 f0       	brcs	.+6      	; 0x7d60 <distance_rf+0x596>
    7d5a:	6a 96       	adiw	r28, 0x1a	; 26
    7d5c:	1f ae       	std	Y+63, r1	; 0x3f
    7d5e:	6a 97       	sbiw	r28, 0x1a	; 26
    7d60:	2a 96       	adiw	r28, 0x0a	; 10
    7d62:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d64:	2a 97       	sbiw	r28, 0x0a	; 10
    7d66:	67 96       	adiw	r28, 0x17	; 23
    7d68:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d6a:	67 97       	sbiw	r28, 0x17	; 23
    7d6c:	89 1b       	sub	r24, r25
    7d6e:	6b 96       	adiw	r28, 0x1b	; 27
    7d70:	8f af       	std	Y+63, r24	; 0x3f
    7d72:	6b 97       	sbiw	r28, 0x1b	; 27
    7d74:	81 e0       	ldi	r24, 0x01	; 1
    7d76:	6c 96       	adiw	r28, 0x1c	; 28
    7d78:	8f af       	std	Y+63, r24	; 0x3f
    7d7a:	6c 97       	sbiw	r28, 0x1c	; 28
    7d7c:	6b 96       	adiw	r28, 0x1b	; 27
    7d7e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d80:	6b 97       	sbiw	r28, 0x1b	; 27
    7d82:	2a 96       	adiw	r28, 0x0a	; 10
    7d84:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d86:	2a 97       	sbiw	r28, 0x0a	; 10
    7d88:	89 17       	cp	r24, r25
    7d8a:	18 f0       	brcs	.+6      	; 0x7d92 <distance_rf+0x5c8>
    7d8c:	6c 96       	adiw	r28, 0x1c	; 28
    7d8e:	1f ae       	std	Y+63, r1	; 0x3f
    7d90:	6c 97       	sbiw	r28, 0x1c	; 28
    7d92:	6a 96       	adiw	r28, 0x1a	; 26
    7d94:	9f ad       	ldd	r25, Y+63	; 0x3f
    7d96:	6a 97       	sbiw	r28, 0x1a	; 26
    7d98:	6c 96       	adiw	r28, 0x1c	; 28
    7d9a:	8f ad       	ldd	r24, Y+63	; 0x3f
    7d9c:	6c 97       	sbiw	r28, 0x1c	; 28
    7d9e:	98 2b       	or	r25, r24
    7da0:	6a 96       	adiw	r28, 0x1a	; 26
    7da2:	9f af       	std	Y+63, r25	; 0x3f
    7da4:	6a 97       	sbiw	r28, 0x1a	; 26
    7da6:	6b 96       	adiw	r28, 0x1b	; 27
    7da8:	9f ad       	ldd	r25, Y+63	; 0x3f
    7daa:	6b 97       	sbiw	r28, 0x1b	; 27
    7dac:	2a 96       	adiw	r28, 0x0a	; 10
    7dae:	9f af       	std	Y+63, r25	; 0x3f
    7db0:	2a 97       	sbiw	r28, 0x0a	; 10
    7db2:	23 96       	adiw	r28, 0x03	; 3
    7db4:	8f ad       	ldd	r24, Y+63	; 0x3f
    7db6:	23 97       	sbiw	r28, 0x03	; 3
    7db8:	9a ad       	ldd	r25, Y+58	; 0x3a
    7dba:	89 1b       	sub	r24, r25
    7dbc:	2b 96       	adiw	r28, 0x0b	; 11
    7dbe:	8f af       	std	Y+63, r24	; 0x3f
    7dc0:	2b 97       	sbiw	r28, 0x0b	; 11
    7dc2:	81 e0       	ldi	r24, 0x01	; 1
    7dc4:	6d 96       	adiw	r28, 0x1d	; 29
    7dc6:	8f af       	std	Y+63, r24	; 0x3f
    7dc8:	6d 97       	sbiw	r28, 0x1d	; 29
    7dca:	2b 96       	adiw	r28, 0x0b	; 11
    7dcc:	9f ad       	ldd	r25, Y+63	; 0x3f
    7dce:	2b 97       	sbiw	r28, 0x0b	; 11
    7dd0:	23 96       	adiw	r28, 0x03	; 3
    7dd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    7dd4:	23 97       	sbiw	r28, 0x03	; 3
    7dd6:	89 17       	cp	r24, r25
    7dd8:	18 f0       	brcs	.+6      	; 0x7de0 <distance_rf+0x616>
    7dda:	6d 96       	adiw	r28, 0x1d	; 29
    7ddc:	1f ae       	std	Y+63, r1	; 0x3f
    7dde:	6d 97       	sbiw	r28, 0x1d	; 29
    7de0:	2b 96       	adiw	r28, 0x0b	; 11
    7de2:	9f ad       	ldd	r25, Y+63	; 0x3f
    7de4:	2b 97       	sbiw	r28, 0x0b	; 11
    7de6:	6a 96       	adiw	r28, 0x1a	; 26
    7de8:	8f ad       	ldd	r24, Y+63	; 0x3f
    7dea:	6a 97       	sbiw	r28, 0x1a	; 26
    7dec:	98 1b       	sub	r25, r24
    7dee:	6e 96       	adiw	r28, 0x1e	; 30
    7df0:	9f af       	std	Y+63, r25	; 0x3f
    7df2:	6e 97       	sbiw	r28, 0x1e	; 30
    7df4:	91 e0       	ldi	r25, 0x01	; 1
    7df6:	6f 96       	adiw	r28, 0x1f	; 31
    7df8:	9f af       	std	Y+63, r25	; 0x3f
    7dfa:	6f 97       	sbiw	r28, 0x1f	; 31
    7dfc:	6e 96       	adiw	r28, 0x1e	; 30
    7dfe:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e00:	6e 97       	sbiw	r28, 0x1e	; 30
    7e02:	2b 96       	adiw	r28, 0x0b	; 11
    7e04:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e06:	2b 97       	sbiw	r28, 0x0b	; 11
    7e08:	98 17       	cp	r25, r24
    7e0a:	18 f0       	brcs	.+6      	; 0x7e12 <distance_rf+0x648>
    7e0c:	6f 96       	adiw	r28, 0x1f	; 31
    7e0e:	1f ae       	std	Y+63, r1	; 0x3f
    7e10:	6f 97       	sbiw	r28, 0x1f	; 31
    7e12:	6d 96       	adiw	r28, 0x1d	; 29
    7e14:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e16:	6d 97       	sbiw	r28, 0x1d	; 29
    7e18:	6f 96       	adiw	r28, 0x1f	; 31
    7e1a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e1c:	6f 97       	sbiw	r28, 0x1f	; 31
    7e1e:	89 2b       	or	r24, r25
    7e20:	6d 96       	adiw	r28, 0x1d	; 29
    7e22:	8f af       	std	Y+63, r24	; 0x3f
    7e24:	6d 97       	sbiw	r28, 0x1d	; 29
    7e26:	6e 96       	adiw	r28, 0x1e	; 30
    7e28:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e2a:	6e 97       	sbiw	r28, 0x1e	; 30
    7e2c:	2b 96       	adiw	r28, 0x0b	; 11
    7e2e:	8f af       	std	Y+63, r24	; 0x3f
    7e30:	2b 97       	sbiw	r28, 0x0b	; 11
    7e32:	24 96       	adiw	r28, 0x04	; 4
    7e34:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e36:	24 97       	sbiw	r28, 0x04	; 4
    7e38:	8b ad       	ldd	r24, Y+59	; 0x3b
    7e3a:	98 1b       	sub	r25, r24
    7e3c:	2c 96       	adiw	r28, 0x0c	; 12
    7e3e:	9f af       	std	Y+63, r25	; 0x3f
    7e40:	2c 97       	sbiw	r28, 0x0c	; 12
    7e42:	2c 96       	adiw	r28, 0x0c	; 12
    7e44:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e46:	2c 97       	sbiw	r28, 0x0c	; 12
    7e48:	6d 96       	adiw	r28, 0x1d	; 29
    7e4a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e4c:	6d 97       	sbiw	r28, 0x1d	; 29
    7e4e:	89 1b       	sub	r24, r25
    7e50:	2c 96       	adiw	r28, 0x0c	; 12
    7e52:	8f af       	std	Y+63, r24	; 0x3f
    7e54:	2c 97       	sbiw	r28, 0x0c	; 12
    7e56:	25 96       	adiw	r28, 0x05	; 5
    7e58:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e5a:	25 97       	sbiw	r28, 0x05	; 5
    7e5c:	8c af       	std	Y+60, r24	; 0x3c
    7e5e:	26 96       	adiw	r28, 0x06	; 6
    7e60:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e62:	26 97       	sbiw	r28, 0x06	; 6
    7e64:	9d af       	std	Y+61, r25	; 0x3d
    7e66:	27 96       	adiw	r28, 0x07	; 7
    7e68:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e6a:	27 97       	sbiw	r28, 0x07	; 7
    7e6c:	8e af       	std	Y+62, r24	; 0x3e
    7e6e:	28 96       	adiw	r28, 0x08	; 8
    7e70:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e72:	28 97       	sbiw	r28, 0x08	; 8
    7e74:	9f af       	std	Y+63, r25	; 0x3f
    7e76:	29 96       	adiw	r28, 0x09	; 9
    7e78:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e7a:	29 97       	sbiw	r28, 0x09	; 9
    7e7c:	21 96       	adiw	r28, 0x01	; 1
    7e7e:	8f af       	std	Y+63, r24	; 0x3f
    7e80:	21 97       	sbiw	r28, 0x01	; 1
    7e82:	2a 96       	adiw	r28, 0x0a	; 10
    7e84:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e86:	2a 97       	sbiw	r28, 0x0a	; 10
    7e88:	22 96       	adiw	r28, 0x02	; 2
    7e8a:	9f af       	std	Y+63, r25	; 0x3f
    7e8c:	22 97       	sbiw	r28, 0x02	; 2
    7e8e:	2b 96       	adiw	r28, 0x0b	; 11
    7e90:	8f ad       	ldd	r24, Y+63	; 0x3f
    7e92:	2b 97       	sbiw	r28, 0x0b	; 11
    7e94:	23 96       	adiw	r28, 0x03	; 3
    7e96:	8f af       	std	Y+63, r24	; 0x3f
    7e98:	23 97       	sbiw	r28, 0x03	; 3
    7e9a:	2c 96       	adiw	r28, 0x0c	; 12
    7e9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    7e9e:	2c 97       	sbiw	r28, 0x0c	; 12
    7ea0:	24 96       	adiw	r28, 0x04	; 4
    7ea2:	9f af       	std	Y+63, r25	; 0x3f
    7ea4:	24 97       	sbiw	r28, 0x04	; 4
    7ea6:	8c ad       	ldd	r24, Y+60	; 0x3c
    7ea8:	99 81       	ldd	r25, Y+1	; 0x01
    7eaa:	89 0f       	add	r24, r25
    7eac:	a0 96       	adiw	r28, 0x20	; 32
    7eae:	8f af       	std	Y+63, r24	; 0x3f
    7eb0:	a0 97       	sbiw	r28, 0x20	; 32
    7eb2:	81 e0       	ldi	r24, 0x01	; 1
    7eb4:	a8 96       	adiw	r28, 0x28	; 40
    7eb6:	8f af       	std	Y+63, r24	; 0x3f
    7eb8:	a8 97       	sbiw	r28, 0x28	; 40
    7eba:	a0 96       	adiw	r28, 0x20	; 32
    7ebc:	9f ad       	ldd	r25, Y+63	; 0x3f
    7ebe:	a0 97       	sbiw	r28, 0x20	; 32
    7ec0:	8c ad       	ldd	r24, Y+60	; 0x3c
    7ec2:	98 17       	cp	r25, r24
    7ec4:	18 f0       	brcs	.+6      	; 0x7ecc <distance_rf+0x702>
    7ec6:	a8 96       	adiw	r28, 0x28	; 40
    7ec8:	1f ae       	std	Y+63, r1	; 0x3f
    7eca:	a8 97       	sbiw	r28, 0x28	; 40
    7ecc:	9d ad       	ldd	r25, Y+61	; 0x3d
    7ece:	8a 81       	ldd	r24, Y+2	; 0x02
    7ed0:	98 0f       	add	r25, r24
    7ed2:	a1 96       	adiw	r28, 0x21	; 33
    7ed4:	9f af       	std	Y+63, r25	; 0x3f
    7ed6:	a1 97       	sbiw	r28, 0x21	; 33
    7ed8:	91 e0       	ldi	r25, 0x01	; 1
    7eda:	a9 96       	adiw	r28, 0x29	; 41
    7edc:	9f af       	std	Y+63, r25	; 0x3f
    7ede:	a9 97       	sbiw	r28, 0x29	; 41
    7ee0:	a1 96       	adiw	r28, 0x21	; 33
    7ee2:	8f ad       	ldd	r24, Y+63	; 0x3f
    7ee4:	a1 97       	sbiw	r28, 0x21	; 33
    7ee6:	9d ad       	ldd	r25, Y+61	; 0x3d
    7ee8:	89 17       	cp	r24, r25
    7eea:	18 f0       	brcs	.+6      	; 0x7ef2 <distance_rf+0x728>
    7eec:	a9 96       	adiw	r28, 0x29	; 41
    7eee:	1f ae       	std	Y+63, r1	; 0x3f
    7ef0:	a9 97       	sbiw	r28, 0x29	; 41
    7ef2:	a8 96       	adiw	r28, 0x28	; 40
    7ef4:	8f ad       	ldd	r24, Y+63	; 0x3f
    7ef6:	a8 97       	sbiw	r28, 0x28	; 40
    7ef8:	a1 96       	adiw	r28, 0x21	; 33
    7efa:	9f ad       	ldd	r25, Y+63	; 0x3f
    7efc:	a1 97       	sbiw	r28, 0x21	; 33
    7efe:	89 0f       	add	r24, r25
    7f00:	aa 96       	adiw	r28, 0x2a	; 42
    7f02:	8f af       	std	Y+63, r24	; 0x3f
    7f04:	aa 97       	sbiw	r28, 0x2a	; 42
    7f06:	81 e0       	ldi	r24, 0x01	; 1
    7f08:	ab 96       	adiw	r28, 0x2b	; 43
    7f0a:	8f af       	std	Y+63, r24	; 0x3f
    7f0c:	ab 97       	sbiw	r28, 0x2b	; 43
    7f0e:	aa 96       	adiw	r28, 0x2a	; 42
    7f10:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f12:	aa 97       	sbiw	r28, 0x2a	; 42
    7f14:	a1 96       	adiw	r28, 0x21	; 33
    7f16:	8f ad       	ldd	r24, Y+63	; 0x3f
    7f18:	a1 97       	sbiw	r28, 0x21	; 33
    7f1a:	98 17       	cp	r25, r24
    7f1c:	18 f0       	brcs	.+6      	; 0x7f24 <distance_rf+0x75a>
    7f1e:	ab 96       	adiw	r28, 0x2b	; 43
    7f20:	1f ae       	std	Y+63, r1	; 0x3f
    7f22:	ab 97       	sbiw	r28, 0x2b	; 43
    7f24:	a9 96       	adiw	r28, 0x29	; 41
    7f26:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f28:	a9 97       	sbiw	r28, 0x29	; 41
    7f2a:	ab 96       	adiw	r28, 0x2b	; 43
    7f2c:	8f ad       	ldd	r24, Y+63	; 0x3f
    7f2e:	ab 97       	sbiw	r28, 0x2b	; 43
    7f30:	98 2b       	or	r25, r24
    7f32:	a9 96       	adiw	r28, 0x29	; 41
    7f34:	9f af       	std	Y+63, r25	; 0x3f
    7f36:	a9 97       	sbiw	r28, 0x29	; 41
    7f38:	aa 96       	adiw	r28, 0x2a	; 42
    7f3a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f3c:	aa 97       	sbiw	r28, 0x2a	; 42
    7f3e:	a1 96       	adiw	r28, 0x21	; 33
    7f40:	9f af       	std	Y+63, r25	; 0x3f
    7f42:	a1 97       	sbiw	r28, 0x21	; 33
    7f44:	8e ad       	ldd	r24, Y+62	; 0x3e
    7f46:	9b 81       	ldd	r25, Y+3	; 0x03
    7f48:	89 0f       	add	r24, r25
    7f4a:	a2 96       	adiw	r28, 0x22	; 34
    7f4c:	8f af       	std	Y+63, r24	; 0x3f
    7f4e:	a2 97       	sbiw	r28, 0x22	; 34
    7f50:	81 e0       	ldi	r24, 0x01	; 1
    7f52:	ac 96       	adiw	r28, 0x2c	; 44
    7f54:	8f af       	std	Y+63, r24	; 0x3f
    7f56:	ac 97       	sbiw	r28, 0x2c	; 44
    7f58:	a2 96       	adiw	r28, 0x22	; 34
    7f5a:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f5c:	a2 97       	sbiw	r28, 0x22	; 34
    7f5e:	8e ad       	ldd	r24, Y+62	; 0x3e
    7f60:	98 17       	cp	r25, r24
    7f62:	18 f0       	brcs	.+6      	; 0x7f6a <distance_rf+0x7a0>
    7f64:	ac 96       	adiw	r28, 0x2c	; 44
    7f66:	1f ae       	std	Y+63, r1	; 0x3f
    7f68:	ac 97       	sbiw	r28, 0x2c	; 44
    7f6a:	a9 96       	adiw	r28, 0x29	; 41
    7f6c:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f6e:	a9 97       	sbiw	r28, 0x29	; 41
    7f70:	a2 96       	adiw	r28, 0x22	; 34
    7f72:	8f ad       	ldd	r24, Y+63	; 0x3f
    7f74:	a2 97       	sbiw	r28, 0x22	; 34
    7f76:	98 0f       	add	r25, r24
    7f78:	ad 96       	adiw	r28, 0x2d	; 45
    7f7a:	9f af       	std	Y+63, r25	; 0x3f
    7f7c:	ad 97       	sbiw	r28, 0x2d	; 45
    7f7e:	91 e0       	ldi	r25, 0x01	; 1
    7f80:	ae 96       	adiw	r28, 0x2e	; 46
    7f82:	9f af       	std	Y+63, r25	; 0x3f
    7f84:	ae 97       	sbiw	r28, 0x2e	; 46
    7f86:	ad 96       	adiw	r28, 0x2d	; 45
    7f88:	8f ad       	ldd	r24, Y+63	; 0x3f
    7f8a:	ad 97       	sbiw	r28, 0x2d	; 45
    7f8c:	a2 96       	adiw	r28, 0x22	; 34
    7f8e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7f90:	a2 97       	sbiw	r28, 0x22	; 34
    7f92:	89 17       	cp	r24, r25
    7f94:	18 f0       	brcs	.+6      	; 0x7f9c <distance_rf+0x7d2>
    7f96:	ae 96       	adiw	r28, 0x2e	; 46
    7f98:	1f ae       	std	Y+63, r1	; 0x3f
    7f9a:	ae 97       	sbiw	r28, 0x2e	; 46
    7f9c:	ac 96       	adiw	r28, 0x2c	; 44
    7f9e:	8f ad       	ldd	r24, Y+63	; 0x3f
    7fa0:	ac 97       	sbiw	r28, 0x2c	; 44
    7fa2:	ae 96       	adiw	r28, 0x2e	; 46
    7fa4:	9f ad       	ldd	r25, Y+63	; 0x3f
    7fa6:	ae 97       	sbiw	r28, 0x2e	; 46
    7fa8:	89 2b       	or	r24, r25
    7faa:	ac 96       	adiw	r28, 0x2c	; 44
    7fac:	8f af       	std	Y+63, r24	; 0x3f
    7fae:	ac 97       	sbiw	r28, 0x2c	; 44
    7fb0:	ad 96       	adiw	r28, 0x2d	; 45
    7fb2:	8f ad       	ldd	r24, Y+63	; 0x3f
    7fb4:	ad 97       	sbiw	r28, 0x2d	; 45
    7fb6:	a2 96       	adiw	r28, 0x22	; 34
    7fb8:	8f af       	std	Y+63, r24	; 0x3f
    7fba:	a2 97       	sbiw	r28, 0x22	; 34
    7fbc:	9f ad       	ldd	r25, Y+63	; 0x3f
    7fbe:	8c 81       	ldd	r24, Y+4	; 0x04
    7fc0:	98 0f       	add	r25, r24
    7fc2:	a3 96       	adiw	r28, 0x23	; 35
    7fc4:	9f af       	std	Y+63, r25	; 0x3f
    7fc6:	a3 97       	sbiw	r28, 0x23	; 35
    7fc8:	91 e0       	ldi	r25, 0x01	; 1
    7fca:	af 96       	adiw	r28, 0x2f	; 47
    7fcc:	9f af       	std	Y+63, r25	; 0x3f
    7fce:	af 97       	sbiw	r28, 0x2f	; 47
    7fd0:	a3 96       	adiw	r28, 0x23	; 35
    7fd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    7fd4:	a3 97       	sbiw	r28, 0x23	; 35
    7fd6:	9f ad       	ldd	r25, Y+63	; 0x3f
    7fd8:	89 17       	cp	r24, r25
    7fda:	18 f0       	brcs	.+6      	; 0x7fe2 <distance_rf+0x818>
    7fdc:	af 96       	adiw	r28, 0x2f	; 47
    7fde:	1f ae       	std	Y+63, r1	; 0x3f
    7fe0:	af 97       	sbiw	r28, 0x2f	; 47
    7fe2:	ac 96       	adiw	r28, 0x2c	; 44
    7fe4:	8f ad       	ldd	r24, Y+63	; 0x3f
    7fe6:	ac 97       	sbiw	r28, 0x2c	; 44
    7fe8:	a3 96       	adiw	r28, 0x23	; 35
    7fea:	9f ad       	ldd	r25, Y+63	; 0x3f
    7fec:	a3 97       	sbiw	r28, 0x23	; 35
    7fee:	89 0f       	add	r24, r25
    7ff0:	e0 96       	adiw	r28, 0x30	; 48
    7ff2:	8f af       	std	Y+63, r24	; 0x3f
    7ff4:	e0 97       	sbiw	r28, 0x30	; 48
    7ff6:	81 e0       	ldi	r24, 0x01	; 1
    7ff8:	e1 96       	adiw	r28, 0x31	; 49
    7ffa:	8f af       	std	Y+63, r24	; 0x3f
    7ffc:	e1 97       	sbiw	r28, 0x31	; 49
    7ffe:	e0 96       	adiw	r28, 0x30	; 48
    8000:	9f ad       	ldd	r25, Y+63	; 0x3f
    8002:	e0 97       	sbiw	r28, 0x30	; 48
    8004:	a3 96       	adiw	r28, 0x23	; 35
    8006:	8f ad       	ldd	r24, Y+63	; 0x3f
    8008:	a3 97       	sbiw	r28, 0x23	; 35
    800a:	98 17       	cp	r25, r24
    800c:	18 f0       	brcs	.+6      	; 0x8014 <distance_rf+0x84a>
    800e:	e1 96       	adiw	r28, 0x31	; 49
    8010:	1f ae       	std	Y+63, r1	; 0x3f
    8012:	e1 97       	sbiw	r28, 0x31	; 49
    8014:	af 96       	adiw	r28, 0x2f	; 47
    8016:	9f ad       	ldd	r25, Y+63	; 0x3f
    8018:	af 97       	sbiw	r28, 0x2f	; 47
    801a:	e1 96       	adiw	r28, 0x31	; 49
    801c:	8f ad       	ldd	r24, Y+63	; 0x3f
    801e:	e1 97       	sbiw	r28, 0x31	; 49
    8020:	98 2b       	or	r25, r24
    8022:	af 96       	adiw	r28, 0x2f	; 47
    8024:	9f af       	std	Y+63, r25	; 0x3f
    8026:	af 97       	sbiw	r28, 0x2f	; 47
    8028:	e0 96       	adiw	r28, 0x30	; 48
    802a:	9f ad       	ldd	r25, Y+63	; 0x3f
    802c:	e0 97       	sbiw	r28, 0x30	; 48
    802e:	a3 96       	adiw	r28, 0x23	; 35
    8030:	9f af       	std	Y+63, r25	; 0x3f
    8032:	a3 97       	sbiw	r28, 0x23	; 35
    8034:	21 96       	adiw	r28, 0x01	; 1
    8036:	8f ad       	ldd	r24, Y+63	; 0x3f
    8038:	21 97       	sbiw	r28, 0x01	; 1
    803a:	9d 81       	ldd	r25, Y+5	; 0x05
    803c:	89 0f       	add	r24, r25
    803e:	a4 96       	adiw	r28, 0x24	; 36
    8040:	8f af       	std	Y+63, r24	; 0x3f
    8042:	a4 97       	sbiw	r28, 0x24	; 36
    8044:	81 e0       	ldi	r24, 0x01	; 1
    8046:	e2 96       	adiw	r28, 0x32	; 50
    8048:	8f af       	std	Y+63, r24	; 0x3f
    804a:	e2 97       	sbiw	r28, 0x32	; 50
    804c:	a4 96       	adiw	r28, 0x24	; 36
    804e:	9f ad       	ldd	r25, Y+63	; 0x3f
    8050:	a4 97       	sbiw	r28, 0x24	; 36
    8052:	21 96       	adiw	r28, 0x01	; 1
    8054:	8f ad       	ldd	r24, Y+63	; 0x3f
    8056:	21 97       	sbiw	r28, 0x01	; 1
    8058:	98 17       	cp	r25, r24
    805a:	18 f0       	brcs	.+6      	; 0x8062 <distance_rf+0x898>
    805c:	e2 96       	adiw	r28, 0x32	; 50
    805e:	1f ae       	std	Y+63, r1	; 0x3f
    8060:	e2 97       	sbiw	r28, 0x32	; 50
    8062:	af 96       	adiw	r28, 0x2f	; 47
    8064:	9f ad       	ldd	r25, Y+63	; 0x3f
    8066:	af 97       	sbiw	r28, 0x2f	; 47
    8068:	a4 96       	adiw	r28, 0x24	; 36
    806a:	8f ad       	ldd	r24, Y+63	; 0x3f
    806c:	a4 97       	sbiw	r28, 0x24	; 36
    806e:	98 0f       	add	r25, r24
    8070:	e3 96       	adiw	r28, 0x33	; 51
    8072:	9f af       	std	Y+63, r25	; 0x3f
    8074:	e3 97       	sbiw	r28, 0x33	; 51
    8076:	91 e0       	ldi	r25, 0x01	; 1
    8078:	e4 96       	adiw	r28, 0x34	; 52
    807a:	9f af       	std	Y+63, r25	; 0x3f
    807c:	e4 97       	sbiw	r28, 0x34	; 52
    807e:	e3 96       	adiw	r28, 0x33	; 51
    8080:	8f ad       	ldd	r24, Y+63	; 0x3f
    8082:	e3 97       	sbiw	r28, 0x33	; 51
    8084:	a4 96       	adiw	r28, 0x24	; 36
    8086:	9f ad       	ldd	r25, Y+63	; 0x3f
    8088:	a4 97       	sbiw	r28, 0x24	; 36
    808a:	89 17       	cp	r24, r25
    808c:	18 f0       	brcs	.+6      	; 0x8094 <distance_rf+0x8ca>
    808e:	e4 96       	adiw	r28, 0x34	; 52
    8090:	1f ae       	std	Y+63, r1	; 0x3f
    8092:	e4 97       	sbiw	r28, 0x34	; 52
    8094:	e2 96       	adiw	r28, 0x32	; 50
    8096:	8f ad       	ldd	r24, Y+63	; 0x3f
    8098:	e2 97       	sbiw	r28, 0x32	; 50
    809a:	e4 96       	adiw	r28, 0x34	; 52
    809c:	9f ad       	ldd	r25, Y+63	; 0x3f
    809e:	e4 97       	sbiw	r28, 0x34	; 52
    80a0:	89 2b       	or	r24, r25
    80a2:	e2 96       	adiw	r28, 0x32	; 50
    80a4:	8f af       	std	Y+63, r24	; 0x3f
    80a6:	e2 97       	sbiw	r28, 0x32	; 50
    80a8:	e3 96       	adiw	r28, 0x33	; 51
    80aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    80ac:	e3 97       	sbiw	r28, 0x33	; 51
    80ae:	a4 96       	adiw	r28, 0x24	; 36
    80b0:	8f af       	std	Y+63, r24	; 0x3f
    80b2:	a4 97       	sbiw	r28, 0x24	; 36
    80b4:	22 96       	adiw	r28, 0x02	; 2
    80b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    80b8:	22 97       	sbiw	r28, 0x02	; 2
    80ba:	8e 81       	ldd	r24, Y+6	; 0x06
    80bc:	98 0f       	add	r25, r24
    80be:	a5 96       	adiw	r28, 0x25	; 37
    80c0:	9f af       	std	Y+63, r25	; 0x3f
    80c2:	a5 97       	sbiw	r28, 0x25	; 37
    80c4:	91 e0       	ldi	r25, 0x01	; 1
    80c6:	e5 96       	adiw	r28, 0x35	; 53
    80c8:	9f af       	std	Y+63, r25	; 0x3f
    80ca:	e5 97       	sbiw	r28, 0x35	; 53
    80cc:	a5 96       	adiw	r28, 0x25	; 37
    80ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    80d0:	a5 97       	sbiw	r28, 0x25	; 37
    80d2:	22 96       	adiw	r28, 0x02	; 2
    80d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    80d6:	22 97       	sbiw	r28, 0x02	; 2
    80d8:	89 17       	cp	r24, r25
    80da:	18 f0       	brcs	.+6      	; 0x80e2 <distance_rf+0x918>
    80dc:	e5 96       	adiw	r28, 0x35	; 53
    80de:	1f ae       	std	Y+63, r1	; 0x3f
    80e0:	e5 97       	sbiw	r28, 0x35	; 53
    80e2:	e2 96       	adiw	r28, 0x32	; 50
    80e4:	8f ad       	ldd	r24, Y+63	; 0x3f
    80e6:	e2 97       	sbiw	r28, 0x32	; 50
    80e8:	a5 96       	adiw	r28, 0x25	; 37
    80ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    80ec:	a5 97       	sbiw	r28, 0x25	; 37
    80ee:	89 0f       	add	r24, r25
    80f0:	e6 96       	adiw	r28, 0x36	; 54
    80f2:	8f af       	std	Y+63, r24	; 0x3f
    80f4:	e6 97       	sbiw	r28, 0x36	; 54
    80f6:	81 e0       	ldi	r24, 0x01	; 1
    80f8:	e7 96       	adiw	r28, 0x37	; 55
    80fa:	8f af       	std	Y+63, r24	; 0x3f
    80fc:	e7 97       	sbiw	r28, 0x37	; 55
    80fe:	e6 96       	adiw	r28, 0x36	; 54
    8100:	9f ad       	ldd	r25, Y+63	; 0x3f
    8102:	e6 97       	sbiw	r28, 0x36	; 54
    8104:	a5 96       	adiw	r28, 0x25	; 37
    8106:	8f ad       	ldd	r24, Y+63	; 0x3f
    8108:	a5 97       	sbiw	r28, 0x25	; 37
    810a:	98 17       	cp	r25, r24
    810c:	18 f0       	brcs	.+6      	; 0x8114 <distance_rf+0x94a>
    810e:	e7 96       	adiw	r28, 0x37	; 55
    8110:	1f ae       	std	Y+63, r1	; 0x3f
    8112:	e7 97       	sbiw	r28, 0x37	; 55
    8114:	e5 96       	adiw	r28, 0x35	; 53
    8116:	9f ad       	ldd	r25, Y+63	; 0x3f
    8118:	e5 97       	sbiw	r28, 0x35	; 53
    811a:	e7 96       	adiw	r28, 0x37	; 55
    811c:	8f ad       	ldd	r24, Y+63	; 0x3f
    811e:	e7 97       	sbiw	r28, 0x37	; 55
    8120:	98 2b       	or	r25, r24
    8122:	e5 96       	adiw	r28, 0x35	; 53
    8124:	9f af       	std	Y+63, r25	; 0x3f
    8126:	e5 97       	sbiw	r28, 0x35	; 53
    8128:	e6 96       	adiw	r28, 0x36	; 54
    812a:	9f ad       	ldd	r25, Y+63	; 0x3f
    812c:	e6 97       	sbiw	r28, 0x36	; 54
    812e:	a5 96       	adiw	r28, 0x25	; 37
    8130:	9f af       	std	Y+63, r25	; 0x3f
    8132:	a5 97       	sbiw	r28, 0x25	; 37
    8134:	23 96       	adiw	r28, 0x03	; 3
    8136:	8f ad       	ldd	r24, Y+63	; 0x3f
    8138:	23 97       	sbiw	r28, 0x03	; 3
    813a:	9f 81       	ldd	r25, Y+7	; 0x07
    813c:	89 0f       	add	r24, r25
    813e:	a6 96       	adiw	r28, 0x26	; 38
    8140:	8f af       	std	Y+63, r24	; 0x3f
    8142:	a6 97       	sbiw	r28, 0x26	; 38
    8144:	81 e0       	ldi	r24, 0x01	; 1
    8146:	e8 96       	adiw	r28, 0x38	; 56
    8148:	8f af       	std	Y+63, r24	; 0x3f
    814a:	e8 97       	sbiw	r28, 0x38	; 56
    814c:	a6 96       	adiw	r28, 0x26	; 38
    814e:	9f ad       	ldd	r25, Y+63	; 0x3f
    8150:	a6 97       	sbiw	r28, 0x26	; 38
    8152:	23 96       	adiw	r28, 0x03	; 3
    8154:	8f ad       	ldd	r24, Y+63	; 0x3f
    8156:	23 97       	sbiw	r28, 0x03	; 3
    8158:	98 17       	cp	r25, r24
    815a:	18 f0       	brcs	.+6      	; 0x8162 <distance_rf+0x998>
    815c:	e8 96       	adiw	r28, 0x38	; 56
    815e:	1f ae       	std	Y+63, r1	; 0x3f
    8160:	e8 97       	sbiw	r28, 0x38	; 56
    8162:	e5 96       	adiw	r28, 0x35	; 53
    8164:	9f ad       	ldd	r25, Y+63	; 0x3f
    8166:	e5 97       	sbiw	r28, 0x35	; 53
    8168:	a6 96       	adiw	r28, 0x26	; 38
    816a:	8f ad       	ldd	r24, Y+63	; 0x3f
    816c:	a6 97       	sbiw	r28, 0x26	; 38
    816e:	98 0f       	add	r25, r24
    8170:	e9 96       	adiw	r28, 0x39	; 57
    8172:	9f af       	std	Y+63, r25	; 0x3f
    8174:	e9 97       	sbiw	r28, 0x39	; 57
    8176:	91 e0       	ldi	r25, 0x01	; 1
    8178:	ea 96       	adiw	r28, 0x3a	; 58
    817a:	9f af       	std	Y+63, r25	; 0x3f
    817c:	ea 97       	sbiw	r28, 0x3a	; 58
    817e:	e9 96       	adiw	r28, 0x39	; 57
    8180:	8f ad       	ldd	r24, Y+63	; 0x3f
    8182:	e9 97       	sbiw	r28, 0x39	; 57
    8184:	a6 96       	adiw	r28, 0x26	; 38
    8186:	9f ad       	ldd	r25, Y+63	; 0x3f
    8188:	a6 97       	sbiw	r28, 0x26	; 38
    818a:	89 17       	cp	r24, r25
    818c:	18 f0       	brcs	.+6      	; 0x8194 <distance_rf+0x9ca>
    818e:	ea 96       	adiw	r28, 0x3a	; 58
    8190:	1f ae       	std	Y+63, r1	; 0x3f
    8192:	ea 97       	sbiw	r28, 0x3a	; 58
    8194:	e8 96       	adiw	r28, 0x38	; 56
    8196:	8f ad       	ldd	r24, Y+63	; 0x3f
    8198:	e8 97       	sbiw	r28, 0x38	; 56
    819a:	ea 96       	adiw	r28, 0x3a	; 58
    819c:	9f ad       	ldd	r25, Y+63	; 0x3f
    819e:	ea 97       	sbiw	r28, 0x3a	; 58
    81a0:	89 2b       	or	r24, r25
    81a2:	e8 96       	adiw	r28, 0x38	; 56
    81a4:	8f af       	std	Y+63, r24	; 0x3f
    81a6:	e8 97       	sbiw	r28, 0x38	; 56
    81a8:	e9 96       	adiw	r28, 0x39	; 57
    81aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    81ac:	e9 97       	sbiw	r28, 0x39	; 57
    81ae:	a6 96       	adiw	r28, 0x26	; 38
    81b0:	8f af       	std	Y+63, r24	; 0x3f
    81b2:	a6 97       	sbiw	r28, 0x26	; 38
    81b4:	24 96       	adiw	r28, 0x04	; 4
    81b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    81b8:	24 97       	sbiw	r28, 0x04	; 4
    81ba:	88 85       	ldd	r24, Y+8	; 0x08
    81bc:	98 0f       	add	r25, r24
    81be:	a7 96       	adiw	r28, 0x27	; 39
    81c0:	9f af       	std	Y+63, r25	; 0x3f
    81c2:	a7 97       	sbiw	r28, 0x27	; 39
    81c4:	e8 96       	adiw	r28, 0x38	; 56
    81c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    81c8:	e8 97       	sbiw	r28, 0x38	; 56
    81ca:	a7 96       	adiw	r28, 0x27	; 39
    81cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    81ce:	a7 97       	sbiw	r28, 0x27	; 39
    81d0:	89 0f       	add	r24, r25
    81d2:	a7 96       	adiw	r28, 0x27	; 39
    81d4:	8f af       	std	Y+63, r24	; 0x3f
    81d6:	a7 97       	sbiw	r28, 0x27	; 39
    81d8:	a0 96       	adiw	r28, 0x20	; 32
    81da:	af ac       	ldd	r10, Y+63	; 0x3f
    81dc:	a0 97       	sbiw	r28, 0x20	; 32
    81de:	a1 96       	adiw	r28, 0x21	; 33
    81e0:	bf ac       	ldd	r11, Y+63	; 0x3f
    81e2:	a1 97       	sbiw	r28, 0x21	; 33
    81e4:	a2 96       	adiw	r28, 0x22	; 34
    81e6:	cf ac       	ldd	r12, Y+63	; 0x3f
    81e8:	a2 97       	sbiw	r28, 0x22	; 34
    81ea:	a3 96       	adiw	r28, 0x23	; 35
    81ec:	df ac       	ldd	r13, Y+63	; 0x3f
    81ee:	a3 97       	sbiw	r28, 0x23	; 35
    81f0:	a4 96       	adiw	r28, 0x24	; 36
    81f2:	ef ac       	ldd	r14, Y+63	; 0x3f
    81f4:	a4 97       	sbiw	r28, 0x24	; 36
    81f6:	a5 96       	adiw	r28, 0x25	; 37
    81f8:	ff ac       	ldd	r15, Y+63	; 0x3f
    81fa:	a5 97       	sbiw	r28, 0x25	; 37
    81fc:	a6 96       	adiw	r28, 0x26	; 38
    81fe:	0f ad       	ldd	r16, Y+63	; 0x3f
    8200:	a6 97       	sbiw	r28, 0x26	; 38
    8202:	a7 96       	adiw	r28, 0x27	; 39
    8204:	1f ad       	ldd	r17, Y+63	; 0x3f
    8206:	a7 97       	sbiw	r28, 0x27	; 39
    8208:	2a 2d       	mov	r18, r10
    820a:	3b 2d       	mov	r19, r11
    820c:	4c 2d       	mov	r20, r12
    820e:	5d 2d       	mov	r21, r13
    8210:	6e 2d       	mov	r22, r14
    8212:	7f 2d       	mov	r23, r15
    8214:	80 2f       	mov	r24, r16
    8216:	91 2f       	mov	r25, r17
    8218:	aa 24       	eor	r10, r10
    821a:	68 94       	set
    821c:	a6 f8       	bld	r10, 6
    821e:	0f 2e       	mov	r0, r31
    8220:	f2 e4       	ldi	r31, 0x42	; 66
    8222:	bf 2e       	mov	r11, r31
    8224:	f0 2d       	mov	r31, r0
    8226:	0f 2e       	mov	r0, r31
    8228:	ff e0       	ldi	r31, 0x0F	; 15
    822a:	cf 2e       	mov	r12, r31
    822c:	f0 2d       	mov	r31, r0
    822e:	dd 24       	eor	r13, r13
    8230:	ee 24       	eor	r14, r14
    8232:	ff 24       	eor	r15, r15
    8234:	00 e0       	ldi	r16, 0x00	; 0
    8236:	10 e0       	ldi	r17, 0x00	; 0
    8238:	0e 94 12 01 	call	0x224	; 0x224 <__udivdi3>
    823c:	a2 2e       	mov	r10, r18
    823e:	b3 2e       	mov	r11, r19
    8240:	c4 2e       	mov	r12, r20
    8242:	d5 2e       	mov	r13, r21
    8244:	e6 2e       	mov	r14, r22
    8246:	f7 2e       	mov	r15, r23
    8248:	08 2f       	mov	r16, r24
    824a:	19 2f       	mov	r17, r25
    824c:	2a 2d       	mov	r18, r10
    824e:	3b 2d       	mov	r19, r11
    8250:	4c 2d       	mov	r20, r12
    8252:	5d 2d       	mov	r21, r13
    8254:	6e 2d       	mov	r22, r14
    8256:	7f 2d       	mov	r23, r15
    8258:	80 2f       	mov	r24, r16
    825a:	91 2f       	mov	r25, r17
    825c:	20 93 d5 03 	sts	0x03D5, r18
    8260:	30 93 d6 03 	sts	0x03D6, r19
    8264:	40 93 d7 03 	sts	0x03D7, r20
    8268:	50 93 d8 03 	sts	0x03D8, r21
    826c:	60 93 d9 03 	sts	0x03D9, r22
    8270:	70 93 da 03 	sts	0x03DA, r23
    8274:	80 93 db 03 	sts	0x03DB, r24
    8278:	90 93 dc 03 	sts	0x03DC, r25
  return length_rf;
    827c:	20 91 d5 03 	lds	r18, 0x03D5
    8280:	30 91 d6 03 	lds	r19, 0x03D6
    8284:	40 91 d7 03 	lds	r20, 0x03D7
    8288:	50 91 d8 03 	lds	r21, 0x03D8
    828c:	60 91 d9 03 	lds	r22, 0x03D9
    8290:	70 91 da 03 	lds	r23, 0x03DA
    8294:	80 91 db 03 	lds	r24, 0x03DB
    8298:	90 91 dc 03 	lds	r25, 0x03DC
    829c:	a2 2e       	mov	r10, r18
    829e:	b3 2e       	mov	r11, r19
    82a0:	c4 2e       	mov	r12, r20
    82a2:	d5 2e       	mov	r13, r21
    82a4:	e6 2e       	mov	r14, r22
    82a6:	f7 2e       	mov	r15, r23
    82a8:	08 2f       	mov	r16, r24
    82aa:	19 2f       	mov	r17, r25
}
    82ac:	2a 2d       	mov	r18, r10
    82ae:	3b 2d       	mov	r19, r11
    82b0:	4c 2d       	mov	r20, r12
    82b2:	5d 2d       	mov	r21, r13
    82b4:	6e 2d       	mov	r22, r14
    82b6:	7f 2d       	mov	r23, r15
    82b8:	80 2f       	mov	r24, r16
    82ba:	91 2f       	mov	r25, r17
    82bc:	c7 58       	subi	r28, 0x87	; 135
    82be:	df 4f       	sbci	r29, 0xFF	; 255
    82c0:	0f b6       	in	r0, 0x3f	; 63
    82c2:	f8 94       	cli
    82c4:	de bf       	out	0x3e, r29	; 62
    82c6:	0f be       	out	0x3f, r0	; 63
    82c8:	cd bf       	out	0x3d, r28	; 61
    82ca:	cf 91       	pop	r28
    82cc:	df 91       	pop	r29
    82ce:	1f 91       	pop	r17
    82d0:	0f 91       	pop	r16
    82d2:	ff 90       	pop	r15
    82d4:	ef 90       	pop	r14
    82d6:	df 90       	pop	r13
    82d8:	cf 90       	pop	r12
    82da:	bf 90       	pop	r11
    82dc:	af 90       	pop	r10
    82de:	08 95       	ret

000082e0 <distance_rb>:
uint64 distance_rb(void)
{
    82e0:	af 92       	push	r10
    82e2:	bf 92       	push	r11
    82e4:	cf 92       	push	r12
    82e6:	df 92       	push	r13
    82e8:	ef 92       	push	r14
    82ea:	ff 92       	push	r15
    82ec:	0f 93       	push	r16
    82ee:	1f 93       	push	r17
    82f0:	df 93       	push	r29
    82f2:	cf 93       	push	r28
    82f4:	cd b7       	in	r28, 0x3d	; 61
    82f6:	de b7       	in	r29, 0x3e	; 62
    82f8:	c9 57       	subi	r28, 0x79	; 121
    82fa:	d0 40       	sbci	r29, 0x00	; 0
    82fc:	0f b6       	in	r0, 0x3f	; 63
    82fe:	f8 94       	cli
    8300:	de bf       	out	0x3e, r29	; 62
    8302:	0f be       	out	0x3f, r0	; 63
    8304:	cd bf       	out	0x3d, r28	; 61
t_rb=TCNT0;
    8306:	e2 e5       	ldi	r30, 0x52	; 82
    8308:	f0 e0       	ldi	r31, 0x00	; 0
    830a:	80 81       	ld	r24, Z
    830c:	28 2f       	mov	r18, r24
    830e:	30 e0       	ldi	r19, 0x00	; 0
    8310:	40 e0       	ldi	r20, 0x00	; 0
    8312:	50 e0       	ldi	r21, 0x00	; 0
    8314:	60 e0       	ldi	r22, 0x00	; 0
    8316:	70 e0       	ldi	r23, 0x00	; 0
    8318:	80 e0       	ldi	r24, 0x00	; 0
    831a:	90 e0       	ldi	r25, 0x00	; 0
    831c:	20 93 dd 03 	sts	0x03DD, r18
    8320:	30 93 de 03 	sts	0x03DE, r19
    8324:	40 93 df 03 	sts	0x03DF, r20
    8328:	50 93 e0 03 	sts	0x03E0, r21
    832c:	60 93 e1 03 	sts	0x03E1, r22
    8330:	70 93 e2 03 	sts	0x03E2, r23
    8334:	80 93 e3 03 	sts	0x03E3, r24
    8338:	90 93 e4 03 	sts	0x03E4, r25
c_rb=count_right_back;
    833c:	80 91 8a 03 	lds	r24, 0x038A
    8340:	90 91 8b 03 	lds	r25, 0x038B
    8344:	9c 01       	movw	r18, r24
    8346:	40 e0       	ldi	r20, 0x00	; 0
    8348:	50 e0       	ldi	r21, 0x00	; 0
    834a:	60 e0       	ldi	r22, 0x00	; 0
    834c:	70 e0       	ldi	r23, 0x00	; 0
    834e:	80 e0       	ldi	r24, 0x00	; 0
    8350:	90 e0       	ldi	r25, 0x00	; 0
    8352:	20 93 a5 03 	sts	0x03A5, r18
    8356:	30 93 a6 03 	sts	0x03A6, r19
    835a:	40 93 a7 03 	sts	0x03A7, r20
    835e:	50 93 a8 03 	sts	0x03A8, r21
    8362:	60 93 a9 03 	sts	0x03A9, r22
    8366:	70 93 aa 03 	sts	0x03AA, r23
    836a:	80 93 ab 03 	sts	0x03AB, r24
    836e:	90 93 ac 03 	sts	0x03AC, r25
time_rb=(uint64)t_rb+((uint64)c_rb*256);
    8372:	a0 90 a5 03 	lds	r10, 0x03A5
    8376:	b0 90 a6 03 	lds	r11, 0x03A6
    837a:	c0 90 a7 03 	lds	r12, 0x03A7
    837e:	d0 90 a8 03 	lds	r13, 0x03A8
    8382:	e0 90 a9 03 	lds	r14, 0x03A9
    8386:	f0 90 aa 03 	lds	r15, 0x03AA
    838a:	00 91 ab 03 	lds	r16, 0x03AB
    838e:	10 91 ac 03 	lds	r17, 0x03AC
    8392:	2a 2d       	mov	r18, r10
    8394:	3b 2d       	mov	r19, r11
    8396:	4c 2d       	mov	r20, r12
    8398:	5d 2d       	mov	r21, r13
    839a:	6e 2d       	mov	r22, r14
    839c:	7f 2d       	mov	r23, r15
    839e:	80 2f       	mov	r24, r16
    83a0:	91 2f       	mov	r25, r17
    83a2:	08 e0       	ldi	r16, 0x08	; 8
    83a4:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    83a8:	a2 2e       	mov	r10, r18
    83aa:	b3 2e       	mov	r11, r19
    83ac:	c4 2e       	mov	r12, r20
    83ae:	d5 2e       	mov	r13, r21
    83b0:	e6 2e       	mov	r14, r22
    83b2:	f7 2e       	mov	r15, r23
    83b4:	08 2f       	mov	r16, r24
    83b6:	19 2f       	mov	r17, r25
    83b8:	a9 8a       	std	Y+17, r10	; 0x11
    83ba:	ba 8a       	std	Y+18, r11	; 0x12
    83bc:	cb 8a       	std	Y+19, r12	; 0x13
    83be:	dc 8a       	std	Y+20, r13	; 0x14
    83c0:	ed 8a       	std	Y+21, r14	; 0x15
    83c2:	fe 8a       	std	Y+22, r15	; 0x16
    83c4:	0f 8b       	std	Y+23, r16	; 0x17
    83c6:	18 8f       	std	Y+24, r17	; 0x18
    83c8:	80 91 dd 03 	lds	r24, 0x03DD
    83cc:	89 87       	std	Y+9, r24	; 0x09
    83ce:	90 91 de 03 	lds	r25, 0x03DE
    83d2:	9a 87       	std	Y+10, r25	; 0x0a
    83d4:	80 91 df 03 	lds	r24, 0x03DF
    83d8:	8b 87       	std	Y+11, r24	; 0x0b
    83da:	90 91 e0 03 	lds	r25, 0x03E0
    83de:	9c 87       	std	Y+12, r25	; 0x0c
    83e0:	80 91 e1 03 	lds	r24, 0x03E1
    83e4:	8d 87       	std	Y+13, r24	; 0x0d
    83e6:	90 91 e2 03 	lds	r25, 0x03E2
    83ea:	9e 87       	std	Y+14, r25	; 0x0e
    83ec:	80 91 e3 03 	lds	r24, 0x03E3
    83f0:	8f 87       	std	Y+15, r24	; 0x0f
    83f2:	90 91 e4 03 	lds	r25, 0x03E4
    83f6:	98 8b       	std	Y+16, r25	; 0x10
    83f8:	89 89       	ldd	r24, Y+17	; 0x11
    83fa:	99 85       	ldd	r25, Y+9	; 0x09
    83fc:	89 0f       	add	r24, r25
    83fe:	89 8f       	std	Y+25, r24	; 0x19
    8400:	81 e0       	ldi	r24, 0x01	; 1
    8402:	89 a3       	std	Y+33, r24	; 0x21
    8404:	99 8d       	ldd	r25, Y+25	; 0x19
    8406:	89 89       	ldd	r24, Y+17	; 0x11
    8408:	98 17       	cp	r25, r24
    840a:	08 f0       	brcs	.+2      	; 0x840e <distance_rb+0x12e>
    840c:	19 a2       	std	Y+33, r1	; 0x21
    840e:	9a 89       	ldd	r25, Y+18	; 0x12
    8410:	8a 85       	ldd	r24, Y+10	; 0x0a
    8412:	98 0f       	add	r25, r24
    8414:	9a 8f       	std	Y+26, r25	; 0x1a
    8416:	91 e0       	ldi	r25, 0x01	; 1
    8418:	9a a3       	std	Y+34, r25	; 0x22
    841a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    841c:	9a 89       	ldd	r25, Y+18	; 0x12
    841e:	89 17       	cp	r24, r25
    8420:	08 f0       	brcs	.+2      	; 0x8424 <distance_rb+0x144>
    8422:	1a a2       	std	Y+34, r1	; 0x22
    8424:	89 a1       	ldd	r24, Y+33	; 0x21
    8426:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8428:	89 0f       	add	r24, r25
    842a:	8b a3       	std	Y+35, r24	; 0x23
    842c:	81 e0       	ldi	r24, 0x01	; 1
    842e:	8c a3       	std	Y+36, r24	; 0x24
    8430:	9b a1       	ldd	r25, Y+35	; 0x23
    8432:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8434:	98 17       	cp	r25, r24
    8436:	08 f0       	brcs	.+2      	; 0x843a <distance_rb+0x15a>
    8438:	1c a2       	std	Y+36, r1	; 0x24
    843a:	9a a1       	ldd	r25, Y+34	; 0x22
    843c:	8c a1       	ldd	r24, Y+36	; 0x24
    843e:	98 2b       	or	r25, r24
    8440:	9a a3       	std	Y+34, r25	; 0x22
    8442:	9b a1       	ldd	r25, Y+35	; 0x23
    8444:	9a 8f       	std	Y+26, r25	; 0x1a
    8446:	8b 89       	ldd	r24, Y+19	; 0x13
    8448:	9b 85       	ldd	r25, Y+11	; 0x0b
    844a:	89 0f       	add	r24, r25
    844c:	8b 8f       	std	Y+27, r24	; 0x1b
    844e:	81 e0       	ldi	r24, 0x01	; 1
    8450:	8d a3       	std	Y+37, r24	; 0x25
    8452:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8454:	8b 89       	ldd	r24, Y+19	; 0x13
    8456:	98 17       	cp	r25, r24
    8458:	08 f0       	brcs	.+2      	; 0x845c <distance_rb+0x17c>
    845a:	1d a2       	std	Y+37, r1	; 0x25
    845c:	9a a1       	ldd	r25, Y+34	; 0x22
    845e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8460:	98 0f       	add	r25, r24
    8462:	9e a3       	std	Y+38, r25	; 0x26
    8464:	91 e0       	ldi	r25, 0x01	; 1
    8466:	9f a3       	std	Y+39, r25	; 0x27
    8468:	8e a1       	ldd	r24, Y+38	; 0x26
    846a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    846c:	89 17       	cp	r24, r25
    846e:	08 f0       	brcs	.+2      	; 0x8472 <distance_rb+0x192>
    8470:	1f a2       	std	Y+39, r1	; 0x27
    8472:	8d a1       	ldd	r24, Y+37	; 0x25
    8474:	9f a1       	ldd	r25, Y+39	; 0x27
    8476:	89 2b       	or	r24, r25
    8478:	8d a3       	std	Y+37, r24	; 0x25
    847a:	8e a1       	ldd	r24, Y+38	; 0x26
    847c:	8b 8f       	std	Y+27, r24	; 0x1b
    847e:	9c 89       	ldd	r25, Y+20	; 0x14
    8480:	8c 85       	ldd	r24, Y+12	; 0x0c
    8482:	98 0f       	add	r25, r24
    8484:	9c 8f       	std	Y+28, r25	; 0x1c
    8486:	91 e0       	ldi	r25, 0x01	; 1
    8488:	98 a7       	std	Y+40, r25	; 0x28
    848a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    848c:	9c 89       	ldd	r25, Y+20	; 0x14
    848e:	89 17       	cp	r24, r25
    8490:	08 f0       	brcs	.+2      	; 0x8494 <distance_rb+0x1b4>
    8492:	18 a6       	std	Y+40, r1	; 0x28
    8494:	8d a1       	ldd	r24, Y+37	; 0x25
    8496:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8498:	89 0f       	add	r24, r25
    849a:	89 a7       	std	Y+41, r24	; 0x29
    849c:	81 e0       	ldi	r24, 0x01	; 1
    849e:	8a a7       	std	Y+42, r24	; 0x2a
    84a0:	99 a5       	ldd	r25, Y+41	; 0x29
    84a2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    84a4:	98 17       	cp	r25, r24
    84a6:	08 f0       	brcs	.+2      	; 0x84aa <distance_rb+0x1ca>
    84a8:	1a a6       	std	Y+42, r1	; 0x2a
    84aa:	98 a5       	ldd	r25, Y+40	; 0x28
    84ac:	8a a5       	ldd	r24, Y+42	; 0x2a
    84ae:	98 2b       	or	r25, r24
    84b0:	98 a7       	std	Y+40, r25	; 0x28
    84b2:	99 a5       	ldd	r25, Y+41	; 0x29
    84b4:	9c 8f       	std	Y+28, r25	; 0x1c
    84b6:	8d 89       	ldd	r24, Y+21	; 0x15
    84b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    84ba:	89 0f       	add	r24, r25
    84bc:	8d 8f       	std	Y+29, r24	; 0x1d
    84be:	81 e0       	ldi	r24, 0x01	; 1
    84c0:	8b a7       	std	Y+43, r24	; 0x2b
    84c2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    84c4:	8d 89       	ldd	r24, Y+21	; 0x15
    84c6:	98 17       	cp	r25, r24
    84c8:	08 f0       	brcs	.+2      	; 0x84cc <distance_rb+0x1ec>
    84ca:	1b a6       	std	Y+43, r1	; 0x2b
    84cc:	98 a5       	ldd	r25, Y+40	; 0x28
    84ce:	8d 8d       	ldd	r24, Y+29	; 0x1d
    84d0:	98 0f       	add	r25, r24
    84d2:	9c a7       	std	Y+44, r25	; 0x2c
    84d4:	91 e0       	ldi	r25, 0x01	; 1
    84d6:	9d a7       	std	Y+45, r25	; 0x2d
    84d8:	8c a5       	ldd	r24, Y+44	; 0x2c
    84da:	9d 8d       	ldd	r25, Y+29	; 0x1d
    84dc:	89 17       	cp	r24, r25
    84de:	08 f0       	brcs	.+2      	; 0x84e2 <distance_rb+0x202>
    84e0:	1d a6       	std	Y+45, r1	; 0x2d
    84e2:	8b a5       	ldd	r24, Y+43	; 0x2b
    84e4:	9d a5       	ldd	r25, Y+45	; 0x2d
    84e6:	89 2b       	or	r24, r25
    84e8:	8b a7       	std	Y+43, r24	; 0x2b
    84ea:	8c a5       	ldd	r24, Y+44	; 0x2c
    84ec:	8d 8f       	std	Y+29, r24	; 0x1d
    84ee:	9e 89       	ldd	r25, Y+22	; 0x16
    84f0:	8e 85       	ldd	r24, Y+14	; 0x0e
    84f2:	98 0f       	add	r25, r24
    84f4:	9e 8f       	std	Y+30, r25	; 0x1e
    84f6:	91 e0       	ldi	r25, 0x01	; 1
    84f8:	9e a7       	std	Y+46, r25	; 0x2e
    84fa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    84fc:	9e 89       	ldd	r25, Y+22	; 0x16
    84fe:	89 17       	cp	r24, r25
    8500:	08 f0       	brcs	.+2      	; 0x8504 <distance_rb+0x224>
    8502:	1e a6       	std	Y+46, r1	; 0x2e
    8504:	8b a5       	ldd	r24, Y+43	; 0x2b
    8506:	9e 8d       	ldd	r25, Y+30	; 0x1e
    8508:	89 0f       	add	r24, r25
    850a:	8f a7       	std	Y+47, r24	; 0x2f
    850c:	81 e0       	ldi	r24, 0x01	; 1
    850e:	88 ab       	std	Y+48, r24	; 0x30
    8510:	9f a5       	ldd	r25, Y+47	; 0x2f
    8512:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8514:	98 17       	cp	r25, r24
    8516:	08 f0       	brcs	.+2      	; 0x851a <distance_rb+0x23a>
    8518:	18 aa       	std	Y+48, r1	; 0x30
    851a:	9e a5       	ldd	r25, Y+46	; 0x2e
    851c:	88 a9       	ldd	r24, Y+48	; 0x30
    851e:	98 2b       	or	r25, r24
    8520:	9e a7       	std	Y+46, r25	; 0x2e
    8522:	9f a5       	ldd	r25, Y+47	; 0x2f
    8524:	9e 8f       	std	Y+30, r25	; 0x1e
    8526:	8f 89       	ldd	r24, Y+23	; 0x17
    8528:	9f 85       	ldd	r25, Y+15	; 0x0f
    852a:	89 0f       	add	r24, r25
    852c:	8f 8f       	std	Y+31, r24	; 0x1f
    852e:	81 e0       	ldi	r24, 0x01	; 1
    8530:	89 ab       	std	Y+49, r24	; 0x31
    8532:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8534:	8f 89       	ldd	r24, Y+23	; 0x17
    8536:	98 17       	cp	r25, r24
    8538:	08 f0       	brcs	.+2      	; 0x853c <distance_rb+0x25c>
    853a:	19 aa       	std	Y+49, r1	; 0x31
    853c:	9e a5       	ldd	r25, Y+46	; 0x2e
    853e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    8540:	98 0f       	add	r25, r24
    8542:	9a ab       	std	Y+50, r25	; 0x32
    8544:	91 e0       	ldi	r25, 0x01	; 1
    8546:	9b ab       	std	Y+51, r25	; 0x33
    8548:	8a a9       	ldd	r24, Y+50	; 0x32
    854a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    854c:	89 17       	cp	r24, r25
    854e:	08 f0       	brcs	.+2      	; 0x8552 <distance_rb+0x272>
    8550:	1b aa       	std	Y+51, r1	; 0x33
    8552:	89 a9       	ldd	r24, Y+49	; 0x31
    8554:	9b a9       	ldd	r25, Y+51	; 0x33
    8556:	89 2b       	or	r24, r25
    8558:	89 ab       	std	Y+49, r24	; 0x31
    855a:	8a a9       	ldd	r24, Y+50	; 0x32
    855c:	8f 8f       	std	Y+31, r24	; 0x1f
    855e:	98 8d       	ldd	r25, Y+24	; 0x18
    8560:	88 89       	ldd	r24, Y+16	; 0x10
    8562:	98 0f       	add	r25, r24
    8564:	98 a3       	std	Y+32, r25	; 0x20
    8566:	89 a9       	ldd	r24, Y+49	; 0x31
    8568:	98 a1       	ldd	r25, Y+32	; 0x20
    856a:	89 0f       	add	r24, r25
    856c:	88 a3       	std	Y+32, r24	; 0x20
    856e:	29 8d       	ldd	r18, Y+25	; 0x19
    8570:	3a 8d       	ldd	r19, Y+26	; 0x1a
    8572:	4b 8d       	ldd	r20, Y+27	; 0x1b
    8574:	5c 8d       	ldd	r21, Y+28	; 0x1c
    8576:	6d 8d       	ldd	r22, Y+29	; 0x1d
    8578:	7e 8d       	ldd	r23, Y+30	; 0x1e
    857a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    857c:	98 a1       	ldd	r25, Y+32	; 0x20
    857e:	20 93 ad 03 	sts	0x03AD, r18
    8582:	30 93 ae 03 	sts	0x03AE, r19
    8586:	40 93 af 03 	sts	0x03AF, r20
    858a:	50 93 b0 03 	sts	0x03B0, r21
    858e:	60 93 b1 03 	sts	0x03B1, r22
    8592:	70 93 b2 03 	sts	0x03B2, r23
    8596:	80 93 b3 03 	sts	0x03B3, r24
    859a:	90 93 b4 03 	sts	0x03B4, r25
length_rb=((((uint64)time_rb*13))/1000000);
    859e:	80 91 ad 03 	lds	r24, 0x03AD
    85a2:	89 83       	std	Y+1, r24	; 0x01
    85a4:	90 91 ae 03 	lds	r25, 0x03AE
    85a8:	9a 83       	std	Y+2, r25	; 0x02
    85aa:	80 91 af 03 	lds	r24, 0x03AF
    85ae:	8b 83       	std	Y+3, r24	; 0x03
    85b0:	90 91 b0 03 	lds	r25, 0x03B0
    85b4:	9c 83       	std	Y+4, r25	; 0x04
    85b6:	80 91 b1 03 	lds	r24, 0x03B1
    85ba:	8d 83       	std	Y+5, r24	; 0x05
    85bc:	90 91 b2 03 	lds	r25, 0x03B2
    85c0:	9e 83       	std	Y+6, r25	; 0x06
    85c2:	80 91 b3 03 	lds	r24, 0x03B3
    85c6:	8f 83       	std	Y+7, r24	; 0x07
    85c8:	90 91 b4 03 	lds	r25, 0x03B4
    85cc:	98 87       	std	Y+8, r25	; 0x08
    85ce:	a9 80       	ldd	r10, Y+1	; 0x01
    85d0:	ba 80       	ldd	r11, Y+2	; 0x02
    85d2:	cb 80       	ldd	r12, Y+3	; 0x03
    85d4:	dc 80       	ldd	r13, Y+4	; 0x04
    85d6:	ed 80       	ldd	r14, Y+5	; 0x05
    85d8:	fe 80       	ldd	r15, Y+6	; 0x06
    85da:	0f 81       	ldd	r16, Y+7	; 0x07
    85dc:	18 85       	ldd	r17, Y+8	; 0x08
    85de:	2a 2d       	mov	r18, r10
    85e0:	3b 2d       	mov	r19, r11
    85e2:	4c 2d       	mov	r20, r12
    85e4:	5d 2d       	mov	r21, r13
    85e6:	6e 2d       	mov	r22, r14
    85e8:	7f 2d       	mov	r23, r15
    85ea:	80 2f       	mov	r24, r16
    85ec:	91 2f       	mov	r25, r17
    85ee:	02 e0       	ldi	r16, 0x02	; 2
    85f0:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    85f4:	2c ab       	std	Y+52, r18	; 0x34
    85f6:	3d ab       	std	Y+53, r19	; 0x35
    85f8:	4e ab       	std	Y+54, r20	; 0x36
    85fa:	5f ab       	std	Y+55, r21	; 0x37
    85fc:	68 af       	std	Y+56, r22	; 0x38
    85fe:	79 af       	std	Y+57, r23	; 0x39
    8600:	8a af       	std	Y+58, r24	; 0x3a
    8602:	9b af       	std	Y+59, r25	; 0x3b
    8604:	2c a9       	ldd	r18, Y+52	; 0x34
    8606:	3d a9       	ldd	r19, Y+53	; 0x35
    8608:	4e a9       	ldd	r20, Y+54	; 0x36
    860a:	5f a9       	ldd	r21, Y+55	; 0x37
    860c:	68 ad       	ldd	r22, Y+56	; 0x38
    860e:	79 ad       	ldd	r23, Y+57	; 0x39
    8610:	8a ad       	ldd	r24, Y+58	; 0x3a
    8612:	9b ad       	ldd	r25, Y+59	; 0x3b
    8614:	02 e0       	ldi	r16, 0x02	; 2
    8616:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    861a:	2c af       	std	Y+60, r18	; 0x3c
    861c:	3d af       	std	Y+61, r19	; 0x3d
    861e:	4e af       	std	Y+62, r20	; 0x3e
    8620:	5f af       	std	Y+63, r21	; 0x3f
    8622:	21 96       	adiw	r28, 0x01	; 1
    8624:	6f af       	std	Y+63, r22	; 0x3f
    8626:	21 97       	sbiw	r28, 0x01	; 1
    8628:	22 96       	adiw	r28, 0x02	; 2
    862a:	7f af       	std	Y+63, r23	; 0x3f
    862c:	22 97       	sbiw	r28, 0x02	; 2
    862e:	23 96       	adiw	r28, 0x03	; 3
    8630:	8f af       	std	Y+63, r24	; 0x3f
    8632:	23 97       	sbiw	r28, 0x03	; 3
    8634:	24 96       	adiw	r28, 0x04	; 4
    8636:	9f af       	std	Y+63, r25	; 0x3f
    8638:	24 97       	sbiw	r28, 0x04	; 4
    863a:	8c ad       	ldd	r24, Y+60	; 0x3c
    863c:	9c a9       	ldd	r25, Y+52	; 0x34
    863e:	89 1b       	sub	r24, r25
    8640:	25 96       	adiw	r28, 0x05	; 5
    8642:	8f af       	std	Y+63, r24	; 0x3f
    8644:	25 97       	sbiw	r28, 0x05	; 5
    8646:	81 e0       	ldi	r24, 0x01	; 1
    8648:	2d 96       	adiw	r28, 0x0d	; 13
    864a:	8f af       	std	Y+63, r24	; 0x3f
    864c:	2d 97       	sbiw	r28, 0x0d	; 13
    864e:	25 96       	adiw	r28, 0x05	; 5
    8650:	9f ad       	ldd	r25, Y+63	; 0x3f
    8652:	25 97       	sbiw	r28, 0x05	; 5
    8654:	8c ad       	ldd	r24, Y+60	; 0x3c
    8656:	89 17       	cp	r24, r25
    8658:	18 f0       	brcs	.+6      	; 0x8660 <distance_rb+0x380>
    865a:	2d 96       	adiw	r28, 0x0d	; 13
    865c:	1f ae       	std	Y+63, r1	; 0x3f
    865e:	2d 97       	sbiw	r28, 0x0d	; 13
    8660:	9d ad       	ldd	r25, Y+61	; 0x3d
    8662:	8d a9       	ldd	r24, Y+53	; 0x35
    8664:	98 1b       	sub	r25, r24
    8666:	26 96       	adiw	r28, 0x06	; 6
    8668:	9f af       	std	Y+63, r25	; 0x3f
    866a:	26 97       	sbiw	r28, 0x06	; 6
    866c:	91 e0       	ldi	r25, 0x01	; 1
    866e:	2e 96       	adiw	r28, 0x0e	; 14
    8670:	9f af       	std	Y+63, r25	; 0x3f
    8672:	2e 97       	sbiw	r28, 0x0e	; 14
    8674:	26 96       	adiw	r28, 0x06	; 6
    8676:	8f ad       	ldd	r24, Y+63	; 0x3f
    8678:	26 97       	sbiw	r28, 0x06	; 6
    867a:	9d ad       	ldd	r25, Y+61	; 0x3d
    867c:	98 17       	cp	r25, r24
    867e:	18 f0       	brcs	.+6      	; 0x8686 <distance_rb+0x3a6>
    8680:	2e 96       	adiw	r28, 0x0e	; 14
    8682:	1f ae       	std	Y+63, r1	; 0x3f
    8684:	2e 97       	sbiw	r28, 0x0e	; 14
    8686:	26 96       	adiw	r28, 0x06	; 6
    8688:	8f ad       	ldd	r24, Y+63	; 0x3f
    868a:	26 97       	sbiw	r28, 0x06	; 6
    868c:	2d 96       	adiw	r28, 0x0d	; 13
    868e:	9f ad       	ldd	r25, Y+63	; 0x3f
    8690:	2d 97       	sbiw	r28, 0x0d	; 13
    8692:	89 1b       	sub	r24, r25
    8694:	2f 96       	adiw	r28, 0x0f	; 15
    8696:	8f af       	std	Y+63, r24	; 0x3f
    8698:	2f 97       	sbiw	r28, 0x0f	; 15
    869a:	81 e0       	ldi	r24, 0x01	; 1
    869c:	60 96       	adiw	r28, 0x10	; 16
    869e:	8f af       	std	Y+63, r24	; 0x3f
    86a0:	60 97       	sbiw	r28, 0x10	; 16
    86a2:	2f 96       	adiw	r28, 0x0f	; 15
    86a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    86a6:	2f 97       	sbiw	r28, 0x0f	; 15
    86a8:	26 96       	adiw	r28, 0x06	; 6
    86aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    86ac:	26 97       	sbiw	r28, 0x06	; 6
    86ae:	89 17       	cp	r24, r25
    86b0:	18 f0       	brcs	.+6      	; 0x86b8 <distance_rb+0x3d8>
    86b2:	60 96       	adiw	r28, 0x10	; 16
    86b4:	1f ae       	std	Y+63, r1	; 0x3f
    86b6:	60 97       	sbiw	r28, 0x10	; 16
    86b8:	2e 96       	adiw	r28, 0x0e	; 14
    86ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    86bc:	2e 97       	sbiw	r28, 0x0e	; 14
    86be:	60 96       	adiw	r28, 0x10	; 16
    86c0:	8f ad       	ldd	r24, Y+63	; 0x3f
    86c2:	60 97       	sbiw	r28, 0x10	; 16
    86c4:	98 2b       	or	r25, r24
    86c6:	2e 96       	adiw	r28, 0x0e	; 14
    86c8:	9f af       	std	Y+63, r25	; 0x3f
    86ca:	2e 97       	sbiw	r28, 0x0e	; 14
    86cc:	2f 96       	adiw	r28, 0x0f	; 15
    86ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    86d0:	2f 97       	sbiw	r28, 0x0f	; 15
    86d2:	26 96       	adiw	r28, 0x06	; 6
    86d4:	9f af       	std	Y+63, r25	; 0x3f
    86d6:	26 97       	sbiw	r28, 0x06	; 6
    86d8:	8e ad       	ldd	r24, Y+62	; 0x3e
    86da:	9e a9       	ldd	r25, Y+54	; 0x36
    86dc:	89 1b       	sub	r24, r25
    86de:	27 96       	adiw	r28, 0x07	; 7
    86e0:	8f af       	std	Y+63, r24	; 0x3f
    86e2:	27 97       	sbiw	r28, 0x07	; 7
    86e4:	81 e0       	ldi	r24, 0x01	; 1
    86e6:	61 96       	adiw	r28, 0x11	; 17
    86e8:	8f af       	std	Y+63, r24	; 0x3f
    86ea:	61 97       	sbiw	r28, 0x11	; 17
    86ec:	27 96       	adiw	r28, 0x07	; 7
    86ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    86f0:	27 97       	sbiw	r28, 0x07	; 7
    86f2:	8e ad       	ldd	r24, Y+62	; 0x3e
    86f4:	89 17       	cp	r24, r25
    86f6:	18 f0       	brcs	.+6      	; 0x86fe <distance_rb+0x41e>
    86f8:	61 96       	adiw	r28, 0x11	; 17
    86fa:	1f ae       	std	Y+63, r1	; 0x3f
    86fc:	61 97       	sbiw	r28, 0x11	; 17
    86fe:	27 96       	adiw	r28, 0x07	; 7
    8700:	9f ad       	ldd	r25, Y+63	; 0x3f
    8702:	27 97       	sbiw	r28, 0x07	; 7
    8704:	2e 96       	adiw	r28, 0x0e	; 14
    8706:	8f ad       	ldd	r24, Y+63	; 0x3f
    8708:	2e 97       	sbiw	r28, 0x0e	; 14
    870a:	98 1b       	sub	r25, r24
    870c:	62 96       	adiw	r28, 0x12	; 18
    870e:	9f af       	std	Y+63, r25	; 0x3f
    8710:	62 97       	sbiw	r28, 0x12	; 18
    8712:	91 e0       	ldi	r25, 0x01	; 1
    8714:	63 96       	adiw	r28, 0x13	; 19
    8716:	9f af       	std	Y+63, r25	; 0x3f
    8718:	63 97       	sbiw	r28, 0x13	; 19
    871a:	62 96       	adiw	r28, 0x12	; 18
    871c:	8f ad       	ldd	r24, Y+63	; 0x3f
    871e:	62 97       	sbiw	r28, 0x12	; 18
    8720:	27 96       	adiw	r28, 0x07	; 7
    8722:	9f ad       	ldd	r25, Y+63	; 0x3f
    8724:	27 97       	sbiw	r28, 0x07	; 7
    8726:	98 17       	cp	r25, r24
    8728:	18 f0       	brcs	.+6      	; 0x8730 <distance_rb+0x450>
    872a:	63 96       	adiw	r28, 0x13	; 19
    872c:	1f ae       	std	Y+63, r1	; 0x3f
    872e:	63 97       	sbiw	r28, 0x13	; 19
    8730:	61 96       	adiw	r28, 0x11	; 17
    8732:	8f ad       	ldd	r24, Y+63	; 0x3f
    8734:	61 97       	sbiw	r28, 0x11	; 17
    8736:	63 96       	adiw	r28, 0x13	; 19
    8738:	9f ad       	ldd	r25, Y+63	; 0x3f
    873a:	63 97       	sbiw	r28, 0x13	; 19
    873c:	89 2b       	or	r24, r25
    873e:	61 96       	adiw	r28, 0x11	; 17
    8740:	8f af       	std	Y+63, r24	; 0x3f
    8742:	61 97       	sbiw	r28, 0x11	; 17
    8744:	62 96       	adiw	r28, 0x12	; 18
    8746:	8f ad       	ldd	r24, Y+63	; 0x3f
    8748:	62 97       	sbiw	r28, 0x12	; 18
    874a:	27 96       	adiw	r28, 0x07	; 7
    874c:	8f af       	std	Y+63, r24	; 0x3f
    874e:	27 97       	sbiw	r28, 0x07	; 7
    8750:	9f ad       	ldd	r25, Y+63	; 0x3f
    8752:	8f a9       	ldd	r24, Y+55	; 0x37
    8754:	98 1b       	sub	r25, r24
    8756:	28 96       	adiw	r28, 0x08	; 8
    8758:	9f af       	std	Y+63, r25	; 0x3f
    875a:	28 97       	sbiw	r28, 0x08	; 8
    875c:	91 e0       	ldi	r25, 0x01	; 1
    875e:	64 96       	adiw	r28, 0x14	; 20
    8760:	9f af       	std	Y+63, r25	; 0x3f
    8762:	64 97       	sbiw	r28, 0x14	; 20
    8764:	28 96       	adiw	r28, 0x08	; 8
    8766:	8f ad       	ldd	r24, Y+63	; 0x3f
    8768:	28 97       	sbiw	r28, 0x08	; 8
    876a:	9f ad       	ldd	r25, Y+63	; 0x3f
    876c:	98 17       	cp	r25, r24
    876e:	18 f0       	brcs	.+6      	; 0x8776 <distance_rb+0x496>
    8770:	64 96       	adiw	r28, 0x14	; 20
    8772:	1f ae       	std	Y+63, r1	; 0x3f
    8774:	64 97       	sbiw	r28, 0x14	; 20
    8776:	28 96       	adiw	r28, 0x08	; 8
    8778:	8f ad       	ldd	r24, Y+63	; 0x3f
    877a:	28 97       	sbiw	r28, 0x08	; 8
    877c:	61 96       	adiw	r28, 0x11	; 17
    877e:	9f ad       	ldd	r25, Y+63	; 0x3f
    8780:	61 97       	sbiw	r28, 0x11	; 17
    8782:	89 1b       	sub	r24, r25
    8784:	65 96       	adiw	r28, 0x15	; 21
    8786:	8f af       	std	Y+63, r24	; 0x3f
    8788:	65 97       	sbiw	r28, 0x15	; 21
    878a:	81 e0       	ldi	r24, 0x01	; 1
    878c:	66 96       	adiw	r28, 0x16	; 22
    878e:	8f af       	std	Y+63, r24	; 0x3f
    8790:	66 97       	sbiw	r28, 0x16	; 22
    8792:	65 96       	adiw	r28, 0x15	; 21
    8794:	9f ad       	ldd	r25, Y+63	; 0x3f
    8796:	65 97       	sbiw	r28, 0x15	; 21
    8798:	28 96       	adiw	r28, 0x08	; 8
    879a:	8f ad       	ldd	r24, Y+63	; 0x3f
    879c:	28 97       	sbiw	r28, 0x08	; 8
    879e:	89 17       	cp	r24, r25
    87a0:	18 f0       	brcs	.+6      	; 0x87a8 <distance_rb+0x4c8>
    87a2:	66 96       	adiw	r28, 0x16	; 22
    87a4:	1f ae       	std	Y+63, r1	; 0x3f
    87a6:	66 97       	sbiw	r28, 0x16	; 22
    87a8:	64 96       	adiw	r28, 0x14	; 20
    87aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    87ac:	64 97       	sbiw	r28, 0x14	; 20
    87ae:	66 96       	adiw	r28, 0x16	; 22
    87b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    87b2:	66 97       	sbiw	r28, 0x16	; 22
    87b4:	98 2b       	or	r25, r24
    87b6:	64 96       	adiw	r28, 0x14	; 20
    87b8:	9f af       	std	Y+63, r25	; 0x3f
    87ba:	64 97       	sbiw	r28, 0x14	; 20
    87bc:	65 96       	adiw	r28, 0x15	; 21
    87be:	9f ad       	ldd	r25, Y+63	; 0x3f
    87c0:	65 97       	sbiw	r28, 0x15	; 21
    87c2:	28 96       	adiw	r28, 0x08	; 8
    87c4:	9f af       	std	Y+63, r25	; 0x3f
    87c6:	28 97       	sbiw	r28, 0x08	; 8
    87c8:	21 96       	adiw	r28, 0x01	; 1
    87ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    87cc:	21 97       	sbiw	r28, 0x01	; 1
    87ce:	98 ad       	ldd	r25, Y+56	; 0x38
    87d0:	89 1b       	sub	r24, r25
    87d2:	29 96       	adiw	r28, 0x09	; 9
    87d4:	8f af       	std	Y+63, r24	; 0x3f
    87d6:	29 97       	sbiw	r28, 0x09	; 9
    87d8:	81 e0       	ldi	r24, 0x01	; 1
    87da:	67 96       	adiw	r28, 0x17	; 23
    87dc:	8f af       	std	Y+63, r24	; 0x3f
    87de:	67 97       	sbiw	r28, 0x17	; 23
    87e0:	29 96       	adiw	r28, 0x09	; 9
    87e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    87e4:	29 97       	sbiw	r28, 0x09	; 9
    87e6:	21 96       	adiw	r28, 0x01	; 1
    87e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    87ea:	21 97       	sbiw	r28, 0x01	; 1
    87ec:	89 17       	cp	r24, r25
    87ee:	18 f0       	brcs	.+6      	; 0x87f6 <distance_rb+0x516>
    87f0:	67 96       	adiw	r28, 0x17	; 23
    87f2:	1f ae       	std	Y+63, r1	; 0x3f
    87f4:	67 97       	sbiw	r28, 0x17	; 23
    87f6:	29 96       	adiw	r28, 0x09	; 9
    87f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    87fa:	29 97       	sbiw	r28, 0x09	; 9
    87fc:	64 96       	adiw	r28, 0x14	; 20
    87fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    8800:	64 97       	sbiw	r28, 0x14	; 20
    8802:	98 1b       	sub	r25, r24
    8804:	68 96       	adiw	r28, 0x18	; 24
    8806:	9f af       	std	Y+63, r25	; 0x3f
    8808:	68 97       	sbiw	r28, 0x18	; 24
    880a:	91 e0       	ldi	r25, 0x01	; 1
    880c:	69 96       	adiw	r28, 0x19	; 25
    880e:	9f af       	std	Y+63, r25	; 0x3f
    8810:	69 97       	sbiw	r28, 0x19	; 25
    8812:	68 96       	adiw	r28, 0x18	; 24
    8814:	8f ad       	ldd	r24, Y+63	; 0x3f
    8816:	68 97       	sbiw	r28, 0x18	; 24
    8818:	29 96       	adiw	r28, 0x09	; 9
    881a:	9f ad       	ldd	r25, Y+63	; 0x3f
    881c:	29 97       	sbiw	r28, 0x09	; 9
    881e:	98 17       	cp	r25, r24
    8820:	18 f0       	brcs	.+6      	; 0x8828 <distance_rb+0x548>
    8822:	69 96       	adiw	r28, 0x19	; 25
    8824:	1f ae       	std	Y+63, r1	; 0x3f
    8826:	69 97       	sbiw	r28, 0x19	; 25
    8828:	67 96       	adiw	r28, 0x17	; 23
    882a:	8f ad       	ldd	r24, Y+63	; 0x3f
    882c:	67 97       	sbiw	r28, 0x17	; 23
    882e:	69 96       	adiw	r28, 0x19	; 25
    8830:	9f ad       	ldd	r25, Y+63	; 0x3f
    8832:	69 97       	sbiw	r28, 0x19	; 25
    8834:	89 2b       	or	r24, r25
    8836:	67 96       	adiw	r28, 0x17	; 23
    8838:	8f af       	std	Y+63, r24	; 0x3f
    883a:	67 97       	sbiw	r28, 0x17	; 23
    883c:	68 96       	adiw	r28, 0x18	; 24
    883e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8840:	68 97       	sbiw	r28, 0x18	; 24
    8842:	29 96       	adiw	r28, 0x09	; 9
    8844:	8f af       	std	Y+63, r24	; 0x3f
    8846:	29 97       	sbiw	r28, 0x09	; 9
    8848:	22 96       	adiw	r28, 0x02	; 2
    884a:	9f ad       	ldd	r25, Y+63	; 0x3f
    884c:	22 97       	sbiw	r28, 0x02	; 2
    884e:	89 ad       	ldd	r24, Y+57	; 0x39
    8850:	98 1b       	sub	r25, r24
    8852:	2a 96       	adiw	r28, 0x0a	; 10
    8854:	9f af       	std	Y+63, r25	; 0x3f
    8856:	2a 97       	sbiw	r28, 0x0a	; 10
    8858:	91 e0       	ldi	r25, 0x01	; 1
    885a:	6a 96       	adiw	r28, 0x1a	; 26
    885c:	9f af       	std	Y+63, r25	; 0x3f
    885e:	6a 97       	sbiw	r28, 0x1a	; 26
    8860:	2a 96       	adiw	r28, 0x0a	; 10
    8862:	8f ad       	ldd	r24, Y+63	; 0x3f
    8864:	2a 97       	sbiw	r28, 0x0a	; 10
    8866:	22 96       	adiw	r28, 0x02	; 2
    8868:	9f ad       	ldd	r25, Y+63	; 0x3f
    886a:	22 97       	sbiw	r28, 0x02	; 2
    886c:	98 17       	cp	r25, r24
    886e:	18 f0       	brcs	.+6      	; 0x8876 <distance_rb+0x596>
    8870:	6a 96       	adiw	r28, 0x1a	; 26
    8872:	1f ae       	std	Y+63, r1	; 0x3f
    8874:	6a 97       	sbiw	r28, 0x1a	; 26
    8876:	2a 96       	adiw	r28, 0x0a	; 10
    8878:	8f ad       	ldd	r24, Y+63	; 0x3f
    887a:	2a 97       	sbiw	r28, 0x0a	; 10
    887c:	67 96       	adiw	r28, 0x17	; 23
    887e:	9f ad       	ldd	r25, Y+63	; 0x3f
    8880:	67 97       	sbiw	r28, 0x17	; 23
    8882:	89 1b       	sub	r24, r25
    8884:	6b 96       	adiw	r28, 0x1b	; 27
    8886:	8f af       	std	Y+63, r24	; 0x3f
    8888:	6b 97       	sbiw	r28, 0x1b	; 27
    888a:	81 e0       	ldi	r24, 0x01	; 1
    888c:	6c 96       	adiw	r28, 0x1c	; 28
    888e:	8f af       	std	Y+63, r24	; 0x3f
    8890:	6c 97       	sbiw	r28, 0x1c	; 28
    8892:	6b 96       	adiw	r28, 0x1b	; 27
    8894:	9f ad       	ldd	r25, Y+63	; 0x3f
    8896:	6b 97       	sbiw	r28, 0x1b	; 27
    8898:	2a 96       	adiw	r28, 0x0a	; 10
    889a:	8f ad       	ldd	r24, Y+63	; 0x3f
    889c:	2a 97       	sbiw	r28, 0x0a	; 10
    889e:	89 17       	cp	r24, r25
    88a0:	18 f0       	brcs	.+6      	; 0x88a8 <distance_rb+0x5c8>
    88a2:	6c 96       	adiw	r28, 0x1c	; 28
    88a4:	1f ae       	std	Y+63, r1	; 0x3f
    88a6:	6c 97       	sbiw	r28, 0x1c	; 28
    88a8:	6a 96       	adiw	r28, 0x1a	; 26
    88aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    88ac:	6a 97       	sbiw	r28, 0x1a	; 26
    88ae:	6c 96       	adiw	r28, 0x1c	; 28
    88b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    88b2:	6c 97       	sbiw	r28, 0x1c	; 28
    88b4:	98 2b       	or	r25, r24
    88b6:	6a 96       	adiw	r28, 0x1a	; 26
    88b8:	9f af       	std	Y+63, r25	; 0x3f
    88ba:	6a 97       	sbiw	r28, 0x1a	; 26
    88bc:	6b 96       	adiw	r28, 0x1b	; 27
    88be:	9f ad       	ldd	r25, Y+63	; 0x3f
    88c0:	6b 97       	sbiw	r28, 0x1b	; 27
    88c2:	2a 96       	adiw	r28, 0x0a	; 10
    88c4:	9f af       	std	Y+63, r25	; 0x3f
    88c6:	2a 97       	sbiw	r28, 0x0a	; 10
    88c8:	23 96       	adiw	r28, 0x03	; 3
    88ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    88cc:	23 97       	sbiw	r28, 0x03	; 3
    88ce:	9a ad       	ldd	r25, Y+58	; 0x3a
    88d0:	89 1b       	sub	r24, r25
    88d2:	2b 96       	adiw	r28, 0x0b	; 11
    88d4:	8f af       	std	Y+63, r24	; 0x3f
    88d6:	2b 97       	sbiw	r28, 0x0b	; 11
    88d8:	81 e0       	ldi	r24, 0x01	; 1
    88da:	6d 96       	adiw	r28, 0x1d	; 29
    88dc:	8f af       	std	Y+63, r24	; 0x3f
    88de:	6d 97       	sbiw	r28, 0x1d	; 29
    88e0:	2b 96       	adiw	r28, 0x0b	; 11
    88e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    88e4:	2b 97       	sbiw	r28, 0x0b	; 11
    88e6:	23 96       	adiw	r28, 0x03	; 3
    88e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    88ea:	23 97       	sbiw	r28, 0x03	; 3
    88ec:	89 17       	cp	r24, r25
    88ee:	18 f0       	brcs	.+6      	; 0x88f6 <distance_rb+0x616>
    88f0:	6d 96       	adiw	r28, 0x1d	; 29
    88f2:	1f ae       	std	Y+63, r1	; 0x3f
    88f4:	6d 97       	sbiw	r28, 0x1d	; 29
    88f6:	2b 96       	adiw	r28, 0x0b	; 11
    88f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    88fa:	2b 97       	sbiw	r28, 0x0b	; 11
    88fc:	6a 96       	adiw	r28, 0x1a	; 26
    88fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    8900:	6a 97       	sbiw	r28, 0x1a	; 26
    8902:	98 1b       	sub	r25, r24
    8904:	6e 96       	adiw	r28, 0x1e	; 30
    8906:	9f af       	std	Y+63, r25	; 0x3f
    8908:	6e 97       	sbiw	r28, 0x1e	; 30
    890a:	91 e0       	ldi	r25, 0x01	; 1
    890c:	6f 96       	adiw	r28, 0x1f	; 31
    890e:	9f af       	std	Y+63, r25	; 0x3f
    8910:	6f 97       	sbiw	r28, 0x1f	; 31
    8912:	6e 96       	adiw	r28, 0x1e	; 30
    8914:	8f ad       	ldd	r24, Y+63	; 0x3f
    8916:	6e 97       	sbiw	r28, 0x1e	; 30
    8918:	2b 96       	adiw	r28, 0x0b	; 11
    891a:	9f ad       	ldd	r25, Y+63	; 0x3f
    891c:	2b 97       	sbiw	r28, 0x0b	; 11
    891e:	98 17       	cp	r25, r24
    8920:	18 f0       	brcs	.+6      	; 0x8928 <distance_rb+0x648>
    8922:	6f 96       	adiw	r28, 0x1f	; 31
    8924:	1f ae       	std	Y+63, r1	; 0x3f
    8926:	6f 97       	sbiw	r28, 0x1f	; 31
    8928:	6d 96       	adiw	r28, 0x1d	; 29
    892a:	8f ad       	ldd	r24, Y+63	; 0x3f
    892c:	6d 97       	sbiw	r28, 0x1d	; 29
    892e:	6f 96       	adiw	r28, 0x1f	; 31
    8930:	9f ad       	ldd	r25, Y+63	; 0x3f
    8932:	6f 97       	sbiw	r28, 0x1f	; 31
    8934:	89 2b       	or	r24, r25
    8936:	6d 96       	adiw	r28, 0x1d	; 29
    8938:	8f af       	std	Y+63, r24	; 0x3f
    893a:	6d 97       	sbiw	r28, 0x1d	; 29
    893c:	6e 96       	adiw	r28, 0x1e	; 30
    893e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8940:	6e 97       	sbiw	r28, 0x1e	; 30
    8942:	2b 96       	adiw	r28, 0x0b	; 11
    8944:	8f af       	std	Y+63, r24	; 0x3f
    8946:	2b 97       	sbiw	r28, 0x0b	; 11
    8948:	24 96       	adiw	r28, 0x04	; 4
    894a:	9f ad       	ldd	r25, Y+63	; 0x3f
    894c:	24 97       	sbiw	r28, 0x04	; 4
    894e:	8b ad       	ldd	r24, Y+59	; 0x3b
    8950:	98 1b       	sub	r25, r24
    8952:	2c 96       	adiw	r28, 0x0c	; 12
    8954:	9f af       	std	Y+63, r25	; 0x3f
    8956:	2c 97       	sbiw	r28, 0x0c	; 12
    8958:	2c 96       	adiw	r28, 0x0c	; 12
    895a:	8f ad       	ldd	r24, Y+63	; 0x3f
    895c:	2c 97       	sbiw	r28, 0x0c	; 12
    895e:	6d 96       	adiw	r28, 0x1d	; 29
    8960:	9f ad       	ldd	r25, Y+63	; 0x3f
    8962:	6d 97       	sbiw	r28, 0x1d	; 29
    8964:	89 1b       	sub	r24, r25
    8966:	2c 96       	adiw	r28, 0x0c	; 12
    8968:	8f af       	std	Y+63, r24	; 0x3f
    896a:	2c 97       	sbiw	r28, 0x0c	; 12
    896c:	25 96       	adiw	r28, 0x05	; 5
    896e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8970:	25 97       	sbiw	r28, 0x05	; 5
    8972:	8c af       	std	Y+60, r24	; 0x3c
    8974:	26 96       	adiw	r28, 0x06	; 6
    8976:	9f ad       	ldd	r25, Y+63	; 0x3f
    8978:	26 97       	sbiw	r28, 0x06	; 6
    897a:	9d af       	std	Y+61, r25	; 0x3d
    897c:	27 96       	adiw	r28, 0x07	; 7
    897e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8980:	27 97       	sbiw	r28, 0x07	; 7
    8982:	8e af       	std	Y+62, r24	; 0x3e
    8984:	28 96       	adiw	r28, 0x08	; 8
    8986:	9f ad       	ldd	r25, Y+63	; 0x3f
    8988:	28 97       	sbiw	r28, 0x08	; 8
    898a:	9f af       	std	Y+63, r25	; 0x3f
    898c:	29 96       	adiw	r28, 0x09	; 9
    898e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8990:	29 97       	sbiw	r28, 0x09	; 9
    8992:	21 96       	adiw	r28, 0x01	; 1
    8994:	8f af       	std	Y+63, r24	; 0x3f
    8996:	21 97       	sbiw	r28, 0x01	; 1
    8998:	2a 96       	adiw	r28, 0x0a	; 10
    899a:	9f ad       	ldd	r25, Y+63	; 0x3f
    899c:	2a 97       	sbiw	r28, 0x0a	; 10
    899e:	22 96       	adiw	r28, 0x02	; 2
    89a0:	9f af       	std	Y+63, r25	; 0x3f
    89a2:	22 97       	sbiw	r28, 0x02	; 2
    89a4:	2b 96       	adiw	r28, 0x0b	; 11
    89a6:	8f ad       	ldd	r24, Y+63	; 0x3f
    89a8:	2b 97       	sbiw	r28, 0x0b	; 11
    89aa:	23 96       	adiw	r28, 0x03	; 3
    89ac:	8f af       	std	Y+63, r24	; 0x3f
    89ae:	23 97       	sbiw	r28, 0x03	; 3
    89b0:	2c 96       	adiw	r28, 0x0c	; 12
    89b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    89b4:	2c 97       	sbiw	r28, 0x0c	; 12
    89b6:	24 96       	adiw	r28, 0x04	; 4
    89b8:	9f af       	std	Y+63, r25	; 0x3f
    89ba:	24 97       	sbiw	r28, 0x04	; 4
    89bc:	8c ad       	ldd	r24, Y+60	; 0x3c
    89be:	99 81       	ldd	r25, Y+1	; 0x01
    89c0:	89 0f       	add	r24, r25
    89c2:	a0 96       	adiw	r28, 0x20	; 32
    89c4:	8f af       	std	Y+63, r24	; 0x3f
    89c6:	a0 97       	sbiw	r28, 0x20	; 32
    89c8:	81 e0       	ldi	r24, 0x01	; 1
    89ca:	a8 96       	adiw	r28, 0x28	; 40
    89cc:	8f af       	std	Y+63, r24	; 0x3f
    89ce:	a8 97       	sbiw	r28, 0x28	; 40
    89d0:	a0 96       	adiw	r28, 0x20	; 32
    89d2:	9f ad       	ldd	r25, Y+63	; 0x3f
    89d4:	a0 97       	sbiw	r28, 0x20	; 32
    89d6:	8c ad       	ldd	r24, Y+60	; 0x3c
    89d8:	98 17       	cp	r25, r24
    89da:	18 f0       	brcs	.+6      	; 0x89e2 <distance_rb+0x702>
    89dc:	a8 96       	adiw	r28, 0x28	; 40
    89de:	1f ae       	std	Y+63, r1	; 0x3f
    89e0:	a8 97       	sbiw	r28, 0x28	; 40
    89e2:	9d ad       	ldd	r25, Y+61	; 0x3d
    89e4:	8a 81       	ldd	r24, Y+2	; 0x02
    89e6:	98 0f       	add	r25, r24
    89e8:	a1 96       	adiw	r28, 0x21	; 33
    89ea:	9f af       	std	Y+63, r25	; 0x3f
    89ec:	a1 97       	sbiw	r28, 0x21	; 33
    89ee:	91 e0       	ldi	r25, 0x01	; 1
    89f0:	a9 96       	adiw	r28, 0x29	; 41
    89f2:	9f af       	std	Y+63, r25	; 0x3f
    89f4:	a9 97       	sbiw	r28, 0x29	; 41
    89f6:	a1 96       	adiw	r28, 0x21	; 33
    89f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    89fa:	a1 97       	sbiw	r28, 0x21	; 33
    89fc:	9d ad       	ldd	r25, Y+61	; 0x3d
    89fe:	89 17       	cp	r24, r25
    8a00:	18 f0       	brcs	.+6      	; 0x8a08 <distance_rb+0x728>
    8a02:	a9 96       	adiw	r28, 0x29	; 41
    8a04:	1f ae       	std	Y+63, r1	; 0x3f
    8a06:	a9 97       	sbiw	r28, 0x29	; 41
    8a08:	a8 96       	adiw	r28, 0x28	; 40
    8a0a:	8f ad       	ldd	r24, Y+63	; 0x3f
    8a0c:	a8 97       	sbiw	r28, 0x28	; 40
    8a0e:	a1 96       	adiw	r28, 0x21	; 33
    8a10:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a12:	a1 97       	sbiw	r28, 0x21	; 33
    8a14:	89 0f       	add	r24, r25
    8a16:	aa 96       	adiw	r28, 0x2a	; 42
    8a18:	8f af       	std	Y+63, r24	; 0x3f
    8a1a:	aa 97       	sbiw	r28, 0x2a	; 42
    8a1c:	81 e0       	ldi	r24, 0x01	; 1
    8a1e:	ab 96       	adiw	r28, 0x2b	; 43
    8a20:	8f af       	std	Y+63, r24	; 0x3f
    8a22:	ab 97       	sbiw	r28, 0x2b	; 43
    8a24:	aa 96       	adiw	r28, 0x2a	; 42
    8a26:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a28:	aa 97       	sbiw	r28, 0x2a	; 42
    8a2a:	a1 96       	adiw	r28, 0x21	; 33
    8a2c:	8f ad       	ldd	r24, Y+63	; 0x3f
    8a2e:	a1 97       	sbiw	r28, 0x21	; 33
    8a30:	98 17       	cp	r25, r24
    8a32:	18 f0       	brcs	.+6      	; 0x8a3a <distance_rb+0x75a>
    8a34:	ab 96       	adiw	r28, 0x2b	; 43
    8a36:	1f ae       	std	Y+63, r1	; 0x3f
    8a38:	ab 97       	sbiw	r28, 0x2b	; 43
    8a3a:	a9 96       	adiw	r28, 0x29	; 41
    8a3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a3e:	a9 97       	sbiw	r28, 0x29	; 41
    8a40:	ab 96       	adiw	r28, 0x2b	; 43
    8a42:	8f ad       	ldd	r24, Y+63	; 0x3f
    8a44:	ab 97       	sbiw	r28, 0x2b	; 43
    8a46:	98 2b       	or	r25, r24
    8a48:	a9 96       	adiw	r28, 0x29	; 41
    8a4a:	9f af       	std	Y+63, r25	; 0x3f
    8a4c:	a9 97       	sbiw	r28, 0x29	; 41
    8a4e:	aa 96       	adiw	r28, 0x2a	; 42
    8a50:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a52:	aa 97       	sbiw	r28, 0x2a	; 42
    8a54:	a1 96       	adiw	r28, 0x21	; 33
    8a56:	9f af       	std	Y+63, r25	; 0x3f
    8a58:	a1 97       	sbiw	r28, 0x21	; 33
    8a5a:	8e ad       	ldd	r24, Y+62	; 0x3e
    8a5c:	9b 81       	ldd	r25, Y+3	; 0x03
    8a5e:	89 0f       	add	r24, r25
    8a60:	a2 96       	adiw	r28, 0x22	; 34
    8a62:	8f af       	std	Y+63, r24	; 0x3f
    8a64:	a2 97       	sbiw	r28, 0x22	; 34
    8a66:	81 e0       	ldi	r24, 0x01	; 1
    8a68:	ac 96       	adiw	r28, 0x2c	; 44
    8a6a:	8f af       	std	Y+63, r24	; 0x3f
    8a6c:	ac 97       	sbiw	r28, 0x2c	; 44
    8a6e:	a2 96       	adiw	r28, 0x22	; 34
    8a70:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a72:	a2 97       	sbiw	r28, 0x22	; 34
    8a74:	8e ad       	ldd	r24, Y+62	; 0x3e
    8a76:	98 17       	cp	r25, r24
    8a78:	18 f0       	brcs	.+6      	; 0x8a80 <distance_rb+0x7a0>
    8a7a:	ac 96       	adiw	r28, 0x2c	; 44
    8a7c:	1f ae       	std	Y+63, r1	; 0x3f
    8a7e:	ac 97       	sbiw	r28, 0x2c	; 44
    8a80:	a9 96       	adiw	r28, 0x29	; 41
    8a82:	9f ad       	ldd	r25, Y+63	; 0x3f
    8a84:	a9 97       	sbiw	r28, 0x29	; 41
    8a86:	a2 96       	adiw	r28, 0x22	; 34
    8a88:	8f ad       	ldd	r24, Y+63	; 0x3f
    8a8a:	a2 97       	sbiw	r28, 0x22	; 34
    8a8c:	98 0f       	add	r25, r24
    8a8e:	ad 96       	adiw	r28, 0x2d	; 45
    8a90:	9f af       	std	Y+63, r25	; 0x3f
    8a92:	ad 97       	sbiw	r28, 0x2d	; 45
    8a94:	91 e0       	ldi	r25, 0x01	; 1
    8a96:	ae 96       	adiw	r28, 0x2e	; 46
    8a98:	9f af       	std	Y+63, r25	; 0x3f
    8a9a:	ae 97       	sbiw	r28, 0x2e	; 46
    8a9c:	ad 96       	adiw	r28, 0x2d	; 45
    8a9e:	8f ad       	ldd	r24, Y+63	; 0x3f
    8aa0:	ad 97       	sbiw	r28, 0x2d	; 45
    8aa2:	a2 96       	adiw	r28, 0x22	; 34
    8aa4:	9f ad       	ldd	r25, Y+63	; 0x3f
    8aa6:	a2 97       	sbiw	r28, 0x22	; 34
    8aa8:	89 17       	cp	r24, r25
    8aaa:	18 f0       	brcs	.+6      	; 0x8ab2 <distance_rb+0x7d2>
    8aac:	ae 96       	adiw	r28, 0x2e	; 46
    8aae:	1f ae       	std	Y+63, r1	; 0x3f
    8ab0:	ae 97       	sbiw	r28, 0x2e	; 46
    8ab2:	ac 96       	adiw	r28, 0x2c	; 44
    8ab4:	8f ad       	ldd	r24, Y+63	; 0x3f
    8ab6:	ac 97       	sbiw	r28, 0x2c	; 44
    8ab8:	ae 96       	adiw	r28, 0x2e	; 46
    8aba:	9f ad       	ldd	r25, Y+63	; 0x3f
    8abc:	ae 97       	sbiw	r28, 0x2e	; 46
    8abe:	89 2b       	or	r24, r25
    8ac0:	ac 96       	adiw	r28, 0x2c	; 44
    8ac2:	8f af       	std	Y+63, r24	; 0x3f
    8ac4:	ac 97       	sbiw	r28, 0x2c	; 44
    8ac6:	ad 96       	adiw	r28, 0x2d	; 45
    8ac8:	8f ad       	ldd	r24, Y+63	; 0x3f
    8aca:	ad 97       	sbiw	r28, 0x2d	; 45
    8acc:	a2 96       	adiw	r28, 0x22	; 34
    8ace:	8f af       	std	Y+63, r24	; 0x3f
    8ad0:	a2 97       	sbiw	r28, 0x22	; 34
    8ad2:	9f ad       	ldd	r25, Y+63	; 0x3f
    8ad4:	8c 81       	ldd	r24, Y+4	; 0x04
    8ad6:	98 0f       	add	r25, r24
    8ad8:	a3 96       	adiw	r28, 0x23	; 35
    8ada:	9f af       	std	Y+63, r25	; 0x3f
    8adc:	a3 97       	sbiw	r28, 0x23	; 35
    8ade:	91 e0       	ldi	r25, 0x01	; 1
    8ae0:	af 96       	adiw	r28, 0x2f	; 47
    8ae2:	9f af       	std	Y+63, r25	; 0x3f
    8ae4:	af 97       	sbiw	r28, 0x2f	; 47
    8ae6:	a3 96       	adiw	r28, 0x23	; 35
    8ae8:	8f ad       	ldd	r24, Y+63	; 0x3f
    8aea:	a3 97       	sbiw	r28, 0x23	; 35
    8aec:	9f ad       	ldd	r25, Y+63	; 0x3f
    8aee:	89 17       	cp	r24, r25
    8af0:	18 f0       	brcs	.+6      	; 0x8af8 <distance_rb+0x818>
    8af2:	af 96       	adiw	r28, 0x2f	; 47
    8af4:	1f ae       	std	Y+63, r1	; 0x3f
    8af6:	af 97       	sbiw	r28, 0x2f	; 47
    8af8:	ac 96       	adiw	r28, 0x2c	; 44
    8afa:	8f ad       	ldd	r24, Y+63	; 0x3f
    8afc:	ac 97       	sbiw	r28, 0x2c	; 44
    8afe:	a3 96       	adiw	r28, 0x23	; 35
    8b00:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b02:	a3 97       	sbiw	r28, 0x23	; 35
    8b04:	89 0f       	add	r24, r25
    8b06:	e0 96       	adiw	r28, 0x30	; 48
    8b08:	8f af       	std	Y+63, r24	; 0x3f
    8b0a:	e0 97       	sbiw	r28, 0x30	; 48
    8b0c:	81 e0       	ldi	r24, 0x01	; 1
    8b0e:	e1 96       	adiw	r28, 0x31	; 49
    8b10:	8f af       	std	Y+63, r24	; 0x3f
    8b12:	e1 97       	sbiw	r28, 0x31	; 49
    8b14:	e0 96       	adiw	r28, 0x30	; 48
    8b16:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b18:	e0 97       	sbiw	r28, 0x30	; 48
    8b1a:	a3 96       	adiw	r28, 0x23	; 35
    8b1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b1e:	a3 97       	sbiw	r28, 0x23	; 35
    8b20:	98 17       	cp	r25, r24
    8b22:	18 f0       	brcs	.+6      	; 0x8b2a <distance_rb+0x84a>
    8b24:	e1 96       	adiw	r28, 0x31	; 49
    8b26:	1f ae       	std	Y+63, r1	; 0x3f
    8b28:	e1 97       	sbiw	r28, 0x31	; 49
    8b2a:	af 96       	adiw	r28, 0x2f	; 47
    8b2c:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b2e:	af 97       	sbiw	r28, 0x2f	; 47
    8b30:	e1 96       	adiw	r28, 0x31	; 49
    8b32:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b34:	e1 97       	sbiw	r28, 0x31	; 49
    8b36:	98 2b       	or	r25, r24
    8b38:	af 96       	adiw	r28, 0x2f	; 47
    8b3a:	9f af       	std	Y+63, r25	; 0x3f
    8b3c:	af 97       	sbiw	r28, 0x2f	; 47
    8b3e:	e0 96       	adiw	r28, 0x30	; 48
    8b40:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b42:	e0 97       	sbiw	r28, 0x30	; 48
    8b44:	a3 96       	adiw	r28, 0x23	; 35
    8b46:	9f af       	std	Y+63, r25	; 0x3f
    8b48:	a3 97       	sbiw	r28, 0x23	; 35
    8b4a:	21 96       	adiw	r28, 0x01	; 1
    8b4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b4e:	21 97       	sbiw	r28, 0x01	; 1
    8b50:	9d 81       	ldd	r25, Y+5	; 0x05
    8b52:	89 0f       	add	r24, r25
    8b54:	a4 96       	adiw	r28, 0x24	; 36
    8b56:	8f af       	std	Y+63, r24	; 0x3f
    8b58:	a4 97       	sbiw	r28, 0x24	; 36
    8b5a:	81 e0       	ldi	r24, 0x01	; 1
    8b5c:	e2 96       	adiw	r28, 0x32	; 50
    8b5e:	8f af       	std	Y+63, r24	; 0x3f
    8b60:	e2 97       	sbiw	r28, 0x32	; 50
    8b62:	a4 96       	adiw	r28, 0x24	; 36
    8b64:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b66:	a4 97       	sbiw	r28, 0x24	; 36
    8b68:	21 96       	adiw	r28, 0x01	; 1
    8b6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b6c:	21 97       	sbiw	r28, 0x01	; 1
    8b6e:	98 17       	cp	r25, r24
    8b70:	18 f0       	brcs	.+6      	; 0x8b78 <distance_rb+0x898>
    8b72:	e2 96       	adiw	r28, 0x32	; 50
    8b74:	1f ae       	std	Y+63, r1	; 0x3f
    8b76:	e2 97       	sbiw	r28, 0x32	; 50
    8b78:	af 96       	adiw	r28, 0x2f	; 47
    8b7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b7c:	af 97       	sbiw	r28, 0x2f	; 47
    8b7e:	a4 96       	adiw	r28, 0x24	; 36
    8b80:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b82:	a4 97       	sbiw	r28, 0x24	; 36
    8b84:	98 0f       	add	r25, r24
    8b86:	e3 96       	adiw	r28, 0x33	; 51
    8b88:	9f af       	std	Y+63, r25	; 0x3f
    8b8a:	e3 97       	sbiw	r28, 0x33	; 51
    8b8c:	91 e0       	ldi	r25, 0x01	; 1
    8b8e:	e4 96       	adiw	r28, 0x34	; 52
    8b90:	9f af       	std	Y+63, r25	; 0x3f
    8b92:	e4 97       	sbiw	r28, 0x34	; 52
    8b94:	e3 96       	adiw	r28, 0x33	; 51
    8b96:	8f ad       	ldd	r24, Y+63	; 0x3f
    8b98:	e3 97       	sbiw	r28, 0x33	; 51
    8b9a:	a4 96       	adiw	r28, 0x24	; 36
    8b9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    8b9e:	a4 97       	sbiw	r28, 0x24	; 36
    8ba0:	89 17       	cp	r24, r25
    8ba2:	18 f0       	brcs	.+6      	; 0x8baa <distance_rb+0x8ca>
    8ba4:	e4 96       	adiw	r28, 0x34	; 52
    8ba6:	1f ae       	std	Y+63, r1	; 0x3f
    8ba8:	e4 97       	sbiw	r28, 0x34	; 52
    8baa:	e2 96       	adiw	r28, 0x32	; 50
    8bac:	8f ad       	ldd	r24, Y+63	; 0x3f
    8bae:	e2 97       	sbiw	r28, 0x32	; 50
    8bb0:	e4 96       	adiw	r28, 0x34	; 52
    8bb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    8bb4:	e4 97       	sbiw	r28, 0x34	; 52
    8bb6:	89 2b       	or	r24, r25
    8bb8:	e2 96       	adiw	r28, 0x32	; 50
    8bba:	8f af       	std	Y+63, r24	; 0x3f
    8bbc:	e2 97       	sbiw	r28, 0x32	; 50
    8bbe:	e3 96       	adiw	r28, 0x33	; 51
    8bc0:	8f ad       	ldd	r24, Y+63	; 0x3f
    8bc2:	e3 97       	sbiw	r28, 0x33	; 51
    8bc4:	a4 96       	adiw	r28, 0x24	; 36
    8bc6:	8f af       	std	Y+63, r24	; 0x3f
    8bc8:	a4 97       	sbiw	r28, 0x24	; 36
    8bca:	22 96       	adiw	r28, 0x02	; 2
    8bcc:	9f ad       	ldd	r25, Y+63	; 0x3f
    8bce:	22 97       	sbiw	r28, 0x02	; 2
    8bd0:	8e 81       	ldd	r24, Y+6	; 0x06
    8bd2:	98 0f       	add	r25, r24
    8bd4:	a5 96       	adiw	r28, 0x25	; 37
    8bd6:	9f af       	std	Y+63, r25	; 0x3f
    8bd8:	a5 97       	sbiw	r28, 0x25	; 37
    8bda:	91 e0       	ldi	r25, 0x01	; 1
    8bdc:	e5 96       	adiw	r28, 0x35	; 53
    8bde:	9f af       	std	Y+63, r25	; 0x3f
    8be0:	e5 97       	sbiw	r28, 0x35	; 53
    8be2:	a5 96       	adiw	r28, 0x25	; 37
    8be4:	8f ad       	ldd	r24, Y+63	; 0x3f
    8be6:	a5 97       	sbiw	r28, 0x25	; 37
    8be8:	22 96       	adiw	r28, 0x02	; 2
    8bea:	9f ad       	ldd	r25, Y+63	; 0x3f
    8bec:	22 97       	sbiw	r28, 0x02	; 2
    8bee:	89 17       	cp	r24, r25
    8bf0:	18 f0       	brcs	.+6      	; 0x8bf8 <distance_rb+0x918>
    8bf2:	e5 96       	adiw	r28, 0x35	; 53
    8bf4:	1f ae       	std	Y+63, r1	; 0x3f
    8bf6:	e5 97       	sbiw	r28, 0x35	; 53
    8bf8:	e2 96       	adiw	r28, 0x32	; 50
    8bfa:	8f ad       	ldd	r24, Y+63	; 0x3f
    8bfc:	e2 97       	sbiw	r28, 0x32	; 50
    8bfe:	a5 96       	adiw	r28, 0x25	; 37
    8c00:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c02:	a5 97       	sbiw	r28, 0x25	; 37
    8c04:	89 0f       	add	r24, r25
    8c06:	e6 96       	adiw	r28, 0x36	; 54
    8c08:	8f af       	std	Y+63, r24	; 0x3f
    8c0a:	e6 97       	sbiw	r28, 0x36	; 54
    8c0c:	81 e0       	ldi	r24, 0x01	; 1
    8c0e:	e7 96       	adiw	r28, 0x37	; 55
    8c10:	8f af       	std	Y+63, r24	; 0x3f
    8c12:	e7 97       	sbiw	r28, 0x37	; 55
    8c14:	e6 96       	adiw	r28, 0x36	; 54
    8c16:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c18:	e6 97       	sbiw	r28, 0x36	; 54
    8c1a:	a5 96       	adiw	r28, 0x25	; 37
    8c1c:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c1e:	a5 97       	sbiw	r28, 0x25	; 37
    8c20:	98 17       	cp	r25, r24
    8c22:	18 f0       	brcs	.+6      	; 0x8c2a <distance_rb+0x94a>
    8c24:	e7 96       	adiw	r28, 0x37	; 55
    8c26:	1f ae       	std	Y+63, r1	; 0x3f
    8c28:	e7 97       	sbiw	r28, 0x37	; 55
    8c2a:	e5 96       	adiw	r28, 0x35	; 53
    8c2c:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c2e:	e5 97       	sbiw	r28, 0x35	; 53
    8c30:	e7 96       	adiw	r28, 0x37	; 55
    8c32:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c34:	e7 97       	sbiw	r28, 0x37	; 55
    8c36:	98 2b       	or	r25, r24
    8c38:	e5 96       	adiw	r28, 0x35	; 53
    8c3a:	9f af       	std	Y+63, r25	; 0x3f
    8c3c:	e5 97       	sbiw	r28, 0x35	; 53
    8c3e:	e6 96       	adiw	r28, 0x36	; 54
    8c40:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c42:	e6 97       	sbiw	r28, 0x36	; 54
    8c44:	a5 96       	adiw	r28, 0x25	; 37
    8c46:	9f af       	std	Y+63, r25	; 0x3f
    8c48:	a5 97       	sbiw	r28, 0x25	; 37
    8c4a:	23 96       	adiw	r28, 0x03	; 3
    8c4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c4e:	23 97       	sbiw	r28, 0x03	; 3
    8c50:	9f 81       	ldd	r25, Y+7	; 0x07
    8c52:	89 0f       	add	r24, r25
    8c54:	a6 96       	adiw	r28, 0x26	; 38
    8c56:	8f af       	std	Y+63, r24	; 0x3f
    8c58:	a6 97       	sbiw	r28, 0x26	; 38
    8c5a:	81 e0       	ldi	r24, 0x01	; 1
    8c5c:	e8 96       	adiw	r28, 0x38	; 56
    8c5e:	8f af       	std	Y+63, r24	; 0x3f
    8c60:	e8 97       	sbiw	r28, 0x38	; 56
    8c62:	a6 96       	adiw	r28, 0x26	; 38
    8c64:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c66:	a6 97       	sbiw	r28, 0x26	; 38
    8c68:	23 96       	adiw	r28, 0x03	; 3
    8c6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c6c:	23 97       	sbiw	r28, 0x03	; 3
    8c6e:	98 17       	cp	r25, r24
    8c70:	18 f0       	brcs	.+6      	; 0x8c78 <distance_rb+0x998>
    8c72:	e8 96       	adiw	r28, 0x38	; 56
    8c74:	1f ae       	std	Y+63, r1	; 0x3f
    8c76:	e8 97       	sbiw	r28, 0x38	; 56
    8c78:	e5 96       	adiw	r28, 0x35	; 53
    8c7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c7c:	e5 97       	sbiw	r28, 0x35	; 53
    8c7e:	a6 96       	adiw	r28, 0x26	; 38
    8c80:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c82:	a6 97       	sbiw	r28, 0x26	; 38
    8c84:	98 0f       	add	r25, r24
    8c86:	e9 96       	adiw	r28, 0x39	; 57
    8c88:	9f af       	std	Y+63, r25	; 0x3f
    8c8a:	e9 97       	sbiw	r28, 0x39	; 57
    8c8c:	91 e0       	ldi	r25, 0x01	; 1
    8c8e:	ea 96       	adiw	r28, 0x3a	; 58
    8c90:	9f af       	std	Y+63, r25	; 0x3f
    8c92:	ea 97       	sbiw	r28, 0x3a	; 58
    8c94:	e9 96       	adiw	r28, 0x39	; 57
    8c96:	8f ad       	ldd	r24, Y+63	; 0x3f
    8c98:	e9 97       	sbiw	r28, 0x39	; 57
    8c9a:	a6 96       	adiw	r28, 0x26	; 38
    8c9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    8c9e:	a6 97       	sbiw	r28, 0x26	; 38
    8ca0:	89 17       	cp	r24, r25
    8ca2:	18 f0       	brcs	.+6      	; 0x8caa <distance_rb+0x9ca>
    8ca4:	ea 96       	adiw	r28, 0x3a	; 58
    8ca6:	1f ae       	std	Y+63, r1	; 0x3f
    8ca8:	ea 97       	sbiw	r28, 0x3a	; 58
    8caa:	e8 96       	adiw	r28, 0x38	; 56
    8cac:	8f ad       	ldd	r24, Y+63	; 0x3f
    8cae:	e8 97       	sbiw	r28, 0x38	; 56
    8cb0:	ea 96       	adiw	r28, 0x3a	; 58
    8cb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    8cb4:	ea 97       	sbiw	r28, 0x3a	; 58
    8cb6:	89 2b       	or	r24, r25
    8cb8:	e8 96       	adiw	r28, 0x38	; 56
    8cba:	8f af       	std	Y+63, r24	; 0x3f
    8cbc:	e8 97       	sbiw	r28, 0x38	; 56
    8cbe:	e9 96       	adiw	r28, 0x39	; 57
    8cc0:	8f ad       	ldd	r24, Y+63	; 0x3f
    8cc2:	e9 97       	sbiw	r28, 0x39	; 57
    8cc4:	a6 96       	adiw	r28, 0x26	; 38
    8cc6:	8f af       	std	Y+63, r24	; 0x3f
    8cc8:	a6 97       	sbiw	r28, 0x26	; 38
    8cca:	24 96       	adiw	r28, 0x04	; 4
    8ccc:	9f ad       	ldd	r25, Y+63	; 0x3f
    8cce:	24 97       	sbiw	r28, 0x04	; 4
    8cd0:	88 85       	ldd	r24, Y+8	; 0x08
    8cd2:	98 0f       	add	r25, r24
    8cd4:	a7 96       	adiw	r28, 0x27	; 39
    8cd6:	9f af       	std	Y+63, r25	; 0x3f
    8cd8:	a7 97       	sbiw	r28, 0x27	; 39
    8cda:	e8 96       	adiw	r28, 0x38	; 56
    8cdc:	8f ad       	ldd	r24, Y+63	; 0x3f
    8cde:	e8 97       	sbiw	r28, 0x38	; 56
    8ce0:	a7 96       	adiw	r28, 0x27	; 39
    8ce2:	9f ad       	ldd	r25, Y+63	; 0x3f
    8ce4:	a7 97       	sbiw	r28, 0x27	; 39
    8ce6:	89 0f       	add	r24, r25
    8ce8:	a7 96       	adiw	r28, 0x27	; 39
    8cea:	8f af       	std	Y+63, r24	; 0x3f
    8cec:	a7 97       	sbiw	r28, 0x27	; 39
    8cee:	a0 96       	adiw	r28, 0x20	; 32
    8cf0:	af ac       	ldd	r10, Y+63	; 0x3f
    8cf2:	a0 97       	sbiw	r28, 0x20	; 32
    8cf4:	a1 96       	adiw	r28, 0x21	; 33
    8cf6:	bf ac       	ldd	r11, Y+63	; 0x3f
    8cf8:	a1 97       	sbiw	r28, 0x21	; 33
    8cfa:	a2 96       	adiw	r28, 0x22	; 34
    8cfc:	cf ac       	ldd	r12, Y+63	; 0x3f
    8cfe:	a2 97       	sbiw	r28, 0x22	; 34
    8d00:	a3 96       	adiw	r28, 0x23	; 35
    8d02:	df ac       	ldd	r13, Y+63	; 0x3f
    8d04:	a3 97       	sbiw	r28, 0x23	; 35
    8d06:	a4 96       	adiw	r28, 0x24	; 36
    8d08:	ef ac       	ldd	r14, Y+63	; 0x3f
    8d0a:	a4 97       	sbiw	r28, 0x24	; 36
    8d0c:	a5 96       	adiw	r28, 0x25	; 37
    8d0e:	ff ac       	ldd	r15, Y+63	; 0x3f
    8d10:	a5 97       	sbiw	r28, 0x25	; 37
    8d12:	a6 96       	adiw	r28, 0x26	; 38
    8d14:	0f ad       	ldd	r16, Y+63	; 0x3f
    8d16:	a6 97       	sbiw	r28, 0x26	; 38
    8d18:	a7 96       	adiw	r28, 0x27	; 39
    8d1a:	1f ad       	ldd	r17, Y+63	; 0x3f
    8d1c:	a7 97       	sbiw	r28, 0x27	; 39
    8d1e:	2a 2d       	mov	r18, r10
    8d20:	3b 2d       	mov	r19, r11
    8d22:	4c 2d       	mov	r20, r12
    8d24:	5d 2d       	mov	r21, r13
    8d26:	6e 2d       	mov	r22, r14
    8d28:	7f 2d       	mov	r23, r15
    8d2a:	80 2f       	mov	r24, r16
    8d2c:	91 2f       	mov	r25, r17
    8d2e:	aa 24       	eor	r10, r10
    8d30:	68 94       	set
    8d32:	a6 f8       	bld	r10, 6
    8d34:	0f 2e       	mov	r0, r31
    8d36:	f2 e4       	ldi	r31, 0x42	; 66
    8d38:	bf 2e       	mov	r11, r31
    8d3a:	f0 2d       	mov	r31, r0
    8d3c:	0f 2e       	mov	r0, r31
    8d3e:	ff e0       	ldi	r31, 0x0F	; 15
    8d40:	cf 2e       	mov	r12, r31
    8d42:	f0 2d       	mov	r31, r0
    8d44:	dd 24       	eor	r13, r13
    8d46:	ee 24       	eor	r14, r14
    8d48:	ff 24       	eor	r15, r15
    8d4a:	00 e0       	ldi	r16, 0x00	; 0
    8d4c:	10 e0       	ldi	r17, 0x00	; 0
    8d4e:	0e 94 12 01 	call	0x224	; 0x224 <__udivdi3>
    8d52:	a2 2e       	mov	r10, r18
    8d54:	b3 2e       	mov	r11, r19
    8d56:	c4 2e       	mov	r12, r20
    8d58:	d5 2e       	mov	r13, r21
    8d5a:	e6 2e       	mov	r14, r22
    8d5c:	f7 2e       	mov	r15, r23
    8d5e:	08 2f       	mov	r16, r24
    8d60:	19 2f       	mov	r17, r25
    8d62:	2a 2d       	mov	r18, r10
    8d64:	3b 2d       	mov	r19, r11
    8d66:	4c 2d       	mov	r20, r12
    8d68:	5d 2d       	mov	r21, r13
    8d6a:	6e 2d       	mov	r22, r14
    8d6c:	7f 2d       	mov	r23, r15
    8d6e:	80 2f       	mov	r24, r16
    8d70:	91 2f       	mov	r25, r17
    8d72:	20 93 cd 03 	sts	0x03CD, r18
    8d76:	30 93 ce 03 	sts	0x03CE, r19
    8d7a:	40 93 cf 03 	sts	0x03CF, r20
    8d7e:	50 93 d0 03 	sts	0x03D0, r21
    8d82:	60 93 d1 03 	sts	0x03D1, r22
    8d86:	70 93 d2 03 	sts	0x03D2, r23
    8d8a:	80 93 d3 03 	sts	0x03D3, r24
    8d8e:	90 93 d4 03 	sts	0x03D4, r25
 return length_rb;
    8d92:	20 91 cd 03 	lds	r18, 0x03CD
    8d96:	30 91 ce 03 	lds	r19, 0x03CE
    8d9a:	40 91 cf 03 	lds	r20, 0x03CF
    8d9e:	50 91 d0 03 	lds	r21, 0x03D0
    8da2:	60 91 d1 03 	lds	r22, 0x03D1
    8da6:	70 91 d2 03 	lds	r23, 0x03D2
    8daa:	80 91 d3 03 	lds	r24, 0x03D3
    8dae:	90 91 d4 03 	lds	r25, 0x03D4
    8db2:	a2 2e       	mov	r10, r18
    8db4:	b3 2e       	mov	r11, r19
    8db6:	c4 2e       	mov	r12, r20
    8db8:	d5 2e       	mov	r13, r21
    8dba:	e6 2e       	mov	r14, r22
    8dbc:	f7 2e       	mov	r15, r23
    8dbe:	08 2f       	mov	r16, r24
    8dc0:	19 2f       	mov	r17, r25
}
    8dc2:	2a 2d       	mov	r18, r10
    8dc4:	3b 2d       	mov	r19, r11
    8dc6:	4c 2d       	mov	r20, r12
    8dc8:	5d 2d       	mov	r21, r13
    8dca:	6e 2d       	mov	r22, r14
    8dcc:	7f 2d       	mov	r23, r15
    8dce:	80 2f       	mov	r24, r16
    8dd0:	91 2f       	mov	r25, r17
    8dd2:	c7 58       	subi	r28, 0x87	; 135
    8dd4:	df 4f       	sbci	r29, 0xFF	; 255
    8dd6:	0f b6       	in	r0, 0x3f	; 63
    8dd8:	f8 94       	cli
    8dda:	de bf       	out	0x3e, r29	; 62
    8ddc:	0f be       	out	0x3f, r0	; 63
    8dde:	cd bf       	out	0x3d, r28	; 61
    8de0:	cf 91       	pop	r28
    8de2:	df 91       	pop	r29
    8de4:	1f 91       	pop	r17
    8de6:	0f 91       	pop	r16
    8de8:	ff 90       	pop	r15
    8dea:	ef 90       	pop	r14
    8dec:	df 90       	pop	r13
    8dee:	cf 90       	pop	r12
    8df0:	bf 90       	pop	r11
    8df2:	af 90       	pop	r10
    8df4:	08 95       	ret

00008df6 <distance_rb2>:
uint64 distance_rb2(void)
{
    8df6:	af 92       	push	r10
    8df8:	bf 92       	push	r11
    8dfa:	cf 92       	push	r12
    8dfc:	df 92       	push	r13
    8dfe:	ef 92       	push	r14
    8e00:	ff 92       	push	r15
    8e02:	0f 93       	push	r16
    8e04:	1f 93       	push	r17
    8e06:	df 93       	push	r29
    8e08:	cf 93       	push	r28
    8e0a:	cd b7       	in	r28, 0x3d	; 61
    8e0c:	de b7       	in	r29, 0x3e	; 62
    8e0e:	c9 57       	subi	r28, 0x79	; 121
    8e10:	d0 40       	sbci	r29, 0x00	; 0
    8e12:	0f b6       	in	r0, 0x3f	; 63
    8e14:	f8 94       	cli
    8e16:	de bf       	out	0x3e, r29	; 62
    8e18:	0f be       	out	0x3f, r0	; 63
    8e1a:	cd bf       	out	0x3d, r28	; 61
t_rb=TCNT0;
    8e1c:	e2 e5       	ldi	r30, 0x52	; 82
    8e1e:	f0 e0       	ldi	r31, 0x00	; 0
    8e20:	80 81       	ld	r24, Z
    8e22:	28 2f       	mov	r18, r24
    8e24:	30 e0       	ldi	r19, 0x00	; 0
    8e26:	40 e0       	ldi	r20, 0x00	; 0
    8e28:	50 e0       	ldi	r21, 0x00	; 0
    8e2a:	60 e0       	ldi	r22, 0x00	; 0
    8e2c:	70 e0       	ldi	r23, 0x00	; 0
    8e2e:	80 e0       	ldi	r24, 0x00	; 0
    8e30:	90 e0       	ldi	r25, 0x00	; 0
    8e32:	20 93 dd 03 	sts	0x03DD, r18
    8e36:	30 93 de 03 	sts	0x03DE, r19
    8e3a:	40 93 df 03 	sts	0x03DF, r20
    8e3e:	50 93 e0 03 	sts	0x03E0, r21
    8e42:	60 93 e1 03 	sts	0x03E1, r22
    8e46:	70 93 e2 03 	sts	0x03E2, r23
    8e4a:	80 93 e3 03 	sts	0x03E3, r24
    8e4e:	90 93 e4 03 	sts	0x03E4, r25
c_rb=count_right_back2;
    8e52:	80 91 8c 03 	lds	r24, 0x038C
    8e56:	90 91 8d 03 	lds	r25, 0x038D
    8e5a:	9c 01       	movw	r18, r24
    8e5c:	40 e0       	ldi	r20, 0x00	; 0
    8e5e:	50 e0       	ldi	r21, 0x00	; 0
    8e60:	60 e0       	ldi	r22, 0x00	; 0
    8e62:	70 e0       	ldi	r23, 0x00	; 0
    8e64:	80 e0       	ldi	r24, 0x00	; 0
    8e66:	90 e0       	ldi	r25, 0x00	; 0
    8e68:	20 93 a5 03 	sts	0x03A5, r18
    8e6c:	30 93 a6 03 	sts	0x03A6, r19
    8e70:	40 93 a7 03 	sts	0x03A7, r20
    8e74:	50 93 a8 03 	sts	0x03A8, r21
    8e78:	60 93 a9 03 	sts	0x03A9, r22
    8e7c:	70 93 aa 03 	sts	0x03AA, r23
    8e80:	80 93 ab 03 	sts	0x03AB, r24
    8e84:	90 93 ac 03 	sts	0x03AC, r25
time_rb=(uint64)t_rb+((uint64)c_rb*256);
    8e88:	a0 90 a5 03 	lds	r10, 0x03A5
    8e8c:	b0 90 a6 03 	lds	r11, 0x03A6
    8e90:	c0 90 a7 03 	lds	r12, 0x03A7
    8e94:	d0 90 a8 03 	lds	r13, 0x03A8
    8e98:	e0 90 a9 03 	lds	r14, 0x03A9
    8e9c:	f0 90 aa 03 	lds	r15, 0x03AA
    8ea0:	00 91 ab 03 	lds	r16, 0x03AB
    8ea4:	10 91 ac 03 	lds	r17, 0x03AC
    8ea8:	2a 2d       	mov	r18, r10
    8eaa:	3b 2d       	mov	r19, r11
    8eac:	4c 2d       	mov	r20, r12
    8eae:	5d 2d       	mov	r21, r13
    8eb0:	6e 2d       	mov	r22, r14
    8eb2:	7f 2d       	mov	r23, r15
    8eb4:	80 2f       	mov	r24, r16
    8eb6:	91 2f       	mov	r25, r17
    8eb8:	08 e0       	ldi	r16, 0x08	; 8
    8eba:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    8ebe:	a2 2e       	mov	r10, r18
    8ec0:	b3 2e       	mov	r11, r19
    8ec2:	c4 2e       	mov	r12, r20
    8ec4:	d5 2e       	mov	r13, r21
    8ec6:	e6 2e       	mov	r14, r22
    8ec8:	f7 2e       	mov	r15, r23
    8eca:	08 2f       	mov	r16, r24
    8ecc:	19 2f       	mov	r17, r25
    8ece:	a9 8a       	std	Y+17, r10	; 0x11
    8ed0:	ba 8a       	std	Y+18, r11	; 0x12
    8ed2:	cb 8a       	std	Y+19, r12	; 0x13
    8ed4:	dc 8a       	std	Y+20, r13	; 0x14
    8ed6:	ed 8a       	std	Y+21, r14	; 0x15
    8ed8:	fe 8a       	std	Y+22, r15	; 0x16
    8eda:	0f 8b       	std	Y+23, r16	; 0x17
    8edc:	18 8f       	std	Y+24, r17	; 0x18
    8ede:	80 91 dd 03 	lds	r24, 0x03DD
    8ee2:	89 87       	std	Y+9, r24	; 0x09
    8ee4:	90 91 de 03 	lds	r25, 0x03DE
    8ee8:	9a 87       	std	Y+10, r25	; 0x0a
    8eea:	80 91 df 03 	lds	r24, 0x03DF
    8eee:	8b 87       	std	Y+11, r24	; 0x0b
    8ef0:	90 91 e0 03 	lds	r25, 0x03E0
    8ef4:	9c 87       	std	Y+12, r25	; 0x0c
    8ef6:	80 91 e1 03 	lds	r24, 0x03E1
    8efa:	8d 87       	std	Y+13, r24	; 0x0d
    8efc:	90 91 e2 03 	lds	r25, 0x03E2
    8f00:	9e 87       	std	Y+14, r25	; 0x0e
    8f02:	80 91 e3 03 	lds	r24, 0x03E3
    8f06:	8f 87       	std	Y+15, r24	; 0x0f
    8f08:	90 91 e4 03 	lds	r25, 0x03E4
    8f0c:	98 8b       	std	Y+16, r25	; 0x10
    8f0e:	89 89       	ldd	r24, Y+17	; 0x11
    8f10:	99 85       	ldd	r25, Y+9	; 0x09
    8f12:	89 0f       	add	r24, r25
    8f14:	89 8f       	std	Y+25, r24	; 0x19
    8f16:	81 e0       	ldi	r24, 0x01	; 1
    8f18:	89 a3       	std	Y+33, r24	; 0x21
    8f1a:	99 8d       	ldd	r25, Y+25	; 0x19
    8f1c:	89 89       	ldd	r24, Y+17	; 0x11
    8f1e:	98 17       	cp	r25, r24
    8f20:	08 f0       	brcs	.+2      	; 0x8f24 <distance_rb2+0x12e>
    8f22:	19 a2       	std	Y+33, r1	; 0x21
    8f24:	9a 89       	ldd	r25, Y+18	; 0x12
    8f26:	8a 85       	ldd	r24, Y+10	; 0x0a
    8f28:	98 0f       	add	r25, r24
    8f2a:	9a 8f       	std	Y+26, r25	; 0x1a
    8f2c:	91 e0       	ldi	r25, 0x01	; 1
    8f2e:	9a a3       	std	Y+34, r25	; 0x22
    8f30:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8f32:	9a 89       	ldd	r25, Y+18	; 0x12
    8f34:	89 17       	cp	r24, r25
    8f36:	08 f0       	brcs	.+2      	; 0x8f3a <distance_rb2+0x144>
    8f38:	1a a2       	std	Y+34, r1	; 0x22
    8f3a:	89 a1       	ldd	r24, Y+33	; 0x21
    8f3c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8f3e:	89 0f       	add	r24, r25
    8f40:	8b a3       	std	Y+35, r24	; 0x23
    8f42:	81 e0       	ldi	r24, 0x01	; 1
    8f44:	8c a3       	std	Y+36, r24	; 0x24
    8f46:	9b a1       	ldd	r25, Y+35	; 0x23
    8f48:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8f4a:	98 17       	cp	r25, r24
    8f4c:	08 f0       	brcs	.+2      	; 0x8f50 <distance_rb2+0x15a>
    8f4e:	1c a2       	std	Y+36, r1	; 0x24
    8f50:	9a a1       	ldd	r25, Y+34	; 0x22
    8f52:	8c a1       	ldd	r24, Y+36	; 0x24
    8f54:	98 2b       	or	r25, r24
    8f56:	9a a3       	std	Y+34, r25	; 0x22
    8f58:	9b a1       	ldd	r25, Y+35	; 0x23
    8f5a:	9a 8f       	std	Y+26, r25	; 0x1a
    8f5c:	8b 89       	ldd	r24, Y+19	; 0x13
    8f5e:	9b 85       	ldd	r25, Y+11	; 0x0b
    8f60:	89 0f       	add	r24, r25
    8f62:	8b 8f       	std	Y+27, r24	; 0x1b
    8f64:	81 e0       	ldi	r24, 0x01	; 1
    8f66:	8d a3       	std	Y+37, r24	; 0x25
    8f68:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8f6a:	8b 89       	ldd	r24, Y+19	; 0x13
    8f6c:	98 17       	cp	r25, r24
    8f6e:	08 f0       	brcs	.+2      	; 0x8f72 <distance_rb2+0x17c>
    8f70:	1d a2       	std	Y+37, r1	; 0x25
    8f72:	9a a1       	ldd	r25, Y+34	; 0x22
    8f74:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8f76:	98 0f       	add	r25, r24
    8f78:	9e a3       	std	Y+38, r25	; 0x26
    8f7a:	91 e0       	ldi	r25, 0x01	; 1
    8f7c:	9f a3       	std	Y+39, r25	; 0x27
    8f7e:	8e a1       	ldd	r24, Y+38	; 0x26
    8f80:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8f82:	89 17       	cp	r24, r25
    8f84:	08 f0       	brcs	.+2      	; 0x8f88 <distance_rb2+0x192>
    8f86:	1f a2       	std	Y+39, r1	; 0x27
    8f88:	8d a1       	ldd	r24, Y+37	; 0x25
    8f8a:	9f a1       	ldd	r25, Y+39	; 0x27
    8f8c:	89 2b       	or	r24, r25
    8f8e:	8d a3       	std	Y+37, r24	; 0x25
    8f90:	8e a1       	ldd	r24, Y+38	; 0x26
    8f92:	8b 8f       	std	Y+27, r24	; 0x1b
    8f94:	9c 89       	ldd	r25, Y+20	; 0x14
    8f96:	8c 85       	ldd	r24, Y+12	; 0x0c
    8f98:	98 0f       	add	r25, r24
    8f9a:	9c 8f       	std	Y+28, r25	; 0x1c
    8f9c:	91 e0       	ldi	r25, 0x01	; 1
    8f9e:	98 a7       	std	Y+40, r25	; 0x28
    8fa0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8fa2:	9c 89       	ldd	r25, Y+20	; 0x14
    8fa4:	89 17       	cp	r24, r25
    8fa6:	08 f0       	brcs	.+2      	; 0x8faa <distance_rb2+0x1b4>
    8fa8:	18 a6       	std	Y+40, r1	; 0x28
    8faa:	8d a1       	ldd	r24, Y+37	; 0x25
    8fac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8fae:	89 0f       	add	r24, r25
    8fb0:	89 a7       	std	Y+41, r24	; 0x29
    8fb2:	81 e0       	ldi	r24, 0x01	; 1
    8fb4:	8a a7       	std	Y+42, r24	; 0x2a
    8fb6:	99 a5       	ldd	r25, Y+41	; 0x29
    8fb8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8fba:	98 17       	cp	r25, r24
    8fbc:	08 f0       	brcs	.+2      	; 0x8fc0 <distance_rb2+0x1ca>
    8fbe:	1a a6       	std	Y+42, r1	; 0x2a
    8fc0:	98 a5       	ldd	r25, Y+40	; 0x28
    8fc2:	8a a5       	ldd	r24, Y+42	; 0x2a
    8fc4:	98 2b       	or	r25, r24
    8fc6:	98 a7       	std	Y+40, r25	; 0x28
    8fc8:	99 a5       	ldd	r25, Y+41	; 0x29
    8fca:	9c 8f       	std	Y+28, r25	; 0x1c
    8fcc:	8d 89       	ldd	r24, Y+21	; 0x15
    8fce:	9d 85       	ldd	r25, Y+13	; 0x0d
    8fd0:	89 0f       	add	r24, r25
    8fd2:	8d 8f       	std	Y+29, r24	; 0x1d
    8fd4:	81 e0       	ldi	r24, 0x01	; 1
    8fd6:	8b a7       	std	Y+43, r24	; 0x2b
    8fd8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8fda:	8d 89       	ldd	r24, Y+21	; 0x15
    8fdc:	98 17       	cp	r25, r24
    8fde:	08 f0       	brcs	.+2      	; 0x8fe2 <distance_rb2+0x1ec>
    8fe0:	1b a6       	std	Y+43, r1	; 0x2b
    8fe2:	98 a5       	ldd	r25, Y+40	; 0x28
    8fe4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    8fe6:	98 0f       	add	r25, r24
    8fe8:	9c a7       	std	Y+44, r25	; 0x2c
    8fea:	91 e0       	ldi	r25, 0x01	; 1
    8fec:	9d a7       	std	Y+45, r25	; 0x2d
    8fee:	8c a5       	ldd	r24, Y+44	; 0x2c
    8ff0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8ff2:	89 17       	cp	r24, r25
    8ff4:	08 f0       	brcs	.+2      	; 0x8ff8 <distance_rb2+0x202>
    8ff6:	1d a6       	std	Y+45, r1	; 0x2d
    8ff8:	8b a5       	ldd	r24, Y+43	; 0x2b
    8ffa:	9d a5       	ldd	r25, Y+45	; 0x2d
    8ffc:	89 2b       	or	r24, r25
    8ffe:	8b a7       	std	Y+43, r24	; 0x2b
    9000:	8c a5       	ldd	r24, Y+44	; 0x2c
    9002:	8d 8f       	std	Y+29, r24	; 0x1d
    9004:	9e 89       	ldd	r25, Y+22	; 0x16
    9006:	8e 85       	ldd	r24, Y+14	; 0x0e
    9008:	98 0f       	add	r25, r24
    900a:	9e 8f       	std	Y+30, r25	; 0x1e
    900c:	91 e0       	ldi	r25, 0x01	; 1
    900e:	9e a7       	std	Y+46, r25	; 0x2e
    9010:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9012:	9e 89       	ldd	r25, Y+22	; 0x16
    9014:	89 17       	cp	r24, r25
    9016:	08 f0       	brcs	.+2      	; 0x901a <distance_rb2+0x224>
    9018:	1e a6       	std	Y+46, r1	; 0x2e
    901a:	8b a5       	ldd	r24, Y+43	; 0x2b
    901c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    901e:	89 0f       	add	r24, r25
    9020:	8f a7       	std	Y+47, r24	; 0x2f
    9022:	81 e0       	ldi	r24, 0x01	; 1
    9024:	88 ab       	std	Y+48, r24	; 0x30
    9026:	9f a5       	ldd	r25, Y+47	; 0x2f
    9028:	8e 8d       	ldd	r24, Y+30	; 0x1e
    902a:	98 17       	cp	r25, r24
    902c:	08 f0       	brcs	.+2      	; 0x9030 <distance_rb2+0x23a>
    902e:	18 aa       	std	Y+48, r1	; 0x30
    9030:	9e a5       	ldd	r25, Y+46	; 0x2e
    9032:	88 a9       	ldd	r24, Y+48	; 0x30
    9034:	98 2b       	or	r25, r24
    9036:	9e a7       	std	Y+46, r25	; 0x2e
    9038:	9f a5       	ldd	r25, Y+47	; 0x2f
    903a:	9e 8f       	std	Y+30, r25	; 0x1e
    903c:	8f 89       	ldd	r24, Y+23	; 0x17
    903e:	9f 85       	ldd	r25, Y+15	; 0x0f
    9040:	89 0f       	add	r24, r25
    9042:	8f 8f       	std	Y+31, r24	; 0x1f
    9044:	81 e0       	ldi	r24, 0x01	; 1
    9046:	89 ab       	std	Y+49, r24	; 0x31
    9048:	9f 8d       	ldd	r25, Y+31	; 0x1f
    904a:	8f 89       	ldd	r24, Y+23	; 0x17
    904c:	98 17       	cp	r25, r24
    904e:	08 f0       	brcs	.+2      	; 0x9052 <distance_rb2+0x25c>
    9050:	19 aa       	std	Y+49, r1	; 0x31
    9052:	9e a5       	ldd	r25, Y+46	; 0x2e
    9054:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9056:	98 0f       	add	r25, r24
    9058:	9a ab       	std	Y+50, r25	; 0x32
    905a:	91 e0       	ldi	r25, 0x01	; 1
    905c:	9b ab       	std	Y+51, r25	; 0x33
    905e:	8a a9       	ldd	r24, Y+50	; 0x32
    9060:	9f 8d       	ldd	r25, Y+31	; 0x1f
    9062:	89 17       	cp	r24, r25
    9064:	08 f0       	brcs	.+2      	; 0x9068 <distance_rb2+0x272>
    9066:	1b aa       	std	Y+51, r1	; 0x33
    9068:	89 a9       	ldd	r24, Y+49	; 0x31
    906a:	9b a9       	ldd	r25, Y+51	; 0x33
    906c:	89 2b       	or	r24, r25
    906e:	89 ab       	std	Y+49, r24	; 0x31
    9070:	8a a9       	ldd	r24, Y+50	; 0x32
    9072:	8f 8f       	std	Y+31, r24	; 0x1f
    9074:	98 8d       	ldd	r25, Y+24	; 0x18
    9076:	88 89       	ldd	r24, Y+16	; 0x10
    9078:	98 0f       	add	r25, r24
    907a:	98 a3       	std	Y+32, r25	; 0x20
    907c:	89 a9       	ldd	r24, Y+49	; 0x31
    907e:	98 a1       	ldd	r25, Y+32	; 0x20
    9080:	89 0f       	add	r24, r25
    9082:	88 a3       	std	Y+32, r24	; 0x20
    9084:	29 8d       	ldd	r18, Y+25	; 0x19
    9086:	3a 8d       	ldd	r19, Y+26	; 0x1a
    9088:	4b 8d       	ldd	r20, Y+27	; 0x1b
    908a:	5c 8d       	ldd	r21, Y+28	; 0x1c
    908c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    908e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    9090:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9092:	98 a1       	ldd	r25, Y+32	; 0x20
    9094:	20 93 ad 03 	sts	0x03AD, r18
    9098:	30 93 ae 03 	sts	0x03AE, r19
    909c:	40 93 af 03 	sts	0x03AF, r20
    90a0:	50 93 b0 03 	sts	0x03B0, r21
    90a4:	60 93 b1 03 	sts	0x03B1, r22
    90a8:	70 93 b2 03 	sts	0x03B2, r23
    90ac:	80 93 b3 03 	sts	0x03B3, r24
    90b0:	90 93 b4 03 	sts	0x03B4, r25
length_rb=((((uint64)time_rb*13))/1000000);
    90b4:	80 91 ad 03 	lds	r24, 0x03AD
    90b8:	89 83       	std	Y+1, r24	; 0x01
    90ba:	90 91 ae 03 	lds	r25, 0x03AE
    90be:	9a 83       	std	Y+2, r25	; 0x02
    90c0:	80 91 af 03 	lds	r24, 0x03AF
    90c4:	8b 83       	std	Y+3, r24	; 0x03
    90c6:	90 91 b0 03 	lds	r25, 0x03B0
    90ca:	9c 83       	std	Y+4, r25	; 0x04
    90cc:	80 91 b1 03 	lds	r24, 0x03B1
    90d0:	8d 83       	std	Y+5, r24	; 0x05
    90d2:	90 91 b2 03 	lds	r25, 0x03B2
    90d6:	9e 83       	std	Y+6, r25	; 0x06
    90d8:	80 91 b3 03 	lds	r24, 0x03B3
    90dc:	8f 83       	std	Y+7, r24	; 0x07
    90de:	90 91 b4 03 	lds	r25, 0x03B4
    90e2:	98 87       	std	Y+8, r25	; 0x08
    90e4:	a9 80       	ldd	r10, Y+1	; 0x01
    90e6:	ba 80       	ldd	r11, Y+2	; 0x02
    90e8:	cb 80       	ldd	r12, Y+3	; 0x03
    90ea:	dc 80       	ldd	r13, Y+4	; 0x04
    90ec:	ed 80       	ldd	r14, Y+5	; 0x05
    90ee:	fe 80       	ldd	r15, Y+6	; 0x06
    90f0:	0f 81       	ldd	r16, Y+7	; 0x07
    90f2:	18 85       	ldd	r17, Y+8	; 0x08
    90f4:	2a 2d       	mov	r18, r10
    90f6:	3b 2d       	mov	r19, r11
    90f8:	4c 2d       	mov	r20, r12
    90fa:	5d 2d       	mov	r21, r13
    90fc:	6e 2d       	mov	r22, r14
    90fe:	7f 2d       	mov	r23, r15
    9100:	80 2f       	mov	r24, r16
    9102:	91 2f       	mov	r25, r17
    9104:	02 e0       	ldi	r16, 0x02	; 2
    9106:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    910a:	2c ab       	std	Y+52, r18	; 0x34
    910c:	3d ab       	std	Y+53, r19	; 0x35
    910e:	4e ab       	std	Y+54, r20	; 0x36
    9110:	5f ab       	std	Y+55, r21	; 0x37
    9112:	68 af       	std	Y+56, r22	; 0x38
    9114:	79 af       	std	Y+57, r23	; 0x39
    9116:	8a af       	std	Y+58, r24	; 0x3a
    9118:	9b af       	std	Y+59, r25	; 0x3b
    911a:	2c a9       	ldd	r18, Y+52	; 0x34
    911c:	3d a9       	ldd	r19, Y+53	; 0x35
    911e:	4e a9       	ldd	r20, Y+54	; 0x36
    9120:	5f a9       	ldd	r21, Y+55	; 0x37
    9122:	68 ad       	ldd	r22, Y+56	; 0x38
    9124:	79 ad       	ldd	r23, Y+57	; 0x39
    9126:	8a ad       	ldd	r24, Y+58	; 0x3a
    9128:	9b ad       	ldd	r25, Y+59	; 0x3b
    912a:	02 e0       	ldi	r16, 0x02	; 2
    912c:	0e 94 67 00 	call	0xce	; 0xce <__ashldi3>
    9130:	2c af       	std	Y+60, r18	; 0x3c
    9132:	3d af       	std	Y+61, r19	; 0x3d
    9134:	4e af       	std	Y+62, r20	; 0x3e
    9136:	5f af       	std	Y+63, r21	; 0x3f
    9138:	21 96       	adiw	r28, 0x01	; 1
    913a:	6f af       	std	Y+63, r22	; 0x3f
    913c:	21 97       	sbiw	r28, 0x01	; 1
    913e:	22 96       	adiw	r28, 0x02	; 2
    9140:	7f af       	std	Y+63, r23	; 0x3f
    9142:	22 97       	sbiw	r28, 0x02	; 2
    9144:	23 96       	adiw	r28, 0x03	; 3
    9146:	8f af       	std	Y+63, r24	; 0x3f
    9148:	23 97       	sbiw	r28, 0x03	; 3
    914a:	24 96       	adiw	r28, 0x04	; 4
    914c:	9f af       	std	Y+63, r25	; 0x3f
    914e:	24 97       	sbiw	r28, 0x04	; 4
    9150:	8c ad       	ldd	r24, Y+60	; 0x3c
    9152:	9c a9       	ldd	r25, Y+52	; 0x34
    9154:	89 1b       	sub	r24, r25
    9156:	25 96       	adiw	r28, 0x05	; 5
    9158:	8f af       	std	Y+63, r24	; 0x3f
    915a:	25 97       	sbiw	r28, 0x05	; 5
    915c:	81 e0       	ldi	r24, 0x01	; 1
    915e:	2d 96       	adiw	r28, 0x0d	; 13
    9160:	8f af       	std	Y+63, r24	; 0x3f
    9162:	2d 97       	sbiw	r28, 0x0d	; 13
    9164:	25 96       	adiw	r28, 0x05	; 5
    9166:	9f ad       	ldd	r25, Y+63	; 0x3f
    9168:	25 97       	sbiw	r28, 0x05	; 5
    916a:	8c ad       	ldd	r24, Y+60	; 0x3c
    916c:	89 17       	cp	r24, r25
    916e:	18 f0       	brcs	.+6      	; 0x9176 <distance_rb2+0x380>
    9170:	2d 96       	adiw	r28, 0x0d	; 13
    9172:	1f ae       	std	Y+63, r1	; 0x3f
    9174:	2d 97       	sbiw	r28, 0x0d	; 13
    9176:	9d ad       	ldd	r25, Y+61	; 0x3d
    9178:	8d a9       	ldd	r24, Y+53	; 0x35
    917a:	98 1b       	sub	r25, r24
    917c:	26 96       	adiw	r28, 0x06	; 6
    917e:	9f af       	std	Y+63, r25	; 0x3f
    9180:	26 97       	sbiw	r28, 0x06	; 6
    9182:	91 e0       	ldi	r25, 0x01	; 1
    9184:	2e 96       	adiw	r28, 0x0e	; 14
    9186:	9f af       	std	Y+63, r25	; 0x3f
    9188:	2e 97       	sbiw	r28, 0x0e	; 14
    918a:	26 96       	adiw	r28, 0x06	; 6
    918c:	8f ad       	ldd	r24, Y+63	; 0x3f
    918e:	26 97       	sbiw	r28, 0x06	; 6
    9190:	9d ad       	ldd	r25, Y+61	; 0x3d
    9192:	98 17       	cp	r25, r24
    9194:	18 f0       	brcs	.+6      	; 0x919c <distance_rb2+0x3a6>
    9196:	2e 96       	adiw	r28, 0x0e	; 14
    9198:	1f ae       	std	Y+63, r1	; 0x3f
    919a:	2e 97       	sbiw	r28, 0x0e	; 14
    919c:	26 96       	adiw	r28, 0x06	; 6
    919e:	8f ad       	ldd	r24, Y+63	; 0x3f
    91a0:	26 97       	sbiw	r28, 0x06	; 6
    91a2:	2d 96       	adiw	r28, 0x0d	; 13
    91a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    91a6:	2d 97       	sbiw	r28, 0x0d	; 13
    91a8:	89 1b       	sub	r24, r25
    91aa:	2f 96       	adiw	r28, 0x0f	; 15
    91ac:	8f af       	std	Y+63, r24	; 0x3f
    91ae:	2f 97       	sbiw	r28, 0x0f	; 15
    91b0:	81 e0       	ldi	r24, 0x01	; 1
    91b2:	60 96       	adiw	r28, 0x10	; 16
    91b4:	8f af       	std	Y+63, r24	; 0x3f
    91b6:	60 97       	sbiw	r28, 0x10	; 16
    91b8:	2f 96       	adiw	r28, 0x0f	; 15
    91ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    91bc:	2f 97       	sbiw	r28, 0x0f	; 15
    91be:	26 96       	adiw	r28, 0x06	; 6
    91c0:	8f ad       	ldd	r24, Y+63	; 0x3f
    91c2:	26 97       	sbiw	r28, 0x06	; 6
    91c4:	89 17       	cp	r24, r25
    91c6:	18 f0       	brcs	.+6      	; 0x91ce <distance_rb2+0x3d8>
    91c8:	60 96       	adiw	r28, 0x10	; 16
    91ca:	1f ae       	std	Y+63, r1	; 0x3f
    91cc:	60 97       	sbiw	r28, 0x10	; 16
    91ce:	2e 96       	adiw	r28, 0x0e	; 14
    91d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    91d2:	2e 97       	sbiw	r28, 0x0e	; 14
    91d4:	60 96       	adiw	r28, 0x10	; 16
    91d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    91d8:	60 97       	sbiw	r28, 0x10	; 16
    91da:	98 2b       	or	r25, r24
    91dc:	2e 96       	adiw	r28, 0x0e	; 14
    91de:	9f af       	std	Y+63, r25	; 0x3f
    91e0:	2e 97       	sbiw	r28, 0x0e	; 14
    91e2:	2f 96       	adiw	r28, 0x0f	; 15
    91e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    91e6:	2f 97       	sbiw	r28, 0x0f	; 15
    91e8:	26 96       	adiw	r28, 0x06	; 6
    91ea:	9f af       	std	Y+63, r25	; 0x3f
    91ec:	26 97       	sbiw	r28, 0x06	; 6
    91ee:	8e ad       	ldd	r24, Y+62	; 0x3e
    91f0:	9e a9       	ldd	r25, Y+54	; 0x36
    91f2:	89 1b       	sub	r24, r25
    91f4:	27 96       	adiw	r28, 0x07	; 7
    91f6:	8f af       	std	Y+63, r24	; 0x3f
    91f8:	27 97       	sbiw	r28, 0x07	; 7
    91fa:	81 e0       	ldi	r24, 0x01	; 1
    91fc:	61 96       	adiw	r28, 0x11	; 17
    91fe:	8f af       	std	Y+63, r24	; 0x3f
    9200:	61 97       	sbiw	r28, 0x11	; 17
    9202:	27 96       	adiw	r28, 0x07	; 7
    9204:	9f ad       	ldd	r25, Y+63	; 0x3f
    9206:	27 97       	sbiw	r28, 0x07	; 7
    9208:	8e ad       	ldd	r24, Y+62	; 0x3e
    920a:	89 17       	cp	r24, r25
    920c:	18 f0       	brcs	.+6      	; 0x9214 <distance_rb2+0x41e>
    920e:	61 96       	adiw	r28, 0x11	; 17
    9210:	1f ae       	std	Y+63, r1	; 0x3f
    9212:	61 97       	sbiw	r28, 0x11	; 17
    9214:	27 96       	adiw	r28, 0x07	; 7
    9216:	9f ad       	ldd	r25, Y+63	; 0x3f
    9218:	27 97       	sbiw	r28, 0x07	; 7
    921a:	2e 96       	adiw	r28, 0x0e	; 14
    921c:	8f ad       	ldd	r24, Y+63	; 0x3f
    921e:	2e 97       	sbiw	r28, 0x0e	; 14
    9220:	98 1b       	sub	r25, r24
    9222:	62 96       	adiw	r28, 0x12	; 18
    9224:	9f af       	std	Y+63, r25	; 0x3f
    9226:	62 97       	sbiw	r28, 0x12	; 18
    9228:	91 e0       	ldi	r25, 0x01	; 1
    922a:	63 96       	adiw	r28, 0x13	; 19
    922c:	9f af       	std	Y+63, r25	; 0x3f
    922e:	63 97       	sbiw	r28, 0x13	; 19
    9230:	62 96       	adiw	r28, 0x12	; 18
    9232:	8f ad       	ldd	r24, Y+63	; 0x3f
    9234:	62 97       	sbiw	r28, 0x12	; 18
    9236:	27 96       	adiw	r28, 0x07	; 7
    9238:	9f ad       	ldd	r25, Y+63	; 0x3f
    923a:	27 97       	sbiw	r28, 0x07	; 7
    923c:	98 17       	cp	r25, r24
    923e:	18 f0       	brcs	.+6      	; 0x9246 <distance_rb2+0x450>
    9240:	63 96       	adiw	r28, 0x13	; 19
    9242:	1f ae       	std	Y+63, r1	; 0x3f
    9244:	63 97       	sbiw	r28, 0x13	; 19
    9246:	61 96       	adiw	r28, 0x11	; 17
    9248:	8f ad       	ldd	r24, Y+63	; 0x3f
    924a:	61 97       	sbiw	r28, 0x11	; 17
    924c:	63 96       	adiw	r28, 0x13	; 19
    924e:	9f ad       	ldd	r25, Y+63	; 0x3f
    9250:	63 97       	sbiw	r28, 0x13	; 19
    9252:	89 2b       	or	r24, r25
    9254:	61 96       	adiw	r28, 0x11	; 17
    9256:	8f af       	std	Y+63, r24	; 0x3f
    9258:	61 97       	sbiw	r28, 0x11	; 17
    925a:	62 96       	adiw	r28, 0x12	; 18
    925c:	8f ad       	ldd	r24, Y+63	; 0x3f
    925e:	62 97       	sbiw	r28, 0x12	; 18
    9260:	27 96       	adiw	r28, 0x07	; 7
    9262:	8f af       	std	Y+63, r24	; 0x3f
    9264:	27 97       	sbiw	r28, 0x07	; 7
    9266:	9f ad       	ldd	r25, Y+63	; 0x3f
    9268:	8f a9       	ldd	r24, Y+55	; 0x37
    926a:	98 1b       	sub	r25, r24
    926c:	28 96       	adiw	r28, 0x08	; 8
    926e:	9f af       	std	Y+63, r25	; 0x3f
    9270:	28 97       	sbiw	r28, 0x08	; 8
    9272:	91 e0       	ldi	r25, 0x01	; 1
    9274:	64 96       	adiw	r28, 0x14	; 20
    9276:	9f af       	std	Y+63, r25	; 0x3f
    9278:	64 97       	sbiw	r28, 0x14	; 20
    927a:	28 96       	adiw	r28, 0x08	; 8
    927c:	8f ad       	ldd	r24, Y+63	; 0x3f
    927e:	28 97       	sbiw	r28, 0x08	; 8
    9280:	9f ad       	ldd	r25, Y+63	; 0x3f
    9282:	98 17       	cp	r25, r24
    9284:	18 f0       	brcs	.+6      	; 0x928c <distance_rb2+0x496>
    9286:	64 96       	adiw	r28, 0x14	; 20
    9288:	1f ae       	std	Y+63, r1	; 0x3f
    928a:	64 97       	sbiw	r28, 0x14	; 20
    928c:	28 96       	adiw	r28, 0x08	; 8
    928e:	8f ad       	ldd	r24, Y+63	; 0x3f
    9290:	28 97       	sbiw	r28, 0x08	; 8
    9292:	61 96       	adiw	r28, 0x11	; 17
    9294:	9f ad       	ldd	r25, Y+63	; 0x3f
    9296:	61 97       	sbiw	r28, 0x11	; 17
    9298:	89 1b       	sub	r24, r25
    929a:	65 96       	adiw	r28, 0x15	; 21
    929c:	8f af       	std	Y+63, r24	; 0x3f
    929e:	65 97       	sbiw	r28, 0x15	; 21
    92a0:	81 e0       	ldi	r24, 0x01	; 1
    92a2:	66 96       	adiw	r28, 0x16	; 22
    92a4:	8f af       	std	Y+63, r24	; 0x3f
    92a6:	66 97       	sbiw	r28, 0x16	; 22
    92a8:	65 96       	adiw	r28, 0x15	; 21
    92aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    92ac:	65 97       	sbiw	r28, 0x15	; 21
    92ae:	28 96       	adiw	r28, 0x08	; 8
    92b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    92b2:	28 97       	sbiw	r28, 0x08	; 8
    92b4:	89 17       	cp	r24, r25
    92b6:	18 f0       	brcs	.+6      	; 0x92be <distance_rb2+0x4c8>
    92b8:	66 96       	adiw	r28, 0x16	; 22
    92ba:	1f ae       	std	Y+63, r1	; 0x3f
    92bc:	66 97       	sbiw	r28, 0x16	; 22
    92be:	64 96       	adiw	r28, 0x14	; 20
    92c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    92c2:	64 97       	sbiw	r28, 0x14	; 20
    92c4:	66 96       	adiw	r28, 0x16	; 22
    92c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    92c8:	66 97       	sbiw	r28, 0x16	; 22
    92ca:	98 2b       	or	r25, r24
    92cc:	64 96       	adiw	r28, 0x14	; 20
    92ce:	9f af       	std	Y+63, r25	; 0x3f
    92d0:	64 97       	sbiw	r28, 0x14	; 20
    92d2:	65 96       	adiw	r28, 0x15	; 21
    92d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    92d6:	65 97       	sbiw	r28, 0x15	; 21
    92d8:	28 96       	adiw	r28, 0x08	; 8
    92da:	9f af       	std	Y+63, r25	; 0x3f
    92dc:	28 97       	sbiw	r28, 0x08	; 8
    92de:	21 96       	adiw	r28, 0x01	; 1
    92e0:	8f ad       	ldd	r24, Y+63	; 0x3f
    92e2:	21 97       	sbiw	r28, 0x01	; 1
    92e4:	98 ad       	ldd	r25, Y+56	; 0x38
    92e6:	89 1b       	sub	r24, r25
    92e8:	29 96       	adiw	r28, 0x09	; 9
    92ea:	8f af       	std	Y+63, r24	; 0x3f
    92ec:	29 97       	sbiw	r28, 0x09	; 9
    92ee:	81 e0       	ldi	r24, 0x01	; 1
    92f0:	67 96       	adiw	r28, 0x17	; 23
    92f2:	8f af       	std	Y+63, r24	; 0x3f
    92f4:	67 97       	sbiw	r28, 0x17	; 23
    92f6:	29 96       	adiw	r28, 0x09	; 9
    92f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    92fa:	29 97       	sbiw	r28, 0x09	; 9
    92fc:	21 96       	adiw	r28, 0x01	; 1
    92fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    9300:	21 97       	sbiw	r28, 0x01	; 1
    9302:	89 17       	cp	r24, r25
    9304:	18 f0       	brcs	.+6      	; 0x930c <distance_rb2+0x516>
    9306:	67 96       	adiw	r28, 0x17	; 23
    9308:	1f ae       	std	Y+63, r1	; 0x3f
    930a:	67 97       	sbiw	r28, 0x17	; 23
    930c:	29 96       	adiw	r28, 0x09	; 9
    930e:	9f ad       	ldd	r25, Y+63	; 0x3f
    9310:	29 97       	sbiw	r28, 0x09	; 9
    9312:	64 96       	adiw	r28, 0x14	; 20
    9314:	8f ad       	ldd	r24, Y+63	; 0x3f
    9316:	64 97       	sbiw	r28, 0x14	; 20
    9318:	98 1b       	sub	r25, r24
    931a:	68 96       	adiw	r28, 0x18	; 24
    931c:	9f af       	std	Y+63, r25	; 0x3f
    931e:	68 97       	sbiw	r28, 0x18	; 24
    9320:	91 e0       	ldi	r25, 0x01	; 1
    9322:	69 96       	adiw	r28, 0x19	; 25
    9324:	9f af       	std	Y+63, r25	; 0x3f
    9326:	69 97       	sbiw	r28, 0x19	; 25
    9328:	68 96       	adiw	r28, 0x18	; 24
    932a:	8f ad       	ldd	r24, Y+63	; 0x3f
    932c:	68 97       	sbiw	r28, 0x18	; 24
    932e:	29 96       	adiw	r28, 0x09	; 9
    9330:	9f ad       	ldd	r25, Y+63	; 0x3f
    9332:	29 97       	sbiw	r28, 0x09	; 9
    9334:	98 17       	cp	r25, r24
    9336:	18 f0       	brcs	.+6      	; 0x933e <distance_rb2+0x548>
    9338:	69 96       	adiw	r28, 0x19	; 25
    933a:	1f ae       	std	Y+63, r1	; 0x3f
    933c:	69 97       	sbiw	r28, 0x19	; 25
    933e:	67 96       	adiw	r28, 0x17	; 23
    9340:	8f ad       	ldd	r24, Y+63	; 0x3f
    9342:	67 97       	sbiw	r28, 0x17	; 23
    9344:	69 96       	adiw	r28, 0x19	; 25
    9346:	9f ad       	ldd	r25, Y+63	; 0x3f
    9348:	69 97       	sbiw	r28, 0x19	; 25
    934a:	89 2b       	or	r24, r25
    934c:	67 96       	adiw	r28, 0x17	; 23
    934e:	8f af       	std	Y+63, r24	; 0x3f
    9350:	67 97       	sbiw	r28, 0x17	; 23
    9352:	68 96       	adiw	r28, 0x18	; 24
    9354:	8f ad       	ldd	r24, Y+63	; 0x3f
    9356:	68 97       	sbiw	r28, 0x18	; 24
    9358:	29 96       	adiw	r28, 0x09	; 9
    935a:	8f af       	std	Y+63, r24	; 0x3f
    935c:	29 97       	sbiw	r28, 0x09	; 9
    935e:	22 96       	adiw	r28, 0x02	; 2
    9360:	9f ad       	ldd	r25, Y+63	; 0x3f
    9362:	22 97       	sbiw	r28, 0x02	; 2
    9364:	89 ad       	ldd	r24, Y+57	; 0x39
    9366:	98 1b       	sub	r25, r24
    9368:	2a 96       	adiw	r28, 0x0a	; 10
    936a:	9f af       	std	Y+63, r25	; 0x3f
    936c:	2a 97       	sbiw	r28, 0x0a	; 10
    936e:	91 e0       	ldi	r25, 0x01	; 1
    9370:	6a 96       	adiw	r28, 0x1a	; 26
    9372:	9f af       	std	Y+63, r25	; 0x3f
    9374:	6a 97       	sbiw	r28, 0x1a	; 26
    9376:	2a 96       	adiw	r28, 0x0a	; 10
    9378:	8f ad       	ldd	r24, Y+63	; 0x3f
    937a:	2a 97       	sbiw	r28, 0x0a	; 10
    937c:	22 96       	adiw	r28, 0x02	; 2
    937e:	9f ad       	ldd	r25, Y+63	; 0x3f
    9380:	22 97       	sbiw	r28, 0x02	; 2
    9382:	98 17       	cp	r25, r24
    9384:	18 f0       	brcs	.+6      	; 0x938c <distance_rb2+0x596>
    9386:	6a 96       	adiw	r28, 0x1a	; 26
    9388:	1f ae       	std	Y+63, r1	; 0x3f
    938a:	6a 97       	sbiw	r28, 0x1a	; 26
    938c:	2a 96       	adiw	r28, 0x0a	; 10
    938e:	8f ad       	ldd	r24, Y+63	; 0x3f
    9390:	2a 97       	sbiw	r28, 0x0a	; 10
    9392:	67 96       	adiw	r28, 0x17	; 23
    9394:	9f ad       	ldd	r25, Y+63	; 0x3f
    9396:	67 97       	sbiw	r28, 0x17	; 23
    9398:	89 1b       	sub	r24, r25
    939a:	6b 96       	adiw	r28, 0x1b	; 27
    939c:	8f af       	std	Y+63, r24	; 0x3f
    939e:	6b 97       	sbiw	r28, 0x1b	; 27
    93a0:	81 e0       	ldi	r24, 0x01	; 1
    93a2:	6c 96       	adiw	r28, 0x1c	; 28
    93a4:	8f af       	std	Y+63, r24	; 0x3f
    93a6:	6c 97       	sbiw	r28, 0x1c	; 28
    93a8:	6b 96       	adiw	r28, 0x1b	; 27
    93aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    93ac:	6b 97       	sbiw	r28, 0x1b	; 27
    93ae:	2a 96       	adiw	r28, 0x0a	; 10
    93b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    93b2:	2a 97       	sbiw	r28, 0x0a	; 10
    93b4:	89 17       	cp	r24, r25
    93b6:	18 f0       	brcs	.+6      	; 0x93be <distance_rb2+0x5c8>
    93b8:	6c 96       	adiw	r28, 0x1c	; 28
    93ba:	1f ae       	std	Y+63, r1	; 0x3f
    93bc:	6c 97       	sbiw	r28, 0x1c	; 28
    93be:	6a 96       	adiw	r28, 0x1a	; 26
    93c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    93c2:	6a 97       	sbiw	r28, 0x1a	; 26
    93c4:	6c 96       	adiw	r28, 0x1c	; 28
    93c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    93c8:	6c 97       	sbiw	r28, 0x1c	; 28
    93ca:	98 2b       	or	r25, r24
    93cc:	6a 96       	adiw	r28, 0x1a	; 26
    93ce:	9f af       	std	Y+63, r25	; 0x3f
    93d0:	6a 97       	sbiw	r28, 0x1a	; 26
    93d2:	6b 96       	adiw	r28, 0x1b	; 27
    93d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    93d6:	6b 97       	sbiw	r28, 0x1b	; 27
    93d8:	2a 96       	adiw	r28, 0x0a	; 10
    93da:	9f af       	std	Y+63, r25	; 0x3f
    93dc:	2a 97       	sbiw	r28, 0x0a	; 10
    93de:	23 96       	adiw	r28, 0x03	; 3
    93e0:	8f ad       	ldd	r24, Y+63	; 0x3f
    93e2:	23 97       	sbiw	r28, 0x03	; 3
    93e4:	9a ad       	ldd	r25, Y+58	; 0x3a
    93e6:	89 1b       	sub	r24, r25
    93e8:	2b 96       	adiw	r28, 0x0b	; 11
    93ea:	8f af       	std	Y+63, r24	; 0x3f
    93ec:	2b 97       	sbiw	r28, 0x0b	; 11
    93ee:	81 e0       	ldi	r24, 0x01	; 1
    93f0:	6d 96       	adiw	r28, 0x1d	; 29
    93f2:	8f af       	std	Y+63, r24	; 0x3f
    93f4:	6d 97       	sbiw	r28, 0x1d	; 29
    93f6:	2b 96       	adiw	r28, 0x0b	; 11
    93f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    93fa:	2b 97       	sbiw	r28, 0x0b	; 11
    93fc:	23 96       	adiw	r28, 0x03	; 3
    93fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    9400:	23 97       	sbiw	r28, 0x03	; 3
    9402:	89 17       	cp	r24, r25
    9404:	18 f0       	brcs	.+6      	; 0x940c <distance_rb2+0x616>
    9406:	6d 96       	adiw	r28, 0x1d	; 29
    9408:	1f ae       	std	Y+63, r1	; 0x3f
    940a:	6d 97       	sbiw	r28, 0x1d	; 29
    940c:	2b 96       	adiw	r28, 0x0b	; 11
    940e:	9f ad       	ldd	r25, Y+63	; 0x3f
    9410:	2b 97       	sbiw	r28, 0x0b	; 11
    9412:	6a 96       	adiw	r28, 0x1a	; 26
    9414:	8f ad       	ldd	r24, Y+63	; 0x3f
    9416:	6a 97       	sbiw	r28, 0x1a	; 26
    9418:	98 1b       	sub	r25, r24
    941a:	6e 96       	adiw	r28, 0x1e	; 30
    941c:	9f af       	std	Y+63, r25	; 0x3f
    941e:	6e 97       	sbiw	r28, 0x1e	; 30
    9420:	91 e0       	ldi	r25, 0x01	; 1
    9422:	6f 96       	adiw	r28, 0x1f	; 31
    9424:	9f af       	std	Y+63, r25	; 0x3f
    9426:	6f 97       	sbiw	r28, 0x1f	; 31
    9428:	6e 96       	adiw	r28, 0x1e	; 30
    942a:	8f ad       	ldd	r24, Y+63	; 0x3f
    942c:	6e 97       	sbiw	r28, 0x1e	; 30
    942e:	2b 96       	adiw	r28, 0x0b	; 11
    9430:	9f ad       	ldd	r25, Y+63	; 0x3f
    9432:	2b 97       	sbiw	r28, 0x0b	; 11
    9434:	98 17       	cp	r25, r24
    9436:	18 f0       	brcs	.+6      	; 0x943e <distance_rb2+0x648>
    9438:	6f 96       	adiw	r28, 0x1f	; 31
    943a:	1f ae       	std	Y+63, r1	; 0x3f
    943c:	6f 97       	sbiw	r28, 0x1f	; 31
    943e:	6d 96       	adiw	r28, 0x1d	; 29
    9440:	8f ad       	ldd	r24, Y+63	; 0x3f
    9442:	6d 97       	sbiw	r28, 0x1d	; 29
    9444:	6f 96       	adiw	r28, 0x1f	; 31
    9446:	9f ad       	ldd	r25, Y+63	; 0x3f
    9448:	6f 97       	sbiw	r28, 0x1f	; 31
    944a:	89 2b       	or	r24, r25
    944c:	6d 96       	adiw	r28, 0x1d	; 29
    944e:	8f af       	std	Y+63, r24	; 0x3f
    9450:	6d 97       	sbiw	r28, 0x1d	; 29
    9452:	6e 96       	adiw	r28, 0x1e	; 30
    9454:	8f ad       	ldd	r24, Y+63	; 0x3f
    9456:	6e 97       	sbiw	r28, 0x1e	; 30
    9458:	2b 96       	adiw	r28, 0x0b	; 11
    945a:	8f af       	std	Y+63, r24	; 0x3f
    945c:	2b 97       	sbiw	r28, 0x0b	; 11
    945e:	24 96       	adiw	r28, 0x04	; 4
    9460:	9f ad       	ldd	r25, Y+63	; 0x3f
    9462:	24 97       	sbiw	r28, 0x04	; 4
    9464:	8b ad       	ldd	r24, Y+59	; 0x3b
    9466:	98 1b       	sub	r25, r24
    9468:	2c 96       	adiw	r28, 0x0c	; 12
    946a:	9f af       	std	Y+63, r25	; 0x3f
    946c:	2c 97       	sbiw	r28, 0x0c	; 12
    946e:	2c 96       	adiw	r28, 0x0c	; 12
    9470:	8f ad       	ldd	r24, Y+63	; 0x3f
    9472:	2c 97       	sbiw	r28, 0x0c	; 12
    9474:	6d 96       	adiw	r28, 0x1d	; 29
    9476:	9f ad       	ldd	r25, Y+63	; 0x3f
    9478:	6d 97       	sbiw	r28, 0x1d	; 29
    947a:	89 1b       	sub	r24, r25
    947c:	2c 96       	adiw	r28, 0x0c	; 12
    947e:	8f af       	std	Y+63, r24	; 0x3f
    9480:	2c 97       	sbiw	r28, 0x0c	; 12
    9482:	25 96       	adiw	r28, 0x05	; 5
    9484:	8f ad       	ldd	r24, Y+63	; 0x3f
    9486:	25 97       	sbiw	r28, 0x05	; 5
    9488:	8c af       	std	Y+60, r24	; 0x3c
    948a:	26 96       	adiw	r28, 0x06	; 6
    948c:	9f ad       	ldd	r25, Y+63	; 0x3f
    948e:	26 97       	sbiw	r28, 0x06	; 6
    9490:	9d af       	std	Y+61, r25	; 0x3d
    9492:	27 96       	adiw	r28, 0x07	; 7
    9494:	8f ad       	ldd	r24, Y+63	; 0x3f
    9496:	27 97       	sbiw	r28, 0x07	; 7
    9498:	8e af       	std	Y+62, r24	; 0x3e
    949a:	28 96       	adiw	r28, 0x08	; 8
    949c:	9f ad       	ldd	r25, Y+63	; 0x3f
    949e:	28 97       	sbiw	r28, 0x08	; 8
    94a0:	9f af       	std	Y+63, r25	; 0x3f
    94a2:	29 96       	adiw	r28, 0x09	; 9
    94a4:	8f ad       	ldd	r24, Y+63	; 0x3f
    94a6:	29 97       	sbiw	r28, 0x09	; 9
    94a8:	21 96       	adiw	r28, 0x01	; 1
    94aa:	8f af       	std	Y+63, r24	; 0x3f
    94ac:	21 97       	sbiw	r28, 0x01	; 1
    94ae:	2a 96       	adiw	r28, 0x0a	; 10
    94b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    94b2:	2a 97       	sbiw	r28, 0x0a	; 10
    94b4:	22 96       	adiw	r28, 0x02	; 2
    94b6:	9f af       	std	Y+63, r25	; 0x3f
    94b8:	22 97       	sbiw	r28, 0x02	; 2
    94ba:	2b 96       	adiw	r28, 0x0b	; 11
    94bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    94be:	2b 97       	sbiw	r28, 0x0b	; 11
    94c0:	23 96       	adiw	r28, 0x03	; 3
    94c2:	8f af       	std	Y+63, r24	; 0x3f
    94c4:	23 97       	sbiw	r28, 0x03	; 3
    94c6:	2c 96       	adiw	r28, 0x0c	; 12
    94c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    94ca:	2c 97       	sbiw	r28, 0x0c	; 12
    94cc:	24 96       	adiw	r28, 0x04	; 4
    94ce:	9f af       	std	Y+63, r25	; 0x3f
    94d0:	24 97       	sbiw	r28, 0x04	; 4
    94d2:	8c ad       	ldd	r24, Y+60	; 0x3c
    94d4:	99 81       	ldd	r25, Y+1	; 0x01
    94d6:	89 0f       	add	r24, r25
    94d8:	a0 96       	adiw	r28, 0x20	; 32
    94da:	8f af       	std	Y+63, r24	; 0x3f
    94dc:	a0 97       	sbiw	r28, 0x20	; 32
    94de:	81 e0       	ldi	r24, 0x01	; 1
    94e0:	a8 96       	adiw	r28, 0x28	; 40
    94e2:	8f af       	std	Y+63, r24	; 0x3f
    94e4:	a8 97       	sbiw	r28, 0x28	; 40
    94e6:	a0 96       	adiw	r28, 0x20	; 32
    94e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    94ea:	a0 97       	sbiw	r28, 0x20	; 32
    94ec:	8c ad       	ldd	r24, Y+60	; 0x3c
    94ee:	98 17       	cp	r25, r24
    94f0:	18 f0       	brcs	.+6      	; 0x94f8 <distance_rb2+0x702>
    94f2:	a8 96       	adiw	r28, 0x28	; 40
    94f4:	1f ae       	std	Y+63, r1	; 0x3f
    94f6:	a8 97       	sbiw	r28, 0x28	; 40
    94f8:	9d ad       	ldd	r25, Y+61	; 0x3d
    94fa:	8a 81       	ldd	r24, Y+2	; 0x02
    94fc:	98 0f       	add	r25, r24
    94fe:	a1 96       	adiw	r28, 0x21	; 33
    9500:	9f af       	std	Y+63, r25	; 0x3f
    9502:	a1 97       	sbiw	r28, 0x21	; 33
    9504:	91 e0       	ldi	r25, 0x01	; 1
    9506:	a9 96       	adiw	r28, 0x29	; 41
    9508:	9f af       	std	Y+63, r25	; 0x3f
    950a:	a9 97       	sbiw	r28, 0x29	; 41
    950c:	a1 96       	adiw	r28, 0x21	; 33
    950e:	8f ad       	ldd	r24, Y+63	; 0x3f
    9510:	a1 97       	sbiw	r28, 0x21	; 33
    9512:	9d ad       	ldd	r25, Y+61	; 0x3d
    9514:	89 17       	cp	r24, r25
    9516:	18 f0       	brcs	.+6      	; 0x951e <distance_rb2+0x728>
    9518:	a9 96       	adiw	r28, 0x29	; 41
    951a:	1f ae       	std	Y+63, r1	; 0x3f
    951c:	a9 97       	sbiw	r28, 0x29	; 41
    951e:	a8 96       	adiw	r28, 0x28	; 40
    9520:	8f ad       	ldd	r24, Y+63	; 0x3f
    9522:	a8 97       	sbiw	r28, 0x28	; 40
    9524:	a1 96       	adiw	r28, 0x21	; 33
    9526:	9f ad       	ldd	r25, Y+63	; 0x3f
    9528:	a1 97       	sbiw	r28, 0x21	; 33
    952a:	89 0f       	add	r24, r25
    952c:	aa 96       	adiw	r28, 0x2a	; 42
    952e:	8f af       	std	Y+63, r24	; 0x3f
    9530:	aa 97       	sbiw	r28, 0x2a	; 42
    9532:	81 e0       	ldi	r24, 0x01	; 1
    9534:	ab 96       	adiw	r28, 0x2b	; 43
    9536:	8f af       	std	Y+63, r24	; 0x3f
    9538:	ab 97       	sbiw	r28, 0x2b	; 43
    953a:	aa 96       	adiw	r28, 0x2a	; 42
    953c:	9f ad       	ldd	r25, Y+63	; 0x3f
    953e:	aa 97       	sbiw	r28, 0x2a	; 42
    9540:	a1 96       	adiw	r28, 0x21	; 33
    9542:	8f ad       	ldd	r24, Y+63	; 0x3f
    9544:	a1 97       	sbiw	r28, 0x21	; 33
    9546:	98 17       	cp	r25, r24
    9548:	18 f0       	brcs	.+6      	; 0x9550 <distance_rb2+0x75a>
    954a:	ab 96       	adiw	r28, 0x2b	; 43
    954c:	1f ae       	std	Y+63, r1	; 0x3f
    954e:	ab 97       	sbiw	r28, 0x2b	; 43
    9550:	a9 96       	adiw	r28, 0x29	; 41
    9552:	9f ad       	ldd	r25, Y+63	; 0x3f
    9554:	a9 97       	sbiw	r28, 0x29	; 41
    9556:	ab 96       	adiw	r28, 0x2b	; 43
    9558:	8f ad       	ldd	r24, Y+63	; 0x3f
    955a:	ab 97       	sbiw	r28, 0x2b	; 43
    955c:	98 2b       	or	r25, r24
    955e:	a9 96       	adiw	r28, 0x29	; 41
    9560:	9f af       	std	Y+63, r25	; 0x3f
    9562:	a9 97       	sbiw	r28, 0x29	; 41
    9564:	aa 96       	adiw	r28, 0x2a	; 42
    9566:	9f ad       	ldd	r25, Y+63	; 0x3f
    9568:	aa 97       	sbiw	r28, 0x2a	; 42
    956a:	a1 96       	adiw	r28, 0x21	; 33
    956c:	9f af       	std	Y+63, r25	; 0x3f
    956e:	a1 97       	sbiw	r28, 0x21	; 33
    9570:	8e ad       	ldd	r24, Y+62	; 0x3e
    9572:	9b 81       	ldd	r25, Y+3	; 0x03
    9574:	89 0f       	add	r24, r25
    9576:	a2 96       	adiw	r28, 0x22	; 34
    9578:	8f af       	std	Y+63, r24	; 0x3f
    957a:	a2 97       	sbiw	r28, 0x22	; 34
    957c:	81 e0       	ldi	r24, 0x01	; 1
    957e:	ac 96       	adiw	r28, 0x2c	; 44
    9580:	8f af       	std	Y+63, r24	; 0x3f
    9582:	ac 97       	sbiw	r28, 0x2c	; 44
    9584:	a2 96       	adiw	r28, 0x22	; 34
    9586:	9f ad       	ldd	r25, Y+63	; 0x3f
    9588:	a2 97       	sbiw	r28, 0x22	; 34
    958a:	8e ad       	ldd	r24, Y+62	; 0x3e
    958c:	98 17       	cp	r25, r24
    958e:	18 f0       	brcs	.+6      	; 0x9596 <distance_rb2+0x7a0>
    9590:	ac 96       	adiw	r28, 0x2c	; 44
    9592:	1f ae       	std	Y+63, r1	; 0x3f
    9594:	ac 97       	sbiw	r28, 0x2c	; 44
    9596:	a9 96       	adiw	r28, 0x29	; 41
    9598:	9f ad       	ldd	r25, Y+63	; 0x3f
    959a:	a9 97       	sbiw	r28, 0x29	; 41
    959c:	a2 96       	adiw	r28, 0x22	; 34
    959e:	8f ad       	ldd	r24, Y+63	; 0x3f
    95a0:	a2 97       	sbiw	r28, 0x22	; 34
    95a2:	98 0f       	add	r25, r24
    95a4:	ad 96       	adiw	r28, 0x2d	; 45
    95a6:	9f af       	std	Y+63, r25	; 0x3f
    95a8:	ad 97       	sbiw	r28, 0x2d	; 45
    95aa:	91 e0       	ldi	r25, 0x01	; 1
    95ac:	ae 96       	adiw	r28, 0x2e	; 46
    95ae:	9f af       	std	Y+63, r25	; 0x3f
    95b0:	ae 97       	sbiw	r28, 0x2e	; 46
    95b2:	ad 96       	adiw	r28, 0x2d	; 45
    95b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    95b6:	ad 97       	sbiw	r28, 0x2d	; 45
    95b8:	a2 96       	adiw	r28, 0x22	; 34
    95ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    95bc:	a2 97       	sbiw	r28, 0x22	; 34
    95be:	89 17       	cp	r24, r25
    95c0:	18 f0       	brcs	.+6      	; 0x95c8 <distance_rb2+0x7d2>
    95c2:	ae 96       	adiw	r28, 0x2e	; 46
    95c4:	1f ae       	std	Y+63, r1	; 0x3f
    95c6:	ae 97       	sbiw	r28, 0x2e	; 46
    95c8:	ac 96       	adiw	r28, 0x2c	; 44
    95ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    95cc:	ac 97       	sbiw	r28, 0x2c	; 44
    95ce:	ae 96       	adiw	r28, 0x2e	; 46
    95d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    95d2:	ae 97       	sbiw	r28, 0x2e	; 46
    95d4:	89 2b       	or	r24, r25
    95d6:	ac 96       	adiw	r28, 0x2c	; 44
    95d8:	8f af       	std	Y+63, r24	; 0x3f
    95da:	ac 97       	sbiw	r28, 0x2c	; 44
    95dc:	ad 96       	adiw	r28, 0x2d	; 45
    95de:	8f ad       	ldd	r24, Y+63	; 0x3f
    95e0:	ad 97       	sbiw	r28, 0x2d	; 45
    95e2:	a2 96       	adiw	r28, 0x22	; 34
    95e4:	8f af       	std	Y+63, r24	; 0x3f
    95e6:	a2 97       	sbiw	r28, 0x22	; 34
    95e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    95ea:	8c 81       	ldd	r24, Y+4	; 0x04
    95ec:	98 0f       	add	r25, r24
    95ee:	a3 96       	adiw	r28, 0x23	; 35
    95f0:	9f af       	std	Y+63, r25	; 0x3f
    95f2:	a3 97       	sbiw	r28, 0x23	; 35
    95f4:	91 e0       	ldi	r25, 0x01	; 1
    95f6:	af 96       	adiw	r28, 0x2f	; 47
    95f8:	9f af       	std	Y+63, r25	; 0x3f
    95fa:	af 97       	sbiw	r28, 0x2f	; 47
    95fc:	a3 96       	adiw	r28, 0x23	; 35
    95fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    9600:	a3 97       	sbiw	r28, 0x23	; 35
    9602:	9f ad       	ldd	r25, Y+63	; 0x3f
    9604:	89 17       	cp	r24, r25
    9606:	18 f0       	brcs	.+6      	; 0x960e <distance_rb2+0x818>
    9608:	af 96       	adiw	r28, 0x2f	; 47
    960a:	1f ae       	std	Y+63, r1	; 0x3f
    960c:	af 97       	sbiw	r28, 0x2f	; 47
    960e:	ac 96       	adiw	r28, 0x2c	; 44
    9610:	8f ad       	ldd	r24, Y+63	; 0x3f
    9612:	ac 97       	sbiw	r28, 0x2c	; 44
    9614:	a3 96       	adiw	r28, 0x23	; 35
    9616:	9f ad       	ldd	r25, Y+63	; 0x3f
    9618:	a3 97       	sbiw	r28, 0x23	; 35
    961a:	89 0f       	add	r24, r25
    961c:	e0 96       	adiw	r28, 0x30	; 48
    961e:	8f af       	std	Y+63, r24	; 0x3f
    9620:	e0 97       	sbiw	r28, 0x30	; 48
    9622:	81 e0       	ldi	r24, 0x01	; 1
    9624:	e1 96       	adiw	r28, 0x31	; 49
    9626:	8f af       	std	Y+63, r24	; 0x3f
    9628:	e1 97       	sbiw	r28, 0x31	; 49
    962a:	e0 96       	adiw	r28, 0x30	; 48
    962c:	9f ad       	ldd	r25, Y+63	; 0x3f
    962e:	e0 97       	sbiw	r28, 0x30	; 48
    9630:	a3 96       	adiw	r28, 0x23	; 35
    9632:	8f ad       	ldd	r24, Y+63	; 0x3f
    9634:	a3 97       	sbiw	r28, 0x23	; 35
    9636:	98 17       	cp	r25, r24
    9638:	18 f0       	brcs	.+6      	; 0x9640 <distance_rb2+0x84a>
    963a:	e1 96       	adiw	r28, 0x31	; 49
    963c:	1f ae       	std	Y+63, r1	; 0x3f
    963e:	e1 97       	sbiw	r28, 0x31	; 49
    9640:	af 96       	adiw	r28, 0x2f	; 47
    9642:	9f ad       	ldd	r25, Y+63	; 0x3f
    9644:	af 97       	sbiw	r28, 0x2f	; 47
    9646:	e1 96       	adiw	r28, 0x31	; 49
    9648:	8f ad       	ldd	r24, Y+63	; 0x3f
    964a:	e1 97       	sbiw	r28, 0x31	; 49
    964c:	98 2b       	or	r25, r24
    964e:	af 96       	adiw	r28, 0x2f	; 47
    9650:	9f af       	std	Y+63, r25	; 0x3f
    9652:	af 97       	sbiw	r28, 0x2f	; 47
    9654:	e0 96       	adiw	r28, 0x30	; 48
    9656:	9f ad       	ldd	r25, Y+63	; 0x3f
    9658:	e0 97       	sbiw	r28, 0x30	; 48
    965a:	a3 96       	adiw	r28, 0x23	; 35
    965c:	9f af       	std	Y+63, r25	; 0x3f
    965e:	a3 97       	sbiw	r28, 0x23	; 35
    9660:	21 96       	adiw	r28, 0x01	; 1
    9662:	8f ad       	ldd	r24, Y+63	; 0x3f
    9664:	21 97       	sbiw	r28, 0x01	; 1
    9666:	9d 81       	ldd	r25, Y+5	; 0x05
    9668:	89 0f       	add	r24, r25
    966a:	a4 96       	adiw	r28, 0x24	; 36
    966c:	8f af       	std	Y+63, r24	; 0x3f
    966e:	a4 97       	sbiw	r28, 0x24	; 36
    9670:	81 e0       	ldi	r24, 0x01	; 1
    9672:	e2 96       	adiw	r28, 0x32	; 50
    9674:	8f af       	std	Y+63, r24	; 0x3f
    9676:	e2 97       	sbiw	r28, 0x32	; 50
    9678:	a4 96       	adiw	r28, 0x24	; 36
    967a:	9f ad       	ldd	r25, Y+63	; 0x3f
    967c:	a4 97       	sbiw	r28, 0x24	; 36
    967e:	21 96       	adiw	r28, 0x01	; 1
    9680:	8f ad       	ldd	r24, Y+63	; 0x3f
    9682:	21 97       	sbiw	r28, 0x01	; 1
    9684:	98 17       	cp	r25, r24
    9686:	18 f0       	brcs	.+6      	; 0x968e <distance_rb2+0x898>
    9688:	e2 96       	adiw	r28, 0x32	; 50
    968a:	1f ae       	std	Y+63, r1	; 0x3f
    968c:	e2 97       	sbiw	r28, 0x32	; 50
    968e:	af 96       	adiw	r28, 0x2f	; 47
    9690:	9f ad       	ldd	r25, Y+63	; 0x3f
    9692:	af 97       	sbiw	r28, 0x2f	; 47
    9694:	a4 96       	adiw	r28, 0x24	; 36
    9696:	8f ad       	ldd	r24, Y+63	; 0x3f
    9698:	a4 97       	sbiw	r28, 0x24	; 36
    969a:	98 0f       	add	r25, r24
    969c:	e3 96       	adiw	r28, 0x33	; 51
    969e:	9f af       	std	Y+63, r25	; 0x3f
    96a0:	e3 97       	sbiw	r28, 0x33	; 51
    96a2:	91 e0       	ldi	r25, 0x01	; 1
    96a4:	e4 96       	adiw	r28, 0x34	; 52
    96a6:	9f af       	std	Y+63, r25	; 0x3f
    96a8:	e4 97       	sbiw	r28, 0x34	; 52
    96aa:	e3 96       	adiw	r28, 0x33	; 51
    96ac:	8f ad       	ldd	r24, Y+63	; 0x3f
    96ae:	e3 97       	sbiw	r28, 0x33	; 51
    96b0:	a4 96       	adiw	r28, 0x24	; 36
    96b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    96b4:	a4 97       	sbiw	r28, 0x24	; 36
    96b6:	89 17       	cp	r24, r25
    96b8:	18 f0       	brcs	.+6      	; 0x96c0 <distance_rb2+0x8ca>
    96ba:	e4 96       	adiw	r28, 0x34	; 52
    96bc:	1f ae       	std	Y+63, r1	; 0x3f
    96be:	e4 97       	sbiw	r28, 0x34	; 52
    96c0:	e2 96       	adiw	r28, 0x32	; 50
    96c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    96c4:	e2 97       	sbiw	r28, 0x32	; 50
    96c6:	e4 96       	adiw	r28, 0x34	; 52
    96c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    96ca:	e4 97       	sbiw	r28, 0x34	; 52
    96cc:	89 2b       	or	r24, r25
    96ce:	e2 96       	adiw	r28, 0x32	; 50
    96d0:	8f af       	std	Y+63, r24	; 0x3f
    96d2:	e2 97       	sbiw	r28, 0x32	; 50
    96d4:	e3 96       	adiw	r28, 0x33	; 51
    96d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    96d8:	e3 97       	sbiw	r28, 0x33	; 51
    96da:	a4 96       	adiw	r28, 0x24	; 36
    96dc:	8f af       	std	Y+63, r24	; 0x3f
    96de:	a4 97       	sbiw	r28, 0x24	; 36
    96e0:	22 96       	adiw	r28, 0x02	; 2
    96e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    96e4:	22 97       	sbiw	r28, 0x02	; 2
    96e6:	8e 81       	ldd	r24, Y+6	; 0x06
    96e8:	98 0f       	add	r25, r24
    96ea:	a5 96       	adiw	r28, 0x25	; 37
    96ec:	9f af       	std	Y+63, r25	; 0x3f
    96ee:	a5 97       	sbiw	r28, 0x25	; 37
    96f0:	91 e0       	ldi	r25, 0x01	; 1
    96f2:	e5 96       	adiw	r28, 0x35	; 53
    96f4:	9f af       	std	Y+63, r25	; 0x3f
    96f6:	e5 97       	sbiw	r28, 0x35	; 53
    96f8:	a5 96       	adiw	r28, 0x25	; 37
    96fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    96fc:	a5 97       	sbiw	r28, 0x25	; 37
    96fe:	22 96       	adiw	r28, 0x02	; 2
    9700:	9f ad       	ldd	r25, Y+63	; 0x3f
    9702:	22 97       	sbiw	r28, 0x02	; 2
    9704:	89 17       	cp	r24, r25
    9706:	18 f0       	brcs	.+6      	; 0x970e <distance_rb2+0x918>
    9708:	e5 96       	adiw	r28, 0x35	; 53
    970a:	1f ae       	std	Y+63, r1	; 0x3f
    970c:	e5 97       	sbiw	r28, 0x35	; 53
    970e:	e2 96       	adiw	r28, 0x32	; 50
    9710:	8f ad       	ldd	r24, Y+63	; 0x3f
    9712:	e2 97       	sbiw	r28, 0x32	; 50
    9714:	a5 96       	adiw	r28, 0x25	; 37
    9716:	9f ad       	ldd	r25, Y+63	; 0x3f
    9718:	a5 97       	sbiw	r28, 0x25	; 37
    971a:	89 0f       	add	r24, r25
    971c:	e6 96       	adiw	r28, 0x36	; 54
    971e:	8f af       	std	Y+63, r24	; 0x3f
    9720:	e6 97       	sbiw	r28, 0x36	; 54
    9722:	81 e0       	ldi	r24, 0x01	; 1
    9724:	e7 96       	adiw	r28, 0x37	; 55
    9726:	8f af       	std	Y+63, r24	; 0x3f
    9728:	e7 97       	sbiw	r28, 0x37	; 55
    972a:	e6 96       	adiw	r28, 0x36	; 54
    972c:	9f ad       	ldd	r25, Y+63	; 0x3f
    972e:	e6 97       	sbiw	r28, 0x36	; 54
    9730:	a5 96       	adiw	r28, 0x25	; 37
    9732:	8f ad       	ldd	r24, Y+63	; 0x3f
    9734:	a5 97       	sbiw	r28, 0x25	; 37
    9736:	98 17       	cp	r25, r24
    9738:	18 f0       	brcs	.+6      	; 0x9740 <distance_rb2+0x94a>
    973a:	e7 96       	adiw	r28, 0x37	; 55
    973c:	1f ae       	std	Y+63, r1	; 0x3f
    973e:	e7 97       	sbiw	r28, 0x37	; 55
    9740:	e5 96       	adiw	r28, 0x35	; 53
    9742:	9f ad       	ldd	r25, Y+63	; 0x3f
    9744:	e5 97       	sbiw	r28, 0x35	; 53
    9746:	e7 96       	adiw	r28, 0x37	; 55
    9748:	8f ad       	ldd	r24, Y+63	; 0x3f
    974a:	e7 97       	sbiw	r28, 0x37	; 55
    974c:	98 2b       	or	r25, r24
    974e:	e5 96       	adiw	r28, 0x35	; 53
    9750:	9f af       	std	Y+63, r25	; 0x3f
    9752:	e5 97       	sbiw	r28, 0x35	; 53
    9754:	e6 96       	adiw	r28, 0x36	; 54
    9756:	9f ad       	ldd	r25, Y+63	; 0x3f
    9758:	e6 97       	sbiw	r28, 0x36	; 54
    975a:	a5 96       	adiw	r28, 0x25	; 37
    975c:	9f af       	std	Y+63, r25	; 0x3f
    975e:	a5 97       	sbiw	r28, 0x25	; 37
    9760:	23 96       	adiw	r28, 0x03	; 3
    9762:	8f ad       	ldd	r24, Y+63	; 0x3f
    9764:	23 97       	sbiw	r28, 0x03	; 3
    9766:	9f 81       	ldd	r25, Y+7	; 0x07
    9768:	89 0f       	add	r24, r25
    976a:	a6 96       	adiw	r28, 0x26	; 38
    976c:	8f af       	std	Y+63, r24	; 0x3f
    976e:	a6 97       	sbiw	r28, 0x26	; 38
    9770:	81 e0       	ldi	r24, 0x01	; 1
    9772:	e8 96       	adiw	r28, 0x38	; 56
    9774:	8f af       	std	Y+63, r24	; 0x3f
    9776:	e8 97       	sbiw	r28, 0x38	; 56
    9778:	a6 96       	adiw	r28, 0x26	; 38
    977a:	9f ad       	ldd	r25, Y+63	; 0x3f
    977c:	a6 97       	sbiw	r28, 0x26	; 38
    977e:	23 96       	adiw	r28, 0x03	; 3
    9780:	8f ad       	ldd	r24, Y+63	; 0x3f
    9782:	23 97       	sbiw	r28, 0x03	; 3
    9784:	98 17       	cp	r25, r24
    9786:	18 f0       	brcs	.+6      	; 0x978e <distance_rb2+0x998>
    9788:	e8 96       	adiw	r28, 0x38	; 56
    978a:	1f ae       	std	Y+63, r1	; 0x3f
    978c:	e8 97       	sbiw	r28, 0x38	; 56
    978e:	e5 96       	adiw	r28, 0x35	; 53
    9790:	9f ad       	ldd	r25, Y+63	; 0x3f
    9792:	e5 97       	sbiw	r28, 0x35	; 53
    9794:	a6 96       	adiw	r28, 0x26	; 38
    9796:	8f ad       	ldd	r24, Y+63	; 0x3f
    9798:	a6 97       	sbiw	r28, 0x26	; 38
    979a:	98 0f       	add	r25, r24
    979c:	e9 96       	adiw	r28, 0x39	; 57
    979e:	9f af       	std	Y+63, r25	; 0x3f
    97a0:	e9 97       	sbiw	r28, 0x39	; 57
    97a2:	91 e0       	ldi	r25, 0x01	; 1
    97a4:	ea 96       	adiw	r28, 0x3a	; 58
    97a6:	9f af       	std	Y+63, r25	; 0x3f
    97a8:	ea 97       	sbiw	r28, 0x3a	; 58
    97aa:	e9 96       	adiw	r28, 0x39	; 57
    97ac:	8f ad       	ldd	r24, Y+63	; 0x3f
    97ae:	e9 97       	sbiw	r28, 0x39	; 57
    97b0:	a6 96       	adiw	r28, 0x26	; 38
    97b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    97b4:	a6 97       	sbiw	r28, 0x26	; 38
    97b6:	89 17       	cp	r24, r25
    97b8:	18 f0       	brcs	.+6      	; 0x97c0 <distance_rb2+0x9ca>
    97ba:	ea 96       	adiw	r28, 0x3a	; 58
    97bc:	1f ae       	std	Y+63, r1	; 0x3f
    97be:	ea 97       	sbiw	r28, 0x3a	; 58
    97c0:	e8 96       	adiw	r28, 0x38	; 56
    97c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    97c4:	e8 97       	sbiw	r28, 0x38	; 56
    97c6:	ea 96       	adiw	r28, 0x3a	; 58
    97c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    97ca:	ea 97       	sbiw	r28, 0x3a	; 58
    97cc:	89 2b       	or	r24, r25
    97ce:	e8 96       	adiw	r28, 0x38	; 56
    97d0:	8f af       	std	Y+63, r24	; 0x3f
    97d2:	e8 97       	sbiw	r28, 0x38	; 56
    97d4:	e9 96       	adiw	r28, 0x39	; 57
    97d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    97d8:	e9 97       	sbiw	r28, 0x39	; 57
    97da:	a6 96       	adiw	r28, 0x26	; 38
    97dc:	8f af       	std	Y+63, r24	; 0x3f
    97de:	a6 97       	sbiw	r28, 0x26	; 38
    97e0:	24 96       	adiw	r28, 0x04	; 4
    97e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    97e4:	24 97       	sbiw	r28, 0x04	; 4
    97e6:	88 85       	ldd	r24, Y+8	; 0x08
    97e8:	98 0f       	add	r25, r24
    97ea:	a7 96       	adiw	r28, 0x27	; 39
    97ec:	9f af       	std	Y+63, r25	; 0x3f
    97ee:	a7 97       	sbiw	r28, 0x27	; 39
    97f0:	e8 96       	adiw	r28, 0x38	; 56
    97f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    97f4:	e8 97       	sbiw	r28, 0x38	; 56
    97f6:	a7 96       	adiw	r28, 0x27	; 39
    97f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    97fa:	a7 97       	sbiw	r28, 0x27	; 39
    97fc:	89 0f       	add	r24, r25
    97fe:	a7 96       	adiw	r28, 0x27	; 39
    9800:	8f af       	std	Y+63, r24	; 0x3f
    9802:	a7 97       	sbiw	r28, 0x27	; 39
    9804:	a0 96       	adiw	r28, 0x20	; 32
    9806:	af ac       	ldd	r10, Y+63	; 0x3f
    9808:	a0 97       	sbiw	r28, 0x20	; 32
    980a:	a1 96       	adiw	r28, 0x21	; 33
    980c:	bf ac       	ldd	r11, Y+63	; 0x3f
    980e:	a1 97       	sbiw	r28, 0x21	; 33
    9810:	a2 96       	adiw	r28, 0x22	; 34
    9812:	cf ac       	ldd	r12, Y+63	; 0x3f
    9814:	a2 97       	sbiw	r28, 0x22	; 34
    9816:	a3 96       	adiw	r28, 0x23	; 35
    9818:	df ac       	ldd	r13, Y+63	; 0x3f
    981a:	a3 97       	sbiw	r28, 0x23	; 35
    981c:	a4 96       	adiw	r28, 0x24	; 36
    981e:	ef ac       	ldd	r14, Y+63	; 0x3f
    9820:	a4 97       	sbiw	r28, 0x24	; 36
    9822:	a5 96       	adiw	r28, 0x25	; 37
    9824:	ff ac       	ldd	r15, Y+63	; 0x3f
    9826:	a5 97       	sbiw	r28, 0x25	; 37
    9828:	a6 96       	adiw	r28, 0x26	; 38
    982a:	0f ad       	ldd	r16, Y+63	; 0x3f
    982c:	a6 97       	sbiw	r28, 0x26	; 38
    982e:	a7 96       	adiw	r28, 0x27	; 39
    9830:	1f ad       	ldd	r17, Y+63	; 0x3f
    9832:	a7 97       	sbiw	r28, 0x27	; 39
    9834:	2a 2d       	mov	r18, r10
    9836:	3b 2d       	mov	r19, r11
    9838:	4c 2d       	mov	r20, r12
    983a:	5d 2d       	mov	r21, r13
    983c:	6e 2d       	mov	r22, r14
    983e:	7f 2d       	mov	r23, r15
    9840:	80 2f       	mov	r24, r16
    9842:	91 2f       	mov	r25, r17
    9844:	aa 24       	eor	r10, r10
    9846:	68 94       	set
    9848:	a6 f8       	bld	r10, 6
    984a:	0f 2e       	mov	r0, r31
    984c:	f2 e4       	ldi	r31, 0x42	; 66
    984e:	bf 2e       	mov	r11, r31
    9850:	f0 2d       	mov	r31, r0
    9852:	0f 2e       	mov	r0, r31
    9854:	ff e0       	ldi	r31, 0x0F	; 15
    9856:	cf 2e       	mov	r12, r31
    9858:	f0 2d       	mov	r31, r0
    985a:	dd 24       	eor	r13, r13
    985c:	ee 24       	eor	r14, r14
    985e:	ff 24       	eor	r15, r15
    9860:	00 e0       	ldi	r16, 0x00	; 0
    9862:	10 e0       	ldi	r17, 0x00	; 0
    9864:	0e 94 12 01 	call	0x224	; 0x224 <__udivdi3>
    9868:	a2 2e       	mov	r10, r18
    986a:	b3 2e       	mov	r11, r19
    986c:	c4 2e       	mov	r12, r20
    986e:	d5 2e       	mov	r13, r21
    9870:	e6 2e       	mov	r14, r22
    9872:	f7 2e       	mov	r15, r23
    9874:	08 2f       	mov	r16, r24
    9876:	19 2f       	mov	r17, r25
    9878:	2a 2d       	mov	r18, r10
    987a:	3b 2d       	mov	r19, r11
    987c:	4c 2d       	mov	r20, r12
    987e:	5d 2d       	mov	r21, r13
    9880:	6e 2d       	mov	r22, r14
    9882:	7f 2d       	mov	r23, r15
    9884:	80 2f       	mov	r24, r16
    9886:	91 2f       	mov	r25, r17
    9888:	20 93 cd 03 	sts	0x03CD, r18
    988c:	30 93 ce 03 	sts	0x03CE, r19
    9890:	40 93 cf 03 	sts	0x03CF, r20
    9894:	50 93 d0 03 	sts	0x03D0, r21
    9898:	60 93 d1 03 	sts	0x03D1, r22
    989c:	70 93 d2 03 	sts	0x03D2, r23
    98a0:	80 93 d3 03 	sts	0x03D3, r24
    98a4:	90 93 d4 03 	sts	0x03D4, r25
 return length_rb;
    98a8:	20 91 cd 03 	lds	r18, 0x03CD
    98ac:	30 91 ce 03 	lds	r19, 0x03CE
    98b0:	40 91 cf 03 	lds	r20, 0x03CF
    98b4:	50 91 d0 03 	lds	r21, 0x03D0
    98b8:	60 91 d1 03 	lds	r22, 0x03D1
    98bc:	70 91 d2 03 	lds	r23, 0x03D2
    98c0:	80 91 d3 03 	lds	r24, 0x03D3
    98c4:	90 91 d4 03 	lds	r25, 0x03D4
    98c8:	a2 2e       	mov	r10, r18
    98ca:	b3 2e       	mov	r11, r19
    98cc:	c4 2e       	mov	r12, r20
    98ce:	d5 2e       	mov	r13, r21
    98d0:	e6 2e       	mov	r14, r22
    98d2:	f7 2e       	mov	r15, r23
    98d4:	08 2f       	mov	r16, r24
    98d6:	19 2f       	mov	r17, r25
}
    98d8:	2a 2d       	mov	r18, r10
    98da:	3b 2d       	mov	r19, r11
    98dc:	4c 2d       	mov	r20, r12
    98de:	5d 2d       	mov	r21, r13
    98e0:	6e 2d       	mov	r22, r14
    98e2:	7f 2d       	mov	r23, r15
    98e4:	80 2f       	mov	r24, r16
    98e6:	91 2f       	mov	r25, r17
    98e8:	c7 58       	subi	r28, 0x87	; 135
    98ea:	df 4f       	sbci	r29, 0xFF	; 255
    98ec:	0f b6       	in	r0, 0x3f	; 63
    98ee:	f8 94       	cli
    98f0:	de bf       	out	0x3e, r29	; 62
    98f2:	0f be       	out	0x3f, r0	; 63
    98f4:	cd bf       	out	0x3d, r28	; 61
    98f6:	cf 91       	pop	r28
    98f8:	df 91       	pop	r29
    98fa:	1f 91       	pop	r17
    98fc:	0f 91       	pop	r16
    98fe:	ff 90       	pop	r15
    9900:	ef 90       	pop	r14
    9902:	df 90       	pop	r13
    9904:	cf 90       	pop	r12
    9906:	bf 90       	pop	r11
    9908:	af 90       	pop	r10
    990a:	08 95       	ret

0000990c <CAR_Length_Check>:
uint8 CAR_Length_Check(void)
{
    990c:	af 92       	push	r10
    990e:	bf 92       	push	r11
    9910:	cf 92       	push	r12
    9912:	df 92       	push	r13
    9914:	ef 92       	push	r14
    9916:	ff 92       	push	r15
    9918:	0f 93       	push	r16
    991a:	1f 93       	push	r17
    991c:	df 93       	push	r29
    991e:	cf 93       	push	r28
    9920:	cd b7       	in	r28, 0x3d	; 61
    9922:	de b7       	in	r29, 0x3e	; 62
    9924:	6f 97       	sbiw	r28, 0x1f	; 31
    9926:	0f b6       	in	r0, 0x3f	; 63
    9928:	f8 94       	cli
    992a:	de bf       	out	0x3e, r29	; 62
    992c:	0f be       	out	0x3f, r0	; 63
    992e:	cd bf       	out	0x3d, r28	; 61
	 uint8 ret_val=1;
    9930:	81 e0       	ldi	r24, 0x01	; 1
    9932:	8f 87       	std	Y+15, r24	; 0x0f
	Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    9934:	87 e0       	ldi	r24, 0x07	; 7
    9936:	60 e0       	ldi	r22, 0x00	; 0
    9938:	42 e0       	ldi	r20, 0x02	; 2
    993a:	20 e0       	ldi	r18, 0x00	; 0
    993c:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    9940:	84 e0       	ldi	r24, 0x04	; 4
    9942:	63 e0       	ldi	r22, 0x03	; 3
    9944:	41 e0       	ldi	r20, 0x01	; 1
    9946:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	CLR_BIT(TCCR3A,COM3A0);
    994a:	ab e8       	ldi	r26, 0x8B	; 139
    994c:	b0 e0       	ldi	r27, 0x00	; 0
    994e:	eb e8       	ldi	r30, 0x8B	; 139
    9950:	f0 e0       	ldi	r31, 0x00	; 0
    9952:	80 81       	ld	r24, Z
    9954:	8f 7b       	andi	r24, 0xBF	; 191
    9956:	8c 93       	st	X, r24
	CLR_BIT(TCCR3A,COM3A1);
    9958:	ab e8       	ldi	r26, 0x8B	; 139
    995a:	b0 e0       	ldi	r27, 0x00	; 0
    995c:	eb e8       	ldi	r30, 0x8B	; 139
    995e:	f0 e0       	ldi	r31, 0x00	; 0
    9960:	80 81       	ld	r24, Z
    9962:	8f 77       	andi	r24, 0x7F	; 127
    9964:	8c 93       	st	X, r24
	LCD_vidSendCommand(1);
    9966:	81 e0       	ldi	r24, 0x01	; 1
    9968:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	forward_move();
    996c:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
	Timer0_Init(Normal_mode,timer0_scale_8,disconnected);
    9970:	80 e0       	ldi	r24, 0x00	; 0
    9972:	62 e0       	ldi	r22, 0x02	; 2
    9974:	40 e0       	ldi	r20, 0x00	; 0
    9976:	0e 94 7f 1d 	call	0x3afe	; 0x3afe <Timer0_Init>
	TCNT0=0;
    997a:	e2 e5       	ldi	r30, 0x52	; 82
    997c:	f0 e0       	ldi	r31, 0x00	; 0
    997e:	10 82       	st	Z, r1
	count_right_front=0;
    9980:	10 92 85 03 	sts	0x0385, r1
    9984:	10 92 84 03 	sts	0x0384, r1
    do
    {
    LCD_vidGotoxy(0,0);
    9988:	80 e0       	ldi	r24, 0x00	; 0
    998a:	60 e0       	ldi	r22, 0x00	; 0
    998c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    LCD_vidWriteString("DISTANCE:");
    9990:	80 e1       	ldi	r24, 0x10	; 16
    9992:	91 e0       	ldi	r25, 0x01	; 1
    9994:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    ultra_right_front=Ultrasonic_right_front_Get_Distance();
    9998:	0e 94 36 26 	call	0x4c6c	; 0x4c6c <Ultrasonic_right_front_Get_Distance>
    999c:	dc 01       	movw	r26, r24
    999e:	cb 01       	movw	r24, r22
    99a0:	80 93 8e 03 	sts	0x038E, r24
    99a4:	90 93 8f 03 	sts	0x038F, r25
    99a8:	a0 93 90 03 	sts	0x0390, r26
    99ac:	b0 93 91 03 	sts	0x0391, r27
    LCD_vidGotoxy(10,0);
    99b0:	8a e0       	ldi	r24, 0x0A	; 10
    99b2:	60 e0       	ldi	r22, 0x00	; 0
    99b4:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    LCD_vidWriteUnSignedInteger(ultra_right_front);
    99b8:	80 91 8e 03 	lds	r24, 0x038E
    99bc:	90 91 8f 03 	lds	r25, 0x038F
    99c0:	a0 91 90 03 	lds	r26, 0x0390
    99c4:	b0 91 91 03 	lds	r27, 0x0391
    99c8:	5c 01       	movw	r10, r24
    99ca:	6d 01       	movw	r12, r26
    99cc:	ee 24       	eor	r14, r14
    99ce:	ff 24       	eor	r15, r15
    99d0:	87 01       	movw	r16, r14
    99d2:	2a 2d       	mov	r18, r10
    99d4:	3b 2d       	mov	r19, r11
    99d6:	4c 2d       	mov	r20, r12
    99d8:	5d 2d       	mov	r21, r13
    99da:	6e 2d       	mov	r22, r14
    99dc:	7f 2d       	mov	r23, r15
    99de:	80 2f       	mov	r24, r16
    99e0:	91 2f       	mov	r25, r17
    99e2:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
     //heya mashya forward
     length_rf=distance_rf();
    99e6:	0e 94 e5 3b 	call	0x77ca	; 0x77ca <distance_rf>
    99ea:	a2 2e       	mov	r10, r18
    99ec:	b3 2e       	mov	r11, r19
    99ee:	c4 2e       	mov	r12, r20
    99f0:	d5 2e       	mov	r13, r21
    99f2:	e6 2e       	mov	r14, r22
    99f4:	f7 2e       	mov	r15, r23
    99f6:	08 2f       	mov	r16, r24
    99f8:	19 2f       	mov	r17, r25
    99fa:	a0 92 d5 03 	sts	0x03D5, r10
    99fe:	b0 92 d6 03 	sts	0x03D6, r11
    9a02:	c0 92 d7 03 	sts	0x03D7, r12
    9a06:	d0 92 d8 03 	sts	0x03D8, r13
    9a0a:	e0 92 d9 03 	sts	0x03D9, r14
    9a0e:	f0 92 da 03 	sts	0x03DA, r15
    9a12:	00 93 db 03 	sts	0x03DB, r16
    9a16:	10 93 dc 03 	sts	0x03DC, r17
     LCD_vidGotoxy(0,1);
    9a1a:	80 e0       	ldi	r24, 0x00	; 0
    9a1c:	61 e0       	ldi	r22, 0x01	; 1
    9a1e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
     LCD_vidWriteString("LENGTH:");
    9a22:	8a e1       	ldi	r24, 0x1A	; 26
    9a24:	91 e0       	ldi	r25, 0x01	; 1
    9a26:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
     LCD_vidGotoxy(8,1);
    9a2a:	88 e0       	ldi	r24, 0x08	; 8
    9a2c:	61 e0       	ldi	r22, 0x01	; 1
    9a2e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
     LCD_vidWriteUnSignedInteger((uint64)length_rf);
    9a32:	a0 90 d5 03 	lds	r10, 0x03D5
    9a36:	b0 90 d6 03 	lds	r11, 0x03D6
    9a3a:	c0 90 d7 03 	lds	r12, 0x03D7
    9a3e:	d0 90 d8 03 	lds	r13, 0x03D8
    9a42:	e0 90 d9 03 	lds	r14, 0x03D9
    9a46:	f0 90 da 03 	lds	r15, 0x03DA
    9a4a:	00 91 db 03 	lds	r16, 0x03DB
    9a4e:	10 91 dc 03 	lds	r17, 0x03DC
    9a52:	2a 2d       	mov	r18, r10
    9a54:	3b 2d       	mov	r19, r11
    9a56:	4c 2d       	mov	r20, r12
    9a58:	5d 2d       	mov	r21, r13
    9a5a:	6e 2d       	mov	r22, r14
    9a5c:	7f 2d       	mov	r23, r15
    9a5e:	80 2f       	mov	r24, r16
    9a60:	91 2f       	mov	r25, r17
    9a62:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
    if(length_rf>=165)
    9a66:	80 91 d5 03 	lds	r24, 0x03D5
    9a6a:	88 8f       	std	Y+24, r24	; 0x18
    9a6c:	80 91 d6 03 	lds	r24, 0x03D6
    9a70:	89 8f       	std	Y+25, r24	; 0x19
    9a72:	80 91 d7 03 	lds	r24, 0x03D7
    9a76:	8a 8f       	std	Y+26, r24	; 0x1a
    9a78:	80 91 d8 03 	lds	r24, 0x03D8
    9a7c:	8b 8f       	std	Y+27, r24	; 0x1b
    9a7e:	80 91 d9 03 	lds	r24, 0x03D9
    9a82:	8c 8f       	std	Y+28, r24	; 0x1c
    9a84:	80 91 da 03 	lds	r24, 0x03DA
    9a88:	8d 8f       	std	Y+29, r24	; 0x1d
    9a8a:	80 91 db 03 	lds	r24, 0x03DB
    9a8e:	8e 8f       	std	Y+30, r24	; 0x1e
    9a90:	80 91 dc 03 	lds	r24, 0x03DC
    9a94:	8f 8f       	std	Y+31, r24	; 0x1f
    9a96:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9a98:	88 23       	and	r24, r24
    9a9a:	91 f5       	brne	.+100    	; 0x9b00 <CAR_Length_Check+0x1f4>
    9a9c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9a9e:	88 23       	and	r24, r24
    9aa0:	09 f0       	breq	.+2      	; 0x9aa4 <CAR_Length_Check+0x198>
    9aa2:	c8 c0       	rjmp	.+400    	; 0x9c34 <CAR_Length_Check+0x328>
    9aa4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9aa6:	88 23       	and	r24, r24
    9aa8:	59 f5       	brne	.+86     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9aaa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9aac:	88 23       	and	r24, r24
    9aae:	09 f0       	breq	.+2      	; 0x9ab2 <CAR_Length_Check+0x1a6>
    9ab0:	c1 c0       	rjmp	.+386    	; 0x9c34 <CAR_Length_Check+0x328>
    9ab2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9ab4:	88 23       	and	r24, r24
    9ab6:	21 f5       	brne	.+72     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9ab8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9aba:	88 23       	and	r24, r24
    9abc:	09 f0       	breq	.+2      	; 0x9ac0 <CAR_Length_Check+0x1b4>
    9abe:	ba c0       	rjmp	.+372    	; 0x9c34 <CAR_Length_Check+0x328>
    9ac0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9ac2:	88 23       	and	r24, r24
    9ac4:	e9 f4       	brne	.+58     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9ac6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9ac8:	88 23       	and	r24, r24
    9aca:	09 f0       	breq	.+2      	; 0x9ace <CAR_Length_Check+0x1c2>
    9acc:	b3 c0       	rjmp	.+358    	; 0x9c34 <CAR_Length_Check+0x328>
    9ace:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9ad0:	88 23       	and	r24, r24
    9ad2:	b1 f4       	brne	.+44     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9ad4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9ad6:	88 23       	and	r24, r24
    9ad8:	09 f0       	breq	.+2      	; 0x9adc <CAR_Length_Check+0x1d0>
    9ada:	ac c0       	rjmp	.+344    	; 0x9c34 <CAR_Length_Check+0x328>
    9adc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9ade:	88 23       	and	r24, r24
    9ae0:	79 f4       	brne	.+30     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9ae2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9ae4:	88 23       	and	r24, r24
    9ae6:	09 f0       	breq	.+2      	; 0x9aea <CAR_Length_Check+0x1de>
    9ae8:	a5 c0       	rjmp	.+330    	; 0x9c34 <CAR_Length_Check+0x328>
    9aea:	89 8d       	ldd	r24, Y+25	; 0x19
    9aec:	88 23       	and	r24, r24
    9aee:	41 f4       	brne	.+16     	; 0x9b00 <CAR_Length_Check+0x1f4>
    9af0:	89 8d       	ldd	r24, Y+25	; 0x19
    9af2:	88 23       	and	r24, r24
    9af4:	09 f0       	breq	.+2      	; 0x9af8 <CAR_Length_Check+0x1ec>
    9af6:	9e c0       	rjmp	.+316    	; 0x9c34 <CAR_Length_Check+0x328>
    9af8:	88 8d       	ldd	r24, Y+24	; 0x18
    9afa:	85 3a       	cpi	r24, 0xA5	; 165
    9afc:	08 f4       	brcc	.+2      	; 0x9b00 <CAR_Length_Check+0x1f4>
    9afe:	9a c0       	rjmp	.+308    	; 0x9c34 <CAR_Length_Check+0x328>
    {
     //STOP CAR
     DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    9b00:	84 e0       	ldi	r24, 0x04	; 4
    9b02:	63 e0       	ldi	r22, 0x03	; 3
    9b04:	41 e0       	ldi	r20, 0x01	; 1
    9b06:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
     Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    9b0a:	87 e0       	ldi	r24, 0x07	; 7
    9b0c:	60 e0       	ldi	r22, 0x00	; 0
    9b0e:	42 e0       	ldi	r20, 0x02	; 2
    9b10:	20 e0       	ldi	r18, 0x00	; 0
    9b12:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
     CLR_BIT(TCCR3A,COM3A0);
    9b16:	ab e8       	ldi	r26, 0x8B	; 139
    9b18:	b0 e0       	ldi	r27, 0x00	; 0
    9b1a:	eb e8       	ldi	r30, 0x8B	; 139
    9b1c:	f0 e0       	ldi	r31, 0x00	; 0
    9b1e:	80 81       	ld	r24, Z
    9b20:	8f 7b       	andi	r24, 0xBF	; 191
    9b22:	8c 93       	st	X, r24
     CLR_BIT(TCCR3A,COM3A1);
    9b24:	ab e8       	ldi	r26, 0x8B	; 139
    9b26:	b0 e0       	ldi	r27, 0x00	; 0
    9b28:	eb e8       	ldi	r30, 0x8B	; 139
    9b2a:	f0 e0       	ldi	r31, 0x00	; 0
    9b2c:	80 81       	ld	r24, Z
    9b2e:	8f 77       	andi	r24, 0x7F	; 127
    9b30:	8c 93       	st	X, r24
     Buzzer_On();
    9b32:	0e 94 0a 3b 	call	0x7614	; 0x7614 <Buzzer_On>
     LCD_vidGotoxy(0,1);
    9b36:	80 e0       	ldi	r24, 0x00	; 0
    9b38:	61 e0       	ldi	r22, 0x01	; 1
    9b3a:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
     LCD_vidWriteString((uint8*)"Spot found");
    9b3e:	82 e2       	ldi	r24, 0x22	; 34
    9b40:	91 e0       	ldi	r25, 0x01	; 1
    9b42:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    9b46:	80 e0       	ldi	r24, 0x00	; 0
    9b48:	90 e0       	ldi	r25, 0x00	; 0
    9b4a:	aa e7       	ldi	r26, 0x7A	; 122
    9b4c:	b4 e4       	ldi	r27, 0x44	; 68
    9b4e:	8b 87       	std	Y+11, r24	; 0x0b
    9b50:	9c 87       	std	Y+12, r25	; 0x0c
    9b52:	ad 87       	std	Y+13, r26	; 0x0d
    9b54:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    9b56:	6b 85       	ldd	r22, Y+11	; 0x0b
    9b58:	7c 85       	ldd	r23, Y+12	; 0x0c
    9b5a:	8d 85       	ldd	r24, Y+13	; 0x0d
    9b5c:	9e 85       	ldd	r25, Y+14	; 0x0e
    9b5e:	20 e0       	ldi	r18, 0x00	; 0
    9b60:	30 e0       	ldi	r19, 0x00	; 0
    9b62:	4a ef       	ldi	r20, 0xFA	; 250
    9b64:	54 e4       	ldi	r21, 0x44	; 68
    9b66:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    9b6a:	dc 01       	movw	r26, r24
    9b6c:	cb 01       	movw	r24, r22
    9b6e:	8f 83       	std	Y+7, r24	; 0x07
    9b70:	98 87       	std	Y+8, r25	; 0x08
    9b72:	a9 87       	std	Y+9, r26	; 0x09
    9b74:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    9b76:	6f 81       	ldd	r22, Y+7	; 0x07
    9b78:	78 85       	ldd	r23, Y+8	; 0x08
    9b7a:	89 85       	ldd	r24, Y+9	; 0x09
    9b7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    9b7e:	20 e0       	ldi	r18, 0x00	; 0
    9b80:	30 e0       	ldi	r19, 0x00	; 0
    9b82:	40 e8       	ldi	r20, 0x80	; 128
    9b84:	5f e3       	ldi	r21, 0x3F	; 63
    9b86:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    9b8a:	88 23       	and	r24, r24
    9b8c:	2c f4       	brge	.+10     	; 0x9b98 <CAR_Length_Check+0x28c>
		__ticks = 1;
    9b8e:	81 e0       	ldi	r24, 0x01	; 1
    9b90:	90 e0       	ldi	r25, 0x00	; 0
    9b92:	9e 83       	std	Y+6, r25	; 0x06
    9b94:	8d 83       	std	Y+5, r24	; 0x05
    9b96:	3f c0       	rjmp	.+126    	; 0x9c16 <CAR_Length_Check+0x30a>
	else if (__tmp > 65535)
    9b98:	6f 81       	ldd	r22, Y+7	; 0x07
    9b9a:	78 85       	ldd	r23, Y+8	; 0x08
    9b9c:	89 85       	ldd	r24, Y+9	; 0x09
    9b9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    9ba0:	20 e0       	ldi	r18, 0x00	; 0
    9ba2:	3f ef       	ldi	r19, 0xFF	; 255
    9ba4:	4f e7       	ldi	r20, 0x7F	; 127
    9ba6:	57 e4       	ldi	r21, 0x47	; 71
    9ba8:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    9bac:	18 16       	cp	r1, r24
    9bae:	4c f5       	brge	.+82     	; 0x9c02 <CAR_Length_Check+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    9bb0:	6b 85       	ldd	r22, Y+11	; 0x0b
    9bb2:	7c 85       	ldd	r23, Y+12	; 0x0c
    9bb4:	8d 85       	ldd	r24, Y+13	; 0x0d
    9bb6:	9e 85       	ldd	r25, Y+14	; 0x0e
    9bb8:	20 e0       	ldi	r18, 0x00	; 0
    9bba:	30 e0       	ldi	r19, 0x00	; 0
    9bbc:	40 e2       	ldi	r20, 0x20	; 32
    9bbe:	51 e4       	ldi	r21, 0x41	; 65
    9bc0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    9bc4:	dc 01       	movw	r26, r24
    9bc6:	cb 01       	movw	r24, r22
    9bc8:	bc 01       	movw	r22, r24
    9bca:	cd 01       	movw	r24, r26
    9bcc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    9bd0:	dc 01       	movw	r26, r24
    9bd2:	cb 01       	movw	r24, r22
    9bd4:	9e 83       	std	Y+6, r25	; 0x06
    9bd6:	8d 83       	std	Y+5, r24	; 0x05
    9bd8:	0f c0       	rjmp	.+30     	; 0x9bf8 <CAR_Length_Check+0x2ec>
    9bda:	88 ec       	ldi	r24, 0xC8	; 200
    9bdc:	90 e0       	ldi	r25, 0x00	; 0
    9bde:	9c 83       	std	Y+4, r25	; 0x04
    9be0:	8b 83       	std	Y+3, r24	; 0x03
    9be2:	8b 81       	ldd	r24, Y+3	; 0x03
    9be4:	9c 81       	ldd	r25, Y+4	; 0x04
    9be6:	01 97       	sbiw	r24, 0x01	; 1
    9be8:	f1 f7       	brne	.-4      	; 0x9be6 <CAR_Length_Check+0x2da>
    9bea:	9c 83       	std	Y+4, r25	; 0x04
    9bec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    9bee:	8d 81       	ldd	r24, Y+5	; 0x05
    9bf0:	9e 81       	ldd	r25, Y+6	; 0x06
    9bf2:	01 97       	sbiw	r24, 0x01	; 1
    9bf4:	9e 83       	std	Y+6, r25	; 0x06
    9bf6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    9bf8:	8d 81       	ldd	r24, Y+5	; 0x05
    9bfa:	9e 81       	ldd	r25, Y+6	; 0x06
    9bfc:	00 97       	sbiw	r24, 0x00	; 0
    9bfe:	69 f7       	brne	.-38     	; 0x9bda <CAR_Length_Check+0x2ce>
    9c00:	14 c0       	rjmp	.+40     	; 0x9c2a <CAR_Length_Check+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    9c02:	6f 81       	ldd	r22, Y+7	; 0x07
    9c04:	78 85       	ldd	r23, Y+8	; 0x08
    9c06:	89 85       	ldd	r24, Y+9	; 0x09
    9c08:	9a 85       	ldd	r25, Y+10	; 0x0a
    9c0a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    9c0e:	dc 01       	movw	r26, r24
    9c10:	cb 01       	movw	r24, r22
    9c12:	9e 83       	std	Y+6, r25	; 0x06
    9c14:	8d 83       	std	Y+5, r24	; 0x05
    9c16:	8d 81       	ldd	r24, Y+5	; 0x05
    9c18:	9e 81       	ldd	r25, Y+6	; 0x06
    9c1a:	9a 83       	std	Y+2, r25	; 0x02
    9c1c:	89 83       	std	Y+1, r24	; 0x01
    9c1e:	89 81       	ldd	r24, Y+1	; 0x01
    9c20:	9a 81       	ldd	r25, Y+2	; 0x02
    9c22:	01 97       	sbiw	r24, 0x01	; 1
    9c24:	f1 f7       	brne	.-4      	; 0x9c22 <CAR_Length_Check+0x316>
    9c26:	9a 83       	std	Y+2, r25	; 0x02
    9c28:	89 83       	std	Y+1, r24	; 0x01
     _delay_ms(1000);
     Buzzer_Off();
    9c2a:	0e 94 16 3b 	call	0x762c	; 0x762c <Buzzer_Off>
    flag_check=1;
    9c2e:	81 e0       	ldi	r24, 0x01	; 1
    9c30:	80 93 a2 03 	sts	0x03A2, r24
   }

  }while((Ultrasonic_right_front_Get_Distance()>=100)&&(length_rf<165));
    9c34:	0e 94 36 26 	call	0x4c6c	; 0x4c6c <Ultrasonic_right_front_Get_Distance>
    9c38:	dc 01       	movw	r26, r24
    9c3a:	cb 01       	movw	r24, r22
    9c3c:	84 36       	cpi	r24, 0x64	; 100
    9c3e:	91 05       	cpc	r25, r1
    9c40:	a1 05       	cpc	r26, r1
    9c42:	b1 05       	cpc	r27, r1
    9c44:	08 f4       	brcc	.+2      	; 0x9c48 <CAR_Length_Check+0x33c>
    9c46:	4d c0       	rjmp	.+154    	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9c48:	80 91 d5 03 	lds	r24, 0x03D5
    9c4c:	88 8b       	std	Y+16, r24	; 0x10
    9c4e:	80 91 d6 03 	lds	r24, 0x03D6
    9c52:	89 8b       	std	Y+17, r24	; 0x11
    9c54:	80 91 d7 03 	lds	r24, 0x03D7
    9c58:	8a 8b       	std	Y+18, r24	; 0x12
    9c5a:	80 91 d8 03 	lds	r24, 0x03D8
    9c5e:	8b 8b       	std	Y+19, r24	; 0x13
    9c60:	80 91 d9 03 	lds	r24, 0x03D9
    9c64:	8c 8b       	std	Y+20, r24	; 0x14
    9c66:	80 91 da 03 	lds	r24, 0x03DA
    9c6a:	8d 8b       	std	Y+21, r24	; 0x15
    9c6c:	80 91 db 03 	lds	r24, 0x03DB
    9c70:	8e 8b       	std	Y+22, r24	; 0x16
    9c72:	80 91 dc 03 	lds	r24, 0x03DC
    9c76:	8f 8b       	std	Y+23, r24	; 0x17
    9c78:	8f 89       	ldd	r24, Y+23	; 0x17
    9c7a:	88 23       	and	r24, r24
    9c7c:	91 f5       	brne	.+100    	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9c7e:	8f 89       	ldd	r24, Y+23	; 0x17
    9c80:	88 23       	and	r24, r24
    9c82:	09 f0       	breq	.+2      	; 0x9c86 <CAR_Length_Check+0x37a>
    9c84:	81 ce       	rjmp	.-766    	; 0x9988 <CAR_Length_Check+0x7c>
    9c86:	8e 89       	ldd	r24, Y+22	; 0x16
    9c88:	88 23       	and	r24, r24
    9c8a:	59 f5       	brne	.+86     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9c8c:	8e 89       	ldd	r24, Y+22	; 0x16
    9c8e:	88 23       	and	r24, r24
    9c90:	09 f0       	breq	.+2      	; 0x9c94 <CAR_Length_Check+0x388>
    9c92:	7a ce       	rjmp	.-780    	; 0x9988 <CAR_Length_Check+0x7c>
    9c94:	8d 89       	ldd	r24, Y+21	; 0x15
    9c96:	88 23       	and	r24, r24
    9c98:	21 f5       	brne	.+72     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9c9a:	8d 89       	ldd	r24, Y+21	; 0x15
    9c9c:	88 23       	and	r24, r24
    9c9e:	09 f0       	breq	.+2      	; 0x9ca2 <CAR_Length_Check+0x396>
    9ca0:	73 ce       	rjmp	.-794    	; 0x9988 <CAR_Length_Check+0x7c>
    9ca2:	8c 89       	ldd	r24, Y+20	; 0x14
    9ca4:	88 23       	and	r24, r24
    9ca6:	e9 f4       	brne	.+58     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9ca8:	8c 89       	ldd	r24, Y+20	; 0x14
    9caa:	88 23       	and	r24, r24
    9cac:	09 f0       	breq	.+2      	; 0x9cb0 <CAR_Length_Check+0x3a4>
    9cae:	6c ce       	rjmp	.-808    	; 0x9988 <CAR_Length_Check+0x7c>
    9cb0:	8b 89       	ldd	r24, Y+19	; 0x13
    9cb2:	88 23       	and	r24, r24
    9cb4:	b1 f4       	brne	.+44     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9cb6:	8b 89       	ldd	r24, Y+19	; 0x13
    9cb8:	88 23       	and	r24, r24
    9cba:	09 f0       	breq	.+2      	; 0x9cbe <CAR_Length_Check+0x3b2>
    9cbc:	65 ce       	rjmp	.-822    	; 0x9988 <CAR_Length_Check+0x7c>
    9cbe:	8a 89       	ldd	r24, Y+18	; 0x12
    9cc0:	88 23       	and	r24, r24
    9cc2:	79 f4       	brne	.+30     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9cc4:	8a 89       	ldd	r24, Y+18	; 0x12
    9cc6:	88 23       	and	r24, r24
    9cc8:	09 f0       	breq	.+2      	; 0x9ccc <CAR_Length_Check+0x3c0>
    9cca:	5e ce       	rjmp	.-836    	; 0x9988 <CAR_Length_Check+0x7c>
    9ccc:	89 89       	ldd	r24, Y+17	; 0x11
    9cce:	88 23       	and	r24, r24
    9cd0:	41 f4       	brne	.+16     	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9cd2:	89 89       	ldd	r24, Y+17	; 0x11
    9cd4:	88 23       	and	r24, r24
    9cd6:	09 f0       	breq	.+2      	; 0x9cda <CAR_Length_Check+0x3ce>
    9cd8:	57 ce       	rjmp	.-850    	; 0x9988 <CAR_Length_Check+0x7c>
    9cda:	88 89       	ldd	r24, Y+16	; 0x10
    9cdc:	85 3a       	cpi	r24, 0xA5	; 165
    9cde:	08 f4       	brcc	.+2      	; 0x9ce2 <CAR_Length_Check+0x3d6>
    9ce0:	53 ce       	rjmp	.-858    	; 0x9988 <CAR_Length_Check+0x7c>
 if(flag_check!=1)
    9ce2:	80 91 a2 03 	lds	r24, 0x03A2
    9ce6:	81 30       	cpi	r24, 0x01	; 1
    9ce8:	09 f0       	breq	.+2      	; 0x9cec <CAR_Length_Check+0x3e0>
   ret_val=0;
    9cea:	1f 86       	std	Y+15, r1	; 0x0f
   return ret_val;
    9cec:	8f 85       	ldd	r24, Y+15	; 0x0f
}
    9cee:	6f 96       	adiw	r28, 0x1f	; 31
    9cf0:	0f b6       	in	r0, 0x3f	; 63
    9cf2:	f8 94       	cli
    9cf4:	de bf       	out	0x3e, r29	; 62
    9cf6:	0f be       	out	0x3f, r0	; 63
    9cf8:	cd bf       	out	0x3d, r28	; 61
    9cfa:	cf 91       	pop	r28
    9cfc:	df 91       	pop	r29
    9cfe:	1f 91       	pop	r17
    9d00:	0f 91       	pop	r16
    9d02:	ff 90       	pop	r15
    9d04:	ef 90       	pop	r14
    9d06:	df 90       	pop	r13
    9d08:	cf 90       	pop	r12
    9d0a:	bf 90       	pop	r11
    9d0c:	af 90       	pop	r10
    9d0e:	08 95       	ret

00009d10 <CAR_Length_Check2>:
void CAR_Length_Check2(void)
{
    9d10:	af 92       	push	r10
    9d12:	bf 92       	push	r11
    9d14:	cf 92       	push	r12
    9d16:	df 92       	push	r13
    9d18:	ef 92       	push	r14
    9d1a:	ff 92       	push	r15
    9d1c:	0f 93       	push	r16
    9d1e:	1f 93       	push	r17
    9d20:	df 93       	push	r29
    9d22:	cf 93       	push	r28
    9d24:	cd b7       	in	r28, 0x3d	; 61
    9d26:	de b7       	in	r29, 0x3e	; 62
LCD_vidGotoxy(0,1);
    9d28:	80 e0       	ldi	r24, 0x00	; 0
    9d2a:	61 e0       	ldi	r22, 0x01	; 1
    9d2c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
LCD_vidWriteString("distance found");
    9d30:	8d e2       	ldi	r24, 0x2D	; 45
    9d32:	91 e0       	ldi	r25, 0x01	; 1
    9d34:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>

forward_move();
    9d38:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
LCD_vidSendCommand(1);
    9d3c:	81 e0       	ldi	r24, 0x01	; 1
    9d3e:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

do{

  LCD_vidGotoxy(0,1);
    9d42:	80 e0       	ldi	r24, 0x00	; 0
    9d44:	61 e0       	ldi	r22, 0x01	; 1
    9d46:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
  LCD_vidWriteString("distance:");
    9d4a:	8c e3       	ldi	r24, 0x3C	; 60
    9d4c:	91 e0       	ldi	r25, 0x01	; 1
    9d4e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
  ultra_right_back=Ultrasonic_right_back_Get_Distance();
    9d52:	0e 94 57 27 	call	0x4eae	; 0x4eae <Ultrasonic_right_back_Get_Distance>
    9d56:	dc 01       	movw	r26, r24
    9d58:	cb 01       	movw	r24, r22
    9d5a:	80 93 9e 03 	sts	0x039E, r24
    9d5e:	90 93 9f 03 	sts	0x039F, r25
    9d62:	a0 93 a0 03 	sts	0x03A0, r26
    9d66:	b0 93 a1 03 	sts	0x03A1, r27
  LCD_vidGotoxy(10,1);
    9d6a:	8a e0       	ldi	r24, 0x0A	; 10
    9d6c:	61 e0       	ldi	r22, 0x01	; 1
    9d6e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
  LCD_vidWriteUnSignedInteger(ultra_right_back);
    9d72:	80 91 9e 03 	lds	r24, 0x039E
    9d76:	90 91 9f 03 	lds	r25, 0x039F
    9d7a:	a0 91 a0 03 	lds	r26, 0x03A0
    9d7e:	b0 91 a1 03 	lds	r27, 0x03A1
    9d82:	5c 01       	movw	r10, r24
    9d84:	6d 01       	movw	r12, r26
    9d86:	ee 24       	eor	r14, r14
    9d88:	ff 24       	eor	r15, r15
    9d8a:	87 01       	movw	r16, r14
    9d8c:	2a 2d       	mov	r18, r10
    9d8e:	3b 2d       	mov	r19, r11
    9d90:	4c 2d       	mov	r20, r12
    9d92:	5d 2d       	mov	r21, r13
    9d94:	6e 2d       	mov	r22, r14
    9d96:	7f 2d       	mov	r23, r15
    9d98:	80 2f       	mov	r24, r16
    9d9a:	91 2f       	mov	r25, r17
    9d9c:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>

}while(Ultrasonic_right_back_Get_Distance()>=100);
    9da0:	0e 94 57 27 	call	0x4eae	; 0x4eae <Ultrasonic_right_back_Get_Distance>
    9da4:	dc 01       	movw	r26, r24
    9da6:	cb 01       	movw	r24, r22
    9da8:	84 36       	cpi	r24, 0x64	; 100
    9daa:	91 05       	cpc	r25, r1
    9dac:	a1 05       	cpc	r26, r1
    9dae:	b1 05       	cpc	r27, r1
    9db0:	40 f6       	brcc	.-112    	; 0x9d42 <CAR_Length_Check2+0x32>
//STOP CAR
DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    9db2:	84 e0       	ldi	r24, 0x04	; 4
    9db4:	63 e0       	ldi	r22, 0x03	; 3
    9db6:	41 e0       	ldi	r20, 0x01	; 1
    9db8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    9dbc:	87 e0       	ldi	r24, 0x07	; 7
    9dbe:	60 e0       	ldi	r22, 0x00	; 0
    9dc0:	42 e0       	ldi	r20, 0x02	; 2
    9dc2:	20 e0       	ldi	r18, 0x00	; 0
    9dc4:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
CLR_BIT(TCCR3A,COM3A0);
    9dc8:	ab e8       	ldi	r26, 0x8B	; 139
    9dca:	b0 e0       	ldi	r27, 0x00	; 0
    9dcc:	eb e8       	ldi	r30, 0x8B	; 139
    9dce:	f0 e0       	ldi	r31, 0x00	; 0
    9dd0:	80 81       	ld	r24, Z
    9dd2:	8f 7b       	andi	r24, 0xBF	; 191
    9dd4:	8c 93       	st	X, r24
CLR_BIT(TCCR3A,COM3A1);
    9dd6:	ab e8       	ldi	r26, 0x8B	; 139
    9dd8:	b0 e0       	ldi	r27, 0x00	; 0
    9dda:	eb e8       	ldi	r30, 0x8B	; 139
    9ddc:	f0 e0       	ldi	r31, 0x00	; 0
    9dde:	80 81       	ld	r24, Z
    9de0:	8f 77       	andi	r24, 0x7F	; 127
    9de2:	8c 93       	st	X, r24
}
    9de4:	cf 91       	pop	r28
    9de6:	df 91       	pop	r29
    9de8:	1f 91       	pop	r17
    9dea:	0f 91       	pop	r16
    9dec:	ff 90       	pop	r15
    9dee:	ef 90       	pop	r14
    9df0:	df 90       	pop	r13
    9df2:	cf 90       	pop	r12
    9df4:	bf 90       	pop	r11
    9df6:	af 90       	pop	r10
    9df8:	08 95       	ret

00009dfa <CAR_Length_Check3>:
void CAR_Length_Check3(void)
{
    9dfa:	af 92       	push	r10
    9dfc:	bf 92       	push	r11
    9dfe:	cf 92       	push	r12
    9e00:	df 92       	push	r13
    9e02:	ef 92       	push	r14
    9e04:	ff 92       	push	r15
    9e06:	0f 93       	push	r16
    9e08:	1f 93       	push	r17
    9e0a:	df 93       	push	r29
    9e0c:	cf 93       	push	r28
    9e0e:	cd b7       	in	r28, 0x3d	; 61
    9e10:	de b7       	in	r29, 0x3e	; 62
    9e12:	6e 97       	sbiw	r28, 0x1e	; 30
    9e14:	0f b6       	in	r0, 0x3f	; 63
    9e16:	f8 94       	cli
    9e18:	de bf       	out	0x3e, r29	; 62
    9e1a:	0f be       	out	0x3f, r0	; 63
    9e1c:	cd bf       	out	0x3d, r28	; 61
	flag_check=2;
    9e1e:	82 e0       	ldi	r24, 0x02	; 2
    9e20:	80 93 a2 03 	sts	0x03A2, r24
    Timer0_Init(Normal_mode,timer0_scale_8,disconnected);
    9e24:	80 e0       	ldi	r24, 0x00	; 0
    9e26:	62 e0       	ldi	r22, 0x02	; 2
    9e28:	40 e0       	ldi	r20, 0x00	; 0
    9e2a:	0e 94 7f 1d 	call	0x3afe	; 0x3afe <Timer0_Init>
	forward_move();
    9e2e:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
	TCNT0=0;
    9e32:	e2 e5       	ldi	r30, 0x52	; 82
    9e34:	f0 e0       	ldi	r31, 0x00	; 0
    9e36:	10 82       	st	Z, r1
	c_rb=0;
    9e38:	10 92 a5 03 	sts	0x03A5, r1
    9e3c:	10 92 a6 03 	sts	0x03A6, r1
    9e40:	10 92 a7 03 	sts	0x03A7, r1
    9e44:	10 92 a8 03 	sts	0x03A8, r1
    9e48:	10 92 a9 03 	sts	0x03A9, r1
    9e4c:	10 92 aa 03 	sts	0x03AA, r1
    9e50:	10 92 ab 03 	sts	0x03AB, r1
    9e54:	10 92 ac 03 	sts	0x03AC, r1
	t_rb=0;
    9e58:	10 92 dd 03 	sts	0x03DD, r1
    9e5c:	10 92 de 03 	sts	0x03DE, r1
    9e60:	10 92 df 03 	sts	0x03DF, r1
    9e64:	10 92 e0 03 	sts	0x03E0, r1
    9e68:	10 92 e1 03 	sts	0x03E1, r1
    9e6c:	10 92 e2 03 	sts	0x03E2, r1
    9e70:	10 92 e3 03 	sts	0x03E3, r1
    9e74:	10 92 e4 03 	sts	0x03E4, r1
	length_rb=0;
    9e78:	10 92 cd 03 	sts	0x03CD, r1
    9e7c:	10 92 ce 03 	sts	0x03CE, r1
    9e80:	10 92 cf 03 	sts	0x03CF, r1
    9e84:	10 92 d0 03 	sts	0x03D0, r1
    9e88:	10 92 d1 03 	sts	0x03D1, r1
    9e8c:	10 92 d2 03 	sts	0x03D2, r1
    9e90:	10 92 d3 03 	sts	0x03D3, r1
    9e94:	10 92 d4 03 	sts	0x03D4, r1
	count_right_back=0;
    9e98:	10 92 8b 03 	sts	0x038B, r1
    9e9c:	10 92 8a 03 	sts	0x038A, r1
		 do{
		    //heya mashya forward
		  length_rb=distance_rb();
    9ea0:	0e 94 70 41 	call	0x82e0	; 0x82e0 <distance_rb>
    9ea4:	a2 2e       	mov	r10, r18
    9ea6:	b3 2e       	mov	r11, r19
    9ea8:	c4 2e       	mov	r12, r20
    9eaa:	d5 2e       	mov	r13, r21
    9eac:	e6 2e       	mov	r14, r22
    9eae:	f7 2e       	mov	r15, r23
    9eb0:	08 2f       	mov	r16, r24
    9eb2:	19 2f       	mov	r17, r25
    9eb4:	a0 92 cd 03 	sts	0x03CD, r10
    9eb8:	b0 92 ce 03 	sts	0x03CE, r11
    9ebc:	c0 92 cf 03 	sts	0x03CF, r12
    9ec0:	d0 92 d0 03 	sts	0x03D0, r13
    9ec4:	e0 92 d1 03 	sts	0x03D1, r14
    9ec8:	f0 92 d2 03 	sts	0x03D2, r15
    9ecc:	00 93 d3 03 	sts	0x03D3, r16
    9ed0:	10 93 d4 03 	sts	0x03D4, r17
		  LCD_vidGotoxy(0,0);
    9ed4:	80 e0       	ldi	r24, 0x00	; 0
    9ed6:	60 e0       	ldi	r22, 0x00	; 0
    9ed8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		  LCD_vidWriteString("length:");
    9edc:	86 e4       	ldi	r24, 0x46	; 70
    9ede:	91 e0       	ldi	r25, 0x01	; 1
    9ee0:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
		  LCD_vidGotoxy(10,0);
    9ee4:	8a e0       	ldi	r24, 0x0A	; 10
    9ee6:	60 e0       	ldi	r22, 0x00	; 0
    9ee8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		  LCD_vidWriteUnSignedInteger(length_rb);
    9eec:	a0 90 cd 03 	lds	r10, 0x03CD
    9ef0:	b0 90 ce 03 	lds	r11, 0x03CE
    9ef4:	c0 90 cf 03 	lds	r12, 0x03CF
    9ef8:	d0 90 d0 03 	lds	r13, 0x03D0
    9efc:	e0 90 d1 03 	lds	r14, 0x03D1
    9f00:	f0 90 d2 03 	lds	r15, 0x03D2
    9f04:	00 91 d3 03 	lds	r16, 0x03D3
    9f08:	10 91 d4 03 	lds	r17, 0x03D4
    9f0c:	2a 2d       	mov	r18, r10
    9f0e:	3b 2d       	mov	r19, r11
    9f10:	4c 2d       	mov	r20, r12
    9f12:	5d 2d       	mov	r21, r13
    9f14:	6e 2d       	mov	r22, r14
    9f16:	7f 2d       	mov	r23, r15
    9f18:	80 2f       	mov	r24, r16
    9f1a:	91 2f       	mov	r25, r17
    9f1c:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
		  if(length_rb>=50)
    9f20:	80 91 cd 03 	lds	r24, 0x03CD
    9f24:	8f 8b       	std	Y+23, r24	; 0x17
    9f26:	80 91 ce 03 	lds	r24, 0x03CE
    9f2a:	88 8f       	std	Y+24, r24	; 0x18
    9f2c:	80 91 cf 03 	lds	r24, 0x03CF
    9f30:	89 8f       	std	Y+25, r24	; 0x19
    9f32:	80 91 d0 03 	lds	r24, 0x03D0
    9f36:	8a 8f       	std	Y+26, r24	; 0x1a
    9f38:	80 91 d1 03 	lds	r24, 0x03D1
    9f3c:	8b 8f       	std	Y+27, r24	; 0x1b
    9f3e:	80 91 d2 03 	lds	r24, 0x03D2
    9f42:	8c 8f       	std	Y+28, r24	; 0x1c
    9f44:	80 91 d3 03 	lds	r24, 0x03D3
    9f48:	8d 8f       	std	Y+29, r24	; 0x1d
    9f4a:	80 91 d4 03 	lds	r24, 0x03D4
    9f4e:	8e 8f       	std	Y+30, r24	; 0x1e
    9f50:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9f52:	88 23       	and	r24, r24
    9f54:	91 f5       	brne	.+100    	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f56:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9f58:	88 23       	and	r24, r24
    9f5a:	09 f0       	breq	.+2      	; 0x9f5e <CAR_Length_Check3+0x164>
    9f5c:	c5 c0       	rjmp	.+394    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9f5e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9f60:	88 23       	and	r24, r24
    9f62:	59 f5       	brne	.+86     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f64:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9f66:	88 23       	and	r24, r24
    9f68:	09 f0       	breq	.+2      	; 0x9f6c <CAR_Length_Check3+0x172>
    9f6a:	be c0       	rjmp	.+380    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9f6c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9f6e:	88 23       	and	r24, r24
    9f70:	21 f5       	brne	.+72     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f72:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9f74:	88 23       	and	r24, r24
    9f76:	09 f0       	breq	.+2      	; 0x9f7a <CAR_Length_Check3+0x180>
    9f78:	b7 c0       	rjmp	.+366    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9f7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9f7c:	88 23       	and	r24, r24
    9f7e:	e9 f4       	brne	.+58     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f80:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9f82:	88 23       	and	r24, r24
    9f84:	09 f0       	breq	.+2      	; 0x9f88 <CAR_Length_Check3+0x18e>
    9f86:	b0 c0       	rjmp	.+352    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9f88:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9f8a:	88 23       	and	r24, r24
    9f8c:	b1 f4       	brne	.+44     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f8e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9f90:	88 23       	and	r24, r24
    9f92:	09 f0       	breq	.+2      	; 0x9f96 <CAR_Length_Check3+0x19c>
    9f94:	a9 c0       	rjmp	.+338    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9f96:	89 8d       	ldd	r24, Y+25	; 0x19
    9f98:	88 23       	and	r24, r24
    9f9a:	79 f4       	brne	.+30     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9f9c:	89 8d       	ldd	r24, Y+25	; 0x19
    9f9e:	88 23       	and	r24, r24
    9fa0:	09 f0       	breq	.+2      	; 0x9fa4 <CAR_Length_Check3+0x1aa>
    9fa2:	a2 c0       	rjmp	.+324    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9fa4:	88 8d       	ldd	r24, Y+24	; 0x18
    9fa6:	88 23       	and	r24, r24
    9fa8:	41 f4       	brne	.+16     	; 0x9fba <CAR_Length_Check3+0x1c0>
    9faa:	88 8d       	ldd	r24, Y+24	; 0x18
    9fac:	88 23       	and	r24, r24
    9fae:	09 f0       	breq	.+2      	; 0x9fb2 <CAR_Length_Check3+0x1b8>
    9fb0:	9b c0       	rjmp	.+310    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
    9fb2:	8f 89       	ldd	r24, Y+23	; 0x17
    9fb4:	82 33       	cpi	r24, 0x32	; 50
    9fb6:	08 f4       	brcc	.+2      	; 0x9fba <CAR_Length_Check3+0x1c0>
    9fb8:	97 c0       	rjmp	.+302    	; 0xa0e8 <CAR_Length_Check3+0x2ee>
		   {
		     //STOP CAR
		   DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    9fba:	84 e0       	ldi	r24, 0x04	; 4
    9fbc:	63 e0       	ldi	r22, 0x03	; 3
    9fbe:	41 e0       	ldi	r20, 0x01	; 1
    9fc0:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
		   Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    9fc4:	87 e0       	ldi	r24, 0x07	; 7
    9fc6:	60 e0       	ldi	r22, 0x00	; 0
    9fc8:	42 e0       	ldi	r20, 0x02	; 2
    9fca:	20 e0       	ldi	r18, 0x00	; 0
    9fcc:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
		   CLR_BIT(TCCR3A,COM3A0);
    9fd0:	ab e8       	ldi	r26, 0x8B	; 139
    9fd2:	b0 e0       	ldi	r27, 0x00	; 0
    9fd4:	eb e8       	ldi	r30, 0x8B	; 139
    9fd6:	f0 e0       	ldi	r31, 0x00	; 0
    9fd8:	80 81       	ld	r24, Z
    9fda:	8f 7b       	andi	r24, 0xBF	; 191
    9fdc:	8c 93       	st	X, r24
		   CLR_BIT(TCCR3A,COM3A1);
    9fde:	ab e8       	ldi	r26, 0x8B	; 139
    9fe0:	b0 e0       	ldi	r27, 0x00	; 0
    9fe2:	eb e8       	ldi	r30, 0x8B	; 139
    9fe4:	f0 e0       	ldi	r31, 0x00	; 0
    9fe6:	80 81       	ld	r24, Z
    9fe8:	8f 77       	andi	r24, 0x7F	; 127
    9fea:	8c 93       	st	X, r24
		    Buzzer_On();
    9fec:	0e 94 0a 3b 	call	0x7614	; 0x7614 <Buzzer_On>
		   LCD_vidGotoxy(0,1);
    9ff0:	80 e0       	ldi	r24, 0x00	; 0
    9ff2:	61 e0       	ldi	r22, 0x01	; 1
    9ff4:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		   LCD_vidWriteString((uint8*)"yala start park");
    9ff8:	8e e4       	ldi	r24, 0x4E	; 78
    9ffa:	91 e0       	ldi	r25, 0x01	; 1
    9ffc:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    a000:	80 e0       	ldi	r24, 0x00	; 0
    a002:	90 e0       	ldi	r25, 0x00	; 0
    a004:	aa e7       	ldi	r26, 0x7A	; 122
    a006:	b4 e4       	ldi	r27, 0x44	; 68
    a008:	8b 87       	std	Y+11, r24	; 0x0b
    a00a:	9c 87       	std	Y+12, r25	; 0x0c
    a00c:	ad 87       	std	Y+13, r26	; 0x0d
    a00e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a010:	6b 85       	ldd	r22, Y+11	; 0x0b
    a012:	7c 85       	ldd	r23, Y+12	; 0x0c
    a014:	8d 85       	ldd	r24, Y+13	; 0x0d
    a016:	9e 85       	ldd	r25, Y+14	; 0x0e
    a018:	20 e0       	ldi	r18, 0x00	; 0
    a01a:	30 e0       	ldi	r19, 0x00	; 0
    a01c:	4a ef       	ldi	r20, 0xFA	; 250
    a01e:	54 e4       	ldi	r21, 0x44	; 68
    a020:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a024:	dc 01       	movw	r26, r24
    a026:	cb 01       	movw	r24, r22
    a028:	8f 83       	std	Y+7, r24	; 0x07
    a02a:	98 87       	std	Y+8, r25	; 0x08
    a02c:	a9 87       	std	Y+9, r26	; 0x09
    a02e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a030:	6f 81       	ldd	r22, Y+7	; 0x07
    a032:	78 85       	ldd	r23, Y+8	; 0x08
    a034:	89 85       	ldd	r24, Y+9	; 0x09
    a036:	9a 85       	ldd	r25, Y+10	; 0x0a
    a038:	20 e0       	ldi	r18, 0x00	; 0
    a03a:	30 e0       	ldi	r19, 0x00	; 0
    a03c:	40 e8       	ldi	r20, 0x80	; 128
    a03e:	5f e3       	ldi	r21, 0x3F	; 63
    a040:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a044:	88 23       	and	r24, r24
    a046:	2c f4       	brge	.+10     	; 0xa052 <CAR_Length_Check3+0x258>
		__ticks = 1;
    a048:	81 e0       	ldi	r24, 0x01	; 1
    a04a:	90 e0       	ldi	r25, 0x00	; 0
    a04c:	9e 83       	std	Y+6, r25	; 0x06
    a04e:	8d 83       	std	Y+5, r24	; 0x05
    a050:	3f c0       	rjmp	.+126    	; 0xa0d0 <CAR_Length_Check3+0x2d6>
	else if (__tmp > 65535)
    a052:	6f 81       	ldd	r22, Y+7	; 0x07
    a054:	78 85       	ldd	r23, Y+8	; 0x08
    a056:	89 85       	ldd	r24, Y+9	; 0x09
    a058:	9a 85       	ldd	r25, Y+10	; 0x0a
    a05a:	20 e0       	ldi	r18, 0x00	; 0
    a05c:	3f ef       	ldi	r19, 0xFF	; 255
    a05e:	4f e7       	ldi	r20, 0x7F	; 127
    a060:	57 e4       	ldi	r21, 0x47	; 71
    a062:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a066:	18 16       	cp	r1, r24
    a068:	4c f5       	brge	.+82     	; 0xa0bc <CAR_Length_Check3+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a06a:	6b 85       	ldd	r22, Y+11	; 0x0b
    a06c:	7c 85       	ldd	r23, Y+12	; 0x0c
    a06e:	8d 85       	ldd	r24, Y+13	; 0x0d
    a070:	9e 85       	ldd	r25, Y+14	; 0x0e
    a072:	20 e0       	ldi	r18, 0x00	; 0
    a074:	30 e0       	ldi	r19, 0x00	; 0
    a076:	40 e2       	ldi	r20, 0x20	; 32
    a078:	51 e4       	ldi	r21, 0x41	; 65
    a07a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a07e:	dc 01       	movw	r26, r24
    a080:	cb 01       	movw	r24, r22
    a082:	bc 01       	movw	r22, r24
    a084:	cd 01       	movw	r24, r26
    a086:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a08a:	dc 01       	movw	r26, r24
    a08c:	cb 01       	movw	r24, r22
    a08e:	9e 83       	std	Y+6, r25	; 0x06
    a090:	8d 83       	std	Y+5, r24	; 0x05
    a092:	0f c0       	rjmp	.+30     	; 0xa0b2 <CAR_Length_Check3+0x2b8>
    a094:	88 ec       	ldi	r24, 0xC8	; 200
    a096:	90 e0       	ldi	r25, 0x00	; 0
    a098:	9c 83       	std	Y+4, r25	; 0x04
    a09a:	8b 83       	std	Y+3, r24	; 0x03
    a09c:	8b 81       	ldd	r24, Y+3	; 0x03
    a09e:	9c 81       	ldd	r25, Y+4	; 0x04
    a0a0:	01 97       	sbiw	r24, 0x01	; 1
    a0a2:	f1 f7       	brne	.-4      	; 0xa0a0 <CAR_Length_Check3+0x2a6>
    a0a4:	9c 83       	std	Y+4, r25	; 0x04
    a0a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a0a8:	8d 81       	ldd	r24, Y+5	; 0x05
    a0aa:	9e 81       	ldd	r25, Y+6	; 0x06
    a0ac:	01 97       	sbiw	r24, 0x01	; 1
    a0ae:	9e 83       	std	Y+6, r25	; 0x06
    a0b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a0b2:	8d 81       	ldd	r24, Y+5	; 0x05
    a0b4:	9e 81       	ldd	r25, Y+6	; 0x06
    a0b6:	00 97       	sbiw	r24, 0x00	; 0
    a0b8:	69 f7       	brne	.-38     	; 0xa094 <CAR_Length_Check3+0x29a>
    a0ba:	14 c0       	rjmp	.+40     	; 0xa0e4 <CAR_Length_Check3+0x2ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a0bc:	6f 81       	ldd	r22, Y+7	; 0x07
    a0be:	78 85       	ldd	r23, Y+8	; 0x08
    a0c0:	89 85       	ldd	r24, Y+9	; 0x09
    a0c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    a0c4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a0c8:	dc 01       	movw	r26, r24
    a0ca:	cb 01       	movw	r24, r22
    a0cc:	9e 83       	std	Y+6, r25	; 0x06
    a0ce:	8d 83       	std	Y+5, r24	; 0x05
    a0d0:	8d 81       	ldd	r24, Y+5	; 0x05
    a0d2:	9e 81       	ldd	r25, Y+6	; 0x06
    a0d4:	9a 83       	std	Y+2, r25	; 0x02
    a0d6:	89 83       	std	Y+1, r24	; 0x01
    a0d8:	89 81       	ldd	r24, Y+1	; 0x01
    a0da:	9a 81       	ldd	r25, Y+2	; 0x02
    a0dc:	01 97       	sbiw	r24, 0x01	; 1
    a0de:	f1 f7       	brne	.-4      	; 0xa0dc <CAR_Length_Check3+0x2e2>
    a0e0:	9a 83       	std	Y+2, r25	; 0x02
    a0e2:	89 83       	std	Y+1, r24	; 0x01
		   _delay_ms(1000);
		   Buzzer_Off();
    a0e4:	0e 94 16 3b 	call	0x762c	; 0x762c <Buzzer_Off>
		   }
           }while(length_rb<50);
    a0e8:	80 91 cd 03 	lds	r24, 0x03CD
    a0ec:	8f 87       	std	Y+15, r24	; 0x0f
    a0ee:	80 91 ce 03 	lds	r24, 0x03CE
    a0f2:	88 8b       	std	Y+16, r24	; 0x10
    a0f4:	80 91 cf 03 	lds	r24, 0x03CF
    a0f8:	89 8b       	std	Y+17, r24	; 0x11
    a0fa:	80 91 d0 03 	lds	r24, 0x03D0
    a0fe:	8a 8b       	std	Y+18, r24	; 0x12
    a100:	80 91 d1 03 	lds	r24, 0x03D1
    a104:	8b 8b       	std	Y+19, r24	; 0x13
    a106:	80 91 d2 03 	lds	r24, 0x03D2
    a10a:	8c 8b       	std	Y+20, r24	; 0x14
    a10c:	80 91 d3 03 	lds	r24, 0x03D3
    a110:	8d 8b       	std	Y+21, r24	; 0x15
    a112:	80 91 d4 03 	lds	r24, 0x03D4
    a116:	8e 8b       	std	Y+22, r24	; 0x16
    a118:	8e 89       	ldd	r24, Y+22	; 0x16
    a11a:	88 23       	and	r24, r24
    a11c:	91 f5       	brne	.+100    	; 0xa182 <CAR_Length_Check3+0x388>
    a11e:	8e 89       	ldd	r24, Y+22	; 0x16
    a120:	88 23       	and	r24, r24
    a122:	09 f0       	breq	.+2      	; 0xa126 <CAR_Length_Check3+0x32c>
    a124:	bd ce       	rjmp	.-646    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a126:	8d 89       	ldd	r24, Y+21	; 0x15
    a128:	88 23       	and	r24, r24
    a12a:	59 f5       	brne	.+86     	; 0xa182 <CAR_Length_Check3+0x388>
    a12c:	8d 89       	ldd	r24, Y+21	; 0x15
    a12e:	88 23       	and	r24, r24
    a130:	09 f0       	breq	.+2      	; 0xa134 <CAR_Length_Check3+0x33a>
    a132:	b6 ce       	rjmp	.-660    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a134:	8c 89       	ldd	r24, Y+20	; 0x14
    a136:	88 23       	and	r24, r24
    a138:	21 f5       	brne	.+72     	; 0xa182 <CAR_Length_Check3+0x388>
    a13a:	8c 89       	ldd	r24, Y+20	; 0x14
    a13c:	88 23       	and	r24, r24
    a13e:	09 f0       	breq	.+2      	; 0xa142 <CAR_Length_Check3+0x348>
    a140:	af ce       	rjmp	.-674    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a142:	8b 89       	ldd	r24, Y+19	; 0x13
    a144:	88 23       	and	r24, r24
    a146:	e9 f4       	brne	.+58     	; 0xa182 <CAR_Length_Check3+0x388>
    a148:	8b 89       	ldd	r24, Y+19	; 0x13
    a14a:	88 23       	and	r24, r24
    a14c:	09 f0       	breq	.+2      	; 0xa150 <CAR_Length_Check3+0x356>
    a14e:	a8 ce       	rjmp	.-688    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a150:	8a 89       	ldd	r24, Y+18	; 0x12
    a152:	88 23       	and	r24, r24
    a154:	b1 f4       	brne	.+44     	; 0xa182 <CAR_Length_Check3+0x388>
    a156:	8a 89       	ldd	r24, Y+18	; 0x12
    a158:	88 23       	and	r24, r24
    a15a:	09 f0       	breq	.+2      	; 0xa15e <CAR_Length_Check3+0x364>
    a15c:	a1 ce       	rjmp	.-702    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a15e:	89 89       	ldd	r24, Y+17	; 0x11
    a160:	88 23       	and	r24, r24
    a162:	79 f4       	brne	.+30     	; 0xa182 <CAR_Length_Check3+0x388>
    a164:	89 89       	ldd	r24, Y+17	; 0x11
    a166:	88 23       	and	r24, r24
    a168:	09 f0       	breq	.+2      	; 0xa16c <CAR_Length_Check3+0x372>
    a16a:	9a ce       	rjmp	.-716    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a16c:	88 89       	ldd	r24, Y+16	; 0x10
    a16e:	88 23       	and	r24, r24
    a170:	41 f4       	brne	.+16     	; 0xa182 <CAR_Length_Check3+0x388>
    a172:	88 89       	ldd	r24, Y+16	; 0x10
    a174:	88 23       	and	r24, r24
    a176:	09 f0       	breq	.+2      	; 0xa17a <CAR_Length_Check3+0x380>
    a178:	93 ce       	rjmp	.-730    	; 0x9ea0 <CAR_Length_Check3+0xa6>
    a17a:	8f 85       	ldd	r24, Y+15	; 0x0f
    a17c:	82 33       	cpi	r24, 0x32	; 50
    a17e:	08 f4       	brcc	.+2      	; 0xa182 <CAR_Length_Check3+0x388>
    a180:	8f ce       	rjmp	.-738    	; 0x9ea0 <CAR_Length_Check3+0xa6>
}
    a182:	6e 96       	adiw	r28, 0x1e	; 30
    a184:	0f b6       	in	r0, 0x3f	; 63
    a186:	f8 94       	cli
    a188:	de bf       	out	0x3e, r29	; 62
    a18a:	0f be       	out	0x3f, r0	; 63
    a18c:	cd bf       	out	0x3d, r28	; 61
    a18e:	cf 91       	pop	r28
    a190:	df 91       	pop	r29
    a192:	1f 91       	pop	r17
    a194:	0f 91       	pop	r16
    a196:	ff 90       	pop	r15
    a198:	ef 90       	pop	r14
    a19a:	df 90       	pop	r13
    a19c:	cf 90       	pop	r12
    a19e:	bf 90       	pop	r11
    a1a0:	af 90       	pop	r10
    a1a2:	08 95       	ret

0000a1a4 <CAR_Length_Check4>:

void CAR_Length_Check4(void)
{
    a1a4:	af 92       	push	r10
    a1a6:	bf 92       	push	r11
    a1a8:	cf 92       	push	r12
    a1aa:	df 92       	push	r13
    a1ac:	ef 92       	push	r14
    a1ae:	ff 92       	push	r15
    a1b0:	0f 93       	push	r16
    a1b2:	1f 93       	push	r17
    a1b4:	df 93       	push	r29
    a1b6:	cf 93       	push	r28
    a1b8:	cd b7       	in	r28, 0x3d	; 61
    a1ba:	de b7       	in	r29, 0x3e	; 62
    a1bc:	6e 97       	sbiw	r28, 0x1e	; 30
    a1be:	0f b6       	in	r0, 0x3f	; 63
    a1c0:	f8 94       	cli
    a1c2:	de bf       	out	0x3e, r29	; 62
    a1c4:	0f be       	out	0x3f, r0	; 63
    a1c6:	cd bf       	out	0x3d, r28	; 61
	flag_check=3;
    a1c8:	83 e0       	ldi	r24, 0x03	; 3
    a1ca:	80 93 a2 03 	sts	0x03A2, r24
    Timer0_Init(Normal_mode,timer0_scale_8,disconnected);
    a1ce:	80 e0       	ldi	r24, 0x00	; 0
    a1d0:	62 e0       	ldi	r22, 0x02	; 2
    a1d2:	40 e0       	ldi	r20, 0x00	; 0
    a1d4:	0e 94 7f 1d 	call	0x3afe	; 0x3afe <Timer0_Init>
	forward_move();
    a1d8:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
	TCNT0=0;
    a1dc:	e2 e5       	ldi	r30, 0x52	; 82
    a1de:	f0 e0       	ldi	r31, 0x00	; 0
    a1e0:	10 82       	st	Z, r1
	count_right_back2=0;
    a1e2:	10 92 8d 03 	sts	0x038D, r1
    a1e6:	10 92 8c 03 	sts	0x038C, r1
		 do{
		    //heya mashya forward
		  length_rb=distance_rb2();
    a1ea:	0e 94 fb 46 	call	0x8df6	; 0x8df6 <distance_rb2>
    a1ee:	a2 2e       	mov	r10, r18
    a1f0:	b3 2e       	mov	r11, r19
    a1f2:	c4 2e       	mov	r12, r20
    a1f4:	d5 2e       	mov	r13, r21
    a1f6:	e6 2e       	mov	r14, r22
    a1f8:	f7 2e       	mov	r15, r23
    a1fa:	08 2f       	mov	r16, r24
    a1fc:	19 2f       	mov	r17, r25
    a1fe:	a0 92 cd 03 	sts	0x03CD, r10
    a202:	b0 92 ce 03 	sts	0x03CE, r11
    a206:	c0 92 cf 03 	sts	0x03CF, r12
    a20a:	d0 92 d0 03 	sts	0x03D0, r13
    a20e:	e0 92 d1 03 	sts	0x03D1, r14
    a212:	f0 92 d2 03 	sts	0x03D2, r15
    a216:	00 93 d3 03 	sts	0x03D3, r16
    a21a:	10 93 d4 03 	sts	0x03D4, r17
		  LCD_vidGotoxy(0,0);
    a21e:	80 e0       	ldi	r24, 0x00	; 0
    a220:	60 e0       	ldi	r22, 0x00	; 0
    a222:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		  LCD_vidWriteString("length:");
    a226:	86 e4       	ldi	r24, 0x46	; 70
    a228:	91 e0       	ldi	r25, 0x01	; 1
    a22a:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
		  LCD_vidGotoxy(10,0);
    a22e:	8a e0       	ldi	r24, 0x0A	; 10
    a230:	60 e0       	ldi	r22, 0x00	; 0
    a232:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		  LCD_vidWriteUnSignedInteger(length_rb);
    a236:	a0 90 cd 03 	lds	r10, 0x03CD
    a23a:	b0 90 ce 03 	lds	r11, 0x03CE
    a23e:	c0 90 cf 03 	lds	r12, 0x03CF
    a242:	d0 90 d0 03 	lds	r13, 0x03D0
    a246:	e0 90 d1 03 	lds	r14, 0x03D1
    a24a:	f0 90 d2 03 	lds	r15, 0x03D2
    a24e:	00 91 d3 03 	lds	r16, 0x03D3
    a252:	10 91 d4 03 	lds	r17, 0x03D4
    a256:	2a 2d       	mov	r18, r10
    a258:	3b 2d       	mov	r19, r11
    a25a:	4c 2d       	mov	r20, r12
    a25c:	5d 2d       	mov	r21, r13
    a25e:	6e 2d       	mov	r22, r14
    a260:	7f 2d       	mov	r23, r15
    a262:	80 2f       	mov	r24, r16
    a264:	91 2f       	mov	r25, r17
    a266:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
		  if(length_rb>=60)
    a26a:	80 91 cd 03 	lds	r24, 0x03CD
    a26e:	8f 8b       	std	Y+23, r24	; 0x17
    a270:	80 91 ce 03 	lds	r24, 0x03CE
    a274:	88 8f       	std	Y+24, r24	; 0x18
    a276:	80 91 cf 03 	lds	r24, 0x03CF
    a27a:	89 8f       	std	Y+25, r24	; 0x19
    a27c:	80 91 d0 03 	lds	r24, 0x03D0
    a280:	8a 8f       	std	Y+26, r24	; 0x1a
    a282:	80 91 d1 03 	lds	r24, 0x03D1
    a286:	8b 8f       	std	Y+27, r24	; 0x1b
    a288:	80 91 d2 03 	lds	r24, 0x03D2
    a28c:	8c 8f       	std	Y+28, r24	; 0x1c
    a28e:	80 91 d3 03 	lds	r24, 0x03D3
    a292:	8d 8f       	std	Y+29, r24	; 0x1d
    a294:	80 91 d4 03 	lds	r24, 0x03D4
    a298:	8e 8f       	std	Y+30, r24	; 0x1e
    a29a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    a29c:	88 23       	and	r24, r24
    a29e:	91 f5       	brne	.+100    	; 0xa304 <CAR_Length_Check4+0x160>
    a2a0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    a2a2:	88 23       	and	r24, r24
    a2a4:	09 f0       	breq	.+2      	; 0xa2a8 <CAR_Length_Check4+0x104>
    a2a6:	bd c0       	rjmp	.+378    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a2aa:	88 23       	and	r24, r24
    a2ac:	59 f5       	brne	.+86     	; 0xa304 <CAR_Length_Check4+0x160>
    a2ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a2b0:	88 23       	and	r24, r24
    a2b2:	09 f0       	breq	.+2      	; 0xa2b6 <CAR_Length_Check4+0x112>
    a2b4:	b6 c0       	rjmp	.+364    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2b6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    a2b8:	88 23       	and	r24, r24
    a2ba:	21 f5       	brne	.+72     	; 0xa304 <CAR_Length_Check4+0x160>
    a2bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    a2be:	88 23       	and	r24, r24
    a2c0:	09 f0       	breq	.+2      	; 0xa2c4 <CAR_Length_Check4+0x120>
    a2c2:	af c0       	rjmp	.+350    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a2c6:	88 23       	and	r24, r24
    a2c8:	e9 f4       	brne	.+58     	; 0xa304 <CAR_Length_Check4+0x160>
    a2ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a2cc:	88 23       	and	r24, r24
    a2ce:	09 f0       	breq	.+2      	; 0xa2d2 <CAR_Length_Check4+0x12e>
    a2d0:	a8 c0       	rjmp	.+336    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2d2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    a2d4:	88 23       	and	r24, r24
    a2d6:	b1 f4       	brne	.+44     	; 0xa304 <CAR_Length_Check4+0x160>
    a2d8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    a2da:	88 23       	and	r24, r24
    a2dc:	09 f0       	breq	.+2      	; 0xa2e0 <CAR_Length_Check4+0x13c>
    a2de:	a1 c0       	rjmp	.+322    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2e0:	89 8d       	ldd	r24, Y+25	; 0x19
    a2e2:	88 23       	and	r24, r24
    a2e4:	79 f4       	brne	.+30     	; 0xa304 <CAR_Length_Check4+0x160>
    a2e6:	89 8d       	ldd	r24, Y+25	; 0x19
    a2e8:	88 23       	and	r24, r24
    a2ea:	09 f0       	breq	.+2      	; 0xa2ee <CAR_Length_Check4+0x14a>
    a2ec:	9a c0       	rjmp	.+308    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2ee:	88 8d       	ldd	r24, Y+24	; 0x18
    a2f0:	88 23       	and	r24, r24
    a2f2:	41 f4       	brne	.+16     	; 0xa304 <CAR_Length_Check4+0x160>
    a2f4:	88 8d       	ldd	r24, Y+24	; 0x18
    a2f6:	88 23       	and	r24, r24
    a2f8:	09 f0       	breq	.+2      	; 0xa2fc <CAR_Length_Check4+0x158>
    a2fa:	93 c0       	rjmp	.+294    	; 0xa422 <CAR_Length_Check4+0x27e>
    a2fc:	8f 89       	ldd	r24, Y+23	; 0x17
    a2fe:	8c 33       	cpi	r24, 0x3C	; 60
    a300:	08 f4       	brcc	.+2      	; 0xa304 <CAR_Length_Check4+0x160>
    a302:	8f c0       	rjmp	.+286    	; 0xa422 <CAR_Length_Check4+0x27e>
		   {
		     //STOP CAR
		   DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    a304:	84 e0       	ldi	r24, 0x04	; 4
    a306:	63 e0       	ldi	r22, 0x03	; 3
    a308:	41 e0       	ldi	r20, 0x01	; 1
    a30a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
		   Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    a30e:	87 e0       	ldi	r24, 0x07	; 7
    a310:	60 e0       	ldi	r22, 0x00	; 0
    a312:	42 e0       	ldi	r20, 0x02	; 2
    a314:	20 e0       	ldi	r18, 0x00	; 0
    a316:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
		   CLR_BIT(TCCR3A,COM3A0);
    a31a:	ab e8       	ldi	r26, 0x8B	; 139
    a31c:	b0 e0       	ldi	r27, 0x00	; 0
    a31e:	eb e8       	ldi	r30, 0x8B	; 139
    a320:	f0 e0       	ldi	r31, 0x00	; 0
    a322:	80 81       	ld	r24, Z
    a324:	8f 7b       	andi	r24, 0xBF	; 191
    a326:	8c 93       	st	X, r24
		   CLR_BIT(TCCR3A,COM3A1);
    a328:	ab e8       	ldi	r26, 0x8B	; 139
    a32a:	b0 e0       	ldi	r27, 0x00	; 0
    a32c:	eb e8       	ldi	r30, 0x8B	; 139
    a32e:	f0 e0       	ldi	r31, 0x00	; 0
    a330:	80 81       	ld	r24, Z
    a332:	8f 77       	andi	r24, 0x7F	; 127
    a334:	8c 93       	st	X, r24
		    Buzzer_On();
    a336:	0e 94 0a 3b 	call	0x7614	; 0x7614 <Buzzer_On>
    a33a:	80 e0       	ldi	r24, 0x00	; 0
    a33c:	90 e0       	ldi	r25, 0x00	; 0
    a33e:	aa e7       	ldi	r26, 0x7A	; 122
    a340:	b4 e4       	ldi	r27, 0x44	; 68
    a342:	8b 87       	std	Y+11, r24	; 0x0b
    a344:	9c 87       	std	Y+12, r25	; 0x0c
    a346:	ad 87       	std	Y+13, r26	; 0x0d
    a348:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a34a:	6b 85       	ldd	r22, Y+11	; 0x0b
    a34c:	7c 85       	ldd	r23, Y+12	; 0x0c
    a34e:	8d 85       	ldd	r24, Y+13	; 0x0d
    a350:	9e 85       	ldd	r25, Y+14	; 0x0e
    a352:	20 e0       	ldi	r18, 0x00	; 0
    a354:	30 e0       	ldi	r19, 0x00	; 0
    a356:	4a ef       	ldi	r20, 0xFA	; 250
    a358:	54 e4       	ldi	r21, 0x44	; 68
    a35a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a35e:	dc 01       	movw	r26, r24
    a360:	cb 01       	movw	r24, r22
    a362:	8f 83       	std	Y+7, r24	; 0x07
    a364:	98 87       	std	Y+8, r25	; 0x08
    a366:	a9 87       	std	Y+9, r26	; 0x09
    a368:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a36a:	6f 81       	ldd	r22, Y+7	; 0x07
    a36c:	78 85       	ldd	r23, Y+8	; 0x08
    a36e:	89 85       	ldd	r24, Y+9	; 0x09
    a370:	9a 85       	ldd	r25, Y+10	; 0x0a
    a372:	20 e0       	ldi	r18, 0x00	; 0
    a374:	30 e0       	ldi	r19, 0x00	; 0
    a376:	40 e8       	ldi	r20, 0x80	; 128
    a378:	5f e3       	ldi	r21, 0x3F	; 63
    a37a:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a37e:	88 23       	and	r24, r24
    a380:	2c f4       	brge	.+10     	; 0xa38c <CAR_Length_Check4+0x1e8>
		__ticks = 1;
    a382:	81 e0       	ldi	r24, 0x01	; 1
    a384:	90 e0       	ldi	r25, 0x00	; 0
    a386:	9e 83       	std	Y+6, r25	; 0x06
    a388:	8d 83       	std	Y+5, r24	; 0x05
    a38a:	3f c0       	rjmp	.+126    	; 0xa40a <CAR_Length_Check4+0x266>
	else if (__tmp > 65535)
    a38c:	6f 81       	ldd	r22, Y+7	; 0x07
    a38e:	78 85       	ldd	r23, Y+8	; 0x08
    a390:	89 85       	ldd	r24, Y+9	; 0x09
    a392:	9a 85       	ldd	r25, Y+10	; 0x0a
    a394:	20 e0       	ldi	r18, 0x00	; 0
    a396:	3f ef       	ldi	r19, 0xFF	; 255
    a398:	4f e7       	ldi	r20, 0x7F	; 127
    a39a:	57 e4       	ldi	r21, 0x47	; 71
    a39c:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a3a0:	18 16       	cp	r1, r24
    a3a2:	4c f5       	brge	.+82     	; 0xa3f6 <CAR_Length_Check4+0x252>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a3a4:	6b 85       	ldd	r22, Y+11	; 0x0b
    a3a6:	7c 85       	ldd	r23, Y+12	; 0x0c
    a3a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    a3aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    a3ac:	20 e0       	ldi	r18, 0x00	; 0
    a3ae:	30 e0       	ldi	r19, 0x00	; 0
    a3b0:	40 e2       	ldi	r20, 0x20	; 32
    a3b2:	51 e4       	ldi	r21, 0x41	; 65
    a3b4:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a3b8:	dc 01       	movw	r26, r24
    a3ba:	cb 01       	movw	r24, r22
    a3bc:	bc 01       	movw	r22, r24
    a3be:	cd 01       	movw	r24, r26
    a3c0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a3c4:	dc 01       	movw	r26, r24
    a3c6:	cb 01       	movw	r24, r22
    a3c8:	9e 83       	std	Y+6, r25	; 0x06
    a3ca:	8d 83       	std	Y+5, r24	; 0x05
    a3cc:	0f c0       	rjmp	.+30     	; 0xa3ec <CAR_Length_Check4+0x248>
    a3ce:	88 ec       	ldi	r24, 0xC8	; 200
    a3d0:	90 e0       	ldi	r25, 0x00	; 0
    a3d2:	9c 83       	std	Y+4, r25	; 0x04
    a3d4:	8b 83       	std	Y+3, r24	; 0x03
    a3d6:	8b 81       	ldd	r24, Y+3	; 0x03
    a3d8:	9c 81       	ldd	r25, Y+4	; 0x04
    a3da:	01 97       	sbiw	r24, 0x01	; 1
    a3dc:	f1 f7       	brne	.-4      	; 0xa3da <CAR_Length_Check4+0x236>
    a3de:	9c 83       	std	Y+4, r25	; 0x04
    a3e0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a3e2:	8d 81       	ldd	r24, Y+5	; 0x05
    a3e4:	9e 81       	ldd	r25, Y+6	; 0x06
    a3e6:	01 97       	sbiw	r24, 0x01	; 1
    a3e8:	9e 83       	std	Y+6, r25	; 0x06
    a3ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a3ec:	8d 81       	ldd	r24, Y+5	; 0x05
    a3ee:	9e 81       	ldd	r25, Y+6	; 0x06
    a3f0:	00 97       	sbiw	r24, 0x00	; 0
    a3f2:	69 f7       	brne	.-38     	; 0xa3ce <CAR_Length_Check4+0x22a>
    a3f4:	14 c0       	rjmp	.+40     	; 0xa41e <CAR_Length_Check4+0x27a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a3f6:	6f 81       	ldd	r22, Y+7	; 0x07
    a3f8:	78 85       	ldd	r23, Y+8	; 0x08
    a3fa:	89 85       	ldd	r24, Y+9	; 0x09
    a3fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    a3fe:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a402:	dc 01       	movw	r26, r24
    a404:	cb 01       	movw	r24, r22
    a406:	9e 83       	std	Y+6, r25	; 0x06
    a408:	8d 83       	std	Y+5, r24	; 0x05
    a40a:	8d 81       	ldd	r24, Y+5	; 0x05
    a40c:	9e 81       	ldd	r25, Y+6	; 0x06
    a40e:	9a 83       	std	Y+2, r25	; 0x02
    a410:	89 83       	std	Y+1, r24	; 0x01
    a412:	89 81       	ldd	r24, Y+1	; 0x01
    a414:	9a 81       	ldd	r25, Y+2	; 0x02
    a416:	01 97       	sbiw	r24, 0x01	; 1
    a418:	f1 f7       	brne	.-4      	; 0xa416 <CAR_Length_Check4+0x272>
    a41a:	9a 83       	std	Y+2, r25	; 0x02
    a41c:	89 83       	std	Y+1, r24	; 0x01
		   _delay_ms(1000);
		   Buzzer_Off();
    a41e:	0e 94 16 3b 	call	0x762c	; 0x762c <Buzzer_Off>
		   }
           }while(length_rb<60);
    a422:	80 91 cd 03 	lds	r24, 0x03CD
    a426:	8f 87       	std	Y+15, r24	; 0x0f
    a428:	80 91 ce 03 	lds	r24, 0x03CE
    a42c:	88 8b       	std	Y+16, r24	; 0x10
    a42e:	80 91 cf 03 	lds	r24, 0x03CF
    a432:	89 8b       	std	Y+17, r24	; 0x11
    a434:	80 91 d0 03 	lds	r24, 0x03D0
    a438:	8a 8b       	std	Y+18, r24	; 0x12
    a43a:	80 91 d1 03 	lds	r24, 0x03D1
    a43e:	8b 8b       	std	Y+19, r24	; 0x13
    a440:	80 91 d2 03 	lds	r24, 0x03D2
    a444:	8c 8b       	std	Y+20, r24	; 0x14
    a446:	80 91 d3 03 	lds	r24, 0x03D3
    a44a:	8d 8b       	std	Y+21, r24	; 0x15
    a44c:	80 91 d4 03 	lds	r24, 0x03D4
    a450:	8e 8b       	std	Y+22, r24	; 0x16
    a452:	8e 89       	ldd	r24, Y+22	; 0x16
    a454:	88 23       	and	r24, r24
    a456:	91 f5       	brne	.+100    	; 0xa4bc <CAR_Length_Check4+0x318>
    a458:	8e 89       	ldd	r24, Y+22	; 0x16
    a45a:	88 23       	and	r24, r24
    a45c:	09 f0       	breq	.+2      	; 0xa460 <CAR_Length_Check4+0x2bc>
    a45e:	c5 ce       	rjmp	.-630    	; 0xa1ea <CAR_Length_Check4+0x46>
    a460:	8d 89       	ldd	r24, Y+21	; 0x15
    a462:	88 23       	and	r24, r24
    a464:	59 f5       	brne	.+86     	; 0xa4bc <CAR_Length_Check4+0x318>
    a466:	8d 89       	ldd	r24, Y+21	; 0x15
    a468:	88 23       	and	r24, r24
    a46a:	09 f0       	breq	.+2      	; 0xa46e <CAR_Length_Check4+0x2ca>
    a46c:	be ce       	rjmp	.-644    	; 0xa1ea <CAR_Length_Check4+0x46>
    a46e:	8c 89       	ldd	r24, Y+20	; 0x14
    a470:	88 23       	and	r24, r24
    a472:	21 f5       	brne	.+72     	; 0xa4bc <CAR_Length_Check4+0x318>
    a474:	8c 89       	ldd	r24, Y+20	; 0x14
    a476:	88 23       	and	r24, r24
    a478:	09 f0       	breq	.+2      	; 0xa47c <CAR_Length_Check4+0x2d8>
    a47a:	b7 ce       	rjmp	.-658    	; 0xa1ea <CAR_Length_Check4+0x46>
    a47c:	8b 89       	ldd	r24, Y+19	; 0x13
    a47e:	88 23       	and	r24, r24
    a480:	e9 f4       	brne	.+58     	; 0xa4bc <CAR_Length_Check4+0x318>
    a482:	8b 89       	ldd	r24, Y+19	; 0x13
    a484:	88 23       	and	r24, r24
    a486:	09 f0       	breq	.+2      	; 0xa48a <CAR_Length_Check4+0x2e6>
    a488:	b0 ce       	rjmp	.-672    	; 0xa1ea <CAR_Length_Check4+0x46>
    a48a:	8a 89       	ldd	r24, Y+18	; 0x12
    a48c:	88 23       	and	r24, r24
    a48e:	b1 f4       	brne	.+44     	; 0xa4bc <CAR_Length_Check4+0x318>
    a490:	8a 89       	ldd	r24, Y+18	; 0x12
    a492:	88 23       	and	r24, r24
    a494:	09 f0       	breq	.+2      	; 0xa498 <CAR_Length_Check4+0x2f4>
    a496:	a9 ce       	rjmp	.-686    	; 0xa1ea <CAR_Length_Check4+0x46>
    a498:	89 89       	ldd	r24, Y+17	; 0x11
    a49a:	88 23       	and	r24, r24
    a49c:	79 f4       	brne	.+30     	; 0xa4bc <CAR_Length_Check4+0x318>
    a49e:	89 89       	ldd	r24, Y+17	; 0x11
    a4a0:	88 23       	and	r24, r24
    a4a2:	09 f0       	breq	.+2      	; 0xa4a6 <CAR_Length_Check4+0x302>
    a4a4:	a2 ce       	rjmp	.-700    	; 0xa1ea <CAR_Length_Check4+0x46>
    a4a6:	88 89       	ldd	r24, Y+16	; 0x10
    a4a8:	88 23       	and	r24, r24
    a4aa:	41 f4       	brne	.+16     	; 0xa4bc <CAR_Length_Check4+0x318>
    a4ac:	88 89       	ldd	r24, Y+16	; 0x10
    a4ae:	88 23       	and	r24, r24
    a4b0:	09 f0       	breq	.+2      	; 0xa4b4 <CAR_Length_Check4+0x310>
    a4b2:	9b ce       	rjmp	.-714    	; 0xa1ea <CAR_Length_Check4+0x46>
    a4b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    a4b6:	8c 33       	cpi	r24, 0x3C	; 60
    a4b8:	08 f4       	brcc	.+2      	; 0xa4bc <CAR_Length_Check4+0x318>
    a4ba:	97 ce       	rjmp	.-722    	; 0xa1ea <CAR_Length_Check4+0x46>
}
    a4bc:	6e 96       	adiw	r28, 0x1e	; 30
    a4be:	0f b6       	in	r0, 0x3f	; 63
    a4c0:	f8 94       	cli
    a4c2:	de bf       	out	0x3e, r29	; 62
    a4c4:	0f be       	out	0x3f, r0	; 63
    a4c6:	cd bf       	out	0x3d, r28	; 61
    a4c8:	cf 91       	pop	r28
    a4ca:	df 91       	pop	r29
    a4cc:	1f 91       	pop	r17
    a4ce:	0f 91       	pop	r16
    a4d0:	ff 90       	pop	r15
    a4d2:	ef 90       	pop	r14
    a4d4:	df 90       	pop	r13
    a4d6:	cf 90       	pop	r12
    a4d8:	bf 90       	pop	r11
    a4da:	af 90       	pop	r10
    a4dc:	08 95       	ret

0000a4de <forward_move>:


void forward_move(void)
{
    a4de:	df 93       	push	r29
    a4e0:	cf 93       	push	r28
    a4e2:	cd b7       	in	r28, 0x3d	; 61
    a4e4:	de b7       	in	r29, 0x3e	; 62
	//TO DISCONNECT CHANNEL C
   Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    a4e6:	87 e0       	ldi	r24, 0x07	; 7
    a4e8:	60 e0       	ldi	r22, 0x00	; 0
    a4ea:	42 e0       	ldi	r20, 0x02	; 2
    a4ec:	20 e0       	ldi	r18, 0x00	; 0
    a4ee:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
   DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    a4f2:	84 e0       	ldi	r24, 0x04	; 4
    a4f4:	65 e0       	ldi	r22, 0x05	; 5
    a4f6:	41 e0       	ldi	r20, 0x01	; 1
    a4f8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
   CLR_BIT(TCCR3A,COM3C0);
    a4fc:	ab e8       	ldi	r26, 0x8B	; 139
    a4fe:	b0 e0       	ldi	r27, 0x00	; 0
    a500:	eb e8       	ldi	r30, 0x8B	; 139
    a502:	f0 e0       	ldi	r31, 0x00	; 0
    a504:	80 81       	ld	r24, Z
    a506:	8b 7f       	andi	r24, 0xFB	; 251
    a508:	8c 93       	st	X, r24
   CLR_BIT(TCCR3A,COM3C1);
    a50a:	ab e8       	ldi	r26, 0x8B	; 139
    a50c:	b0 e0       	ldi	r27, 0x00	; 0
    a50e:	eb e8       	ldi	r30, 0x8B	; 139
    a510:	f0 e0       	ldi	r31, 0x00	; 0
    a512:	80 81       	ld	r24, Z
    a514:	87 7f       	andi	r24, 0xF7	; 247
    a516:	8c 93       	st	X, r24

   Timer3_Init(timer3_Fast_PWM_10_bit,timer3_scale_1024,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,A_Channel_3);
    a518:	87 e0       	ldi	r24, 0x07	; 7
    a51a:	65 e0       	ldi	r22, 0x05	; 5
    a51c:	42 e0       	ldi	r20, 0x02	; 2
    a51e:	21 e0       	ldi	r18, 0x01	; 1
    a520:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
   DIO_void_Set_Pin_Dirction(car_control, forward,OUTPUT);
    a524:	84 e0       	ldi	r24, 0x04	; 4
    a526:	63 e0       	ldi	r22, 0x03	; 3
    a528:	41 e0       	ldi	r20, 0x01	; 1
    a52a:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
   TMR3_void_Set_OCR_TimerValue(100,A_Channel_3);
    a52e:	84 e6       	ldi	r24, 0x64	; 100
    a530:	90 e0       	ldi	r25, 0x00	; 0
    a532:	61 e0       	ldi	r22, 0x01	; 1
    a534:	0e 94 88 18 	call	0x3110	; 0x3110 <TMR3_void_Set_OCR_TimerValue>
}
    a538:	cf 91       	pop	r28
    a53a:	df 91       	pop	r29
    a53c:	08 95       	ret

0000a53e <backward_move>:

void backward_move(void)
{
    a53e:	df 93       	push	r29
    a540:	cf 93       	push	r28
    a542:	cd b7       	in	r28, 0x3d	; 61
    a544:	de b7       	in	r29, 0x3e	; 62
	    Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    a546:	87 e0       	ldi	r24, 0x07	; 7
    a548:	60 e0       	ldi	r22, 0x00	; 0
    a54a:	42 e0       	ldi	r20, 0x02	; 2
    a54c:	20 e0       	ldi	r18, 0x00	; 0
    a54e:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    a552:	84 e0       	ldi	r24, 0x04	; 4
    a554:	63 e0       	ldi	r22, 0x03	; 3
    a556:	41 e0       	ldi	r20, 0x01	; 1
    a558:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    CLR_BIT(TCCR3A,COM3A0);
    a55c:	ab e8       	ldi	r26, 0x8B	; 139
    a55e:	b0 e0       	ldi	r27, 0x00	; 0
    a560:	eb e8       	ldi	r30, 0x8B	; 139
    a562:	f0 e0       	ldi	r31, 0x00	; 0
    a564:	80 81       	ld	r24, Z
    a566:	8f 7b       	andi	r24, 0xBF	; 191
    a568:	8c 93       	st	X, r24
	    CLR_BIT(TCCR3A,COM3A1);
    a56a:	ab e8       	ldi	r26, 0x8B	; 139
    a56c:	b0 e0       	ldi	r27, 0x00	; 0
    a56e:	eb e8       	ldi	r30, 0x8B	; 139
    a570:	f0 e0       	ldi	r31, 0x00	; 0
    a572:	80 81       	ld	r24, Z
    a574:	8f 77       	andi	r24, 0x7F	; 127
    a576:	8c 93       	st	X, r24
		Timer3_Init( timer3_Fast_PWM_10_bit,timer3_scale_1024,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,C_Channel_3);
    a578:	87 e0       	ldi	r24, 0x07	; 7
    a57a:	65 e0       	ldi	r22, 0x05	; 5
    a57c:	42 e0       	ldi	r20, 0x02	; 2
    a57e:	23 e0       	ldi	r18, 0x03	; 3
    a580:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
        DIO_void_Set_Pin_Dirction(car_control,backword,OUTPUT);
    a584:	84 e0       	ldi	r24, 0x04	; 4
    a586:	65 e0       	ldi	r22, 0x05	; 5
    a588:	41 e0       	ldi	r20, 0x01	; 1
    a58a:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
		TMR3_void_Set_OCR_TimerValue(100,C_Channel_3);
    a58e:	84 e6       	ldi	r24, 0x64	; 100
    a590:	90 e0       	ldi	r25, 0x00	; 0
    a592:	63 e0       	ldi	r22, 0x03	; 3
    a594:	0e 94 88 18 	call	0x3110	; 0x3110 <TMR3_void_Set_OCR_TimerValue>

}
    a598:	cf 91       	pop	r28
    a59a:	df 91       	pop	r29
    a59c:	08 95       	ret

0000a59e <right_move>:


void right_move(void)
{
    a59e:	df 93       	push	r29
    a5a0:	cf 93       	push	r28
    a5a2:	cd b7       	in	r28, 0x3d	; 61
    a5a4:	de b7       	in	r29, 0x3e	; 62
    a5a6:	2e 97       	sbiw	r28, 0x0e	; 14
    a5a8:	0f b6       	in	r0, 0x3f	; 63
    a5aa:	f8 94       	cli
    a5ac:	de bf       	out	0x3e, r29	; 62
    a5ae:	0f be       	out	0x3f, r0	; 63
    a5b0:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    a5b2:	84 e0       	ldi	r24, 0x04	; 4
    a5b4:	66 e0       	ldi	r22, 0x06	; 6
    a5b6:	41 e0       	ldi	r20, 0x01	; 1
    a5b8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,right_wheel,LOW);
    a5bc:	84 e0       	ldi	r24, 0x04	; 4
    a5be:	67 e0       	ldi	r22, 0x07	; 7
    a5c0:	40 e0       	ldi	r20, 0x00	; 0
    a5c2:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    a5c6:	80 e0       	ldi	r24, 0x00	; 0
    a5c8:	90 e0       	ldi	r25, 0x00	; 0
    a5ca:	a6 e9       	ldi	r26, 0x96	; 150
    a5cc:	b4 e4       	ldi	r27, 0x44	; 68
    a5ce:	8b 87       	std	Y+11, r24	; 0x0b
    a5d0:	9c 87       	std	Y+12, r25	; 0x0c
    a5d2:	ad 87       	std	Y+13, r26	; 0x0d
    a5d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a5d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    a5d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    a5da:	8d 85       	ldd	r24, Y+13	; 0x0d
    a5dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    a5de:	20 e0       	ldi	r18, 0x00	; 0
    a5e0:	30 e0       	ldi	r19, 0x00	; 0
    a5e2:	4a ef       	ldi	r20, 0xFA	; 250
    a5e4:	54 e4       	ldi	r21, 0x44	; 68
    a5e6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a5ea:	dc 01       	movw	r26, r24
    a5ec:	cb 01       	movw	r24, r22
    a5ee:	8f 83       	std	Y+7, r24	; 0x07
    a5f0:	98 87       	std	Y+8, r25	; 0x08
    a5f2:	a9 87       	std	Y+9, r26	; 0x09
    a5f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a5f6:	6f 81       	ldd	r22, Y+7	; 0x07
    a5f8:	78 85       	ldd	r23, Y+8	; 0x08
    a5fa:	89 85       	ldd	r24, Y+9	; 0x09
    a5fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    a5fe:	20 e0       	ldi	r18, 0x00	; 0
    a600:	30 e0       	ldi	r19, 0x00	; 0
    a602:	40 e8       	ldi	r20, 0x80	; 128
    a604:	5f e3       	ldi	r21, 0x3F	; 63
    a606:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a60a:	88 23       	and	r24, r24
    a60c:	2c f4       	brge	.+10     	; 0xa618 <right_move+0x7a>
		__ticks = 1;
    a60e:	81 e0       	ldi	r24, 0x01	; 1
    a610:	90 e0       	ldi	r25, 0x00	; 0
    a612:	9e 83       	std	Y+6, r25	; 0x06
    a614:	8d 83       	std	Y+5, r24	; 0x05
    a616:	3f c0       	rjmp	.+126    	; 0xa696 <right_move+0xf8>
	else if (__tmp > 65535)
    a618:	6f 81       	ldd	r22, Y+7	; 0x07
    a61a:	78 85       	ldd	r23, Y+8	; 0x08
    a61c:	89 85       	ldd	r24, Y+9	; 0x09
    a61e:	9a 85       	ldd	r25, Y+10	; 0x0a
    a620:	20 e0       	ldi	r18, 0x00	; 0
    a622:	3f ef       	ldi	r19, 0xFF	; 255
    a624:	4f e7       	ldi	r20, 0x7F	; 127
    a626:	57 e4       	ldi	r21, 0x47	; 71
    a628:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a62c:	18 16       	cp	r1, r24
    a62e:	4c f5       	brge	.+82     	; 0xa682 <right_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a630:	6b 85       	ldd	r22, Y+11	; 0x0b
    a632:	7c 85       	ldd	r23, Y+12	; 0x0c
    a634:	8d 85       	ldd	r24, Y+13	; 0x0d
    a636:	9e 85       	ldd	r25, Y+14	; 0x0e
    a638:	20 e0       	ldi	r18, 0x00	; 0
    a63a:	30 e0       	ldi	r19, 0x00	; 0
    a63c:	40 e2       	ldi	r20, 0x20	; 32
    a63e:	51 e4       	ldi	r21, 0x41	; 65
    a640:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a644:	dc 01       	movw	r26, r24
    a646:	cb 01       	movw	r24, r22
    a648:	bc 01       	movw	r22, r24
    a64a:	cd 01       	movw	r24, r26
    a64c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a650:	dc 01       	movw	r26, r24
    a652:	cb 01       	movw	r24, r22
    a654:	9e 83       	std	Y+6, r25	; 0x06
    a656:	8d 83       	std	Y+5, r24	; 0x05
    a658:	0f c0       	rjmp	.+30     	; 0xa678 <right_move+0xda>
    a65a:	88 ec       	ldi	r24, 0xC8	; 200
    a65c:	90 e0       	ldi	r25, 0x00	; 0
    a65e:	9c 83       	std	Y+4, r25	; 0x04
    a660:	8b 83       	std	Y+3, r24	; 0x03
    a662:	8b 81       	ldd	r24, Y+3	; 0x03
    a664:	9c 81       	ldd	r25, Y+4	; 0x04
    a666:	01 97       	sbiw	r24, 0x01	; 1
    a668:	f1 f7       	brne	.-4      	; 0xa666 <right_move+0xc8>
    a66a:	9c 83       	std	Y+4, r25	; 0x04
    a66c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a66e:	8d 81       	ldd	r24, Y+5	; 0x05
    a670:	9e 81       	ldd	r25, Y+6	; 0x06
    a672:	01 97       	sbiw	r24, 0x01	; 1
    a674:	9e 83       	std	Y+6, r25	; 0x06
    a676:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a678:	8d 81       	ldd	r24, Y+5	; 0x05
    a67a:	9e 81       	ldd	r25, Y+6	; 0x06
    a67c:	00 97       	sbiw	r24, 0x00	; 0
    a67e:	69 f7       	brne	.-38     	; 0xa65a <right_move+0xbc>
    a680:	14 c0       	rjmp	.+40     	; 0xa6aa <right_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a682:	6f 81       	ldd	r22, Y+7	; 0x07
    a684:	78 85       	ldd	r23, Y+8	; 0x08
    a686:	89 85       	ldd	r24, Y+9	; 0x09
    a688:	9a 85       	ldd	r25, Y+10	; 0x0a
    a68a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a68e:	dc 01       	movw	r26, r24
    a690:	cb 01       	movw	r24, r22
    a692:	9e 83       	std	Y+6, r25	; 0x06
    a694:	8d 83       	std	Y+5, r24	; 0x05
    a696:	8d 81       	ldd	r24, Y+5	; 0x05
    a698:	9e 81       	ldd	r25, Y+6	; 0x06
    a69a:	9a 83       	std	Y+2, r25	; 0x02
    a69c:	89 83       	std	Y+1, r24	; 0x01
    a69e:	89 81       	ldd	r24, Y+1	; 0x01
    a6a0:	9a 81       	ldd	r25, Y+2	; 0x02
    a6a2:	01 97       	sbiw	r24, 0x01	; 1
    a6a4:	f1 f7       	brne	.-4      	; 0xa6a2 <right_move+0x104>
    a6a6:	9a 83       	std	Y+2, r25	; 0x02
    a6a8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1200);
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    a6aa:	84 e0       	ldi	r24, 0x04	; 4
    a6ac:	67 e0       	ldi	r22, 0x07	; 7
    a6ae:	41 e0       	ldi	r20, 0x01	; 1
    a6b0:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    a6b4:	2e 96       	adiw	r28, 0x0e	; 14
    a6b6:	0f b6       	in	r0, 0x3f	; 63
    a6b8:	f8 94       	cli
    a6ba:	de bf       	out	0x3e, r29	; 62
    a6bc:	0f be       	out	0x3f, r0	; 63
    a6be:	cd bf       	out	0x3d, r28	; 61
    a6c0:	cf 91       	pop	r28
    a6c2:	df 91       	pop	r29
    a6c4:	08 95       	ret

0000a6c6 <right_half_move>:
void right_half_move(void)
{
    a6c6:	df 93       	push	r29
    a6c8:	cf 93       	push	r28
    a6ca:	cd b7       	in	r28, 0x3d	; 61
    a6cc:	de b7       	in	r29, 0x3e	; 62
    a6ce:	2e 97       	sbiw	r28, 0x0e	; 14
    a6d0:	0f b6       	in	r0, 0x3f	; 63
    a6d2:	f8 94       	cli
    a6d4:	de bf       	out	0x3e, r29	; 62
    a6d6:	0f be       	out	0x3f, r0	; 63
    a6d8:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    a6da:	84 e0       	ldi	r24, 0x04	; 4
    a6dc:	66 e0       	ldi	r22, 0x06	; 6
    a6de:	41 e0       	ldi	r20, 0x01	; 1
    a6e0:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,right_wheel,LOW);
    a6e4:	84 e0       	ldi	r24, 0x04	; 4
    a6e6:	67 e0       	ldi	r22, 0x07	; 7
    a6e8:	40 e0       	ldi	r20, 0x00	; 0
    a6ea:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    a6ee:	80 e0       	ldi	r24, 0x00	; 0
    a6f0:	90 e0       	ldi	r25, 0x00	; 0
    a6f2:	aa ef       	ldi	r26, 0xFA	; 250
    a6f4:	b3 e4       	ldi	r27, 0x43	; 67
    a6f6:	8b 87       	std	Y+11, r24	; 0x0b
    a6f8:	9c 87       	std	Y+12, r25	; 0x0c
    a6fa:	ad 87       	std	Y+13, r26	; 0x0d
    a6fc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a6fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    a700:	7c 85       	ldd	r23, Y+12	; 0x0c
    a702:	8d 85       	ldd	r24, Y+13	; 0x0d
    a704:	9e 85       	ldd	r25, Y+14	; 0x0e
    a706:	20 e0       	ldi	r18, 0x00	; 0
    a708:	30 e0       	ldi	r19, 0x00	; 0
    a70a:	4a ef       	ldi	r20, 0xFA	; 250
    a70c:	54 e4       	ldi	r21, 0x44	; 68
    a70e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a712:	dc 01       	movw	r26, r24
    a714:	cb 01       	movw	r24, r22
    a716:	8f 83       	std	Y+7, r24	; 0x07
    a718:	98 87       	std	Y+8, r25	; 0x08
    a71a:	a9 87       	std	Y+9, r26	; 0x09
    a71c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a71e:	6f 81       	ldd	r22, Y+7	; 0x07
    a720:	78 85       	ldd	r23, Y+8	; 0x08
    a722:	89 85       	ldd	r24, Y+9	; 0x09
    a724:	9a 85       	ldd	r25, Y+10	; 0x0a
    a726:	20 e0       	ldi	r18, 0x00	; 0
    a728:	30 e0       	ldi	r19, 0x00	; 0
    a72a:	40 e8       	ldi	r20, 0x80	; 128
    a72c:	5f e3       	ldi	r21, 0x3F	; 63
    a72e:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a732:	88 23       	and	r24, r24
    a734:	2c f4       	brge	.+10     	; 0xa740 <right_half_move+0x7a>
		__ticks = 1;
    a736:	81 e0       	ldi	r24, 0x01	; 1
    a738:	90 e0       	ldi	r25, 0x00	; 0
    a73a:	9e 83       	std	Y+6, r25	; 0x06
    a73c:	8d 83       	std	Y+5, r24	; 0x05
    a73e:	3f c0       	rjmp	.+126    	; 0xa7be <right_half_move+0xf8>
	else if (__tmp > 65535)
    a740:	6f 81       	ldd	r22, Y+7	; 0x07
    a742:	78 85       	ldd	r23, Y+8	; 0x08
    a744:	89 85       	ldd	r24, Y+9	; 0x09
    a746:	9a 85       	ldd	r25, Y+10	; 0x0a
    a748:	20 e0       	ldi	r18, 0x00	; 0
    a74a:	3f ef       	ldi	r19, 0xFF	; 255
    a74c:	4f e7       	ldi	r20, 0x7F	; 127
    a74e:	57 e4       	ldi	r21, 0x47	; 71
    a750:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a754:	18 16       	cp	r1, r24
    a756:	4c f5       	brge	.+82     	; 0xa7aa <right_half_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a758:	6b 85       	ldd	r22, Y+11	; 0x0b
    a75a:	7c 85       	ldd	r23, Y+12	; 0x0c
    a75c:	8d 85       	ldd	r24, Y+13	; 0x0d
    a75e:	9e 85       	ldd	r25, Y+14	; 0x0e
    a760:	20 e0       	ldi	r18, 0x00	; 0
    a762:	30 e0       	ldi	r19, 0x00	; 0
    a764:	40 e2       	ldi	r20, 0x20	; 32
    a766:	51 e4       	ldi	r21, 0x41	; 65
    a768:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a76c:	dc 01       	movw	r26, r24
    a76e:	cb 01       	movw	r24, r22
    a770:	bc 01       	movw	r22, r24
    a772:	cd 01       	movw	r24, r26
    a774:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a778:	dc 01       	movw	r26, r24
    a77a:	cb 01       	movw	r24, r22
    a77c:	9e 83       	std	Y+6, r25	; 0x06
    a77e:	8d 83       	std	Y+5, r24	; 0x05
    a780:	0f c0       	rjmp	.+30     	; 0xa7a0 <right_half_move+0xda>
    a782:	88 ec       	ldi	r24, 0xC8	; 200
    a784:	90 e0       	ldi	r25, 0x00	; 0
    a786:	9c 83       	std	Y+4, r25	; 0x04
    a788:	8b 83       	std	Y+3, r24	; 0x03
    a78a:	8b 81       	ldd	r24, Y+3	; 0x03
    a78c:	9c 81       	ldd	r25, Y+4	; 0x04
    a78e:	01 97       	sbiw	r24, 0x01	; 1
    a790:	f1 f7       	brne	.-4      	; 0xa78e <right_half_move+0xc8>
    a792:	9c 83       	std	Y+4, r25	; 0x04
    a794:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a796:	8d 81       	ldd	r24, Y+5	; 0x05
    a798:	9e 81       	ldd	r25, Y+6	; 0x06
    a79a:	01 97       	sbiw	r24, 0x01	; 1
    a79c:	9e 83       	std	Y+6, r25	; 0x06
    a79e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a7a0:	8d 81       	ldd	r24, Y+5	; 0x05
    a7a2:	9e 81       	ldd	r25, Y+6	; 0x06
    a7a4:	00 97       	sbiw	r24, 0x00	; 0
    a7a6:	69 f7       	brne	.-38     	; 0xa782 <right_half_move+0xbc>
    a7a8:	14 c0       	rjmp	.+40     	; 0xa7d2 <right_half_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a7aa:	6f 81       	ldd	r22, Y+7	; 0x07
    a7ac:	78 85       	ldd	r23, Y+8	; 0x08
    a7ae:	89 85       	ldd	r24, Y+9	; 0x09
    a7b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    a7b2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a7b6:	dc 01       	movw	r26, r24
    a7b8:	cb 01       	movw	r24, r22
    a7ba:	9e 83       	std	Y+6, r25	; 0x06
    a7bc:	8d 83       	std	Y+5, r24	; 0x05
    a7be:	8d 81       	ldd	r24, Y+5	; 0x05
    a7c0:	9e 81       	ldd	r25, Y+6	; 0x06
    a7c2:	9a 83       	std	Y+2, r25	; 0x02
    a7c4:	89 83       	std	Y+1, r24	; 0x01
    a7c6:	89 81       	ldd	r24, Y+1	; 0x01
    a7c8:	9a 81       	ldd	r25, Y+2	; 0x02
    a7ca:	01 97       	sbiw	r24, 0x01	; 1
    a7cc:	f1 f7       	brne	.-4      	; 0xa7ca <right_half_move+0x104>
    a7ce:	9a 83       	std	Y+2, r25	; 0x02
    a7d0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    a7d2:	84 e0       	ldi	r24, 0x04	; 4
    a7d4:	67 e0       	ldi	r22, 0x07	; 7
    a7d6:	41 e0       	ldi	r20, 0x01	; 1
    a7d8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    a7dc:	2e 96       	adiw	r28, 0x0e	; 14
    a7de:	0f b6       	in	r0, 0x3f	; 63
    a7e0:	f8 94       	cli
    a7e2:	de bf       	out	0x3e, r29	; 62
    a7e4:	0f be       	out	0x3f, r0	; 63
    a7e6:	cd bf       	out	0x3d, r28	; 61
    a7e8:	cf 91       	pop	r28
    a7ea:	df 91       	pop	r29
    a7ec:	08 95       	ret

0000a7ee <right_QUARTER_move>:
void right_QUARTER_move(void)
{
    a7ee:	df 93       	push	r29
    a7f0:	cf 93       	push	r28
    a7f2:	cd b7       	in	r28, 0x3d	; 61
    a7f4:	de b7       	in	r29, 0x3e	; 62
    a7f6:	2e 97       	sbiw	r28, 0x0e	; 14
    a7f8:	0f b6       	in	r0, 0x3f	; 63
    a7fa:	f8 94       	cli
    a7fc:	de bf       	out	0x3e, r29	; 62
    a7fe:	0f be       	out	0x3f, r0	; 63
    a800:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    a802:	84 e0       	ldi	r24, 0x04	; 4
    a804:	66 e0       	ldi	r22, 0x06	; 6
    a806:	41 e0       	ldi	r20, 0x01	; 1
    a808:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,right_wheel,LOW);
    a80c:	84 e0       	ldi	r24, 0x04	; 4
    a80e:	67 e0       	ldi	r22, 0x07	; 7
    a810:	40 e0       	ldi	r20, 0x00	; 0
    a812:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    a816:	80 e0       	ldi	r24, 0x00	; 0
    a818:	90 e0       	ldi	r25, 0x00	; 0
    a81a:	aa e7       	ldi	r26, 0x7A	; 122
    a81c:	b3 e4       	ldi	r27, 0x43	; 67
    a81e:	8b 87       	std	Y+11, r24	; 0x0b
    a820:	9c 87       	std	Y+12, r25	; 0x0c
    a822:	ad 87       	std	Y+13, r26	; 0x0d
    a824:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a826:	6b 85       	ldd	r22, Y+11	; 0x0b
    a828:	7c 85       	ldd	r23, Y+12	; 0x0c
    a82a:	8d 85       	ldd	r24, Y+13	; 0x0d
    a82c:	9e 85       	ldd	r25, Y+14	; 0x0e
    a82e:	20 e0       	ldi	r18, 0x00	; 0
    a830:	30 e0       	ldi	r19, 0x00	; 0
    a832:	4a ef       	ldi	r20, 0xFA	; 250
    a834:	54 e4       	ldi	r21, 0x44	; 68
    a836:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a83a:	dc 01       	movw	r26, r24
    a83c:	cb 01       	movw	r24, r22
    a83e:	8f 83       	std	Y+7, r24	; 0x07
    a840:	98 87       	std	Y+8, r25	; 0x08
    a842:	a9 87       	std	Y+9, r26	; 0x09
    a844:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a846:	6f 81       	ldd	r22, Y+7	; 0x07
    a848:	78 85       	ldd	r23, Y+8	; 0x08
    a84a:	89 85       	ldd	r24, Y+9	; 0x09
    a84c:	9a 85       	ldd	r25, Y+10	; 0x0a
    a84e:	20 e0       	ldi	r18, 0x00	; 0
    a850:	30 e0       	ldi	r19, 0x00	; 0
    a852:	40 e8       	ldi	r20, 0x80	; 128
    a854:	5f e3       	ldi	r21, 0x3F	; 63
    a856:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a85a:	88 23       	and	r24, r24
    a85c:	2c f4       	brge	.+10     	; 0xa868 <right_QUARTER_move+0x7a>
		__ticks = 1;
    a85e:	81 e0       	ldi	r24, 0x01	; 1
    a860:	90 e0       	ldi	r25, 0x00	; 0
    a862:	9e 83       	std	Y+6, r25	; 0x06
    a864:	8d 83       	std	Y+5, r24	; 0x05
    a866:	3f c0       	rjmp	.+126    	; 0xa8e6 <right_QUARTER_move+0xf8>
	else if (__tmp > 65535)
    a868:	6f 81       	ldd	r22, Y+7	; 0x07
    a86a:	78 85       	ldd	r23, Y+8	; 0x08
    a86c:	89 85       	ldd	r24, Y+9	; 0x09
    a86e:	9a 85       	ldd	r25, Y+10	; 0x0a
    a870:	20 e0       	ldi	r18, 0x00	; 0
    a872:	3f ef       	ldi	r19, 0xFF	; 255
    a874:	4f e7       	ldi	r20, 0x7F	; 127
    a876:	57 e4       	ldi	r21, 0x47	; 71
    a878:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a87c:	18 16       	cp	r1, r24
    a87e:	4c f5       	brge	.+82     	; 0xa8d2 <right_QUARTER_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a880:	6b 85       	ldd	r22, Y+11	; 0x0b
    a882:	7c 85       	ldd	r23, Y+12	; 0x0c
    a884:	8d 85       	ldd	r24, Y+13	; 0x0d
    a886:	9e 85       	ldd	r25, Y+14	; 0x0e
    a888:	20 e0       	ldi	r18, 0x00	; 0
    a88a:	30 e0       	ldi	r19, 0x00	; 0
    a88c:	40 e2       	ldi	r20, 0x20	; 32
    a88e:	51 e4       	ldi	r21, 0x41	; 65
    a890:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a894:	dc 01       	movw	r26, r24
    a896:	cb 01       	movw	r24, r22
    a898:	bc 01       	movw	r22, r24
    a89a:	cd 01       	movw	r24, r26
    a89c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a8a0:	dc 01       	movw	r26, r24
    a8a2:	cb 01       	movw	r24, r22
    a8a4:	9e 83       	std	Y+6, r25	; 0x06
    a8a6:	8d 83       	std	Y+5, r24	; 0x05
    a8a8:	0f c0       	rjmp	.+30     	; 0xa8c8 <right_QUARTER_move+0xda>
    a8aa:	88 ec       	ldi	r24, 0xC8	; 200
    a8ac:	90 e0       	ldi	r25, 0x00	; 0
    a8ae:	9c 83       	std	Y+4, r25	; 0x04
    a8b0:	8b 83       	std	Y+3, r24	; 0x03
    a8b2:	8b 81       	ldd	r24, Y+3	; 0x03
    a8b4:	9c 81       	ldd	r25, Y+4	; 0x04
    a8b6:	01 97       	sbiw	r24, 0x01	; 1
    a8b8:	f1 f7       	brne	.-4      	; 0xa8b6 <right_QUARTER_move+0xc8>
    a8ba:	9c 83       	std	Y+4, r25	; 0x04
    a8bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a8be:	8d 81       	ldd	r24, Y+5	; 0x05
    a8c0:	9e 81       	ldd	r25, Y+6	; 0x06
    a8c2:	01 97       	sbiw	r24, 0x01	; 1
    a8c4:	9e 83       	std	Y+6, r25	; 0x06
    a8c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a8c8:	8d 81       	ldd	r24, Y+5	; 0x05
    a8ca:	9e 81       	ldd	r25, Y+6	; 0x06
    a8cc:	00 97       	sbiw	r24, 0x00	; 0
    a8ce:	69 f7       	brne	.-38     	; 0xa8aa <right_QUARTER_move+0xbc>
    a8d0:	14 c0       	rjmp	.+40     	; 0xa8fa <right_QUARTER_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a8d2:	6f 81       	ldd	r22, Y+7	; 0x07
    a8d4:	78 85       	ldd	r23, Y+8	; 0x08
    a8d6:	89 85       	ldd	r24, Y+9	; 0x09
    a8d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    a8da:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a8de:	dc 01       	movw	r26, r24
    a8e0:	cb 01       	movw	r24, r22
    a8e2:	9e 83       	std	Y+6, r25	; 0x06
    a8e4:	8d 83       	std	Y+5, r24	; 0x05
    a8e6:	8d 81       	ldd	r24, Y+5	; 0x05
    a8e8:	9e 81       	ldd	r25, Y+6	; 0x06
    a8ea:	9a 83       	std	Y+2, r25	; 0x02
    a8ec:	89 83       	std	Y+1, r24	; 0x01
    a8ee:	89 81       	ldd	r24, Y+1	; 0x01
    a8f0:	9a 81       	ldd	r25, Y+2	; 0x02
    a8f2:	01 97       	sbiw	r24, 0x01	; 1
    a8f4:	f1 f7       	brne	.-4      	; 0xa8f2 <right_QUARTER_move+0x104>
    a8f6:	9a 83       	std	Y+2, r25	; 0x02
    a8f8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(250);
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    a8fa:	84 e0       	ldi	r24, 0x04	; 4
    a8fc:	67 e0       	ldi	r22, 0x07	; 7
    a8fe:	41 e0       	ldi	r20, 0x01	; 1
    a900:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    a904:	2e 96       	adiw	r28, 0x0e	; 14
    a906:	0f b6       	in	r0, 0x3f	; 63
    a908:	f8 94       	cli
    a90a:	de bf       	out	0x3e, r29	; 62
    a90c:	0f be       	out	0x3f, r0	; 63
    a90e:	cd bf       	out	0x3d, r28	; 61
    a910:	cf 91       	pop	r28
    a912:	df 91       	pop	r29
    a914:	08 95       	ret

0000a916 <left_move>:

void left_move(void)
{
    a916:	df 93       	push	r29
    a918:	cf 93       	push	r28
    a91a:	cd b7       	in	r28, 0x3d	; 61
    a91c:	de b7       	in	r29, 0x3e	; 62
    a91e:	2e 97       	sbiw	r28, 0x0e	; 14
    a920:	0f b6       	in	r0, 0x3f	; 63
    a922:	f8 94       	cli
    a924:	de bf       	out	0x3e, r29	; 62
    a926:	0f be       	out	0x3f, r0	; 63
    a928:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    a92a:	84 e0       	ldi	r24, 0x04	; 4
    a92c:	67 e0       	ldi	r22, 0x07	; 7
    a92e:	41 e0       	ldi	r20, 0x01	; 1
    a930:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,left_wheel,LOW);
    a934:	84 e0       	ldi	r24, 0x04	; 4
    a936:	66 e0       	ldi	r22, 0x06	; 6
    a938:	40 e0       	ldi	r20, 0x00	; 0
    a93a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    a93e:	80 e0       	ldi	r24, 0x00	; 0
    a940:	90 e0       	ldi	r25, 0x00	; 0
    a942:	a6 e9       	ldi	r26, 0x96	; 150
    a944:	b4 e4       	ldi	r27, 0x44	; 68
    a946:	8b 87       	std	Y+11, r24	; 0x0b
    a948:	9c 87       	std	Y+12, r25	; 0x0c
    a94a:	ad 87       	std	Y+13, r26	; 0x0d
    a94c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    a94e:	6b 85       	ldd	r22, Y+11	; 0x0b
    a950:	7c 85       	ldd	r23, Y+12	; 0x0c
    a952:	8d 85       	ldd	r24, Y+13	; 0x0d
    a954:	9e 85       	ldd	r25, Y+14	; 0x0e
    a956:	20 e0       	ldi	r18, 0x00	; 0
    a958:	30 e0       	ldi	r19, 0x00	; 0
    a95a:	4a ef       	ldi	r20, 0xFA	; 250
    a95c:	54 e4       	ldi	r21, 0x44	; 68
    a95e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a962:	dc 01       	movw	r26, r24
    a964:	cb 01       	movw	r24, r22
    a966:	8f 83       	std	Y+7, r24	; 0x07
    a968:	98 87       	std	Y+8, r25	; 0x08
    a96a:	a9 87       	std	Y+9, r26	; 0x09
    a96c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    a96e:	6f 81       	ldd	r22, Y+7	; 0x07
    a970:	78 85       	ldd	r23, Y+8	; 0x08
    a972:	89 85       	ldd	r24, Y+9	; 0x09
    a974:	9a 85       	ldd	r25, Y+10	; 0x0a
    a976:	20 e0       	ldi	r18, 0x00	; 0
    a978:	30 e0       	ldi	r19, 0x00	; 0
    a97a:	40 e8       	ldi	r20, 0x80	; 128
    a97c:	5f e3       	ldi	r21, 0x3F	; 63
    a97e:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    a982:	88 23       	and	r24, r24
    a984:	2c f4       	brge	.+10     	; 0xa990 <left_move+0x7a>
		__ticks = 1;
    a986:	81 e0       	ldi	r24, 0x01	; 1
    a988:	90 e0       	ldi	r25, 0x00	; 0
    a98a:	9e 83       	std	Y+6, r25	; 0x06
    a98c:	8d 83       	std	Y+5, r24	; 0x05
    a98e:	3f c0       	rjmp	.+126    	; 0xaa0e <left_move+0xf8>
	else if (__tmp > 65535)
    a990:	6f 81       	ldd	r22, Y+7	; 0x07
    a992:	78 85       	ldd	r23, Y+8	; 0x08
    a994:	89 85       	ldd	r24, Y+9	; 0x09
    a996:	9a 85       	ldd	r25, Y+10	; 0x0a
    a998:	20 e0       	ldi	r18, 0x00	; 0
    a99a:	3f ef       	ldi	r19, 0xFF	; 255
    a99c:	4f e7       	ldi	r20, 0x7F	; 127
    a99e:	57 e4       	ldi	r21, 0x47	; 71
    a9a0:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    a9a4:	18 16       	cp	r1, r24
    a9a6:	4c f5       	brge	.+82     	; 0xa9fa <left_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    a9a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    a9aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    a9ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    a9ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    a9b0:	20 e0       	ldi	r18, 0x00	; 0
    a9b2:	30 e0       	ldi	r19, 0x00	; 0
    a9b4:	40 e2       	ldi	r20, 0x20	; 32
    a9b6:	51 e4       	ldi	r21, 0x41	; 65
    a9b8:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    a9bc:	dc 01       	movw	r26, r24
    a9be:	cb 01       	movw	r24, r22
    a9c0:	bc 01       	movw	r22, r24
    a9c2:	cd 01       	movw	r24, r26
    a9c4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    a9c8:	dc 01       	movw	r26, r24
    a9ca:	cb 01       	movw	r24, r22
    a9cc:	9e 83       	std	Y+6, r25	; 0x06
    a9ce:	8d 83       	std	Y+5, r24	; 0x05
    a9d0:	0f c0       	rjmp	.+30     	; 0xa9f0 <left_move+0xda>
    a9d2:	88 ec       	ldi	r24, 0xC8	; 200
    a9d4:	90 e0       	ldi	r25, 0x00	; 0
    a9d6:	9c 83       	std	Y+4, r25	; 0x04
    a9d8:	8b 83       	std	Y+3, r24	; 0x03
    a9da:	8b 81       	ldd	r24, Y+3	; 0x03
    a9dc:	9c 81       	ldd	r25, Y+4	; 0x04
    a9de:	01 97       	sbiw	r24, 0x01	; 1
    a9e0:	f1 f7       	brne	.-4      	; 0xa9de <left_move+0xc8>
    a9e2:	9c 83       	std	Y+4, r25	; 0x04
    a9e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    a9e6:	8d 81       	ldd	r24, Y+5	; 0x05
    a9e8:	9e 81       	ldd	r25, Y+6	; 0x06
    a9ea:	01 97       	sbiw	r24, 0x01	; 1
    a9ec:	9e 83       	std	Y+6, r25	; 0x06
    a9ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    a9f0:	8d 81       	ldd	r24, Y+5	; 0x05
    a9f2:	9e 81       	ldd	r25, Y+6	; 0x06
    a9f4:	00 97       	sbiw	r24, 0x00	; 0
    a9f6:	69 f7       	brne	.-38     	; 0xa9d2 <left_move+0xbc>
    a9f8:	14 c0       	rjmp	.+40     	; 0xaa22 <left_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    a9fa:	6f 81       	ldd	r22, Y+7	; 0x07
    a9fc:	78 85       	ldd	r23, Y+8	; 0x08
    a9fe:	89 85       	ldd	r24, Y+9	; 0x09
    aa00:	9a 85       	ldd	r25, Y+10	; 0x0a
    aa02:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    aa06:	dc 01       	movw	r26, r24
    aa08:	cb 01       	movw	r24, r22
    aa0a:	9e 83       	std	Y+6, r25	; 0x06
    aa0c:	8d 83       	std	Y+5, r24	; 0x05
    aa0e:	8d 81       	ldd	r24, Y+5	; 0x05
    aa10:	9e 81       	ldd	r25, Y+6	; 0x06
    aa12:	9a 83       	std	Y+2, r25	; 0x02
    aa14:	89 83       	std	Y+1, r24	; 0x01
    aa16:	89 81       	ldd	r24, Y+1	; 0x01
    aa18:	9a 81       	ldd	r25, Y+2	; 0x02
    aa1a:	01 97       	sbiw	r24, 0x01	; 1
    aa1c:	f1 f7       	brne	.-4      	; 0xaa1a <left_move+0x104>
    aa1e:	9a 83       	std	Y+2, r25	; 0x02
    aa20:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1200);
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    aa22:	84 e0       	ldi	r24, 0x04	; 4
    aa24:	66 e0       	ldi	r22, 0x06	; 6
    aa26:	41 e0       	ldi	r20, 0x01	; 1
    aa28:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    aa2c:	2e 96       	adiw	r28, 0x0e	; 14
    aa2e:	0f b6       	in	r0, 0x3f	; 63
    aa30:	f8 94       	cli
    aa32:	de bf       	out	0x3e, r29	; 62
    aa34:	0f be       	out	0x3f, r0	; 63
    aa36:	cd bf       	out	0x3d, r28	; 61
    aa38:	cf 91       	pop	r28
    aa3a:	df 91       	pop	r29
    aa3c:	08 95       	ret

0000aa3e <left_half_move>:
void left_half_move(void)
{
    aa3e:	df 93       	push	r29
    aa40:	cf 93       	push	r28
    aa42:	cd b7       	in	r28, 0x3d	; 61
    aa44:	de b7       	in	r29, 0x3e	; 62
    aa46:	2e 97       	sbiw	r28, 0x0e	; 14
    aa48:	0f b6       	in	r0, 0x3f	; 63
    aa4a:	f8 94       	cli
    aa4c:	de bf       	out	0x3e, r29	; 62
    aa4e:	0f be       	out	0x3f, r0	; 63
    aa50:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    aa52:	84 e0       	ldi	r24, 0x04	; 4
    aa54:	67 e0       	ldi	r22, 0x07	; 7
    aa56:	41 e0       	ldi	r20, 0x01	; 1
    aa58:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,left_wheel,LOW);
    aa5c:	84 e0       	ldi	r24, 0x04	; 4
    aa5e:	66 e0       	ldi	r22, 0x06	; 6
    aa60:	40 e0       	ldi	r20, 0x00	; 0
    aa62:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    aa66:	80 e0       	ldi	r24, 0x00	; 0
    aa68:	90 e0       	ldi	r25, 0x00	; 0
    aa6a:	aa ef       	ldi	r26, 0xFA	; 250
    aa6c:	b3 e4       	ldi	r27, 0x43	; 67
    aa6e:	8b 87       	std	Y+11, r24	; 0x0b
    aa70:	9c 87       	std	Y+12, r25	; 0x0c
    aa72:	ad 87       	std	Y+13, r26	; 0x0d
    aa74:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    aa76:	6b 85       	ldd	r22, Y+11	; 0x0b
    aa78:	7c 85       	ldd	r23, Y+12	; 0x0c
    aa7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    aa7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    aa7e:	20 e0       	ldi	r18, 0x00	; 0
    aa80:	30 e0       	ldi	r19, 0x00	; 0
    aa82:	4a ef       	ldi	r20, 0xFA	; 250
    aa84:	54 e4       	ldi	r21, 0x44	; 68
    aa86:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    aa8a:	dc 01       	movw	r26, r24
    aa8c:	cb 01       	movw	r24, r22
    aa8e:	8f 83       	std	Y+7, r24	; 0x07
    aa90:	98 87       	std	Y+8, r25	; 0x08
    aa92:	a9 87       	std	Y+9, r26	; 0x09
    aa94:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    aa96:	6f 81       	ldd	r22, Y+7	; 0x07
    aa98:	78 85       	ldd	r23, Y+8	; 0x08
    aa9a:	89 85       	ldd	r24, Y+9	; 0x09
    aa9c:	9a 85       	ldd	r25, Y+10	; 0x0a
    aa9e:	20 e0       	ldi	r18, 0x00	; 0
    aaa0:	30 e0       	ldi	r19, 0x00	; 0
    aaa2:	40 e8       	ldi	r20, 0x80	; 128
    aaa4:	5f e3       	ldi	r21, 0x3F	; 63
    aaa6:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    aaaa:	88 23       	and	r24, r24
    aaac:	2c f4       	brge	.+10     	; 0xaab8 <left_half_move+0x7a>
		__ticks = 1;
    aaae:	81 e0       	ldi	r24, 0x01	; 1
    aab0:	90 e0       	ldi	r25, 0x00	; 0
    aab2:	9e 83       	std	Y+6, r25	; 0x06
    aab4:	8d 83       	std	Y+5, r24	; 0x05
    aab6:	3f c0       	rjmp	.+126    	; 0xab36 <left_half_move+0xf8>
	else if (__tmp > 65535)
    aab8:	6f 81       	ldd	r22, Y+7	; 0x07
    aaba:	78 85       	ldd	r23, Y+8	; 0x08
    aabc:	89 85       	ldd	r24, Y+9	; 0x09
    aabe:	9a 85       	ldd	r25, Y+10	; 0x0a
    aac0:	20 e0       	ldi	r18, 0x00	; 0
    aac2:	3f ef       	ldi	r19, 0xFF	; 255
    aac4:	4f e7       	ldi	r20, 0x7F	; 127
    aac6:	57 e4       	ldi	r21, 0x47	; 71
    aac8:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    aacc:	18 16       	cp	r1, r24
    aace:	4c f5       	brge	.+82     	; 0xab22 <left_half_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    aad0:	6b 85       	ldd	r22, Y+11	; 0x0b
    aad2:	7c 85       	ldd	r23, Y+12	; 0x0c
    aad4:	8d 85       	ldd	r24, Y+13	; 0x0d
    aad6:	9e 85       	ldd	r25, Y+14	; 0x0e
    aad8:	20 e0       	ldi	r18, 0x00	; 0
    aada:	30 e0       	ldi	r19, 0x00	; 0
    aadc:	40 e2       	ldi	r20, 0x20	; 32
    aade:	51 e4       	ldi	r21, 0x41	; 65
    aae0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    aae4:	dc 01       	movw	r26, r24
    aae6:	cb 01       	movw	r24, r22
    aae8:	bc 01       	movw	r22, r24
    aaea:	cd 01       	movw	r24, r26
    aaec:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    aaf0:	dc 01       	movw	r26, r24
    aaf2:	cb 01       	movw	r24, r22
    aaf4:	9e 83       	std	Y+6, r25	; 0x06
    aaf6:	8d 83       	std	Y+5, r24	; 0x05
    aaf8:	0f c0       	rjmp	.+30     	; 0xab18 <left_half_move+0xda>
    aafa:	88 ec       	ldi	r24, 0xC8	; 200
    aafc:	90 e0       	ldi	r25, 0x00	; 0
    aafe:	9c 83       	std	Y+4, r25	; 0x04
    ab00:	8b 83       	std	Y+3, r24	; 0x03
    ab02:	8b 81       	ldd	r24, Y+3	; 0x03
    ab04:	9c 81       	ldd	r25, Y+4	; 0x04
    ab06:	01 97       	sbiw	r24, 0x01	; 1
    ab08:	f1 f7       	brne	.-4      	; 0xab06 <left_half_move+0xc8>
    ab0a:	9c 83       	std	Y+4, r25	; 0x04
    ab0c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ab0e:	8d 81       	ldd	r24, Y+5	; 0x05
    ab10:	9e 81       	ldd	r25, Y+6	; 0x06
    ab12:	01 97       	sbiw	r24, 0x01	; 1
    ab14:	9e 83       	std	Y+6, r25	; 0x06
    ab16:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    ab18:	8d 81       	ldd	r24, Y+5	; 0x05
    ab1a:	9e 81       	ldd	r25, Y+6	; 0x06
    ab1c:	00 97       	sbiw	r24, 0x00	; 0
    ab1e:	69 f7       	brne	.-38     	; 0xaafa <left_half_move+0xbc>
    ab20:	14 c0       	rjmp	.+40     	; 0xab4a <left_half_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    ab22:	6f 81       	ldd	r22, Y+7	; 0x07
    ab24:	78 85       	ldd	r23, Y+8	; 0x08
    ab26:	89 85       	ldd	r24, Y+9	; 0x09
    ab28:	9a 85       	ldd	r25, Y+10	; 0x0a
    ab2a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    ab2e:	dc 01       	movw	r26, r24
    ab30:	cb 01       	movw	r24, r22
    ab32:	9e 83       	std	Y+6, r25	; 0x06
    ab34:	8d 83       	std	Y+5, r24	; 0x05
    ab36:	8d 81       	ldd	r24, Y+5	; 0x05
    ab38:	9e 81       	ldd	r25, Y+6	; 0x06
    ab3a:	9a 83       	std	Y+2, r25	; 0x02
    ab3c:	89 83       	std	Y+1, r24	; 0x01
    ab3e:	89 81       	ldd	r24, Y+1	; 0x01
    ab40:	9a 81       	ldd	r25, Y+2	; 0x02
    ab42:	01 97       	sbiw	r24, 0x01	; 1
    ab44:	f1 f7       	brne	.-4      	; 0xab42 <left_half_move+0x104>
    ab46:	9a 83       	std	Y+2, r25	; 0x02
    ab48:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(500);
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    ab4a:	84 e0       	ldi	r24, 0x04	; 4
    ab4c:	66 e0       	ldi	r22, 0x06	; 6
    ab4e:	41 e0       	ldi	r20, 0x01	; 1
    ab50:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    ab54:	2e 96       	adiw	r28, 0x0e	; 14
    ab56:	0f b6       	in	r0, 0x3f	; 63
    ab58:	f8 94       	cli
    ab5a:	de bf       	out	0x3e, r29	; 62
    ab5c:	0f be       	out	0x3f, r0	; 63
    ab5e:	cd bf       	out	0x3d, r28	; 61
    ab60:	cf 91       	pop	r28
    ab62:	df 91       	pop	r29
    ab64:	08 95       	ret

0000ab66 <left_QUARTER_move>:
void left_QUARTER_move(void)
{
    ab66:	df 93       	push	r29
    ab68:	cf 93       	push	r28
    ab6a:	cd b7       	in	r28, 0x3d	; 61
    ab6c:	de b7       	in	r29, 0x3e	; 62
    ab6e:	2e 97       	sbiw	r28, 0x0e	; 14
    ab70:	0f b6       	in	r0, 0x3f	; 63
    ab72:	f8 94       	cli
    ab74:	de bf       	out	0x3e, r29	; 62
    ab76:	0f be       	out	0x3f, r0	; 63
    ab78:	cd bf       	out	0x3d, r28	; 61
	DIO_void_Set_Pin_Value(car_control,right_wheel,HIGH);
    ab7a:	84 e0       	ldi	r24, 0x04	; 4
    ab7c:	67 e0       	ldi	r22, 0x07	; 7
    ab7e:	41 e0       	ldi	r20, 0x01	; 1
    ab80:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	DIO_void_Set_Pin_Value(car_control,left_wheel,LOW);
    ab84:	84 e0       	ldi	r24, 0x04	; 4
    ab86:	66 e0       	ldi	r22, 0x06	; 6
    ab88:	40 e0       	ldi	r20, 0x00	; 0
    ab8a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    ab8e:	80 e0       	ldi	r24, 0x00	; 0
    ab90:	90 e0       	ldi	r25, 0x00	; 0
    ab92:	aa e7       	ldi	r26, 0x7A	; 122
    ab94:	b3 e4       	ldi	r27, 0x43	; 67
    ab96:	8b 87       	std	Y+11, r24	; 0x0b
    ab98:	9c 87       	std	Y+12, r25	; 0x0c
    ab9a:	ad 87       	std	Y+13, r26	; 0x0d
    ab9c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    ab9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    aba0:	7c 85       	ldd	r23, Y+12	; 0x0c
    aba2:	8d 85       	ldd	r24, Y+13	; 0x0d
    aba4:	9e 85       	ldd	r25, Y+14	; 0x0e
    aba6:	20 e0       	ldi	r18, 0x00	; 0
    aba8:	30 e0       	ldi	r19, 0x00	; 0
    abaa:	4a ef       	ldi	r20, 0xFA	; 250
    abac:	54 e4       	ldi	r21, 0x44	; 68
    abae:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    abb2:	dc 01       	movw	r26, r24
    abb4:	cb 01       	movw	r24, r22
    abb6:	8f 83       	std	Y+7, r24	; 0x07
    abb8:	98 87       	std	Y+8, r25	; 0x08
    abba:	a9 87       	std	Y+9, r26	; 0x09
    abbc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    abbe:	6f 81       	ldd	r22, Y+7	; 0x07
    abc0:	78 85       	ldd	r23, Y+8	; 0x08
    abc2:	89 85       	ldd	r24, Y+9	; 0x09
    abc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    abc6:	20 e0       	ldi	r18, 0x00	; 0
    abc8:	30 e0       	ldi	r19, 0x00	; 0
    abca:	40 e8       	ldi	r20, 0x80	; 128
    abcc:	5f e3       	ldi	r21, 0x3F	; 63
    abce:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    abd2:	88 23       	and	r24, r24
    abd4:	2c f4       	brge	.+10     	; 0xabe0 <left_QUARTER_move+0x7a>
		__ticks = 1;
    abd6:	81 e0       	ldi	r24, 0x01	; 1
    abd8:	90 e0       	ldi	r25, 0x00	; 0
    abda:	9e 83       	std	Y+6, r25	; 0x06
    abdc:	8d 83       	std	Y+5, r24	; 0x05
    abde:	3f c0       	rjmp	.+126    	; 0xac5e <left_QUARTER_move+0xf8>
	else if (__tmp > 65535)
    abe0:	6f 81       	ldd	r22, Y+7	; 0x07
    abe2:	78 85       	ldd	r23, Y+8	; 0x08
    abe4:	89 85       	ldd	r24, Y+9	; 0x09
    abe6:	9a 85       	ldd	r25, Y+10	; 0x0a
    abe8:	20 e0       	ldi	r18, 0x00	; 0
    abea:	3f ef       	ldi	r19, 0xFF	; 255
    abec:	4f e7       	ldi	r20, 0x7F	; 127
    abee:	57 e4       	ldi	r21, 0x47	; 71
    abf0:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    abf4:	18 16       	cp	r1, r24
    abf6:	4c f5       	brge	.+82     	; 0xac4a <left_QUARTER_move+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    abf8:	6b 85       	ldd	r22, Y+11	; 0x0b
    abfa:	7c 85       	ldd	r23, Y+12	; 0x0c
    abfc:	8d 85       	ldd	r24, Y+13	; 0x0d
    abfe:	9e 85       	ldd	r25, Y+14	; 0x0e
    ac00:	20 e0       	ldi	r18, 0x00	; 0
    ac02:	30 e0       	ldi	r19, 0x00	; 0
    ac04:	40 e2       	ldi	r20, 0x20	; 32
    ac06:	51 e4       	ldi	r21, 0x41	; 65
    ac08:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    ac0c:	dc 01       	movw	r26, r24
    ac0e:	cb 01       	movw	r24, r22
    ac10:	bc 01       	movw	r22, r24
    ac12:	cd 01       	movw	r24, r26
    ac14:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    ac18:	dc 01       	movw	r26, r24
    ac1a:	cb 01       	movw	r24, r22
    ac1c:	9e 83       	std	Y+6, r25	; 0x06
    ac1e:	8d 83       	std	Y+5, r24	; 0x05
    ac20:	0f c0       	rjmp	.+30     	; 0xac40 <left_QUARTER_move+0xda>
    ac22:	88 ec       	ldi	r24, 0xC8	; 200
    ac24:	90 e0       	ldi	r25, 0x00	; 0
    ac26:	9c 83       	std	Y+4, r25	; 0x04
    ac28:	8b 83       	std	Y+3, r24	; 0x03
    ac2a:	8b 81       	ldd	r24, Y+3	; 0x03
    ac2c:	9c 81       	ldd	r25, Y+4	; 0x04
    ac2e:	01 97       	sbiw	r24, 0x01	; 1
    ac30:	f1 f7       	brne	.-4      	; 0xac2e <left_QUARTER_move+0xc8>
    ac32:	9c 83       	std	Y+4, r25	; 0x04
    ac34:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ac36:	8d 81       	ldd	r24, Y+5	; 0x05
    ac38:	9e 81       	ldd	r25, Y+6	; 0x06
    ac3a:	01 97       	sbiw	r24, 0x01	; 1
    ac3c:	9e 83       	std	Y+6, r25	; 0x06
    ac3e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    ac40:	8d 81       	ldd	r24, Y+5	; 0x05
    ac42:	9e 81       	ldd	r25, Y+6	; 0x06
    ac44:	00 97       	sbiw	r24, 0x00	; 0
    ac46:	69 f7       	brne	.-38     	; 0xac22 <left_QUARTER_move+0xbc>
    ac48:	14 c0       	rjmp	.+40     	; 0xac72 <left_QUARTER_move+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    ac4a:	6f 81       	ldd	r22, Y+7	; 0x07
    ac4c:	78 85       	ldd	r23, Y+8	; 0x08
    ac4e:	89 85       	ldd	r24, Y+9	; 0x09
    ac50:	9a 85       	ldd	r25, Y+10	; 0x0a
    ac52:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    ac56:	dc 01       	movw	r26, r24
    ac58:	cb 01       	movw	r24, r22
    ac5a:	9e 83       	std	Y+6, r25	; 0x06
    ac5c:	8d 83       	std	Y+5, r24	; 0x05
    ac5e:	8d 81       	ldd	r24, Y+5	; 0x05
    ac60:	9e 81       	ldd	r25, Y+6	; 0x06
    ac62:	9a 83       	std	Y+2, r25	; 0x02
    ac64:	89 83       	std	Y+1, r24	; 0x01
    ac66:	89 81       	ldd	r24, Y+1	; 0x01
    ac68:	9a 81       	ldd	r25, Y+2	; 0x02
    ac6a:	01 97       	sbiw	r24, 0x01	; 1
    ac6c:	f1 f7       	brne	.-4      	; 0xac6a <left_QUARTER_move+0x104>
    ac6e:	9a 83       	std	Y+2, r25	; 0x02
    ac70:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(250);
	DIO_void_Set_Pin_Value(car_control,left_wheel,HIGH);
    ac72:	84 e0       	ldi	r24, 0x04	; 4
    ac74:	66 e0       	ldi	r22, 0x06	; 6
    ac76:	41 e0       	ldi	r20, 0x01	; 1
    ac78:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    ac7c:	2e 96       	adiw	r28, 0x0e	; 14
    ac7e:	0f b6       	in	r0, 0x3f	; 63
    ac80:	f8 94       	cli
    ac82:	de bf       	out	0x3e, r29	; 62
    ac84:	0f be       	out	0x3f, r0	; 63
    ac86:	cd bf       	out	0x3d, r28	; 61
    ac88:	cf 91       	pop	r28
    ac8a:	df 91       	pop	r29
    ac8c:	08 95       	ret

0000ac8e <start_parking>:


void start_parking(void)
{
    ac8e:	af 92       	push	r10
    ac90:	bf 92       	push	r11
    ac92:	cf 92       	push	r12
    ac94:	df 92       	push	r13
    ac96:	ef 92       	push	r14
    ac98:	ff 92       	push	r15
    ac9a:	0f 93       	push	r16
    ac9c:	1f 93       	push	r17
    ac9e:	df 93       	push	r29
    aca0:	cf 93       	push	r28
    aca2:	cd b7       	in	r28, 0x3d	; 61
    aca4:	de b7       	in	r29, 0x3e	; 62

LCD_vidPrintInTwoLines("RIGHT WHEEL CAR MOVE BACKWORD");
    aca6:	8e e5       	ldi	r24, 0x5E	; 94
    aca8:	91 e0       	ldi	r25, 0x01	; 1
    acaa:	0e 94 17 3a 	call	0x742e	; 0x742e <LCD_vidPrintInTwoLines>
right_move();
    acae:	0e 94 cf 52 	call	0xa59e	; 0xa59e <right_move>
backward_move();
    acb2:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>
LCD_vidSendCommand(1);
    acb6:	81 e0       	ldi	r24, 0x01	; 1
    acb8:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

do {
	 LCD_vidGotoxy(0,0);
    acbc:	80 e0       	ldi	r24, 0x00	; 0
    acbe:	60 e0       	ldi	r22, 0x00	; 0
    acc0:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	 LCD_vidWriteString("back DISTANCE");
    acc4:	8c e7       	ldi	r24, 0x7C	; 124
    acc6:	91 e0       	ldi	r25, 0x01	; 1
    acc8:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	 ultra_back=Ultrasonic_back2_Get_Distance();
    accc:	0e 94 99 29 	call	0x5332	; 0x5332 <Ultrasonic_back2_Get_Distance>
    acd0:	dc 01       	movw	r26, r24
    acd2:	cb 01       	movw	r24, r22
    acd4:	80 93 92 03 	sts	0x0392, r24
    acd8:	90 93 93 03 	sts	0x0393, r25
    acdc:	a0 93 94 03 	sts	0x0394, r26
    ace0:	b0 93 95 03 	sts	0x0395, r27
	 LCD_vidGotoxy(0,1);
    ace4:	80 e0       	ldi	r24, 0x00	; 0
    ace6:	61 e0       	ldi	r22, 0x01	; 1
    ace8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	 LCD_vidWriteString("       ");
    acec:	8a e8       	ldi	r24, 0x8A	; 138
    acee:	91 e0       	ldi	r25, 0x01	; 1
    acf0:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	LCD_vidGotoxy(0,1);
    acf4:	80 e0       	ldi	r24, 0x00	; 0
    acf6:	61 e0       	ldi	r22, 0x01	; 1
    acf8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	 LCD_vidWriteUnSignedInteger(ultra_back);
    acfc:	80 91 92 03 	lds	r24, 0x0392
    ad00:	90 91 93 03 	lds	r25, 0x0393
    ad04:	a0 91 94 03 	lds	r26, 0x0394
    ad08:	b0 91 95 03 	lds	r27, 0x0395
    ad0c:	5c 01       	movw	r10, r24
    ad0e:	6d 01       	movw	r12, r26
    ad10:	ee 24       	eor	r14, r14
    ad12:	ff 24       	eor	r15, r15
    ad14:	87 01       	movw	r16, r14
    ad16:	2a 2d       	mov	r18, r10
    ad18:	3b 2d       	mov	r19, r11
    ad1a:	4c 2d       	mov	r20, r12
    ad1c:	5d 2d       	mov	r21, r13
    ad1e:	6e 2d       	mov	r22, r14
    ad20:	7f 2d       	mov	r23, r15
    ad22:	80 2f       	mov	r24, r16
    ad24:	91 2f       	mov	r25, r17
    ad26:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>


if(ultra_back>200)
    ad2a:	80 91 92 03 	lds	r24, 0x0392
    ad2e:	90 91 93 03 	lds	r25, 0x0393
    ad32:	a0 91 94 03 	lds	r26, 0x0394
    ad36:	b0 91 95 03 	lds	r27, 0x0395
    ad3a:	89 3c       	cpi	r24, 0xC9	; 201
    ad3c:	91 05       	cpc	r25, r1
    ad3e:	a1 05       	cpc	r26, r1
    ad40:	b1 05       	cpc	r27, r1
    ad42:	68 f0       	brcs	.+26     	; 0xad5e <start_parking+0xd0>
	   	{
	      	ultra_back=200;
    ad44:	88 ec       	ldi	r24, 0xC8	; 200
    ad46:	90 e0       	ldi	r25, 0x00	; 0
    ad48:	a0 e0       	ldi	r26, 0x00	; 0
    ad4a:	b0 e0       	ldi	r27, 0x00	; 0
    ad4c:	80 93 92 03 	sts	0x0392, r24
    ad50:	90 93 93 03 	sts	0x0393, r25
    ad54:	a0 93 94 03 	sts	0x0394, r26
    ad58:	b0 93 95 03 	sts	0x0395, r27
    ad5c:	19 c0       	rjmp	.+50     	; 0xad90 <start_parking+0x102>
	      }
else if(ultra_back<6)
    ad5e:	80 91 92 03 	lds	r24, 0x0392
    ad62:	90 91 93 03 	lds	r25, 0x0393
    ad66:	a0 91 94 03 	lds	r26, 0x0394
    ad6a:	b0 91 95 03 	lds	r27, 0x0395
    ad6e:	86 30       	cpi	r24, 0x06	; 6
    ad70:	91 05       	cpc	r25, r1
    ad72:	a1 05       	cpc	r26, r1
    ad74:	b1 05       	cpc	r27, r1
    ad76:	60 f4       	brcc	.+24     	; 0xad90 <start_parking+0x102>
	    {
	        	ultra_back=5;
    ad78:	85 e0       	ldi	r24, 0x05	; 5
    ad7a:	90 e0       	ldi	r25, 0x00	; 0
    ad7c:	a0 e0       	ldi	r26, 0x00	; 0
    ad7e:	b0 e0       	ldi	r27, 0x00	; 0
    ad80:	80 93 92 03 	sts	0x0392, r24
    ad84:	90 93 93 03 	sts	0x0393, r25
    ad88:	a0 93 94 03 	sts	0x0394, r26
    ad8c:	b0 93 95 03 	sts	0x0395, r27
	   }
 } while(Ultrasonic_back2_Get_Distance()>80);
    ad90:	0e 94 99 29 	call	0x5332	; 0x5332 <Ultrasonic_back2_Get_Distance>
    ad94:	dc 01       	movw	r26, r24
    ad96:	cb 01       	movw	r24, r22
    ad98:	81 35       	cpi	r24, 0x51	; 81
    ad9a:	91 05       	cpc	r25, r1
    ad9c:	a1 05       	cpc	r26, r1
    ad9e:	b1 05       	cpc	r27, r1
    ada0:	08 f0       	brcs	.+2      	; 0xada4 <start_parking+0x116>
    ada2:	8c cf       	rjmp	.-232    	; 0xacbc <start_parking+0x2e>
	//....................................
	Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    ada4:	87 e0       	ldi	r24, 0x07	; 7
    ada6:	60 e0       	ldi	r22, 0x00	; 0
    ada8:	42 e0       	ldi	r20, 0x02	; 2
    adaa:	20 e0       	ldi	r18, 0x00	; 0
    adac:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    adb0:	84 e0       	ldi	r24, 0x04	; 4
    adb2:	65 e0       	ldi	r22, 0x05	; 5
    adb4:	41 e0       	ldi	r20, 0x01	; 1
    adb6:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
    //TO DISCONNECT CHANNEL C
    CLR_BIT(TCCR3A,COM3C0);
    adba:	ab e8       	ldi	r26, 0x8B	; 139
    adbc:	b0 e0       	ldi	r27, 0x00	; 0
    adbe:	eb e8       	ldi	r30, 0x8B	; 139
    adc0:	f0 e0       	ldi	r31, 0x00	; 0
    adc2:	80 81       	ld	r24, Z
    adc4:	8b 7f       	andi	r24, 0xFB	; 251
    adc6:	8c 93       	st	X, r24
    CLR_BIT(TCCR3A,COM3C1);
    adc8:	ab e8       	ldi	r26, 0x8B	; 139
    adca:	b0 e0       	ldi	r27, 0x00	; 0
    adcc:	eb e8       	ldi	r30, 0x8B	; 139
    adce:	f0 e0       	ldi	r31, 0x00	; 0
    add0:	80 81       	ld	r24, Z
    add2:	87 7f       	andi	r24, 0xF7	; 247
    add4:	8c 93       	st	X, r24

 //...................................................
    left_move();
    add6:	0e 94 8b 54 	call	0xa916	; 0xa916 <left_move>
    backward_move();
    adda:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>

    	do {
    		LCD_vidGotoxy(0,0);
    adde:	80 e0       	ldi	r24, 0x00	; 0
    ade0:	60 e0       	ldi	r22, 0x00	; 0
    ade2:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    		LCD_vidWriteString("back DISTANCE");
    ade6:	8c e7       	ldi	r24, 0x7C	; 124
    ade8:	91 e0       	ldi	r25, 0x01	; 1
    adea:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    		LCD_vidGotoxy(0,1);
    adee:	80 e0       	ldi	r24, 0x00	; 0
    adf0:	61 e0       	ldi	r22, 0x01	; 1
    adf2:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    		LCD_vidWriteString("       ");
    adf6:	8a e8       	ldi	r24, 0x8A	; 138
    adf8:	91 e0       	ldi	r25, 0x01	; 1
    adfa:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    	    LCD_vidGotoxy(0,1);
    adfe:	80 e0       	ldi	r24, 0x00	; 0
    ae00:	61 e0       	ldi	r22, 0x01	; 1
    ae02:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
    		ultra_back=Ultrasonic_back_Get_Distance();
    ae06:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    ae0a:	dc 01       	movw	r26, r24
    ae0c:	cb 01       	movw	r24, r22
    ae0e:	80 93 92 03 	sts	0x0392, r24
    ae12:	90 93 93 03 	sts	0x0393, r25
    ae16:	a0 93 94 03 	sts	0x0394, r26
    ae1a:	b0 93 95 03 	sts	0x0395, r27
    		LCD_vidWriteUnSignedInteger(ultra_back);
    ae1e:	80 91 92 03 	lds	r24, 0x0392
    ae22:	90 91 93 03 	lds	r25, 0x0393
    ae26:	a0 91 94 03 	lds	r26, 0x0394
    ae2a:	b0 91 95 03 	lds	r27, 0x0395
    ae2e:	5c 01       	movw	r10, r24
    ae30:	6d 01       	movw	r12, r26
    ae32:	ee 24       	eor	r14, r14
    ae34:	ff 24       	eor	r15, r15
    ae36:	87 01       	movw	r16, r14
    ae38:	2a 2d       	mov	r18, r10
    ae3a:	3b 2d       	mov	r19, r11
    ae3c:	4c 2d       	mov	r20, r12
    ae3e:	5d 2d       	mov	r21, r13
    ae40:	6e 2d       	mov	r22, r14
    ae42:	7f 2d       	mov	r23, r15
    ae44:	80 2f       	mov	r24, r16
    ae46:	91 2f       	mov	r25, r17
    ae48:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
    	    if(ultra_back>200)
    ae4c:	80 91 92 03 	lds	r24, 0x0392
    ae50:	90 91 93 03 	lds	r25, 0x0393
    ae54:	a0 91 94 03 	lds	r26, 0x0394
    ae58:	b0 91 95 03 	lds	r27, 0x0395
    ae5c:	89 3c       	cpi	r24, 0xC9	; 201
    ae5e:	91 05       	cpc	r25, r1
    ae60:	a1 05       	cpc	r26, r1
    ae62:	b1 05       	cpc	r27, r1
    ae64:	68 f0       	brcs	.+26     	; 0xae80 <start_parking+0x1f2>
    		   	{
    		      	ultra_back=200;
    ae66:	88 ec       	ldi	r24, 0xC8	; 200
    ae68:	90 e0       	ldi	r25, 0x00	; 0
    ae6a:	a0 e0       	ldi	r26, 0x00	; 0
    ae6c:	b0 e0       	ldi	r27, 0x00	; 0
    ae6e:	80 93 92 03 	sts	0x0392, r24
    ae72:	90 93 93 03 	sts	0x0393, r25
    ae76:	a0 93 94 03 	sts	0x0394, r26
    ae7a:	b0 93 95 03 	sts	0x0395, r27
    ae7e:	19 c0       	rjmp	.+50     	; 0xaeb2 <start_parking+0x224>
    		      }
    	    else if(ultra_back<6)
    ae80:	80 91 92 03 	lds	r24, 0x0392
    ae84:	90 91 93 03 	lds	r25, 0x0393
    ae88:	a0 91 94 03 	lds	r26, 0x0394
    ae8c:	b0 91 95 03 	lds	r27, 0x0395
    ae90:	86 30       	cpi	r24, 0x06	; 6
    ae92:	91 05       	cpc	r25, r1
    ae94:	a1 05       	cpc	r26, r1
    ae96:	b1 05       	cpc	r27, r1
    ae98:	60 f4       	brcc	.+24     	; 0xaeb2 <start_parking+0x224>
    		    {
    		        	ultra_back=5;
    ae9a:	85 e0       	ldi	r24, 0x05	; 5
    ae9c:	90 e0       	ldi	r25, 0x00	; 0
    ae9e:	a0 e0       	ldi	r26, 0x00	; 0
    aea0:	b0 e0       	ldi	r27, 0x00	; 0
    aea2:	80 93 92 03 	sts	0x0392, r24
    aea6:	90 93 93 03 	sts	0x0393, r25
    aeaa:	a0 93 94 03 	sts	0x0394, r26
    aeae:	b0 93 95 03 	sts	0x0395, r27
    		   }
    	 } while(Ultrasonic_back_Get_Distance()>12);
    aeb2:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    aeb6:	dc 01       	movw	r26, r24
    aeb8:	cb 01       	movw	r24, r22
    aeba:	8d 30       	cpi	r24, 0x0D	; 13
    aebc:	91 05       	cpc	r25, r1
    aebe:	a1 05       	cpc	r26, r1
    aec0:	b1 05       	cpc	r27, r1
    aec2:	08 f0       	brcs	.+2      	; 0xaec6 <start_parking+0x238>
    aec4:	8c cf       	rjmp	.-232    	; 0xadde <start_parking+0x150>

  //stop car
 Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    aec6:	87 e0       	ldi	r24, 0x07	; 7
    aec8:	60 e0       	ldi	r22, 0x00	; 0
    aeca:	42 e0       	ldi	r20, 0x02	; 2
    aecc:	20 e0       	ldi	r18, 0x00	; 0
    aece:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
 DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    aed2:	84 e0       	ldi	r24, 0x04	; 4
    aed4:	65 e0       	ldi	r22, 0x05	; 5
    aed6:	41 e0       	ldi	r20, 0x01	; 1
    aed8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
  //TO DISCONNECT CHANNEL C
  CLR_BIT(TCCR3A,COM3C0);
    aedc:	ab e8       	ldi	r26, 0x8B	; 139
    aede:	b0 e0       	ldi	r27, 0x00	; 0
    aee0:	eb e8       	ldi	r30, 0x8B	; 139
    aee2:	f0 e0       	ldi	r31, 0x00	; 0
    aee4:	80 81       	ld	r24, Z
    aee6:	8b 7f       	andi	r24, 0xFB	; 251
    aee8:	8c 93       	st	X, r24
  CLR_BIT(TCCR3A,COM3C1);
    aeea:	ab e8       	ldi	r26, 0x8B	; 139
    aeec:	b0 e0       	ldi	r27, 0x00	; 0
    aeee:	eb e8       	ldi	r30, 0x8B	; 139
    aef0:	f0 e0       	ldi	r31, 0x00	; 0
    aef2:	80 81       	ld	r24, Z
    aef4:	87 7f       	andi	r24, 0xF7	; 247
    aef6:	8c 93       	st	X, r24

   //........................................
   right_move();
    aef8:	0e 94 cf 52 	call	0xa59e	; 0xa59e <right_move>
   forward_move();
    aefc:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>

  do{
      LCD_vidGotoxy(0,0);
    af00:	80 e0       	ldi	r24, 0x00	; 0
    af02:	60 e0       	ldi	r22, 0x00	; 0
    af04:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
       LCD_vidWriteString("front DISTANCE");
    af08:	82 e9       	ldi	r24, 0x92	; 146
    af0a:	91 e0       	ldi	r25, 0x01	; 1
    af0c:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
      ultra_front=Ultrasonic_front_Get_Distance();
    af10:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    af14:	dc 01       	movw	r26, r24
    af16:	cb 01       	movw	r24, r22
    af18:	80 93 9a 03 	sts	0x039A, r24
    af1c:	90 93 9b 03 	sts	0x039B, r25
    af20:	a0 93 9c 03 	sts	0x039C, r26
    af24:	b0 93 9d 03 	sts	0x039D, r27
      LCD_vidGotoxy(0,1);
    af28:	80 e0       	ldi	r24, 0x00	; 0
    af2a:	61 e0       	ldi	r22, 0x01	; 1
    af2c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
      LCD_vidWriteString("       ");
    af30:	8a e8       	ldi	r24, 0x8A	; 138
    af32:	91 e0       	ldi	r25, 0x01	; 1
    af34:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
      LCD_vidGotoxy(0,1);
    af38:	80 e0       	ldi	r24, 0x00	; 0
    af3a:	61 e0       	ldi	r22, 0x01	; 1
    af3c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
       LCD_vidWriteUnSignedInteger(ultra_front);
    af40:	80 91 9a 03 	lds	r24, 0x039A
    af44:	90 91 9b 03 	lds	r25, 0x039B
    af48:	a0 91 9c 03 	lds	r26, 0x039C
    af4c:	b0 91 9d 03 	lds	r27, 0x039D
    af50:	5c 01       	movw	r10, r24
    af52:	6d 01       	movw	r12, r26
    af54:	ee 24       	eor	r14, r14
    af56:	ff 24       	eor	r15, r15
    af58:	87 01       	movw	r16, r14
    af5a:	2a 2d       	mov	r18, r10
    af5c:	3b 2d       	mov	r19, r11
    af5e:	4c 2d       	mov	r20, r12
    af60:	5d 2d       	mov	r21, r13
    af62:	6e 2d       	mov	r22, r14
    af64:	7f 2d       	mov	r23, r15
    af66:	80 2f       	mov	r24, r16
    af68:	91 2f       	mov	r25, r17
    af6a:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
       if(ultra_front>200)
    af6e:	80 91 9a 03 	lds	r24, 0x039A
    af72:	90 91 9b 03 	lds	r25, 0x039B
    af76:	a0 91 9c 03 	lds	r26, 0x039C
    af7a:	b0 91 9d 03 	lds	r27, 0x039D
    af7e:	89 3c       	cpi	r24, 0xC9	; 201
    af80:	91 05       	cpc	r25, r1
    af82:	a1 05       	cpc	r26, r1
    af84:	b1 05       	cpc	r27, r1
    af86:	68 f0       	brcs	.+26     	; 0xafa2 <start_parking+0x314>
      	{
           ultra_front=200;
    af88:	88 ec       	ldi	r24, 0xC8	; 200
    af8a:	90 e0       	ldi	r25, 0x00	; 0
    af8c:	a0 e0       	ldi	r26, 0x00	; 0
    af8e:	b0 e0       	ldi	r27, 0x00	; 0
    af90:	80 93 9a 03 	sts	0x039A, r24
    af94:	90 93 9b 03 	sts	0x039B, r25
    af98:	a0 93 9c 03 	sts	0x039C, r26
    af9c:	b0 93 9d 03 	sts	0x039D, r27
    afa0:	18 c0       	rjmp	.+48     	; 0xafd2 <start_parking+0x344>
         }
       else if(ultra_front)
    afa2:	80 91 9a 03 	lds	r24, 0x039A
    afa6:	90 91 9b 03 	lds	r25, 0x039B
    afaa:	a0 91 9c 03 	lds	r26, 0x039C
    afae:	b0 91 9d 03 	lds	r27, 0x039D
    afb2:	00 97       	sbiw	r24, 0x00	; 0
    afb4:	a1 05       	cpc	r26, r1
    afb6:	b1 05       	cpc	r27, r1
    afb8:	61 f0       	breq	.+24     	; 0xafd2 <start_parking+0x344>
         {
             	ultra_front=5;
    afba:	85 e0       	ldi	r24, 0x05	; 5
    afbc:	90 e0       	ldi	r25, 0x00	; 0
    afbe:	a0 e0       	ldi	r26, 0x00	; 0
    afc0:	b0 e0       	ldi	r27, 0x00	; 0
    afc2:	80 93 9a 03 	sts	0x039A, r24
    afc6:	90 93 9b 03 	sts	0x039B, r25
    afca:	a0 93 9c 03 	sts	0x039C, r26
    afce:	b0 93 9d 03 	sts	0x039D, r27
         }
        	}while(Ultrasonic_front_Get_Distance()>10);
    afd2:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    afd6:	dc 01       	movw	r26, r24
    afd8:	cb 01       	movw	r24, r22
    afda:	8b 30       	cpi	r24, 0x0B	; 11
    afdc:	91 05       	cpc	r25, r1
    afde:	a1 05       	cpc	r26, r1
    afe0:	b1 05       	cpc	r27, r1
    afe2:	08 f0       	brcs	.+2      	; 0xafe6 <start_parking+0x358>
    afe4:	8d cf       	rjmp	.-230    	; 0xaf00 <start_parking+0x272>
        //stop
	    Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    afe6:	87 e0       	ldi	r24, 0x07	; 7
    afe8:	60 e0       	ldi	r22, 0x00	; 0
    afea:	42 e0       	ldi	r20, 0x02	; 2
    afec:	20 e0       	ldi	r18, 0x00	; 0
    afee:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    aff2:	84 e0       	ldi	r24, 0x04	; 4
    aff4:	63 e0       	ldi	r22, 0x03	; 3
    aff6:	41 e0       	ldi	r20, 0x01	; 1
    aff8:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    CLR_BIT(TCCR3A,COM3A0);
    affc:	ab e8       	ldi	r26, 0x8B	; 139
    affe:	b0 e0       	ldi	r27, 0x00	; 0
    b000:	eb e8       	ldi	r30, 0x8B	; 139
    b002:	f0 e0       	ldi	r31, 0x00	; 0
    b004:	80 81       	ld	r24, Z
    b006:	8f 7b       	andi	r24, 0xBF	; 191
    b008:	8c 93       	st	X, r24
	    CLR_BIT(TCCR3A,COM3A1);
    b00a:	ab e8       	ldi	r26, 0x8B	; 139
    b00c:	b0 e0       	ldi	r27, 0x00	; 0
    b00e:	eb e8       	ldi	r30, 0x8B	; 139
    b010:	f0 e0       	ldi	r31, 0x00	; 0
    b012:	80 81       	ld	r24, Z
    b014:	8f 77       	andi	r24, 0x7F	; 127
    b016:	8c 93       	st	X, r24
//..................................................................................
left_move();
    b018:	0e 94 8b 54 	call	0xa916	; 0xa916 <left_move>
backward_move();
    b01c:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>
do {
	 LCD_vidGotoxy(0,0);
    b020:	80 e0       	ldi	r24, 0x00	; 0
    b022:	60 e0       	ldi	r22, 0x00	; 0
    b024:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	 LCD_vidWriteString("back DISTANCE");
    b028:	8c e7       	ldi	r24, 0x7C	; 124
    b02a:	91 e0       	ldi	r25, 0x01	; 1
    b02c:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	 ultra_back=Ultrasonic_back_Get_Distance();
    b030:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b034:	dc 01       	movw	r26, r24
    b036:	cb 01       	movw	r24, r22
    b038:	80 93 92 03 	sts	0x0392, r24
    b03c:	90 93 93 03 	sts	0x0393, r25
    b040:	a0 93 94 03 	sts	0x0394, r26
    b044:	b0 93 95 03 	sts	0x0395, r27
	 LCD_vidGotoxy(0,1);
    b048:	80 e0       	ldi	r24, 0x00	; 0
    b04a:	61 e0       	ldi	r22, 0x01	; 1
    b04c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	 LCD_vidWriteString("       ");
    b050:	8a e8       	ldi	r24, 0x8A	; 138
    b052:	91 e0       	ldi	r25, 0x01	; 1
    b054:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	   LCD_vidGotoxy(0,1);
    b058:	80 e0       	ldi	r24, 0x00	; 0
    b05a:	61 e0       	ldi	r22, 0x01	; 1
    b05c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	  LCD_vidWriteUnSignedInteger(ultra_back);
    b060:	80 91 92 03 	lds	r24, 0x0392
    b064:	90 91 93 03 	lds	r25, 0x0393
    b068:	a0 91 94 03 	lds	r26, 0x0394
    b06c:	b0 91 95 03 	lds	r27, 0x0395
    b070:	5c 01       	movw	r10, r24
    b072:	6d 01       	movw	r12, r26
    b074:	ee 24       	eor	r14, r14
    b076:	ff 24       	eor	r15, r15
    b078:	87 01       	movw	r16, r14
    b07a:	2a 2d       	mov	r18, r10
    b07c:	3b 2d       	mov	r19, r11
    b07e:	4c 2d       	mov	r20, r12
    b080:	5d 2d       	mov	r21, r13
    b082:	6e 2d       	mov	r22, r14
    b084:	7f 2d       	mov	r23, r15
    b086:	80 2f       	mov	r24, r16
    b088:	91 2f       	mov	r25, r17
    b08a:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>


if(ultra_back>200)
    b08e:	80 91 92 03 	lds	r24, 0x0392
    b092:	90 91 93 03 	lds	r25, 0x0393
    b096:	a0 91 94 03 	lds	r26, 0x0394
    b09a:	b0 91 95 03 	lds	r27, 0x0395
    b09e:	89 3c       	cpi	r24, 0xC9	; 201
    b0a0:	91 05       	cpc	r25, r1
    b0a2:	a1 05       	cpc	r26, r1
    b0a4:	b1 05       	cpc	r27, r1
    b0a6:	68 f0       	brcs	.+26     	; 0xb0c2 <start_parking+0x434>
	   	{
	      	ultra_back=200;
    b0a8:	88 ec       	ldi	r24, 0xC8	; 200
    b0aa:	90 e0       	ldi	r25, 0x00	; 0
    b0ac:	a0 e0       	ldi	r26, 0x00	; 0
    b0ae:	b0 e0       	ldi	r27, 0x00	; 0
    b0b0:	80 93 92 03 	sts	0x0392, r24
    b0b4:	90 93 93 03 	sts	0x0393, r25
    b0b8:	a0 93 94 03 	sts	0x0394, r26
    b0bc:	b0 93 95 03 	sts	0x0395, r27
    b0c0:	19 c0       	rjmp	.+50     	; 0xb0f4 <start_parking+0x466>
	      }
else if(ultra_back<6)
    b0c2:	80 91 92 03 	lds	r24, 0x0392
    b0c6:	90 91 93 03 	lds	r25, 0x0393
    b0ca:	a0 91 94 03 	lds	r26, 0x0394
    b0ce:	b0 91 95 03 	lds	r27, 0x0395
    b0d2:	86 30       	cpi	r24, 0x06	; 6
    b0d4:	91 05       	cpc	r25, r1
    b0d6:	a1 05       	cpc	r26, r1
    b0d8:	b1 05       	cpc	r27, r1
    b0da:	60 f4       	brcc	.+24     	; 0xb0f4 <start_parking+0x466>
	    {
	        	ultra_back=5;
    b0dc:	85 e0       	ldi	r24, 0x05	; 5
    b0de:	90 e0       	ldi	r25, 0x00	; 0
    b0e0:	a0 e0       	ldi	r26, 0x00	; 0
    b0e2:	b0 e0       	ldi	r27, 0x00	; 0
    b0e4:	80 93 92 03 	sts	0x0392, r24
    b0e8:	90 93 93 03 	sts	0x0393, r25
    b0ec:	a0 93 94 03 	sts	0x0394, r26
    b0f0:	b0 93 95 03 	sts	0x0395, r27
	   }
 } while(Ultrasonic_back_Get_Distance()>10);
    b0f4:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b0f8:	dc 01       	movw	r26, r24
    b0fa:	cb 01       	movw	r24, r22
    b0fc:	8b 30       	cpi	r24, 0x0B	; 11
    b0fe:	91 05       	cpc	r25, r1
    b100:	a1 05       	cpc	r26, r1
    b102:	b1 05       	cpc	r27, r1
    b104:	08 f0       	brcs	.+2      	; 0xb108 <start_parking+0x47a>
    b106:	8c cf       	rjmp	.-232    	; 0xb020 <start_parking+0x392>


	    //stop back
	    Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b108:	87 e0       	ldi	r24, 0x07	; 7
    b10a:	60 e0       	ldi	r22, 0x00	; 0
    b10c:	42 e0       	ldi	r20, 0x02	; 2
    b10e:	20 e0       	ldi	r18, 0x00	; 0
    b110:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	        	DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    b114:	84 e0       	ldi	r24, 0x04	; 4
    b116:	65 e0       	ldi	r22, 0x05	; 5
    b118:	41 e0       	ldi	r20, 0x01	; 1
    b11a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	            //TO DISCONNECT CHANNEL C
	            CLR_BIT(TCCR3A,COM3C0);
    b11e:	ab e8       	ldi	r26, 0x8B	; 139
    b120:	b0 e0       	ldi	r27, 0x00	; 0
    b122:	eb e8       	ldi	r30, 0x8B	; 139
    b124:	f0 e0       	ldi	r31, 0x00	; 0
    b126:	80 81       	ld	r24, Z
    b128:	8b 7f       	andi	r24, 0xFB	; 251
    b12a:	8c 93       	st	X, r24
	            CLR_BIT(TCCR3A,COM3C1);
    b12c:	ab e8       	ldi	r26, 0x8B	; 139
    b12e:	b0 e0       	ldi	r27, 0x00	; 0
    b130:	eb e8       	ldi	r30, 0x8B	; 139
    b132:	f0 e0       	ldi	r31, 0x00	; 0
    b134:	80 81       	ld	r24, Z
    b136:	87 7f       	andi	r24, 0xF7	; 247
    b138:	8c 93       	st	X, r24
//.........................................................
right_half_move();
    b13a:	0e 94 63 53 	call	0xa6c6	; 0xa6c6 <right_half_move>
forward_move();
    b13e:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
do{
	LCD_vidGotoxy(0,0);
    b142:	80 e0       	ldi	r24, 0x00	; 0
    b144:	60 e0       	ldi	r22, 0x00	; 0
    b146:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteString("front DISTANCE");
    b14a:	82 e9       	ldi	r24, 0x92	; 146
    b14c:	91 e0       	ldi	r25, 0x01	; 1
    b14e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	ultra_front=Ultrasonic_front_Get_Distance();
    b152:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    b156:	dc 01       	movw	r26, r24
    b158:	cb 01       	movw	r24, r22
    b15a:	80 93 9a 03 	sts	0x039A, r24
    b15e:	90 93 9b 03 	sts	0x039B, r25
    b162:	a0 93 9c 03 	sts	0x039C, r26
    b166:	b0 93 9d 03 	sts	0x039D, r27
	 LCD_vidGotoxy(0,1);
    b16a:	80 e0       	ldi	r24, 0x00	; 0
    b16c:	61 e0       	ldi	r22, 0x01	; 1
    b16e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
     LCD_vidWriteString("       ");
    b172:	8a e8       	ldi	r24, 0x8A	; 138
    b174:	91 e0       	ldi	r25, 0x01	; 1
    b176:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	LCD_vidGotoxy(0,1);
    b17a:	80 e0       	ldi	r24, 0x00	; 0
    b17c:	61 e0       	ldi	r22, 0x01	; 1
    b17e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteUnSignedInteger(ultra_front);
    b182:	80 91 9a 03 	lds	r24, 0x039A
    b186:	90 91 9b 03 	lds	r25, 0x039B
    b18a:	a0 91 9c 03 	lds	r26, 0x039C
    b18e:	b0 91 9d 03 	lds	r27, 0x039D
    b192:	5c 01       	movw	r10, r24
    b194:	6d 01       	movw	r12, r26
    b196:	ee 24       	eor	r14, r14
    b198:	ff 24       	eor	r15, r15
    b19a:	87 01       	movw	r16, r14
    b19c:	2a 2d       	mov	r18, r10
    b19e:	3b 2d       	mov	r19, r11
    b1a0:	4c 2d       	mov	r20, r12
    b1a2:	5d 2d       	mov	r21, r13
    b1a4:	6e 2d       	mov	r22, r14
    b1a6:	7f 2d       	mov	r23, r15
    b1a8:	80 2f       	mov	r24, r16
    b1aa:	91 2f       	mov	r25, r17
    b1ac:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
	if(ultra_front>200)
    b1b0:	80 91 9a 03 	lds	r24, 0x039A
    b1b4:	90 91 9b 03 	lds	r25, 0x039B
    b1b8:	a0 91 9c 03 	lds	r26, 0x039C
    b1bc:	b0 91 9d 03 	lds	r27, 0x039D
    b1c0:	89 3c       	cpi	r24, 0xC9	; 201
    b1c2:	91 05       	cpc	r25, r1
    b1c4:	a1 05       	cpc	r26, r1
    b1c6:	b1 05       	cpc	r27, r1
    b1c8:	68 f0       	brcs	.+26     	; 0xb1e4 <start_parking+0x556>
	 {
	  ultra_front=200;
    b1ca:	88 ec       	ldi	r24, 0xC8	; 200
    b1cc:	90 e0       	ldi	r25, 0x00	; 0
    b1ce:	a0 e0       	ldi	r26, 0x00	; 0
    b1d0:	b0 e0       	ldi	r27, 0x00	; 0
    b1d2:	80 93 9a 03 	sts	0x039A, r24
    b1d6:	90 93 9b 03 	sts	0x039B, r25
    b1da:	a0 93 9c 03 	sts	0x039C, r26
    b1de:	b0 93 9d 03 	sts	0x039D, r27
    b1e2:	18 c0       	rjmp	.+48     	; 0xb214 <start_parking+0x586>
	}
	else if(ultra_front)
    b1e4:	80 91 9a 03 	lds	r24, 0x039A
    b1e8:	90 91 9b 03 	lds	r25, 0x039B
    b1ec:	a0 91 9c 03 	lds	r26, 0x039C
    b1f0:	b0 91 9d 03 	lds	r27, 0x039D
    b1f4:	00 97       	sbiw	r24, 0x00	; 0
    b1f6:	a1 05       	cpc	r26, r1
    b1f8:	b1 05       	cpc	r27, r1
    b1fa:	61 f0       	breq	.+24     	; 0xb214 <start_parking+0x586>
	{
	  ultra_front=5;
    b1fc:	85 e0       	ldi	r24, 0x05	; 5
    b1fe:	90 e0       	ldi	r25, 0x00	; 0
    b200:	a0 e0       	ldi	r26, 0x00	; 0
    b202:	b0 e0       	ldi	r27, 0x00	; 0
    b204:	80 93 9a 03 	sts	0x039A, r24
    b208:	90 93 9b 03 	sts	0x039B, r25
    b20c:	a0 93 9c 03 	sts	0x039C, r26
    b210:	b0 93 9d 03 	sts	0x039D, r27
   }
} while(Ultrasonic_front_Get_Distance()>15);
    b214:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    b218:	dc 01       	movw	r26, r24
    b21a:	cb 01       	movw	r24, r22
    b21c:	80 31       	cpi	r24, 0x10	; 16
    b21e:	91 05       	cpc	r25, r1
    b220:	a1 05       	cpc	r26, r1
    b222:	b1 05       	cpc	r27, r1
    b224:	08 f0       	brcs	.+2      	; 0xb228 <start_parking+0x59a>
    b226:	8d cf       	rjmp	.-230    	; 0xb142 <start_parking+0x4b4>
	      Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b228:	87 e0       	ldi	r24, 0x07	; 7
    b22a:	60 e0       	ldi	r22, 0x00	; 0
    b22c:	42 e0       	ldi	r20, 0x02	; 2
    b22e:	20 e0       	ldi	r18, 0x00	; 0
    b230:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    b234:	84 e0       	ldi	r24, 0x04	; 4
    b236:	63 e0       	ldi	r22, 0x03	; 3
    b238:	41 e0       	ldi	r20, 0x01	; 1
    b23a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	    CLR_BIT(TCCR3A,COM3A0);
    b23e:	ab e8       	ldi	r26, 0x8B	; 139
    b240:	b0 e0       	ldi	r27, 0x00	; 0
    b242:	eb e8       	ldi	r30, 0x8B	; 139
    b244:	f0 e0       	ldi	r31, 0x00	; 0
    b246:	80 81       	ld	r24, Z
    b248:	8f 7b       	andi	r24, 0xBF	; 191
    b24a:	8c 93       	st	X, r24
	    	    CLR_BIT(TCCR3A,COM3A1);
    b24c:	ab e8       	ldi	r26, 0x8B	; 139
    b24e:	b0 e0       	ldi	r27, 0x00	; 0
    b250:	eb e8       	ldi	r30, 0x8B	; 139
    b252:	f0 e0       	ldi	r31, 0x00	; 0
    b254:	80 81       	ld	r24, Z
    b256:	8f 77       	andi	r24, 0x7F	; 127
    b258:	8c 93       	st	X, r24
//..................................................................................................
backward_move();
    b25a:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>
left_half_move();
    b25e:	0e 94 1f 55 	call	0xaa3e	; 0xaa3e <left_half_move>
do {
	LCD_vidGotoxy(0,0);
    b262:	80 e0       	ldi	r24, 0x00	; 0
    b264:	60 e0       	ldi	r22, 0x00	; 0
    b266:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteString("back DISTANCE");
    b26a:	8c e7       	ldi	r24, 0x7C	; 124
    b26c:	91 e0       	ldi	r25, 0x01	; 1
    b26e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	ultra_back=Ultrasonic_back_Get_Distance();
    b272:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b276:	dc 01       	movw	r26, r24
    b278:	cb 01       	movw	r24, r22
    b27a:	80 93 92 03 	sts	0x0392, r24
    b27e:	90 93 93 03 	sts	0x0393, r25
    b282:	a0 93 94 03 	sts	0x0394, r26
    b286:	b0 93 95 03 	sts	0x0395, r27
	LCD_vidGotoxy(0,1);
    b28a:	80 e0       	ldi	r24, 0x00	; 0
    b28c:	61 e0       	ldi	r22, 0x01	; 1
    b28e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteString("       ");
    b292:	8a e8       	ldi	r24, 0x8A	; 138
    b294:	91 e0       	ldi	r25, 0x01	; 1
    b296:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	LCD_vidGotoxy(0,1);
    b29a:	80 e0       	ldi	r24, 0x00	; 0
    b29c:	61 e0       	ldi	r22, 0x01	; 1
    b29e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteUnSignedInteger(ultra_back);
    b2a2:	80 91 92 03 	lds	r24, 0x0392
    b2a6:	90 91 93 03 	lds	r25, 0x0393
    b2aa:	a0 91 94 03 	lds	r26, 0x0394
    b2ae:	b0 91 95 03 	lds	r27, 0x0395
    b2b2:	5c 01       	movw	r10, r24
    b2b4:	6d 01       	movw	r12, r26
    b2b6:	ee 24       	eor	r14, r14
    b2b8:	ff 24       	eor	r15, r15
    b2ba:	87 01       	movw	r16, r14
    b2bc:	2a 2d       	mov	r18, r10
    b2be:	3b 2d       	mov	r19, r11
    b2c0:	4c 2d       	mov	r20, r12
    b2c2:	5d 2d       	mov	r21, r13
    b2c4:	6e 2d       	mov	r22, r14
    b2c6:	7f 2d       	mov	r23, r15
    b2c8:	80 2f       	mov	r24, r16
    b2ca:	91 2f       	mov	r25, r17
    b2cc:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>


if(ultra_back>200)
    b2d0:	80 91 92 03 	lds	r24, 0x0392
    b2d4:	90 91 93 03 	lds	r25, 0x0393
    b2d8:	a0 91 94 03 	lds	r26, 0x0394
    b2dc:	b0 91 95 03 	lds	r27, 0x0395
    b2e0:	89 3c       	cpi	r24, 0xC9	; 201
    b2e2:	91 05       	cpc	r25, r1
    b2e4:	a1 05       	cpc	r26, r1
    b2e6:	b1 05       	cpc	r27, r1
    b2e8:	68 f0       	brcs	.+26     	; 0xb304 <start_parking+0x676>
	   	{
	      	ultra_back=200;
    b2ea:	88 ec       	ldi	r24, 0xC8	; 200
    b2ec:	90 e0       	ldi	r25, 0x00	; 0
    b2ee:	a0 e0       	ldi	r26, 0x00	; 0
    b2f0:	b0 e0       	ldi	r27, 0x00	; 0
    b2f2:	80 93 92 03 	sts	0x0392, r24
    b2f6:	90 93 93 03 	sts	0x0393, r25
    b2fa:	a0 93 94 03 	sts	0x0394, r26
    b2fe:	b0 93 95 03 	sts	0x0395, r27
    b302:	19 c0       	rjmp	.+50     	; 0xb336 <start_parking+0x6a8>
	      }
else if(ultra_back<6)
    b304:	80 91 92 03 	lds	r24, 0x0392
    b308:	90 91 93 03 	lds	r25, 0x0393
    b30c:	a0 91 94 03 	lds	r26, 0x0394
    b310:	b0 91 95 03 	lds	r27, 0x0395
    b314:	86 30       	cpi	r24, 0x06	; 6
    b316:	91 05       	cpc	r25, r1
    b318:	a1 05       	cpc	r26, r1
    b31a:	b1 05       	cpc	r27, r1
    b31c:	60 f4       	brcc	.+24     	; 0xb336 <start_parking+0x6a8>
	    {
	        	ultra_back=5;
    b31e:	85 e0       	ldi	r24, 0x05	; 5
    b320:	90 e0       	ldi	r25, 0x00	; 0
    b322:	a0 e0       	ldi	r26, 0x00	; 0
    b324:	b0 e0       	ldi	r27, 0x00	; 0
    b326:	80 93 92 03 	sts	0x0392, r24
    b32a:	90 93 93 03 	sts	0x0393, r25
    b32e:	a0 93 94 03 	sts	0x0394, r26
    b332:	b0 93 95 03 	sts	0x0395, r27
	   }

 } while(Ultrasonic_back_Get_Distance()>25);
    b336:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b33a:	dc 01       	movw	r26, r24
    b33c:	cb 01       	movw	r24, r22
    b33e:	8a 31       	cpi	r24, 0x1A	; 26
    b340:	91 05       	cpc	r25, r1
    b342:	a1 05       	cpc	r26, r1
    b344:	b1 05       	cpc	r27, r1
    b346:	08 f0       	brcs	.+2      	; 0xb34a <start_parking+0x6bc>
    b348:	8c cf       	rjmp	.-232    	; 0xb262 <start_parking+0x5d4>

Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b34a:	87 e0       	ldi	r24, 0x07	; 7
    b34c:	60 e0       	ldi	r22, 0x00	; 0
    b34e:	42 e0       	ldi	r20, 0x02	; 2
    b350:	20 e0       	ldi	r18, 0x00	; 0
    b352:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	  DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    b356:	84 e0       	ldi	r24, 0x04	; 4
    b358:	65 e0       	ldi	r22, 0x05	; 5
    b35a:	41 e0       	ldi	r20, 0x01	; 1
    b35c:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	   //TO DISCONNECT CHANNEL C
	    CLR_BIT(TCCR3A,COM3C0);
    b360:	ab e8       	ldi	r26, 0x8B	; 139
    b362:	b0 e0       	ldi	r27, 0x00	; 0
    b364:	eb e8       	ldi	r30, 0x8B	; 139
    b366:	f0 e0       	ldi	r31, 0x00	; 0
    b368:	80 81       	ld	r24, Z
    b36a:	8b 7f       	andi	r24, 0xFB	; 251
    b36c:	8c 93       	st	X, r24
	     CLR_BIT(TCCR3A,COM3C1);
    b36e:	ab e8       	ldi	r26, 0x8B	; 139
    b370:	b0 e0       	ldi	r27, 0x00	; 0
    b372:	eb e8       	ldi	r30, 0x8B	; 139
    b374:	f0 e0       	ldi	r31, 0x00	; 0
    b376:	80 81       	ld	r24, Z
    b378:	87 7f       	andi	r24, 0xF7	; 247
    b37a:	8c 93       	st	X, r24
	     right_half_move();
    b37c:	0e 94 63 53 	call	0xa6c6	; 0xa6c6 <right_half_move>
	     	      Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
	     	    	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
	     	    	    CLR_BIT(TCCR3A,COM3A0);
	     	    	    CLR_BIT(TCCR3A,COM3A1);
*/
}
    b380:	cf 91       	pop	r28
    b382:	df 91       	pop	r29
    b384:	1f 91       	pop	r17
    b386:	0f 91       	pop	r16
    b388:	ff 90       	pop	r15
    b38a:	ef 90       	pop	r14
    b38c:	df 90       	pop	r13
    b38e:	cf 90       	pop	r12
    b390:	bf 90       	pop	r11
    b392:	af 90       	pop	r10
    b394:	08 95       	ret

0000b396 <unparking>:
void unparking(void)
{
    b396:	af 92       	push	r10
    b398:	bf 92       	push	r11
    b39a:	cf 92       	push	r12
    b39c:	df 92       	push	r13
    b39e:	ef 92       	push	r14
    b3a0:	ff 92       	push	r15
    b3a2:	0f 93       	push	r16
    b3a4:	1f 93       	push	r17
    b3a6:	df 93       	push	r29
    b3a8:	cf 93       	push	r28
    b3aa:	cd b7       	in	r28, 0x3d	; 61
    b3ac:	de b7       	in	r29, 0x3e	; 62
	right_move();
    b3ae:	0e 94 cf 52 	call	0xa59e	; 0xa59e <right_move>
	backward_move();
    b3b2:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>
LCD_vidSendCommand(1);
    b3b6:	81 e0       	ldi	r24, 0x01	; 1
    b3b8:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	do {


	      LCD_vidGotoxy(0,0);
    b3bc:	80 e0       	ldi	r24, 0x00	; 0
    b3be:	60 e0       	ldi	r22, 0x00	; 0
    b3c0:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	     LCD_vidWriteString("back DISTANCE");
    b3c4:	8c e7       	ldi	r24, 0x7C	; 124
    b3c6:	91 e0       	ldi	r25, 0x01	; 1
    b3c8:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	     ultra_back=Ultrasonic_back_Get_Distance();
    b3cc:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b3d0:	dc 01       	movw	r26, r24
    b3d2:	cb 01       	movw	r24, r22
    b3d4:	80 93 92 03 	sts	0x0392, r24
    b3d8:	90 93 93 03 	sts	0x0393, r25
    b3dc:	a0 93 94 03 	sts	0x0394, r26
    b3e0:	b0 93 95 03 	sts	0x0395, r27
	     LCD_vidGotoxy(0,1);
    b3e4:	80 e0       	ldi	r24, 0x00	; 0
    b3e6:	61 e0       	ldi	r22, 0x01	; 1
    b3e8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	     LCD_vidWriteString("   ");
    b3ec:	81 ea       	ldi	r24, 0xA1	; 161
    b3ee:	91 e0       	ldi	r25, 0x01	; 1
    b3f0:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	     LCD_vidGotoxy(0,1);
    b3f4:	80 e0       	ldi	r24, 0x00	; 0
    b3f6:	61 e0       	ldi	r22, 0x01	; 1
    b3f8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	     LCD_vidWriteUnSignedInteger(ultra_back);
    b3fc:	80 91 92 03 	lds	r24, 0x0392
    b400:	90 91 93 03 	lds	r25, 0x0393
    b404:	a0 91 94 03 	lds	r26, 0x0394
    b408:	b0 91 95 03 	lds	r27, 0x0395
    b40c:	5c 01       	movw	r10, r24
    b40e:	6d 01       	movw	r12, r26
    b410:	ee 24       	eor	r14, r14
    b412:	ff 24       	eor	r15, r15
    b414:	87 01       	movw	r16, r14
    b416:	2a 2d       	mov	r18, r10
    b418:	3b 2d       	mov	r19, r11
    b41a:	4c 2d       	mov	r20, r12
    b41c:	5d 2d       	mov	r21, r13
    b41e:	6e 2d       	mov	r22, r14
    b420:	7f 2d       	mov	r23, r15
    b422:	80 2f       	mov	r24, r16
    b424:	91 2f       	mov	r25, r17
    b426:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>

	if(ultra_back>200)
    b42a:	80 91 92 03 	lds	r24, 0x0392
    b42e:	90 91 93 03 	lds	r25, 0x0393
    b432:	a0 91 94 03 	lds	r26, 0x0394
    b436:	b0 91 95 03 	lds	r27, 0x0395
    b43a:	89 3c       	cpi	r24, 0xC9	; 201
    b43c:	91 05       	cpc	r25, r1
    b43e:	a1 05       	cpc	r26, r1
    b440:	b1 05       	cpc	r27, r1
    b442:	68 f0       	brcs	.+26     	; 0xb45e <unparking+0xc8>
		   	{
		      	ultra_back=200;
    b444:	88 ec       	ldi	r24, 0xC8	; 200
    b446:	90 e0       	ldi	r25, 0x00	; 0
    b448:	a0 e0       	ldi	r26, 0x00	; 0
    b44a:	b0 e0       	ldi	r27, 0x00	; 0
    b44c:	80 93 92 03 	sts	0x0392, r24
    b450:	90 93 93 03 	sts	0x0393, r25
    b454:	a0 93 94 03 	sts	0x0394, r26
    b458:	b0 93 95 03 	sts	0x0395, r27
    b45c:	19 c0       	rjmp	.+50     	; 0xb490 <unparking+0xfa>
		      }
	else if(ultra_back<6)
    b45e:	80 91 92 03 	lds	r24, 0x0392
    b462:	90 91 93 03 	lds	r25, 0x0393
    b466:	a0 91 94 03 	lds	r26, 0x0394
    b46a:	b0 91 95 03 	lds	r27, 0x0395
    b46e:	86 30       	cpi	r24, 0x06	; 6
    b470:	91 05       	cpc	r25, r1
    b472:	a1 05       	cpc	r26, r1
    b474:	b1 05       	cpc	r27, r1
    b476:	60 f4       	brcc	.+24     	; 0xb490 <unparking+0xfa>
		    {
		        	ultra_back=5;
    b478:	85 e0       	ldi	r24, 0x05	; 5
    b47a:	90 e0       	ldi	r25, 0x00	; 0
    b47c:	a0 e0       	ldi	r26, 0x00	; 0
    b47e:	b0 e0       	ldi	r27, 0x00	; 0
    b480:	80 93 92 03 	sts	0x0392, r24
    b484:	90 93 93 03 	sts	0x0393, r25
    b488:	a0 93 94 03 	sts	0x0394, r26
    b48c:	b0 93 95 03 	sts	0x0395, r27
		   }


	 } while(Ultrasonic_back_Get_Distance()>7);
    b490:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b494:	dc 01       	movw	r26, r24
    b496:	cb 01       	movw	r24, r22
    b498:	88 30       	cpi	r24, 0x08	; 8
    b49a:	91 05       	cpc	r25, r1
    b49c:	a1 05       	cpc	r26, r1
    b49e:	b1 05       	cpc	r27, r1
    b4a0:	08 f0       	brcs	.+2      	; 0xb4a4 <unparking+0x10e>
    b4a2:	8c cf       	rjmp	.-232    	; 0xb3bc <unparking+0x26>
		//....................................
		Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b4a4:	87 e0       	ldi	r24, 0x07	; 7
    b4a6:	60 e0       	ldi	r22, 0x00	; 0
    b4a8:	42 e0       	ldi	r20, 0x02	; 2
    b4aa:	20 e0       	ldi	r18, 0x00	; 0
    b4ac:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
		DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    b4b0:	84 e0       	ldi	r24, 0x04	; 4
    b4b2:	65 e0       	ldi	r22, 0x05	; 5
    b4b4:	41 e0       	ldi	r20, 0x01	; 1
    b4b6:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    //TO DISCONNECT CHANNEL C
	    CLR_BIT(TCCR3A,COM3C0);
    b4ba:	ab e8       	ldi	r26, 0x8B	; 139
    b4bc:	b0 e0       	ldi	r27, 0x00	; 0
    b4be:	eb e8       	ldi	r30, 0x8B	; 139
    b4c0:	f0 e0       	ldi	r31, 0x00	; 0
    b4c2:	80 81       	ld	r24, Z
    b4c4:	8b 7f       	andi	r24, 0xFB	; 251
    b4c6:	8c 93       	st	X, r24
	    CLR_BIT(TCCR3A,COM3C1);
    b4c8:	ab e8       	ldi	r26, 0x8B	; 139
    b4ca:	b0 e0       	ldi	r27, 0x00	; 0
    b4cc:	eb e8       	ldi	r30, 0x8B	; 139
    b4ce:	f0 e0       	ldi	r31, 0x00	; 0
    b4d0:	80 81       	ld	r24, Z
    b4d2:	87 7f       	andi	r24, 0xF7	; 247
    b4d4:	8c 93       	st	X, r24
//...............................................................
left_move();
    b4d6:	0e 94 8b 54 	call	0xa916	; 0xa916 <left_move>
forward_move();
    b4da:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
LCD_vidSendCommand(1);
    b4de:	81 e0       	ldi	r24, 0x01	; 1
    b4e0:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

do{

		     LCD_vidGotoxy(0,0);
    b4e4:	80 e0       	ldi	r24, 0x00	; 0
    b4e6:	60 e0       	ldi	r22, 0x00	; 0
    b4e8:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		     LCD_vidWriteString("front DISTANCE");
    b4ec:	82 e9       	ldi	r24, 0x92	; 146
    b4ee:	91 e0       	ldi	r25, 0x01	; 1
    b4f0:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
		     ultra_front=Ultrasonic_front_Get_Distance();
    b4f4:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    b4f8:	dc 01       	movw	r26, r24
    b4fa:	cb 01       	movw	r24, r22
    b4fc:	80 93 9a 03 	sts	0x039A, r24
    b500:	90 93 9b 03 	sts	0x039B, r25
    b504:	a0 93 9c 03 	sts	0x039C, r26
    b508:	b0 93 9d 03 	sts	0x039D, r27
		     LCD_vidGotoxy(0,1);
    b50c:	80 e0       	ldi	r24, 0x00	; 0
    b50e:	61 e0       	ldi	r22, 0x01	; 1
    b510:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		     LCD_vidWriteString("   ");
    b514:	81 ea       	ldi	r24, 0xA1	; 161
    b516:	91 e0       	ldi	r25, 0x01	; 1
    b518:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
		     LCD_vidGotoxy(0,1);
    b51c:	80 e0       	ldi	r24, 0x00	; 0
    b51e:	61 e0       	ldi	r22, 0x01	; 1
    b520:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
		     LCD_vidWriteUnSignedInteger(ultra_front);
    b524:	80 91 9a 03 	lds	r24, 0x039A
    b528:	90 91 9b 03 	lds	r25, 0x039B
    b52c:	a0 91 9c 03 	lds	r26, 0x039C
    b530:	b0 91 9d 03 	lds	r27, 0x039D
    b534:	5c 01       	movw	r10, r24
    b536:	6d 01       	movw	r12, r26
    b538:	ee 24       	eor	r14, r14
    b53a:	ff 24       	eor	r15, r15
    b53c:	87 01       	movw	r16, r14
    b53e:	2a 2d       	mov	r18, r10
    b540:	3b 2d       	mov	r19, r11
    b542:	4c 2d       	mov	r20, r12
    b544:	5d 2d       	mov	r21, r13
    b546:	6e 2d       	mov	r22, r14
    b548:	7f 2d       	mov	r23, r15
    b54a:	80 2f       	mov	r24, r16
    b54c:	91 2f       	mov	r25, r17
    b54e:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
		if(ultra_front>200)
    b552:	80 91 9a 03 	lds	r24, 0x039A
    b556:	90 91 9b 03 	lds	r25, 0x039B
    b55a:	a0 91 9c 03 	lds	r26, 0x039C
    b55e:	b0 91 9d 03 	lds	r27, 0x039D
    b562:	89 3c       	cpi	r24, 0xC9	; 201
    b564:	91 05       	cpc	r25, r1
    b566:	a1 05       	cpc	r26, r1
    b568:	b1 05       	cpc	r27, r1
    b56a:	68 f0       	brcs	.+26     	; 0xb586 <unparking+0x1f0>
			   	{
			      	ultra_front=200;
    b56c:	88 ec       	ldi	r24, 0xC8	; 200
    b56e:	90 e0       	ldi	r25, 0x00	; 0
    b570:	a0 e0       	ldi	r26, 0x00	; 0
    b572:	b0 e0       	ldi	r27, 0x00	; 0
    b574:	80 93 9a 03 	sts	0x039A, r24
    b578:	90 93 9b 03 	sts	0x039B, r25
    b57c:	a0 93 9c 03 	sts	0x039C, r26
    b580:	b0 93 9d 03 	sts	0x039D, r27
    b584:	19 c0       	rjmp	.+50     	; 0xb5b8 <unparking+0x222>
			      }
		else if(ultra_front<6)
    b586:	80 91 9a 03 	lds	r24, 0x039A
    b58a:	90 91 9b 03 	lds	r25, 0x039B
    b58e:	a0 91 9c 03 	lds	r26, 0x039C
    b592:	b0 91 9d 03 	lds	r27, 0x039D
    b596:	86 30       	cpi	r24, 0x06	; 6
    b598:	91 05       	cpc	r25, r1
    b59a:	a1 05       	cpc	r26, r1
    b59c:	b1 05       	cpc	r27, r1
    b59e:	60 f4       	brcc	.+24     	; 0xb5b8 <unparking+0x222>
			    {
			        	ultra_front=5;
    b5a0:	85 e0       	ldi	r24, 0x05	; 5
    b5a2:	90 e0       	ldi	r25, 0x00	; 0
    b5a4:	a0 e0       	ldi	r26, 0x00	; 0
    b5a6:	b0 e0       	ldi	r27, 0x00	; 0
    b5a8:	80 93 9a 03 	sts	0x039A, r24
    b5ac:	90 93 9b 03 	sts	0x039B, r25
    b5b0:	a0 93 9c 03 	sts	0x039C, r26
    b5b4:	b0 93 9d 03 	sts	0x039D, r27
			   }




} while(Ultrasonic_front_Get_Distance()>7);
    b5b8:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <Ultrasonic_front_Get_Distance>
    b5bc:	dc 01       	movw	r26, r24
    b5be:	cb 01       	movw	r24, r22
    b5c0:	88 30       	cpi	r24, 0x08	; 8
    b5c2:	91 05       	cpc	r25, r1
    b5c4:	a1 05       	cpc	r26, r1
    b5c6:	b1 05       	cpc	r27, r1
    b5c8:	08 f0       	brcs	.+2      	; 0xb5cc <unparking+0x236>
    b5ca:	8c cf       	rjmp	.-232    	; 0xb4e4 <unparking+0x14e>
	      Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b5cc:	87 e0       	ldi	r24, 0x07	; 7
    b5ce:	60 e0       	ldi	r22, 0x00	; 0
    b5d0:	42 e0       	ldi	r20, 0x02	; 2
    b5d2:	20 e0       	ldi	r18, 0x00	; 0
    b5d4:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    b5d8:	84 e0       	ldi	r24, 0x04	; 4
    b5da:	63 e0       	ldi	r22, 0x03	; 3
    b5dc:	41 e0       	ldi	r20, 0x01	; 1
    b5de:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	    CLR_BIT(TCCR3A,COM3A0);
    b5e2:	ab e8       	ldi	r26, 0x8B	; 139
    b5e4:	b0 e0       	ldi	r27, 0x00	; 0
    b5e6:	eb e8       	ldi	r30, 0x8B	; 139
    b5e8:	f0 e0       	ldi	r31, 0x00	; 0
    b5ea:	80 81       	ld	r24, Z
    b5ec:	8f 7b       	andi	r24, 0xBF	; 191
    b5ee:	8c 93       	st	X, r24
	    	    CLR_BIT(TCCR3A,COM3A1);
    b5f0:	ab e8       	ldi	r26, 0x8B	; 139
    b5f2:	b0 e0       	ldi	r27, 0x00	; 0
    b5f4:	eb e8       	ldi	r30, 0x8B	; 139
    b5f6:	f0 e0       	ldi	r31, 0x00	; 0
    b5f8:	80 81       	ld	r24, Z
    b5fa:	8f 77       	andi	r24, 0x7F	; 127
    b5fc:	8c 93       	st	X, r24
//..........................................................................................
	    	    right_move();
    b5fe:	0e 94 cf 52 	call	0xa59e	; 0xa59e <right_move>
	    	    	backward_move();
    b602:	0e 94 9f 52 	call	0xa53e	; 0xa53e <backward_move>

	    	    	do {
	    	    		 LCD_vidGotoxy(0,0);
    b606:	80 e0       	ldi	r24, 0x00	; 0
    b608:	60 e0       	ldi	r22, 0x00	; 0
    b60a:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	    	     LCD_vidWriteString("back DISTANCE");
    b60e:	8c e7       	ldi	r24, 0x7C	; 124
    b610:	91 e0       	ldi	r25, 0x01	; 1
    b612:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	    	    		 ultra_back=Ultrasonic_back_Get_Distance();
    b616:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b61a:	dc 01       	movw	r26, r24
    b61c:	cb 01       	movw	r24, r22
    b61e:	80 93 92 03 	sts	0x0392, r24
    b622:	90 93 93 03 	sts	0x0393, r25
    b626:	a0 93 94 03 	sts	0x0394, r26
    b62a:	b0 93 95 03 	sts	0x0395, r27
	    	    		 LCD_vidGotoxy(0,1);
    b62e:	80 e0       	ldi	r24, 0x00	; 0
    b630:	61 e0       	ldi	r22, 0x01	; 1
    b632:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	    		 LCD_vidWriteString("   ");
    b636:	81 ea       	ldi	r24, 0xA1	; 161
    b638:	91 e0       	ldi	r25, 0x01	; 1
    b63a:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
	    	    		 LCD_vidGotoxy(0,1);
    b63e:	80 e0       	ldi	r24, 0x00	; 0
    b640:	61 e0       	ldi	r22, 0x01	; 1
    b642:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	    		 LCD_vidWriteUnSignedInteger(ultra_back);
    b646:	80 91 92 03 	lds	r24, 0x0392
    b64a:	90 91 93 03 	lds	r25, 0x0393
    b64e:	a0 91 94 03 	lds	r26, 0x0394
    b652:	b0 91 95 03 	lds	r27, 0x0395
    b656:	5c 01       	movw	r10, r24
    b658:	6d 01       	movw	r12, r26
    b65a:	ee 24       	eor	r14, r14
    b65c:	ff 24       	eor	r15, r15
    b65e:	87 01       	movw	r16, r14
    b660:	2a 2d       	mov	r18, r10
    b662:	3b 2d       	mov	r19, r11
    b664:	4c 2d       	mov	r20, r12
    b666:	5d 2d       	mov	r21, r13
    b668:	6e 2d       	mov	r22, r14
    b66a:	7f 2d       	mov	r23, r15
    b66c:	80 2f       	mov	r24, r16
    b66e:	91 2f       	mov	r25, r17
    b670:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>


	    	    	if(ultra_back>200)
    b674:	80 91 92 03 	lds	r24, 0x0392
    b678:	90 91 93 03 	lds	r25, 0x0393
    b67c:	a0 91 94 03 	lds	r26, 0x0394
    b680:	b0 91 95 03 	lds	r27, 0x0395
    b684:	89 3c       	cpi	r24, 0xC9	; 201
    b686:	91 05       	cpc	r25, r1
    b688:	a1 05       	cpc	r26, r1
    b68a:	b1 05       	cpc	r27, r1
    b68c:	68 f0       	brcs	.+26     	; 0xb6a8 <unparking+0x312>
	    	    		   	{
	    	    		      	ultra_back=200;
    b68e:	88 ec       	ldi	r24, 0xC8	; 200
    b690:	90 e0       	ldi	r25, 0x00	; 0
    b692:	a0 e0       	ldi	r26, 0x00	; 0
    b694:	b0 e0       	ldi	r27, 0x00	; 0
    b696:	80 93 92 03 	sts	0x0392, r24
    b69a:	90 93 93 03 	sts	0x0393, r25
    b69e:	a0 93 94 03 	sts	0x0394, r26
    b6a2:	b0 93 95 03 	sts	0x0395, r27
    b6a6:	19 c0       	rjmp	.+50     	; 0xb6da <unparking+0x344>
	    	    		      }
	    	    	else if(ultra_back<6)
    b6a8:	80 91 92 03 	lds	r24, 0x0392
    b6ac:	90 91 93 03 	lds	r25, 0x0393
    b6b0:	a0 91 94 03 	lds	r26, 0x0394
    b6b4:	b0 91 95 03 	lds	r27, 0x0395
    b6b8:	86 30       	cpi	r24, 0x06	; 6
    b6ba:	91 05       	cpc	r25, r1
    b6bc:	a1 05       	cpc	r26, r1
    b6be:	b1 05       	cpc	r27, r1
    b6c0:	60 f4       	brcc	.+24     	; 0xb6da <unparking+0x344>
	    	    		    {
	    	    		        	ultra_back=5;
    b6c2:	85 e0       	ldi	r24, 0x05	; 5
    b6c4:	90 e0       	ldi	r25, 0x00	; 0
    b6c6:	a0 e0       	ldi	r26, 0x00	; 0
    b6c8:	b0 e0       	ldi	r27, 0x00	; 0
    b6ca:	80 93 92 03 	sts	0x0392, r24
    b6ce:	90 93 93 03 	sts	0x0393, r25
    b6d2:	a0 93 94 03 	sts	0x0394, r26
    b6d6:	b0 93 95 03 	sts	0x0395, r27
	    	    		   }

	    	    	 } while(Ultrasonic_back_Get_Distance()>7);
    b6da:	0e 94 78 28 	call	0x50f0	; 0x50f0 <Ultrasonic_back_Get_Distance>
    b6de:	dc 01       	movw	r26, r24
    b6e0:	cb 01       	movw	r24, r22
    b6e2:	88 30       	cpi	r24, 0x08	; 8
    b6e4:	91 05       	cpc	r25, r1
    b6e6:	a1 05       	cpc	r26, r1
    b6e8:	b1 05       	cpc	r27, r1
    b6ea:	08 f0       	brcs	.+2      	; 0xb6ee <unparking+0x358>
    b6ec:	8c cf       	rjmp	.-232    	; 0xb606 <unparking+0x270>
	    	    		//....................................
	    	    		Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b6ee:	87 e0       	ldi	r24, 0x07	; 7
    b6f0:	60 e0       	ldi	r22, 0x00	; 0
    b6f2:	42 e0       	ldi	r20, 0x02	; 2
    b6f4:	20 e0       	ldi	r18, 0x00	; 0
    b6f6:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	    		DIO_void_Set_Pin_Value(car_control, backword,HIGH);
    b6fa:	84 e0       	ldi	r24, 0x04	; 4
    b6fc:	65 e0       	ldi	r22, 0x05	; 5
    b6fe:	41 e0       	ldi	r20, 0x01	; 1
    b700:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	    	    //TO DISCONNECT CHANNEL C
	    	    	    CLR_BIT(TCCR3A,COM3C0);
    b704:	ab e8       	ldi	r26, 0x8B	; 139
    b706:	b0 e0       	ldi	r27, 0x00	; 0
    b708:	eb e8       	ldi	r30, 0x8B	; 139
    b70a:	f0 e0       	ldi	r31, 0x00	; 0
    b70c:	80 81       	ld	r24, Z
    b70e:	8b 7f       	andi	r24, 0xFB	; 251
    b710:	8c 93       	st	X, r24
	    	    	    CLR_BIT(TCCR3A,COM3C1);
    b712:	ab e8       	ldi	r26, 0x8B	; 139
    b714:	b0 e0       	ldi	r27, 0x00	; 0
    b716:	eb e8       	ldi	r30, 0x8B	; 139
    b718:	f0 e0       	ldi	r31, 0x00	; 0
    b71a:	80 81       	ld	r24, Z
    b71c:	87 7f       	andi	r24, 0xF7	; 247
    b71e:	8c 93       	st	X, r24
//...........................................................
	    	    	    left_move();
    b720:	0e 94 8b 54 	call	0xa916	; 0xa916 <left_move>
	    	    	    forward_move();
    b724:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>

	    	    	    do{

	    	    	    	LCD_vidGotoxy(0,0);
    b728:	80 e0       	ldi	r24, 0x00	; 0
    b72a:	60 e0       	ldi	r22, 0x00	; 0
    b72c:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	    	    	LCD_vidWriteString("back2 DISTANCE");
    b730:	85 ea       	ldi	r24, 0xA5	; 165
    b732:	91 e0       	ldi	r25, 0x01	; 1
    b734:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>

	    	    	    	ultra_back2=Ultrasonic_back2_Get_Distance();
    b738:	0e 94 99 29 	call	0x5332	; 0x5332 <Ultrasonic_back2_Get_Distance>
    b73c:	dc 01       	movw	r26, r24
    b73e:	cb 01       	movw	r24, r22
    b740:	80 93 96 03 	sts	0x0396, r24
    b744:	90 93 97 03 	sts	0x0397, r25
    b748:	a0 93 98 03 	sts	0x0398, r26
    b74c:	b0 93 99 03 	sts	0x0399, r27
	    	    	    	LCD_vidGotoxy(0,1);
    b750:	80 e0       	ldi	r24, 0x00	; 0
    b752:	61 e0       	ldi	r22, 0x01	; 1
    b754:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	    	    	LCD_vidWriteUnSignedInteger(ultra_back2);
    b758:	80 91 96 03 	lds	r24, 0x0396
    b75c:	90 91 97 03 	lds	r25, 0x0397
    b760:	a0 91 98 03 	lds	r26, 0x0398
    b764:	b0 91 99 03 	lds	r27, 0x0399
    b768:	5c 01       	movw	r10, r24
    b76a:	6d 01       	movw	r12, r26
    b76c:	ee 24       	eor	r14, r14
    b76e:	ff 24       	eor	r15, r15
    b770:	87 01       	movw	r16, r14
    b772:	2a 2d       	mov	r18, r10
    b774:	3b 2d       	mov	r19, r11
    b776:	4c 2d       	mov	r20, r12
    b778:	5d 2d       	mov	r21, r13
    b77a:	6e 2d       	mov	r22, r14
    b77c:	7f 2d       	mov	r23, r15
    b77e:	80 2f       	mov	r24, r16
    b780:	91 2f       	mov	r25, r17
    b782:	0e 94 1b 34 	call	0x6836	; 0x6836 <LCD_vidWriteUnSignedInteger>
	    	    	    	if(ultra_back2>200)
    b786:	80 91 96 03 	lds	r24, 0x0396
    b78a:	90 91 97 03 	lds	r25, 0x0397
    b78e:	a0 91 98 03 	lds	r26, 0x0398
    b792:	b0 91 99 03 	lds	r27, 0x0399
    b796:	89 3c       	cpi	r24, 0xC9	; 201
    b798:	91 05       	cpc	r25, r1
    b79a:	a1 05       	cpc	r26, r1
    b79c:	b1 05       	cpc	r27, r1
    b79e:	68 f0       	brcs	.+26     	; 0xb7ba <unparking+0x424>
	    	    	    	 {
	    	    	    	  ultra_back2=200;
    b7a0:	88 ec       	ldi	r24, 0xC8	; 200
    b7a2:	90 e0       	ldi	r25, 0x00	; 0
    b7a4:	a0 e0       	ldi	r26, 0x00	; 0
    b7a6:	b0 e0       	ldi	r27, 0x00	; 0
    b7a8:	80 93 96 03 	sts	0x0396, r24
    b7ac:	90 93 97 03 	sts	0x0397, r25
    b7b0:	a0 93 98 03 	sts	0x0398, r26
    b7b4:	b0 93 99 03 	sts	0x0399, r27
    b7b8:	18 c0       	rjmp	.+48     	; 0xb7ea <unparking+0x454>
	    	    	    	}
	    	    	    	else if(ultra_back2)
    b7ba:	80 91 96 03 	lds	r24, 0x0396
    b7be:	90 91 97 03 	lds	r25, 0x0397
    b7c2:	a0 91 98 03 	lds	r26, 0x0398
    b7c6:	b0 91 99 03 	lds	r27, 0x0399
    b7ca:	00 97       	sbiw	r24, 0x00	; 0
    b7cc:	a1 05       	cpc	r26, r1
    b7ce:	b1 05       	cpc	r27, r1
    b7d0:	61 f0       	breq	.+24     	; 0xb7ea <unparking+0x454>
	    	    	    	{
	    	    	    	  ultra_back2=5;
    b7d2:	85 e0       	ldi	r24, 0x05	; 5
    b7d4:	90 e0       	ldi	r25, 0x00	; 0
    b7d6:	a0 e0       	ldi	r26, 0x00	; 0
    b7d8:	b0 e0       	ldi	r27, 0x00	; 0
    b7da:	80 93 96 03 	sts	0x0396, r24
    b7de:	90 93 97 03 	sts	0x0397, r25
    b7e2:	a0 93 98 03 	sts	0x0398, r26
    b7e6:	b0 93 99 03 	sts	0x0399, r27
	    	    	       }
	    	    	    } while(Ultrasonic_back2_Get_Distance()<80);
    b7ea:	0e 94 99 29 	call	0x5332	; 0x5332 <Ultrasonic_back2_Get_Distance>
    b7ee:	dc 01       	movw	r26, r24
    b7f0:	cb 01       	movw	r24, r22
    b7f2:	80 35       	cpi	r24, 0x50	; 80
    b7f4:	91 05       	cpc	r25, r1
    b7f6:	a1 05       	cpc	r26, r1
    b7f8:	b1 05       	cpc	r27, r1
    b7fa:	08 f4       	brcc	.+2      	; 0xb7fe <unparking+0x468>
    b7fc:	95 cf       	rjmp	.-214    	; 0xb728 <unparking+0x392>
	    	    	    	      Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b7fe:	87 e0       	ldi	r24, 0x07	; 7
    b800:	60 e0       	ldi	r22, 0x00	; 0
    b802:	42 e0       	ldi	r20, 0x02	; 2
    b804:	20 e0       	ldi	r18, 0x00	; 0
    b806:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	    	    	    	    DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    b80a:	84 e0       	ldi	r24, 0x04	; 4
    b80c:	63 e0       	ldi	r22, 0x03	; 3
    b80e:	41 e0       	ldi	r20, 0x01	; 1
    b810:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	    	    	    	    CLR_BIT(TCCR3A,COM3A0);
    b814:	ab e8       	ldi	r26, 0x8B	; 139
    b816:	b0 e0       	ldi	r27, 0x00	; 0
    b818:	eb e8       	ldi	r30, 0x8B	; 139
    b81a:	f0 e0       	ldi	r31, 0x00	; 0
    b81c:	80 81       	ld	r24, Z
    b81e:	8f 7b       	andi	r24, 0xBF	; 191
    b820:	8c 93       	st	X, r24
	    	    	    	    	    CLR_BIT(TCCR3A,COM3A1);
    b822:	ab e8       	ldi	r26, 0x8B	; 139
    b824:	b0 e0       	ldi	r27, 0x00	; 0
    b826:	eb e8       	ldi	r30, 0x8B	; 139
    b828:	f0 e0       	ldi	r31, 0x00	; 0
    b82a:	80 81       	ld	r24, Z
    b82c:	8f 77       	andi	r24, 0x7F	; 127
    b82e:	8c 93       	st	X, r24

//..........................................................
right_QUARTER_move();
    b830:	0e 94 f7 53 	call	0xa7ee	; 0xa7ee <right_QUARTER_move>
	    	    	     forward_move();
    b834:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
	    	    	     LCD_vidSendCommand(1);
    b838:	81 e0       	ldi	r24, 0x01	; 1
    b83a:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	    	    	     CAR_Length_Check4();
    b83e:	0e 94 d2 50 	call	0xa1a4	; 0xa1a4 <CAR_Length_Check4>
	    	     Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b842:	87 e0       	ldi	r24, 0x07	; 7
    b844:	60 e0       	ldi	r22, 0x00	; 0
    b846:	42 e0       	ldi	r20, 0x02	; 2
    b848:	20 e0       	ldi	r18, 0x00	; 0
    b84a:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	   DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    b84e:	84 e0       	ldi	r24, 0x04	; 4
    b850:	63 e0       	ldi	r22, 0x03	; 3
    b852:	41 e0       	ldi	r20, 0x01	; 1
    b854:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	  CLR_BIT(TCCR3A,COM3A0);
    b858:	ab e8       	ldi	r26, 0x8B	; 139
    b85a:	b0 e0       	ldi	r27, 0x00	; 0
    b85c:	eb e8       	ldi	r30, 0x8B	; 139
    b85e:	f0 e0       	ldi	r31, 0x00	; 0
    b860:	80 81       	ld	r24, Z
    b862:	8f 7b       	andi	r24, 0xBF	; 191
    b864:	8c 93       	st	X, r24
	    	  CLR_BIT(TCCR3A,COM3A1);
    b866:	ab e8       	ldi	r26, 0x8B	; 139
    b868:	b0 e0       	ldi	r27, 0x00	; 0
    b86a:	eb e8       	ldi	r30, 0x8B	; 139
    b86c:	f0 e0       	ldi	r31, 0x00	; 0
    b86e:	80 81       	ld	r24, Z
    b870:	8f 77       	andi	r24, 0x7F	; 127
    b872:	8c 93       	st	X, r24
//...............................................

	    	  left_QUARTER_move();
    b874:	0e 94 b3 55 	call	0xab66	; 0xab66 <left_QUARTER_move>
	    	  	    	    	     forward_move();
    b878:	0e 94 6f 52 	call	0xa4de	; 0xa4de <forward_move>
	    	  	    	    	     LCD_vidSendCommand(1);
    b87c:	81 e0       	ldi	r24, 0x01	; 1
    b87e:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	    	  	    	    	     CAR_Length_Check4();
    b882:	0e 94 d2 50 	call	0xa1a4	; 0xa1a4 <CAR_Length_Check4>
	    	  	    	     Timer3_Init(timer3_Fast_PWM_10_bit,timer3_stop,Non_inverting_clr_oc0_oncompare_set_on_bottom_3,disconnected_channel_3);
    b886:	87 e0       	ldi	r24, 0x07	; 7
    b888:	60 e0       	ldi	r22, 0x00	; 0
    b88a:	42 e0       	ldi	r20, 0x02	; 2
    b88c:	20 e0       	ldi	r18, 0x00	; 0
    b88e:	0e 94 78 14 	call	0x28f0	; 0x28f0 <Timer3_Init>
	    	  	    	   DIO_void_Set_Pin_Value(car_control,forward,HIGH);
    b892:	84 e0       	ldi	r24, 0x04	; 4
    b894:	63 e0       	ldi	r22, 0x03	; 3
    b896:	41 e0       	ldi	r20, 0x01	; 1
    b898:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
	    	  	    	  CLR_BIT(TCCR3A,COM3A0);
    b89c:	ab e8       	ldi	r26, 0x8B	; 139
    b89e:	b0 e0       	ldi	r27, 0x00	; 0
    b8a0:	eb e8       	ldi	r30, 0x8B	; 139
    b8a2:	f0 e0       	ldi	r31, 0x00	; 0
    b8a4:	80 81       	ld	r24, Z
    b8a6:	8f 7b       	andi	r24, 0xBF	; 191
    b8a8:	8c 93       	st	X, r24
	    	  	    	  CLR_BIT(TCCR3A,COM3A1);
    b8aa:	ab e8       	ldi	r26, 0x8B	; 139
    b8ac:	b0 e0       	ldi	r27, 0x00	; 0
    b8ae:	eb e8       	ldi	r30, 0x8B	; 139
    b8b0:	f0 e0       	ldi	r31, 0x00	; 0
    b8b2:	80 81       	ld	r24, Z
    b8b4:	8f 77       	andi	r24, 0x7F	; 127
    b8b6:	8c 93       	st	X, r24
	    	  //...............................................
    LCD_vidSendCommand(1);
    b8b8:	81 e0       	ldi	r24, 0x01	; 1
    b8ba:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	    	  	    	  LCD_vidGotoxy(0,1);
    b8be:	80 e0       	ldi	r24, 0x00	; 0
    b8c0:	61 e0       	ldi	r22, 0x01	; 1
    b8c2:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    	  	          LCD_vidWriteString((uint8*)"unpark is done");
    b8c6:	84 eb       	ldi	r24, 0xB4	; 180
    b8c8:	91 e0       	ldi	r25, 0x01	; 1
    b8ca:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
}
    b8ce:	cf 91       	pop	r28
    b8d0:	df 91       	pop	r29
    b8d2:	1f 91       	pop	r17
    b8d4:	0f 91       	pop	r16
    b8d6:	ff 90       	pop	r15
    b8d8:	ef 90       	pop	r14
    b8da:	df 90       	pop	r13
    b8dc:	cf 90       	pop	r12
    b8de:	bf 90       	pop	r11
    b8e0:	af 90       	pop	r10
    b8e2:	08 95       	ret

0000b8e4 <__vector_16>:
ISR(TIMER0_OVF_vect)
{
    b8e4:	1f 92       	push	r1
    b8e6:	0f 92       	push	r0
    b8e8:	0f b6       	in	r0, 0x3f	; 63
    b8ea:	0f 92       	push	r0
    b8ec:	11 24       	eor	r1, r1
    b8ee:	8f 93       	push	r24
    b8f0:	9f 93       	push	r25
    b8f2:	df 93       	push	r29
    b8f4:	cf 93       	push	r28
    b8f6:	cd b7       	in	r28, 0x3d	; 61
    b8f8:	de b7       	in	r29, 0x3e	; 62

if(flag_check==0)
    b8fa:	80 91 a2 03 	lds	r24, 0x03A2
    b8fe:	88 23       	and	r24, r24
    b900:	49 f4       	brne	.+18     	; 0xb914 <__vector_16+0x30>
{
    	count_right_front++;
    b902:	80 91 84 03 	lds	r24, 0x0384
    b906:	90 91 85 03 	lds	r25, 0x0385
    b90a:	01 96       	adiw	r24, 0x01	; 1
    b90c:	90 93 85 03 	sts	0x0385, r25
    b910:	80 93 84 03 	sts	0x0384, r24
}

  if(flag_check==2)
    b914:	80 91 a2 03 	lds	r24, 0x03A2
    b918:	82 30       	cpi	r24, 0x02	; 2
    b91a:	49 f4       	brne	.+18     	; 0xb92e <__vector_16+0x4a>
 {
     	count_right_back++;
    b91c:	80 91 8a 03 	lds	r24, 0x038A
    b920:	90 91 8b 03 	lds	r25, 0x038B
    b924:	01 96       	adiw	r24, 0x01	; 1
    b926:	90 93 8b 03 	sts	0x038B, r25
    b92a:	80 93 8a 03 	sts	0x038A, r24
 }
 if(flag_check==3)
    b92e:	80 91 a2 03 	lds	r24, 0x03A2
    b932:	83 30       	cpi	r24, 0x03	; 3
    b934:	49 f4       	brne	.+18     	; 0xb948 <__vector_16+0x64>
 {
 	count_right_back2++;
    b936:	80 91 8c 03 	lds	r24, 0x038C
    b93a:	90 91 8d 03 	lds	r25, 0x038D
    b93e:	01 96       	adiw	r24, 0x01	; 1
    b940:	90 93 8d 03 	sts	0x038D, r25
    b944:	80 93 8c 03 	sts	0x038C, r24
 }


}
    b948:	cf 91       	pop	r28
    b94a:	df 91       	pop	r29
    b94c:	9f 91       	pop	r25
    b94e:	8f 91       	pop	r24
    b950:	0f 90       	pop	r0
    b952:	0f be       	out	0x3f, r0	; 63
    b954:	0f 90       	pop	r0
    b956:	1f 90       	pop	r1
    b958:	18 95       	reti

0000b95a <LCD_LIGHT>:


void LCD_LIGHT(void)
{
    b95a:	df 93       	push	r29
    b95c:	cf 93       	push	r28
    b95e:	cd b7       	in	r28, 0x3d	; 61
    b960:	de b7       	in	r29, 0x3e	; 62
	DIO_void_Set_Pin_Dirction(PORTE_ID,PIN4,OUTPUT);
    b962:	84 e0       	ldi	r24, 0x04	; 4
    b964:	64 e0       	ldi	r22, 0x04	; 4
    b966:	41 e0       	ldi	r20, 0x01	; 1
    b968:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <DIO_void_Set_Pin_Dirction>
	DIO_void_Set_Pin_Value(PORTE_ID,PIN4,OUTPUT);
    b96c:	84 e0       	ldi	r24, 0x04	; 4
    b96e:	64 e0       	ldi	r22, 0x04	; 4
    b970:	41 e0       	ldi	r20, 0x01	; 1
    b972:	0e 94 58 20 	call	0x40b0	; 0x40b0 <DIO_void_Set_Pin_Value>
}
    b976:	cf 91       	pop	r28
    b978:	df 91       	pop	r29
    b97a:	08 95       	ret

0000b97c <main>:
#include"../MCAL/UARTT/Uart.h"
volatile uint8 park_flag=0,un_park_flag=1,check=0,chec=1;
volatile uint8 read_park_button=1,read_un_park_button=1;
void func_blue(void);
int main(void)
{
    b97c:	0f 93       	push	r16
    b97e:	1f 93       	push	r17
    b980:	df 93       	push	r29
    b982:	cf 93       	push	r28
    b984:	cd b7       	in	r28, 0x3d	; 61
    b986:	de b7       	in	r29, 0x3e	; 62
    b988:	c2 56       	subi	r28, 0x62	; 98
    b98a:	d0 40       	sbci	r29, 0x00	; 0
    b98c:	0f b6       	in	r0, 0x3f	; 63
    b98e:	f8 94       	cli
    b990:	de bf       	out	0x3e, r29	; 62
    b992:	0f be       	out	0x3f, r0	; 63
    b994:	cd bf       	out	0x3d, r28	; 61
project_init();
    b996:	0e 94 22 3b 	call	0x7644	; 0x7644 <project_init>

while(1)
{

	LCD_vidGotoxy(0,0);
    b99a:	80 e0       	ldi	r24, 0x00	; 0
    b99c:	60 e0       	ldi	r22, 0x00	; 0
    b99e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidPrintInTwoLines((uint8*)"Enter a TO PARK or b TO !PARK");
    b9a2:	83 ec       	ldi	r24, 0xC3	; 195
    b9a4:	91 e0       	ldi	r25, 0x01	; 1
    b9a6:	0e 94 17 3a 	call	0x742e	; 0x742e <LCD_vidPrintInTwoLines>
    b9aa:	fe 01       	movw	r30, r28
    b9ac:	e1 5a       	subi	r30, 0xA1	; 161
    b9ae:	ff 4f       	sbci	r31, 0xFF	; 255
    b9b0:	80 e0       	ldi	r24, 0x00	; 0
    b9b2:	90 e0       	ldi	r25, 0x00	; 0
    b9b4:	aa e7       	ldi	r26, 0x7A	; 122
    b9b6:	b4 e4       	ldi	r27, 0x44	; 68
    b9b8:	80 83       	st	Z, r24
    b9ba:	91 83       	std	Z+1, r25	; 0x01
    b9bc:	a2 83       	std	Z+2, r26	; 0x02
    b9be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    b9c0:	8e 01       	movw	r16, r28
    b9c2:	05 5a       	subi	r16, 0xA5	; 165
    b9c4:	1f 4f       	sbci	r17, 0xFF	; 255
    b9c6:	fe 01       	movw	r30, r28
    b9c8:	e1 5a       	subi	r30, 0xA1	; 161
    b9ca:	ff 4f       	sbci	r31, 0xFF	; 255
    b9cc:	60 81       	ld	r22, Z
    b9ce:	71 81       	ldd	r23, Z+1	; 0x01
    b9d0:	82 81       	ldd	r24, Z+2	; 0x02
    b9d2:	93 81       	ldd	r25, Z+3	; 0x03
    b9d4:	20 e0       	ldi	r18, 0x00	; 0
    b9d6:	30 e0       	ldi	r19, 0x00	; 0
    b9d8:	4a ef       	ldi	r20, 0xFA	; 250
    b9da:	54 e4       	ldi	r21, 0x44	; 68
    b9dc:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    b9e0:	dc 01       	movw	r26, r24
    b9e2:	cb 01       	movw	r24, r22
    b9e4:	f8 01       	movw	r30, r16
    b9e6:	80 83       	st	Z, r24
    b9e8:	91 83       	std	Z+1, r25	; 0x01
    b9ea:	a2 83       	std	Z+2, r26	; 0x02
    b9ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    b9ee:	fe 01       	movw	r30, r28
    b9f0:	e5 5a       	subi	r30, 0xA5	; 165
    b9f2:	ff 4f       	sbci	r31, 0xFF	; 255
    b9f4:	60 81       	ld	r22, Z
    b9f6:	71 81       	ldd	r23, Z+1	; 0x01
    b9f8:	82 81       	ldd	r24, Z+2	; 0x02
    b9fa:	93 81       	ldd	r25, Z+3	; 0x03
    b9fc:	20 e0       	ldi	r18, 0x00	; 0
    b9fe:	30 e0       	ldi	r19, 0x00	; 0
    ba00:	40 e8       	ldi	r20, 0x80	; 128
    ba02:	5f e3       	ldi	r21, 0x3F	; 63
    ba04:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    ba08:	88 23       	and	r24, r24
    ba0a:	44 f4       	brge	.+16     	; 0xba1c <main+0xa0>
		__ticks = 1;
    ba0c:	fe 01       	movw	r30, r28
    ba0e:	e7 5a       	subi	r30, 0xA7	; 167
    ba10:	ff 4f       	sbci	r31, 0xFF	; 255
    ba12:	81 e0       	ldi	r24, 0x01	; 1
    ba14:	90 e0       	ldi	r25, 0x00	; 0
    ba16:	91 83       	std	Z+1, r25	; 0x01
    ba18:	80 83       	st	Z, r24
    ba1a:	64 c0       	rjmp	.+200    	; 0xbae4 <main+0x168>
	else if (__tmp > 65535)
    ba1c:	fe 01       	movw	r30, r28
    ba1e:	e5 5a       	subi	r30, 0xA5	; 165
    ba20:	ff 4f       	sbci	r31, 0xFF	; 255
    ba22:	60 81       	ld	r22, Z
    ba24:	71 81       	ldd	r23, Z+1	; 0x01
    ba26:	82 81       	ldd	r24, Z+2	; 0x02
    ba28:	93 81       	ldd	r25, Z+3	; 0x03
    ba2a:	20 e0       	ldi	r18, 0x00	; 0
    ba2c:	3f ef       	ldi	r19, 0xFF	; 255
    ba2e:	4f e7       	ldi	r20, 0x7F	; 127
    ba30:	57 e4       	ldi	r21, 0x47	; 71
    ba32:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    ba36:	18 16       	cp	r1, r24
    ba38:	0c f0       	brlt	.+2      	; 0xba3c <main+0xc0>
    ba3a:	43 c0       	rjmp	.+134    	; 0xbac2 <main+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    ba3c:	fe 01       	movw	r30, r28
    ba3e:	e1 5a       	subi	r30, 0xA1	; 161
    ba40:	ff 4f       	sbci	r31, 0xFF	; 255
    ba42:	60 81       	ld	r22, Z
    ba44:	71 81       	ldd	r23, Z+1	; 0x01
    ba46:	82 81       	ldd	r24, Z+2	; 0x02
    ba48:	93 81       	ldd	r25, Z+3	; 0x03
    ba4a:	20 e0       	ldi	r18, 0x00	; 0
    ba4c:	30 e0       	ldi	r19, 0x00	; 0
    ba4e:	40 e2       	ldi	r20, 0x20	; 32
    ba50:	51 e4       	ldi	r21, 0x41	; 65
    ba52:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    ba56:	dc 01       	movw	r26, r24
    ba58:	cb 01       	movw	r24, r22
    ba5a:	8e 01       	movw	r16, r28
    ba5c:	07 5a       	subi	r16, 0xA7	; 167
    ba5e:	1f 4f       	sbci	r17, 0xFF	; 255
    ba60:	bc 01       	movw	r22, r24
    ba62:	cd 01       	movw	r24, r26
    ba64:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    ba68:	dc 01       	movw	r26, r24
    ba6a:	cb 01       	movw	r24, r22
    ba6c:	f8 01       	movw	r30, r16
    ba6e:	91 83       	std	Z+1, r25	; 0x01
    ba70:	80 83       	st	Z, r24
    ba72:	1f c0       	rjmp	.+62     	; 0xbab2 <main+0x136>
    ba74:	fe 01       	movw	r30, r28
    ba76:	e9 5a       	subi	r30, 0xA9	; 169
    ba78:	ff 4f       	sbci	r31, 0xFF	; 255
    ba7a:	88 ec       	ldi	r24, 0xC8	; 200
    ba7c:	90 e0       	ldi	r25, 0x00	; 0
    ba7e:	91 83       	std	Z+1, r25	; 0x01
    ba80:	80 83       	st	Z, r24
    ba82:	fe 01       	movw	r30, r28
    ba84:	e9 5a       	subi	r30, 0xA9	; 169
    ba86:	ff 4f       	sbci	r31, 0xFF	; 255
    ba88:	80 81       	ld	r24, Z
    ba8a:	91 81       	ldd	r25, Z+1	; 0x01
    ba8c:	01 97       	sbiw	r24, 0x01	; 1
    ba8e:	f1 f7       	brne	.-4      	; 0xba8c <main+0x110>
    ba90:	fe 01       	movw	r30, r28
    ba92:	e9 5a       	subi	r30, 0xA9	; 169
    ba94:	ff 4f       	sbci	r31, 0xFF	; 255
    ba96:	91 83       	std	Z+1, r25	; 0x01
    ba98:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    ba9a:	de 01       	movw	r26, r28
    ba9c:	a7 5a       	subi	r26, 0xA7	; 167
    ba9e:	bf 4f       	sbci	r27, 0xFF	; 255
    baa0:	fe 01       	movw	r30, r28
    baa2:	e7 5a       	subi	r30, 0xA7	; 167
    baa4:	ff 4f       	sbci	r31, 0xFF	; 255
    baa6:	80 81       	ld	r24, Z
    baa8:	91 81       	ldd	r25, Z+1	; 0x01
    baaa:	01 97       	sbiw	r24, 0x01	; 1
    baac:	11 96       	adiw	r26, 0x01	; 1
    baae:	9c 93       	st	X, r25
    bab0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bab2:	fe 01       	movw	r30, r28
    bab4:	e7 5a       	subi	r30, 0xA7	; 167
    bab6:	ff 4f       	sbci	r31, 0xFF	; 255
    bab8:	80 81       	ld	r24, Z
    baba:	91 81       	ldd	r25, Z+1	; 0x01
    babc:	00 97       	sbiw	r24, 0x00	; 0
    babe:	d1 f6       	brne	.-76     	; 0xba74 <main+0xf8>
    bac0:	27 c0       	rjmp	.+78     	; 0xbb10 <main+0x194>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bac2:	8e 01       	movw	r16, r28
    bac4:	07 5a       	subi	r16, 0xA7	; 167
    bac6:	1f 4f       	sbci	r17, 0xFF	; 255
    bac8:	fe 01       	movw	r30, r28
    baca:	e5 5a       	subi	r30, 0xA5	; 165
    bacc:	ff 4f       	sbci	r31, 0xFF	; 255
    bace:	60 81       	ld	r22, Z
    bad0:	71 81       	ldd	r23, Z+1	; 0x01
    bad2:	82 81       	ldd	r24, Z+2	; 0x02
    bad4:	93 81       	ldd	r25, Z+3	; 0x03
    bad6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bada:	dc 01       	movw	r26, r24
    badc:	cb 01       	movw	r24, r22
    bade:	f8 01       	movw	r30, r16
    bae0:	91 83       	std	Z+1, r25	; 0x01
    bae2:	80 83       	st	Z, r24
    bae4:	de 01       	movw	r26, r28
    bae6:	ab 5a       	subi	r26, 0xAB	; 171
    bae8:	bf 4f       	sbci	r27, 0xFF	; 255
    baea:	fe 01       	movw	r30, r28
    baec:	e7 5a       	subi	r30, 0xA7	; 167
    baee:	ff 4f       	sbci	r31, 0xFF	; 255
    baf0:	80 81       	ld	r24, Z
    baf2:	91 81       	ldd	r25, Z+1	; 0x01
    baf4:	8d 93       	st	X+, r24
    baf6:	9c 93       	st	X, r25
    baf8:	fe 01       	movw	r30, r28
    bafa:	eb 5a       	subi	r30, 0xAB	; 171
    bafc:	ff 4f       	sbci	r31, 0xFF	; 255
    bafe:	80 81       	ld	r24, Z
    bb00:	91 81       	ldd	r25, Z+1	; 0x01
    bb02:	01 97       	sbiw	r24, 0x01	; 1
    bb04:	f1 f7       	brne	.-4      	; 0xbb02 <main+0x186>
    bb06:	fe 01       	movw	r30, r28
    bb08:	eb 5a       	subi	r30, 0xAB	; 171
    bb0a:	ff 4f       	sbci	r31, 0xFF	; 255
    bb0c:	91 83       	std	Z+1, r25	; 0x01
    bb0e:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_vidSendCommand(1);
    bb10:	81 e0       	ldi	r24, 0x01	; 1
    bb12:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	func_blue();
    bb16:	0e 94 7d 61 	call	0xc2fa	; 0xc2fa <func_blue>
    bb1a:	0c c0       	rjmp	.+24     	; 0xbb34 <main+0x1b8>
	while(read_park_button&&read_un_park_button)
	{
		read_park_button=DIO_value_type_Get_Pin_Value(auto_park_port ,auto_park_pin);
    bb1c:	83 e0       	ldi	r24, 0x03	; 3
    bb1e:	60 e0       	ldi	r22, 0x00	; 0
    bb20:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <DIO_value_type_Get_Pin_Value>
    bb24:	80 93 7c 03 	sts	0x037C, r24
		read_un_park_button=DIO_value_type_Get_Pin_Value(auto_park_port ,no_park_pin);
    bb28:	83 e0       	ldi	r24, 0x03	; 3
    bb2a:	61 e0       	ldi	r22, 0x01	; 1
    bb2c:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <DIO_value_type_Get_Pin_Value>
    bb30:	80 93 7d 03 	sts	0x037D, r24
	LCD_vidGotoxy(0,0);
	LCD_vidPrintInTwoLines((uint8*)"Enter a TO PARK or b TO !PARK");
	_delay_ms(1000);
	LCD_vidSendCommand(1);
	func_blue();
	while(read_park_button&&read_un_park_button)
    bb34:	80 91 7c 03 	lds	r24, 0x037C
    bb38:	88 23       	and	r24, r24
    bb3a:	21 f0       	breq	.+8      	; 0xbb44 <main+0x1c8>
    bb3c:	80 91 7d 03 	lds	r24, 0x037D
    bb40:	88 23       	and	r24, r24
    bb42:	61 f7       	brne	.-40     	; 0xbb1c <main+0x1a0>
	{
		read_park_button=DIO_value_type_Get_Pin_Value(auto_park_port ,auto_park_pin);
		read_un_park_button=DIO_value_type_Get_Pin_Value(auto_park_port ,no_park_pin);
	}

	if((read_park_button==0)&&(un_park_flag==1)&&(park_flag==0)&&(read_un_park_button==1))
    bb44:	80 91 7c 03 	lds	r24, 0x037C
    bb48:	88 23       	and	r24, r24
    bb4a:	09 f0       	breq	.+2      	; 0xbb4e <main+0x1d2>
    bb4c:	94 c1       	rjmp	.+808    	; 0xbe76 <main+0x4fa>
    bb4e:	80 91 7a 03 	lds	r24, 0x037A
    bb52:	81 30       	cpi	r24, 0x01	; 1
    bb54:	09 f0       	breq	.+2      	; 0xbb58 <main+0x1dc>
    bb56:	8f c1       	rjmp	.+798    	; 0xbe76 <main+0x4fa>
    bb58:	80 91 a3 03 	lds	r24, 0x03A3
    bb5c:	88 23       	and	r24, r24
    bb5e:	09 f0       	breq	.+2      	; 0xbb62 <main+0x1e6>
    bb60:	8a c1       	rjmp	.+788    	; 0xbe76 <main+0x4fa>
    bb62:	80 91 7d 03 	lds	r24, 0x037D
    bb66:	81 30       	cpi	r24, 0x01	; 1
    bb68:	09 f0       	breq	.+2      	; 0xbb6c <main+0x1f0>
    bb6a:	85 c1       	rjmp	.+778    	; 0xbe76 <main+0x4fa>
	{
	LCD_vidSendCommand(1);
    bb6c:	81 e0       	ldi	r24, 0x01	; 1
    bb6e:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
	LCD_vidGotoxy(0,0);
    bb72:	80 e0       	ldi	r24, 0x00	; 0
    bb74:	60 e0       	ldi	r22, 0x00	; 0
    bb76:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteString((uint8*)"AUTOPARKING");
    bb7a:	81 ee       	ldi	r24, 0xE1	; 225
    bb7c:	91 e0       	ldi	r25, 0x01	; 1
    bb7e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    bb82:	fe 01       	movw	r30, r28
    bb84:	ef 5a       	subi	r30, 0xAF	; 175
    bb86:	ff 4f       	sbci	r31, 0xFF	; 255
    bb88:	80 e0       	ldi	r24, 0x00	; 0
    bb8a:	90 e0       	ldi	r25, 0x00	; 0
    bb8c:	aa e7       	ldi	r26, 0x7A	; 122
    bb8e:	b4 e4       	ldi	r27, 0x44	; 68
    bb90:	80 83       	st	Z, r24
    bb92:	91 83       	std	Z+1, r25	; 0x01
    bb94:	a2 83       	std	Z+2, r26	; 0x02
    bb96:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    bb98:	8e 01       	movw	r16, r28
    bb9a:	03 5b       	subi	r16, 0xB3	; 179
    bb9c:	1f 4f       	sbci	r17, 0xFF	; 255
    bb9e:	fe 01       	movw	r30, r28
    bba0:	ef 5a       	subi	r30, 0xAF	; 175
    bba2:	ff 4f       	sbci	r31, 0xFF	; 255
    bba4:	60 81       	ld	r22, Z
    bba6:	71 81       	ldd	r23, Z+1	; 0x01
    bba8:	82 81       	ldd	r24, Z+2	; 0x02
    bbaa:	93 81       	ldd	r25, Z+3	; 0x03
    bbac:	20 e0       	ldi	r18, 0x00	; 0
    bbae:	30 e0       	ldi	r19, 0x00	; 0
    bbb0:	4a ef       	ldi	r20, 0xFA	; 250
    bbb2:	54 e4       	ldi	r21, 0x44	; 68
    bbb4:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bbb8:	dc 01       	movw	r26, r24
    bbba:	cb 01       	movw	r24, r22
    bbbc:	f8 01       	movw	r30, r16
    bbbe:	80 83       	st	Z, r24
    bbc0:	91 83       	std	Z+1, r25	; 0x01
    bbc2:	a2 83       	std	Z+2, r26	; 0x02
    bbc4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    bbc6:	fe 01       	movw	r30, r28
    bbc8:	e3 5b       	subi	r30, 0xB3	; 179
    bbca:	ff 4f       	sbci	r31, 0xFF	; 255
    bbcc:	60 81       	ld	r22, Z
    bbce:	71 81       	ldd	r23, Z+1	; 0x01
    bbd0:	82 81       	ldd	r24, Z+2	; 0x02
    bbd2:	93 81       	ldd	r25, Z+3	; 0x03
    bbd4:	20 e0       	ldi	r18, 0x00	; 0
    bbd6:	30 e0       	ldi	r19, 0x00	; 0
    bbd8:	40 e8       	ldi	r20, 0x80	; 128
    bbda:	5f e3       	ldi	r21, 0x3F	; 63
    bbdc:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    bbe0:	88 23       	and	r24, r24
    bbe2:	44 f4       	brge	.+16     	; 0xbbf4 <main+0x278>
		__ticks = 1;
    bbe4:	fe 01       	movw	r30, r28
    bbe6:	e5 5b       	subi	r30, 0xB5	; 181
    bbe8:	ff 4f       	sbci	r31, 0xFF	; 255
    bbea:	81 e0       	ldi	r24, 0x01	; 1
    bbec:	90 e0       	ldi	r25, 0x00	; 0
    bbee:	91 83       	std	Z+1, r25	; 0x01
    bbf0:	80 83       	st	Z, r24
    bbf2:	64 c0       	rjmp	.+200    	; 0xbcbc <main+0x340>
	else if (__tmp > 65535)
    bbf4:	fe 01       	movw	r30, r28
    bbf6:	e3 5b       	subi	r30, 0xB3	; 179
    bbf8:	ff 4f       	sbci	r31, 0xFF	; 255
    bbfa:	60 81       	ld	r22, Z
    bbfc:	71 81       	ldd	r23, Z+1	; 0x01
    bbfe:	82 81       	ldd	r24, Z+2	; 0x02
    bc00:	93 81       	ldd	r25, Z+3	; 0x03
    bc02:	20 e0       	ldi	r18, 0x00	; 0
    bc04:	3f ef       	ldi	r19, 0xFF	; 255
    bc06:	4f e7       	ldi	r20, 0x7F	; 127
    bc08:	57 e4       	ldi	r21, 0x47	; 71
    bc0a:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    bc0e:	18 16       	cp	r1, r24
    bc10:	0c f0       	brlt	.+2      	; 0xbc14 <main+0x298>
    bc12:	43 c0       	rjmp	.+134    	; 0xbc9a <main+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    bc14:	fe 01       	movw	r30, r28
    bc16:	ef 5a       	subi	r30, 0xAF	; 175
    bc18:	ff 4f       	sbci	r31, 0xFF	; 255
    bc1a:	60 81       	ld	r22, Z
    bc1c:	71 81       	ldd	r23, Z+1	; 0x01
    bc1e:	82 81       	ldd	r24, Z+2	; 0x02
    bc20:	93 81       	ldd	r25, Z+3	; 0x03
    bc22:	20 e0       	ldi	r18, 0x00	; 0
    bc24:	30 e0       	ldi	r19, 0x00	; 0
    bc26:	40 e2       	ldi	r20, 0x20	; 32
    bc28:	51 e4       	ldi	r21, 0x41	; 65
    bc2a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bc2e:	dc 01       	movw	r26, r24
    bc30:	cb 01       	movw	r24, r22
    bc32:	8e 01       	movw	r16, r28
    bc34:	05 5b       	subi	r16, 0xB5	; 181
    bc36:	1f 4f       	sbci	r17, 0xFF	; 255
    bc38:	bc 01       	movw	r22, r24
    bc3a:	cd 01       	movw	r24, r26
    bc3c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bc40:	dc 01       	movw	r26, r24
    bc42:	cb 01       	movw	r24, r22
    bc44:	f8 01       	movw	r30, r16
    bc46:	91 83       	std	Z+1, r25	; 0x01
    bc48:	80 83       	st	Z, r24
    bc4a:	1f c0       	rjmp	.+62     	; 0xbc8a <main+0x30e>
    bc4c:	fe 01       	movw	r30, r28
    bc4e:	e7 5b       	subi	r30, 0xB7	; 183
    bc50:	ff 4f       	sbci	r31, 0xFF	; 255
    bc52:	88 ec       	ldi	r24, 0xC8	; 200
    bc54:	90 e0       	ldi	r25, 0x00	; 0
    bc56:	91 83       	std	Z+1, r25	; 0x01
    bc58:	80 83       	st	Z, r24
    bc5a:	fe 01       	movw	r30, r28
    bc5c:	e7 5b       	subi	r30, 0xB7	; 183
    bc5e:	ff 4f       	sbci	r31, 0xFF	; 255
    bc60:	80 81       	ld	r24, Z
    bc62:	91 81       	ldd	r25, Z+1	; 0x01
    bc64:	01 97       	sbiw	r24, 0x01	; 1
    bc66:	f1 f7       	brne	.-4      	; 0xbc64 <main+0x2e8>
    bc68:	fe 01       	movw	r30, r28
    bc6a:	e7 5b       	subi	r30, 0xB7	; 183
    bc6c:	ff 4f       	sbci	r31, 0xFF	; 255
    bc6e:	91 83       	std	Z+1, r25	; 0x01
    bc70:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bc72:	de 01       	movw	r26, r28
    bc74:	a5 5b       	subi	r26, 0xB5	; 181
    bc76:	bf 4f       	sbci	r27, 0xFF	; 255
    bc78:	fe 01       	movw	r30, r28
    bc7a:	e5 5b       	subi	r30, 0xB5	; 181
    bc7c:	ff 4f       	sbci	r31, 0xFF	; 255
    bc7e:	80 81       	ld	r24, Z
    bc80:	91 81       	ldd	r25, Z+1	; 0x01
    bc82:	01 97       	sbiw	r24, 0x01	; 1
    bc84:	11 96       	adiw	r26, 0x01	; 1
    bc86:	9c 93       	st	X, r25
    bc88:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bc8a:	fe 01       	movw	r30, r28
    bc8c:	e5 5b       	subi	r30, 0xB5	; 181
    bc8e:	ff 4f       	sbci	r31, 0xFF	; 255
    bc90:	80 81       	ld	r24, Z
    bc92:	91 81       	ldd	r25, Z+1	; 0x01
    bc94:	00 97       	sbiw	r24, 0x00	; 0
    bc96:	d1 f6       	brne	.-76     	; 0xbc4c <main+0x2d0>
    bc98:	27 c0       	rjmp	.+78     	; 0xbce8 <main+0x36c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bc9a:	8e 01       	movw	r16, r28
    bc9c:	05 5b       	subi	r16, 0xB5	; 181
    bc9e:	1f 4f       	sbci	r17, 0xFF	; 255
    bca0:	fe 01       	movw	r30, r28
    bca2:	e3 5b       	subi	r30, 0xB3	; 179
    bca4:	ff 4f       	sbci	r31, 0xFF	; 255
    bca6:	60 81       	ld	r22, Z
    bca8:	71 81       	ldd	r23, Z+1	; 0x01
    bcaa:	82 81       	ldd	r24, Z+2	; 0x02
    bcac:	93 81       	ldd	r25, Z+3	; 0x03
    bcae:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bcb2:	dc 01       	movw	r26, r24
    bcb4:	cb 01       	movw	r24, r22
    bcb6:	f8 01       	movw	r30, r16
    bcb8:	91 83       	std	Z+1, r25	; 0x01
    bcba:	80 83       	st	Z, r24
    bcbc:	de 01       	movw	r26, r28
    bcbe:	a9 5b       	subi	r26, 0xB9	; 185
    bcc0:	bf 4f       	sbci	r27, 0xFF	; 255
    bcc2:	fe 01       	movw	r30, r28
    bcc4:	e5 5b       	subi	r30, 0xB5	; 181
    bcc6:	ff 4f       	sbci	r31, 0xFF	; 255
    bcc8:	80 81       	ld	r24, Z
    bcca:	91 81       	ldd	r25, Z+1	; 0x01
    bccc:	8d 93       	st	X+, r24
    bcce:	9c 93       	st	X, r25
    bcd0:	fe 01       	movw	r30, r28
    bcd2:	e9 5b       	subi	r30, 0xB9	; 185
    bcd4:	ff 4f       	sbci	r31, 0xFF	; 255
    bcd6:	80 81       	ld	r24, Z
    bcd8:	91 81       	ldd	r25, Z+1	; 0x01
    bcda:	01 97       	sbiw	r24, 0x01	; 1
    bcdc:	f1 f7       	brne	.-4      	; 0xbcda <main+0x35e>
    bcde:	fe 01       	movw	r30, r28
    bce0:	e9 5b       	subi	r30, 0xB9	; 185
    bce2:	ff 4f       	sbci	r31, 0xFF	; 255
    bce4:	91 83       	std	Z+1, r25	; 0x01
    bce6:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_vidGotoxy(0,0);
    bce8:	80 e0       	ldi	r24, 0x00	; 0
    bcea:	60 e0       	ldi	r22, 0x00	; 0
    bcec:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	LCD_vidWriteString((uint8*)"CHECK DOOR");
    bcf0:	8d ee       	ldi	r24, 0xED	; 237
    bcf2:	91 e0       	ldi	r25, 0x01	; 1
    bcf4:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
if(Check_Door_Is_Closed())
    bcf8:	0e 94 32 2b 	call	0x5664	; 0x5664 <Check_Door_Is_Closed>
    bcfc:	88 23       	and	r24, r24
    bcfe:	09 f4       	brne	.+2      	; 0xbd02 <main+0x386>
    bd00:	94 c0       	rjmp	.+296    	; 0xbe2a <main+0x4ae>
{
	LCD_vidGotoxy(0,0);
    bd02:	80 e0       	ldi	r24, 0x00	; 0
    bd04:	60 e0       	ldi	r22, 0x00	; 0
    bd06:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	    LCD_vidWriteString((uint8*)"DOOR IS OPEND");
    bd0a:	88 ef       	ldi	r24, 0xF8	; 248
    bd0c:	91 e0       	ldi	r25, 0x01	; 1
    bd0e:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    bd12:	fe 01       	movw	r30, r28
    bd14:	ed 5b       	subi	r30, 0xBD	; 189
    bd16:	ff 4f       	sbci	r31, 0xFF	; 255
    bd18:	80 e0       	ldi	r24, 0x00	; 0
    bd1a:	90 e0       	ldi	r25, 0x00	; 0
    bd1c:	aa e7       	ldi	r26, 0x7A	; 122
    bd1e:	b4 e4       	ldi	r27, 0x44	; 68
    bd20:	80 83       	st	Z, r24
    bd22:	91 83       	std	Z+1, r25	; 0x01
    bd24:	a2 83       	std	Z+2, r26	; 0x02
    bd26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    bd28:	8e 01       	movw	r16, r28
    bd2a:	01 5c       	subi	r16, 0xC1	; 193
    bd2c:	1f 4f       	sbci	r17, 0xFF	; 255
    bd2e:	fe 01       	movw	r30, r28
    bd30:	ed 5b       	subi	r30, 0xBD	; 189
    bd32:	ff 4f       	sbci	r31, 0xFF	; 255
    bd34:	60 81       	ld	r22, Z
    bd36:	71 81       	ldd	r23, Z+1	; 0x01
    bd38:	82 81       	ldd	r24, Z+2	; 0x02
    bd3a:	93 81       	ldd	r25, Z+3	; 0x03
    bd3c:	20 e0       	ldi	r18, 0x00	; 0
    bd3e:	30 e0       	ldi	r19, 0x00	; 0
    bd40:	4a ef       	ldi	r20, 0xFA	; 250
    bd42:	54 e4       	ldi	r21, 0x44	; 68
    bd44:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bd48:	dc 01       	movw	r26, r24
    bd4a:	cb 01       	movw	r24, r22
    bd4c:	f8 01       	movw	r30, r16
    bd4e:	80 83       	st	Z, r24
    bd50:	91 83       	std	Z+1, r25	; 0x01
    bd52:	a2 83       	std	Z+2, r26	; 0x02
    bd54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    bd56:	fe 01       	movw	r30, r28
    bd58:	ff 96       	adiw	r30, 0x3f	; 63
    bd5a:	60 81       	ld	r22, Z
    bd5c:	71 81       	ldd	r23, Z+1	; 0x01
    bd5e:	82 81       	ldd	r24, Z+2	; 0x02
    bd60:	93 81       	ldd	r25, Z+3	; 0x03
    bd62:	20 e0       	ldi	r18, 0x00	; 0
    bd64:	30 e0       	ldi	r19, 0x00	; 0
    bd66:	40 e8       	ldi	r20, 0x80	; 128
    bd68:	5f e3       	ldi	r21, 0x3F	; 63
    bd6a:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    bd6e:	88 23       	and	r24, r24
    bd70:	2c f4       	brge	.+10     	; 0xbd7c <main+0x400>
		__ticks = 1;
    bd72:	81 e0       	ldi	r24, 0x01	; 1
    bd74:	90 e0       	ldi	r25, 0x00	; 0
    bd76:	9e af       	std	Y+62, r25	; 0x3e
    bd78:	8d af       	std	Y+61, r24	; 0x3d
    bd7a:	46 c0       	rjmp	.+140    	; 0xbe08 <main+0x48c>
	else if (__tmp > 65535)
    bd7c:	fe 01       	movw	r30, r28
    bd7e:	ff 96       	adiw	r30, 0x3f	; 63
    bd80:	60 81       	ld	r22, Z
    bd82:	71 81       	ldd	r23, Z+1	; 0x01
    bd84:	82 81       	ldd	r24, Z+2	; 0x02
    bd86:	93 81       	ldd	r25, Z+3	; 0x03
    bd88:	20 e0       	ldi	r18, 0x00	; 0
    bd8a:	3f ef       	ldi	r19, 0xFF	; 255
    bd8c:	4f e7       	ldi	r20, 0x7F	; 127
    bd8e:	57 e4       	ldi	r21, 0x47	; 71
    bd90:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    bd94:	18 16       	cp	r1, r24
    bd96:	64 f5       	brge	.+88     	; 0xbdf0 <main+0x474>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    bd98:	fe 01       	movw	r30, r28
    bd9a:	ed 5b       	subi	r30, 0xBD	; 189
    bd9c:	ff 4f       	sbci	r31, 0xFF	; 255
    bd9e:	60 81       	ld	r22, Z
    bda0:	71 81       	ldd	r23, Z+1	; 0x01
    bda2:	82 81       	ldd	r24, Z+2	; 0x02
    bda4:	93 81       	ldd	r25, Z+3	; 0x03
    bda6:	20 e0       	ldi	r18, 0x00	; 0
    bda8:	30 e0       	ldi	r19, 0x00	; 0
    bdaa:	40 e2       	ldi	r20, 0x20	; 32
    bdac:	51 e4       	ldi	r21, 0x41	; 65
    bdae:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bdb2:	dc 01       	movw	r26, r24
    bdb4:	cb 01       	movw	r24, r22
    bdb6:	bc 01       	movw	r22, r24
    bdb8:	cd 01       	movw	r24, r26
    bdba:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bdbe:	dc 01       	movw	r26, r24
    bdc0:	cb 01       	movw	r24, r22
    bdc2:	9e af       	std	Y+62, r25	; 0x3e
    bdc4:	8d af       	std	Y+61, r24	; 0x3d
    bdc6:	0f c0       	rjmp	.+30     	; 0xbde6 <main+0x46a>
    bdc8:	88 ec       	ldi	r24, 0xC8	; 200
    bdca:	90 e0       	ldi	r25, 0x00	; 0
    bdcc:	9c af       	std	Y+60, r25	; 0x3c
    bdce:	8b af       	std	Y+59, r24	; 0x3b
    bdd0:	8b ad       	ldd	r24, Y+59	; 0x3b
    bdd2:	9c ad       	ldd	r25, Y+60	; 0x3c
    bdd4:	01 97       	sbiw	r24, 0x01	; 1
    bdd6:	f1 f7       	brne	.-4      	; 0xbdd4 <main+0x458>
    bdd8:	9c af       	std	Y+60, r25	; 0x3c
    bdda:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bddc:	8d ad       	ldd	r24, Y+61	; 0x3d
    bdde:	9e ad       	ldd	r25, Y+62	; 0x3e
    bde0:	01 97       	sbiw	r24, 0x01	; 1
    bde2:	9e af       	std	Y+62, r25	; 0x3e
    bde4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bde6:	8d ad       	ldd	r24, Y+61	; 0x3d
    bde8:	9e ad       	ldd	r25, Y+62	; 0x3e
    bdea:	00 97       	sbiw	r24, 0x00	; 0
    bdec:	69 f7       	brne	.-38     	; 0xbdc8 <main+0x44c>
    bdee:	16 c0       	rjmp	.+44     	; 0xbe1c <main+0x4a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bdf0:	fe 01       	movw	r30, r28
    bdf2:	ff 96       	adiw	r30, 0x3f	; 63
    bdf4:	60 81       	ld	r22, Z
    bdf6:	71 81       	ldd	r23, Z+1	; 0x01
    bdf8:	82 81       	ldd	r24, Z+2	; 0x02
    bdfa:	93 81       	ldd	r25, Z+3	; 0x03
    bdfc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    be00:	dc 01       	movw	r26, r24
    be02:	cb 01       	movw	r24, r22
    be04:	9e af       	std	Y+62, r25	; 0x3e
    be06:	8d af       	std	Y+61, r24	; 0x3d
    be08:	8d ad       	ldd	r24, Y+61	; 0x3d
    be0a:	9e ad       	ldd	r25, Y+62	; 0x3e
    be0c:	9a af       	std	Y+58, r25	; 0x3a
    be0e:	89 af       	std	Y+57, r24	; 0x39
    be10:	89 ad       	ldd	r24, Y+57	; 0x39
    be12:	9a ad       	ldd	r25, Y+58	; 0x3a
    be14:	01 97       	sbiw	r24, 0x01	; 1
    be16:	f1 f7       	brne	.-4      	; 0xbe14 <main+0x498>
    be18:	9a af       	std	Y+58, r25	; 0x3a
    be1a:	89 af       	std	Y+57, r24	; 0x39
	    _delay_ms(1000);
	    LCD_vidSendCommand(1);
    be1c:	81 e0       	ldi	r24, 0x01	; 1
    be1e:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

				while(Check_Door_Is_Closed());
    be22:	0e 94 32 2b 	call	0x5664	; 0x5664 <Check_Door_Is_Closed>
    be26:	88 23       	and	r24, r24
    be28:	e1 f7       	brne	.-8      	; 0xbe22 <main+0x4a6>

}
	LCD_vidGotoxy(0,0);
    be2a:	80 e0       	ldi	r24, 0x00	; 0
    be2c:	60 e0       	ldi	r22, 0x00	; 0
    be2e:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
			LCD_vidWriteString((uint8*)"DOOR IS CLOSED");
    be32:	86 e0       	ldi	r24, 0x06	; 6
    be34:	92 e0       	ldi	r25, 0x02	; 2
    be36:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
			park_flag=1;
    be3a:	81 e0       	ldi	r24, 0x01	; 1
    be3c:	80 93 a3 03 	sts	0x03A3, r24
		    un_park_flag=0;
    be40:	10 92 7a 03 	sts	0x037A, r1
		    LCD_vidSendCommand(1);
    be44:	81 e0       	ldi	r24, 0x01	; 1
    be46:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
			CAR_Width_Check();
    be4a:	0e 94 88 3b 	call	0x7710	; 0x7710 <CAR_Width_Check>
    be4e:	04 c0       	rjmp	.+8      	; 0xbe58 <main+0x4dc>
			while(check==0)
			{
			check=CAR_Length_Check();
    be50:	0e 94 86 4c 	call	0x990c	; 0x990c <CAR_Length_Check>
    be54:	80 93 a4 03 	sts	0x03A4, r24
			LCD_vidWriteString((uint8*)"DOOR IS CLOSED");
			park_flag=1;
		    un_park_flag=0;
		    LCD_vidSendCommand(1);
			CAR_Width_Check();
			while(check==0)
    be58:	80 91 a4 03 	lds	r24, 0x03A4
    be5c:	88 23       	and	r24, r24
    be5e:	c1 f3       	breq	.-16     	; 0xbe50 <main+0x4d4>
			{
			check=CAR_Length_Check();
		     }
			CAR_Length_Check2();
    be60:	0e 94 88 4e 	call	0x9d10	; 0x9d10 <CAR_Length_Check2>
			CAR_Length_Check3();
    be64:	0e 94 fd 4e 	call	0x9dfa	; 0x9dfa <CAR_Length_Check3>
		    start_parking();
    be68:	0e 94 47 56 	call	0xac8e	; 0xac8e <start_parking>
		    LCD_vidPrintInTwoLines((uint8*)"CONGRATULAAAAATION PARK DOONE");
    be6c:	85 e1       	ldi	r24, 0x15	; 21
    be6e:	92 e0       	ldi	r25, 0x02	; 2
    be70:	0e 94 17 3a 	call	0x742e	; 0x742e <LCD_vidPrintInTwoLines>
    be74:	3e c2       	rjmp	.+1148   	; 0xc2f2 <main+0x976>


}
else  if((read_un_park_button==0)&&(park_flag==1)&&(un_park_flag==0))
    be76:	80 91 7d 03 	lds	r24, 0x037D
    be7a:	88 23       	and	r24, r24
    be7c:	09 f0       	breq	.+2      	; 0xbe80 <main+0x504>
    be7e:	22 c1       	rjmp	.+580    	; 0xc0c4 <main+0x748>
    be80:	80 91 a3 03 	lds	r24, 0x03A3
    be84:	81 30       	cpi	r24, 0x01	; 1
    be86:	09 f0       	breq	.+2      	; 0xbe8a <main+0x50e>
    be88:	1d c1       	rjmp	.+570    	; 0xc0c4 <main+0x748>
    be8a:	80 91 7a 03 	lds	r24, 0x037A
    be8e:	88 23       	and	r24, r24
    be90:	09 f0       	breq	.+2      	; 0xbe94 <main+0x518>
    be92:	18 c1       	rjmp	.+560    	; 0xc0c4 <main+0x748>
		{
		if(Check_Door_Is_Closed())
    be94:	0e 94 32 2b 	call	0x5664	; 0x5664 <Check_Door_Is_Closed>
    be98:	88 23       	and	r24, r24
    be9a:	09 f4       	brne	.+2      	; 0xbe9e <main+0x522>
    be9c:	81 c0       	rjmp	.+258    	; 0xbfa0 <main+0x624>
		{
			LCD_vidGotoxy(0,0);
    be9e:	80 e0       	ldi	r24, 0x00	; 0
    bea0:	60 e0       	ldi	r22, 0x00	; 0
    bea2:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
			    LCD_vidWriteString((uint8*)"DOOR IS OPEND");
    bea6:	88 ef       	ldi	r24, 0xF8	; 248
    bea8:	91 e0       	ldi	r25, 0x01	; 1
    beaa:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    beae:	80 e0       	ldi	r24, 0x00	; 0
    beb0:	90 e0       	ldi	r25, 0x00	; 0
    beb2:	aa e7       	ldi	r26, 0x7A	; 122
    beb4:	b4 e4       	ldi	r27, 0x44	; 68
    beb6:	8d ab       	std	Y+53, r24	; 0x35
    beb8:	9e ab       	std	Y+54, r25	; 0x36
    beba:	af ab       	std	Y+55, r26	; 0x37
    bebc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    bebe:	6d a9       	ldd	r22, Y+53	; 0x35
    bec0:	7e a9       	ldd	r23, Y+54	; 0x36
    bec2:	8f a9       	ldd	r24, Y+55	; 0x37
    bec4:	98 ad       	ldd	r25, Y+56	; 0x38
    bec6:	20 e0       	ldi	r18, 0x00	; 0
    bec8:	30 e0       	ldi	r19, 0x00	; 0
    beca:	4a ef       	ldi	r20, 0xFA	; 250
    becc:	54 e4       	ldi	r21, 0x44	; 68
    bece:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bed2:	dc 01       	movw	r26, r24
    bed4:	cb 01       	movw	r24, r22
    bed6:	89 ab       	std	Y+49, r24	; 0x31
    bed8:	9a ab       	std	Y+50, r25	; 0x32
    beda:	ab ab       	std	Y+51, r26	; 0x33
    bedc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    bede:	69 a9       	ldd	r22, Y+49	; 0x31
    bee0:	7a a9       	ldd	r23, Y+50	; 0x32
    bee2:	8b a9       	ldd	r24, Y+51	; 0x33
    bee4:	9c a9       	ldd	r25, Y+52	; 0x34
    bee6:	20 e0       	ldi	r18, 0x00	; 0
    bee8:	30 e0       	ldi	r19, 0x00	; 0
    beea:	40 e8       	ldi	r20, 0x80	; 128
    beec:	5f e3       	ldi	r21, 0x3F	; 63
    beee:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    bef2:	88 23       	and	r24, r24
    bef4:	2c f4       	brge	.+10     	; 0xbf00 <main+0x584>
		__ticks = 1;
    bef6:	81 e0       	ldi	r24, 0x01	; 1
    bef8:	90 e0       	ldi	r25, 0x00	; 0
    befa:	98 ab       	std	Y+48, r25	; 0x30
    befc:	8f a7       	std	Y+47, r24	; 0x2f
    befe:	3f c0       	rjmp	.+126    	; 0xbf7e <main+0x602>
	else if (__tmp > 65535)
    bf00:	69 a9       	ldd	r22, Y+49	; 0x31
    bf02:	7a a9       	ldd	r23, Y+50	; 0x32
    bf04:	8b a9       	ldd	r24, Y+51	; 0x33
    bf06:	9c a9       	ldd	r25, Y+52	; 0x34
    bf08:	20 e0       	ldi	r18, 0x00	; 0
    bf0a:	3f ef       	ldi	r19, 0xFF	; 255
    bf0c:	4f e7       	ldi	r20, 0x7F	; 127
    bf0e:	57 e4       	ldi	r21, 0x47	; 71
    bf10:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    bf14:	18 16       	cp	r1, r24
    bf16:	4c f5       	brge	.+82     	; 0xbf6a <main+0x5ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    bf18:	6d a9       	ldd	r22, Y+53	; 0x35
    bf1a:	7e a9       	ldd	r23, Y+54	; 0x36
    bf1c:	8f a9       	ldd	r24, Y+55	; 0x37
    bf1e:	98 ad       	ldd	r25, Y+56	; 0x38
    bf20:	20 e0       	ldi	r18, 0x00	; 0
    bf22:	30 e0       	ldi	r19, 0x00	; 0
    bf24:	40 e2       	ldi	r20, 0x20	; 32
    bf26:	51 e4       	ldi	r21, 0x41	; 65
    bf28:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bf2c:	dc 01       	movw	r26, r24
    bf2e:	cb 01       	movw	r24, r22
    bf30:	bc 01       	movw	r22, r24
    bf32:	cd 01       	movw	r24, r26
    bf34:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bf38:	dc 01       	movw	r26, r24
    bf3a:	cb 01       	movw	r24, r22
    bf3c:	98 ab       	std	Y+48, r25	; 0x30
    bf3e:	8f a7       	std	Y+47, r24	; 0x2f
    bf40:	0f c0       	rjmp	.+30     	; 0xbf60 <main+0x5e4>
    bf42:	88 ec       	ldi	r24, 0xC8	; 200
    bf44:	90 e0       	ldi	r25, 0x00	; 0
    bf46:	9e a7       	std	Y+46, r25	; 0x2e
    bf48:	8d a7       	std	Y+45, r24	; 0x2d
    bf4a:	8d a5       	ldd	r24, Y+45	; 0x2d
    bf4c:	9e a5       	ldd	r25, Y+46	; 0x2e
    bf4e:	01 97       	sbiw	r24, 0x01	; 1
    bf50:	f1 f7       	brne	.-4      	; 0xbf4e <main+0x5d2>
    bf52:	9e a7       	std	Y+46, r25	; 0x2e
    bf54:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    bf56:	8f a5       	ldd	r24, Y+47	; 0x2f
    bf58:	98 a9       	ldd	r25, Y+48	; 0x30
    bf5a:	01 97       	sbiw	r24, 0x01	; 1
    bf5c:	98 ab       	std	Y+48, r25	; 0x30
    bf5e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    bf60:	8f a5       	ldd	r24, Y+47	; 0x2f
    bf62:	98 a9       	ldd	r25, Y+48	; 0x30
    bf64:	00 97       	sbiw	r24, 0x00	; 0
    bf66:	69 f7       	brne	.-38     	; 0xbf42 <main+0x5c6>
    bf68:	14 c0       	rjmp	.+40     	; 0xbf92 <main+0x616>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    bf6a:	69 a9       	ldd	r22, Y+49	; 0x31
    bf6c:	7a a9       	ldd	r23, Y+50	; 0x32
    bf6e:	8b a9       	ldd	r24, Y+51	; 0x33
    bf70:	9c a9       	ldd	r25, Y+52	; 0x34
    bf72:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    bf76:	dc 01       	movw	r26, r24
    bf78:	cb 01       	movw	r24, r22
    bf7a:	98 ab       	std	Y+48, r25	; 0x30
    bf7c:	8f a7       	std	Y+47, r24	; 0x2f
    bf7e:	8f a5       	ldd	r24, Y+47	; 0x2f
    bf80:	98 a9       	ldd	r25, Y+48	; 0x30
    bf82:	9c a7       	std	Y+44, r25	; 0x2c
    bf84:	8b a7       	std	Y+43, r24	; 0x2b
    bf86:	8b a5       	ldd	r24, Y+43	; 0x2b
    bf88:	9c a5       	ldd	r25, Y+44	; 0x2c
    bf8a:	01 97       	sbiw	r24, 0x01	; 1
    bf8c:	f1 f7       	brne	.-4      	; 0xbf8a <main+0x60e>
    bf8e:	9c a7       	std	Y+44, r25	; 0x2c
    bf90:	8b a7       	std	Y+43, r24	; 0x2b
			    _delay_ms(1000);
			    LCD_vidSendCommand(1);
    bf92:	81 e0       	ldi	r24, 0x01	; 1
    bf94:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>

						while(Check_Door_Is_Closed());
    bf98:	0e 94 32 2b 	call	0x5664	; 0x5664 <Check_Door_Is_Closed>
    bf9c:	88 23       	and	r24, r24
    bf9e:	e1 f7       	brne	.-8      	; 0xbf98 <main+0x61c>
		}
	    	LCD_vidGotoxy(0,0);
    bfa0:	80 e0       	ldi	r24, 0x00	; 0
    bfa2:	60 e0       	ldi	r22, 0x00	; 0
    bfa4:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
	        LCD_vidWriteString((uint8*)"UNPARKING");
    bfa8:	83 e3       	ldi	r24, 0x33	; 51
    bfaa:	92 e0       	ldi	r25, 0x02	; 2
    bfac:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
    bfb0:	80 e0       	ldi	r24, 0x00	; 0
    bfb2:	90 e0       	ldi	r25, 0x00	; 0
    bfb4:	aa e7       	ldi	r26, 0x7A	; 122
    bfb6:	b4 e4       	ldi	r27, 0x44	; 68
    bfb8:	8f a3       	std	Y+39, r24	; 0x27
    bfba:	98 a7       	std	Y+40, r25	; 0x28
    bfbc:	a9 a7       	std	Y+41, r26	; 0x29
    bfbe:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    bfc0:	6f a1       	ldd	r22, Y+39	; 0x27
    bfc2:	78 a5       	ldd	r23, Y+40	; 0x28
    bfc4:	89 a5       	ldd	r24, Y+41	; 0x29
    bfc6:	9a a5       	ldd	r25, Y+42	; 0x2a
    bfc8:	20 e0       	ldi	r18, 0x00	; 0
    bfca:	30 e0       	ldi	r19, 0x00	; 0
    bfcc:	4a ef       	ldi	r20, 0xFA	; 250
    bfce:	54 e4       	ldi	r21, 0x44	; 68
    bfd0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    bfd4:	dc 01       	movw	r26, r24
    bfd6:	cb 01       	movw	r24, r22
    bfd8:	8b a3       	std	Y+35, r24	; 0x23
    bfda:	9c a3       	std	Y+36, r25	; 0x24
    bfdc:	ad a3       	std	Y+37, r26	; 0x25
    bfde:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    bfe0:	6b a1       	ldd	r22, Y+35	; 0x23
    bfe2:	7c a1       	ldd	r23, Y+36	; 0x24
    bfe4:	8d a1       	ldd	r24, Y+37	; 0x25
    bfe6:	9e a1       	ldd	r25, Y+38	; 0x26
    bfe8:	20 e0       	ldi	r18, 0x00	; 0
    bfea:	30 e0       	ldi	r19, 0x00	; 0
    bfec:	40 e8       	ldi	r20, 0x80	; 128
    bfee:	5f e3       	ldi	r21, 0x3F	; 63
    bff0:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    bff4:	88 23       	and	r24, r24
    bff6:	2c f4       	brge	.+10     	; 0xc002 <main+0x686>
		__ticks = 1;
    bff8:	81 e0       	ldi	r24, 0x01	; 1
    bffa:	90 e0       	ldi	r25, 0x00	; 0
    bffc:	9a a3       	std	Y+34, r25	; 0x22
    bffe:	89 a3       	std	Y+33, r24	; 0x21
    c000:	3f c0       	rjmp	.+126    	; 0xc080 <main+0x704>
	else if (__tmp > 65535)
    c002:	6b a1       	ldd	r22, Y+35	; 0x23
    c004:	7c a1       	ldd	r23, Y+36	; 0x24
    c006:	8d a1       	ldd	r24, Y+37	; 0x25
    c008:	9e a1       	ldd	r25, Y+38	; 0x26
    c00a:	20 e0       	ldi	r18, 0x00	; 0
    c00c:	3f ef       	ldi	r19, 0xFF	; 255
    c00e:	4f e7       	ldi	r20, 0x7F	; 127
    c010:	57 e4       	ldi	r21, 0x47	; 71
    c012:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    c016:	18 16       	cp	r1, r24
    c018:	4c f5       	brge	.+82     	; 0xc06c <main+0x6f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c01a:	6f a1       	ldd	r22, Y+39	; 0x27
    c01c:	78 a5       	ldd	r23, Y+40	; 0x28
    c01e:	89 a5       	ldd	r24, Y+41	; 0x29
    c020:	9a a5       	ldd	r25, Y+42	; 0x2a
    c022:	20 e0       	ldi	r18, 0x00	; 0
    c024:	30 e0       	ldi	r19, 0x00	; 0
    c026:	40 e2       	ldi	r20, 0x20	; 32
    c028:	51 e4       	ldi	r21, 0x41	; 65
    c02a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c02e:	dc 01       	movw	r26, r24
    c030:	cb 01       	movw	r24, r22
    c032:	bc 01       	movw	r22, r24
    c034:	cd 01       	movw	r24, r26
    c036:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c03a:	dc 01       	movw	r26, r24
    c03c:	cb 01       	movw	r24, r22
    c03e:	9a a3       	std	Y+34, r25	; 0x22
    c040:	89 a3       	std	Y+33, r24	; 0x21
    c042:	0f c0       	rjmp	.+30     	; 0xc062 <main+0x6e6>
    c044:	88 ec       	ldi	r24, 0xC8	; 200
    c046:	90 e0       	ldi	r25, 0x00	; 0
    c048:	98 a3       	std	Y+32, r25	; 0x20
    c04a:	8f 8f       	std	Y+31, r24	; 0x1f
    c04c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    c04e:	98 a1       	ldd	r25, Y+32	; 0x20
    c050:	01 97       	sbiw	r24, 0x01	; 1
    c052:	f1 f7       	brne	.-4      	; 0xc050 <main+0x6d4>
    c054:	98 a3       	std	Y+32, r25	; 0x20
    c056:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c058:	89 a1       	ldd	r24, Y+33	; 0x21
    c05a:	9a a1       	ldd	r25, Y+34	; 0x22
    c05c:	01 97       	sbiw	r24, 0x01	; 1
    c05e:	9a a3       	std	Y+34, r25	; 0x22
    c060:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c062:	89 a1       	ldd	r24, Y+33	; 0x21
    c064:	9a a1       	ldd	r25, Y+34	; 0x22
    c066:	00 97       	sbiw	r24, 0x00	; 0
    c068:	69 f7       	brne	.-38     	; 0xc044 <main+0x6c8>
    c06a:	14 c0       	rjmp	.+40     	; 0xc094 <main+0x718>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c06c:	6b a1       	ldd	r22, Y+35	; 0x23
    c06e:	7c a1       	ldd	r23, Y+36	; 0x24
    c070:	8d a1       	ldd	r24, Y+37	; 0x25
    c072:	9e a1       	ldd	r25, Y+38	; 0x26
    c074:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c078:	dc 01       	movw	r26, r24
    c07a:	cb 01       	movw	r24, r22
    c07c:	9a a3       	std	Y+34, r25	; 0x22
    c07e:	89 a3       	std	Y+33, r24	; 0x21
    c080:	89 a1       	ldd	r24, Y+33	; 0x21
    c082:	9a a1       	ldd	r25, Y+34	; 0x22
    c084:	9e 8f       	std	Y+30, r25	; 0x1e
    c086:	8d 8f       	std	Y+29, r24	; 0x1d
    c088:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c08a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    c08c:	01 97       	sbiw	r24, 0x01	; 1
    c08e:	f1 f7       	brne	.-4      	; 0xc08c <main+0x710>
    c090:	9e 8f       	std	Y+30, r25	; 0x1e
    c092:	8d 8f       	std	Y+29, r24	; 0x1d
	        _delay_ms(1000);
			LCD_vidGotoxy(0,0);
    c094:	80 e0       	ldi	r24, 0x00	; 0
    c096:	60 e0       	ldi	r22, 0x00	; 0
    c098:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
			LCD_vidWriteString((uint8*)"CHECK DOOR");
    c09c:	8d ee       	ldi	r24, 0xED	; 237
    c09e:	91 e0       	ldi	r25, 0x01	; 1
    c0a0:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
				un_park_flag=1;
    c0a4:	81 e0       	ldi	r24, 0x01	; 1
    c0a6:	80 93 7a 03 	sts	0x037A, r24
				park_flag=0;
    c0aa:	10 92 a3 03 	sts	0x03A3, r1
				LCD_vidGotoxy(0,0);
    c0ae:	80 e0       	ldi	r24, 0x00	; 0
    c0b0:	60 e0       	ldi	r22, 0x00	; 0
    c0b2:	0e 94 87 38 	call	0x710e	; 0x710e <LCD_vidGotoxy>
				LCD_vidWriteString((uint8*)"DOOR IS CLOSED");
    c0b6:	86 e0       	ldi	r24, 0x06	; 6
    c0b8:	92 e0       	ldi	r25, 0x02	; 2
    c0ba:	0e 94 d5 32 	call	0x65aa	; 0x65aa <LCD_vidWriteString>
				unparking();
    c0be:	0e 94 cb 59 	call	0xb396	; 0xb396 <unparking>
    c0c2:	17 c1       	rjmp	.+558    	; 0xc2f2 <main+0x976>


}

else if((read_park_button==0)&&(un_park_flag==0)&&(park_flag==1))
    c0c4:	80 91 7c 03 	lds	r24, 0x037C
    c0c8:	88 23       	and	r24, r24
    c0ca:	09 f0       	breq	.+2      	; 0xc0ce <main+0x752>
    c0cc:	87 c0       	rjmp	.+270    	; 0xc1dc <main+0x860>
    c0ce:	80 91 7a 03 	lds	r24, 0x037A
    c0d2:	88 23       	and	r24, r24
    c0d4:	09 f0       	breq	.+2      	; 0xc0d8 <main+0x75c>
    c0d6:	82 c0       	rjmp	.+260    	; 0xc1dc <main+0x860>
    c0d8:	80 91 a3 03 	lds	r24, 0x03A3
    c0dc:	81 30       	cpi	r24, 0x01	; 1
    c0de:	09 f0       	breq	.+2      	; 0xc0e2 <main+0x766>
    c0e0:	7d c0       	rjmp	.+250    	; 0xc1dc <main+0x860>
	{
		LCD_vidSendCommand(1);
    c0e2:	81 e0       	ldi	r24, 0x01	; 1
    c0e4:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
		LCD_vidPrintInTwoLines((uint8*)"YOU ARE ALREADY PARKING ");
    c0e8:	8d e3       	ldi	r24, 0x3D	; 61
    c0ea:	92 e0       	ldi	r25, 0x02	; 2
    c0ec:	0e 94 17 3a 	call	0x742e	; 0x742e <LCD_vidPrintInTwoLines>
    c0f0:	80 e0       	ldi	r24, 0x00	; 0
    c0f2:	90 e0       	ldi	r25, 0x00	; 0
    c0f4:	aa e7       	ldi	r26, 0x7A	; 122
    c0f6:	b4 e4       	ldi	r27, 0x44	; 68
    c0f8:	89 8f       	std	Y+25, r24	; 0x19
    c0fa:	9a 8f       	std	Y+26, r25	; 0x1a
    c0fc:	ab 8f       	std	Y+27, r26	; 0x1b
    c0fe:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    c100:	69 8d       	ldd	r22, Y+25	; 0x19
    c102:	7a 8d       	ldd	r23, Y+26	; 0x1a
    c104:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c106:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c108:	20 e0       	ldi	r18, 0x00	; 0
    c10a:	30 e0       	ldi	r19, 0x00	; 0
    c10c:	4a ef       	ldi	r20, 0xFA	; 250
    c10e:	54 e4       	ldi	r21, 0x44	; 68
    c110:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c114:	dc 01       	movw	r26, r24
    c116:	cb 01       	movw	r24, r22
    c118:	8d 8b       	std	Y+21, r24	; 0x15
    c11a:	9e 8b       	std	Y+22, r25	; 0x16
    c11c:	af 8b       	std	Y+23, r26	; 0x17
    c11e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    c120:	6d 89       	ldd	r22, Y+21	; 0x15
    c122:	7e 89       	ldd	r23, Y+22	; 0x16
    c124:	8f 89       	ldd	r24, Y+23	; 0x17
    c126:	98 8d       	ldd	r25, Y+24	; 0x18
    c128:	20 e0       	ldi	r18, 0x00	; 0
    c12a:	30 e0       	ldi	r19, 0x00	; 0
    c12c:	40 e8       	ldi	r20, 0x80	; 128
    c12e:	5f e3       	ldi	r21, 0x3F	; 63
    c130:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    c134:	88 23       	and	r24, r24
    c136:	2c f4       	brge	.+10     	; 0xc142 <main+0x7c6>
		__ticks = 1;
    c138:	81 e0       	ldi	r24, 0x01	; 1
    c13a:	90 e0       	ldi	r25, 0x00	; 0
    c13c:	9c 8b       	std	Y+20, r25	; 0x14
    c13e:	8b 8b       	std	Y+19, r24	; 0x13
    c140:	3f c0       	rjmp	.+126    	; 0xc1c0 <main+0x844>
	else if (__tmp > 65535)
    c142:	6d 89       	ldd	r22, Y+21	; 0x15
    c144:	7e 89       	ldd	r23, Y+22	; 0x16
    c146:	8f 89       	ldd	r24, Y+23	; 0x17
    c148:	98 8d       	ldd	r25, Y+24	; 0x18
    c14a:	20 e0       	ldi	r18, 0x00	; 0
    c14c:	3f ef       	ldi	r19, 0xFF	; 255
    c14e:	4f e7       	ldi	r20, 0x7F	; 127
    c150:	57 e4       	ldi	r21, 0x47	; 71
    c152:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    c156:	18 16       	cp	r1, r24
    c158:	4c f5       	brge	.+82     	; 0xc1ac <main+0x830>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c15a:	69 8d       	ldd	r22, Y+25	; 0x19
    c15c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    c15e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c160:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c162:	20 e0       	ldi	r18, 0x00	; 0
    c164:	30 e0       	ldi	r19, 0x00	; 0
    c166:	40 e2       	ldi	r20, 0x20	; 32
    c168:	51 e4       	ldi	r21, 0x41	; 65
    c16a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c16e:	dc 01       	movw	r26, r24
    c170:	cb 01       	movw	r24, r22
    c172:	bc 01       	movw	r22, r24
    c174:	cd 01       	movw	r24, r26
    c176:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c17a:	dc 01       	movw	r26, r24
    c17c:	cb 01       	movw	r24, r22
    c17e:	9c 8b       	std	Y+20, r25	; 0x14
    c180:	8b 8b       	std	Y+19, r24	; 0x13
    c182:	0f c0       	rjmp	.+30     	; 0xc1a2 <main+0x826>
    c184:	88 ec       	ldi	r24, 0xC8	; 200
    c186:	90 e0       	ldi	r25, 0x00	; 0
    c188:	9a 8b       	std	Y+18, r25	; 0x12
    c18a:	89 8b       	std	Y+17, r24	; 0x11
    c18c:	89 89       	ldd	r24, Y+17	; 0x11
    c18e:	9a 89       	ldd	r25, Y+18	; 0x12
    c190:	01 97       	sbiw	r24, 0x01	; 1
    c192:	f1 f7       	brne	.-4      	; 0xc190 <main+0x814>
    c194:	9a 8b       	std	Y+18, r25	; 0x12
    c196:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c198:	8b 89       	ldd	r24, Y+19	; 0x13
    c19a:	9c 89       	ldd	r25, Y+20	; 0x14
    c19c:	01 97       	sbiw	r24, 0x01	; 1
    c19e:	9c 8b       	std	Y+20, r25	; 0x14
    c1a0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c1a2:	8b 89       	ldd	r24, Y+19	; 0x13
    c1a4:	9c 89       	ldd	r25, Y+20	; 0x14
    c1a6:	00 97       	sbiw	r24, 0x00	; 0
    c1a8:	69 f7       	brne	.-38     	; 0xc184 <main+0x808>
    c1aa:	14 c0       	rjmp	.+40     	; 0xc1d4 <main+0x858>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c1ac:	6d 89       	ldd	r22, Y+21	; 0x15
    c1ae:	7e 89       	ldd	r23, Y+22	; 0x16
    c1b0:	8f 89       	ldd	r24, Y+23	; 0x17
    c1b2:	98 8d       	ldd	r25, Y+24	; 0x18
    c1b4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c1b8:	dc 01       	movw	r26, r24
    c1ba:	cb 01       	movw	r24, r22
    c1bc:	9c 8b       	std	Y+20, r25	; 0x14
    c1be:	8b 8b       	std	Y+19, r24	; 0x13
    c1c0:	8b 89       	ldd	r24, Y+19	; 0x13
    c1c2:	9c 89       	ldd	r25, Y+20	; 0x14
    c1c4:	98 8b       	std	Y+16, r25	; 0x10
    c1c6:	8f 87       	std	Y+15, r24	; 0x0f
    c1c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    c1ca:	98 89       	ldd	r25, Y+16	; 0x10
    c1cc:	01 97       	sbiw	r24, 0x01	; 1
    c1ce:	f1 f7       	brne	.-4      	; 0xc1cc <main+0x850>
    c1d0:	98 8b       	std	Y+16, r25	; 0x10
    c1d2:	8f 87       	std	Y+15, r24	; 0x0f
		  _delay_ms(1000);
		        LCD_vidSendCommand(1);
    c1d4:	81 e0       	ldi	r24, 0x01	; 1
    c1d6:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    c1da:	8b c0       	rjmp	.+278    	; 0xc2f2 <main+0x976>
	}


    else  if((read_un_park_button==0)&&(park_flag==0)&&(un_park_flag==1))
    c1dc:	80 91 7d 03 	lds	r24, 0x037D
    c1e0:	88 23       	and	r24, r24
    c1e2:	09 f0       	breq	.+2      	; 0xc1e6 <main+0x86a>
    c1e4:	86 c0       	rjmp	.+268    	; 0xc2f2 <main+0x976>
    c1e6:	80 91 a3 03 	lds	r24, 0x03A3
    c1ea:	88 23       	and	r24, r24
    c1ec:	09 f0       	breq	.+2      	; 0xc1f0 <main+0x874>
    c1ee:	81 c0       	rjmp	.+258    	; 0xc2f2 <main+0x976>
    c1f0:	80 91 7a 03 	lds	r24, 0x037A
    c1f4:	81 30       	cpi	r24, 0x01	; 1
    c1f6:	09 f0       	breq	.+2      	; 0xc1fa <main+0x87e>
    c1f8:	7c c0       	rjmp	.+248    	; 0xc2f2 <main+0x976>
    {
    	LCD_vidSendCommand(1);
    c1fa:	81 e0       	ldi	r24, 0x01	; 1
    c1fc:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
        LCD_vidPrintInTwoLines((uint8*)"YOU ARE ALREADY UN PARKING ");
    c200:	86 e5       	ldi	r24, 0x56	; 86
    c202:	92 e0       	ldi	r25, 0x02	; 2
    c204:	0e 94 17 3a 	call	0x742e	; 0x742e <LCD_vidPrintInTwoLines>
    c208:	80 e0       	ldi	r24, 0x00	; 0
    c20a:	90 e0       	ldi	r25, 0x00	; 0
    c20c:	aa e7       	ldi	r26, 0x7A	; 122
    c20e:	b4 e4       	ldi	r27, 0x44	; 68
    c210:	8b 87       	std	Y+11, r24	; 0x0b
    c212:	9c 87       	std	Y+12, r25	; 0x0c
    c214:	ad 87       	std	Y+13, r26	; 0x0d
    c216:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    c218:	6b 85       	ldd	r22, Y+11	; 0x0b
    c21a:	7c 85       	ldd	r23, Y+12	; 0x0c
    c21c:	8d 85       	ldd	r24, Y+13	; 0x0d
    c21e:	9e 85       	ldd	r25, Y+14	; 0x0e
    c220:	20 e0       	ldi	r18, 0x00	; 0
    c222:	30 e0       	ldi	r19, 0x00	; 0
    c224:	4a ef       	ldi	r20, 0xFA	; 250
    c226:	54 e4       	ldi	r21, 0x44	; 68
    c228:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c22c:	dc 01       	movw	r26, r24
    c22e:	cb 01       	movw	r24, r22
    c230:	8f 83       	std	Y+7, r24	; 0x07
    c232:	98 87       	std	Y+8, r25	; 0x08
    c234:	a9 87       	std	Y+9, r26	; 0x09
    c236:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    c238:	6f 81       	ldd	r22, Y+7	; 0x07
    c23a:	78 85       	ldd	r23, Y+8	; 0x08
    c23c:	89 85       	ldd	r24, Y+9	; 0x09
    c23e:	9a 85       	ldd	r25, Y+10	; 0x0a
    c240:	20 e0       	ldi	r18, 0x00	; 0
    c242:	30 e0       	ldi	r19, 0x00	; 0
    c244:	40 e8       	ldi	r20, 0x80	; 128
    c246:	5f e3       	ldi	r21, 0x3F	; 63
    c248:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    c24c:	88 23       	and	r24, r24
    c24e:	2c f4       	brge	.+10     	; 0xc25a <main+0x8de>
		__ticks = 1;
    c250:	81 e0       	ldi	r24, 0x01	; 1
    c252:	90 e0       	ldi	r25, 0x00	; 0
    c254:	9e 83       	std	Y+6, r25	; 0x06
    c256:	8d 83       	std	Y+5, r24	; 0x05
    c258:	3f c0       	rjmp	.+126    	; 0xc2d8 <main+0x95c>
	else if (__tmp > 65535)
    c25a:	6f 81       	ldd	r22, Y+7	; 0x07
    c25c:	78 85       	ldd	r23, Y+8	; 0x08
    c25e:	89 85       	ldd	r24, Y+9	; 0x09
    c260:	9a 85       	ldd	r25, Y+10	; 0x0a
    c262:	20 e0       	ldi	r18, 0x00	; 0
    c264:	3f ef       	ldi	r19, 0xFF	; 255
    c266:	4f e7       	ldi	r20, 0x7F	; 127
    c268:	57 e4       	ldi	r21, 0x47	; 71
    c26a:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    c26e:	18 16       	cp	r1, r24
    c270:	4c f5       	brge	.+82     	; 0xc2c4 <main+0x948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c272:	6b 85       	ldd	r22, Y+11	; 0x0b
    c274:	7c 85       	ldd	r23, Y+12	; 0x0c
    c276:	8d 85       	ldd	r24, Y+13	; 0x0d
    c278:	9e 85       	ldd	r25, Y+14	; 0x0e
    c27a:	20 e0       	ldi	r18, 0x00	; 0
    c27c:	30 e0       	ldi	r19, 0x00	; 0
    c27e:	40 e2       	ldi	r20, 0x20	; 32
    c280:	51 e4       	ldi	r21, 0x41	; 65
    c282:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c286:	dc 01       	movw	r26, r24
    c288:	cb 01       	movw	r24, r22
    c28a:	bc 01       	movw	r22, r24
    c28c:	cd 01       	movw	r24, r26
    c28e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c292:	dc 01       	movw	r26, r24
    c294:	cb 01       	movw	r24, r22
    c296:	9e 83       	std	Y+6, r25	; 0x06
    c298:	8d 83       	std	Y+5, r24	; 0x05
    c29a:	0f c0       	rjmp	.+30     	; 0xc2ba <main+0x93e>
    c29c:	88 ec       	ldi	r24, 0xC8	; 200
    c29e:	90 e0       	ldi	r25, 0x00	; 0
    c2a0:	9c 83       	std	Y+4, r25	; 0x04
    c2a2:	8b 83       	std	Y+3, r24	; 0x03
    c2a4:	8b 81       	ldd	r24, Y+3	; 0x03
    c2a6:	9c 81       	ldd	r25, Y+4	; 0x04
    c2a8:	01 97       	sbiw	r24, 0x01	; 1
    c2aa:	f1 f7       	brne	.-4      	; 0xc2a8 <main+0x92c>
    c2ac:	9c 83       	std	Y+4, r25	; 0x04
    c2ae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c2b0:	8d 81       	ldd	r24, Y+5	; 0x05
    c2b2:	9e 81       	ldd	r25, Y+6	; 0x06
    c2b4:	01 97       	sbiw	r24, 0x01	; 1
    c2b6:	9e 83       	std	Y+6, r25	; 0x06
    c2b8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c2ba:	8d 81       	ldd	r24, Y+5	; 0x05
    c2bc:	9e 81       	ldd	r25, Y+6	; 0x06
    c2be:	00 97       	sbiw	r24, 0x00	; 0
    c2c0:	69 f7       	brne	.-38     	; 0xc29c <main+0x920>
    c2c2:	14 c0       	rjmp	.+40     	; 0xc2ec <main+0x970>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c2c4:	6f 81       	ldd	r22, Y+7	; 0x07
    c2c6:	78 85       	ldd	r23, Y+8	; 0x08
    c2c8:	89 85       	ldd	r24, Y+9	; 0x09
    c2ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    c2cc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c2d0:	dc 01       	movw	r26, r24
    c2d2:	cb 01       	movw	r24, r22
    c2d4:	9e 83       	std	Y+6, r25	; 0x06
    c2d6:	8d 83       	std	Y+5, r24	; 0x05
    c2d8:	8d 81       	ldd	r24, Y+5	; 0x05
    c2da:	9e 81       	ldd	r25, Y+6	; 0x06
    c2dc:	9a 83       	std	Y+2, r25	; 0x02
    c2de:	89 83       	std	Y+1, r24	; 0x01
    c2e0:	89 81       	ldd	r24, Y+1	; 0x01
    c2e2:	9a 81       	ldd	r25, Y+2	; 0x02
    c2e4:	01 97       	sbiw	r24, 0x01	; 1
    c2e6:	f1 f7       	brne	.-4      	; 0xc2e4 <main+0x968>
    c2e8:	9a 83       	std	Y+2, r25	; 0x02
    c2ea:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(1000);
        LCD_vidSendCommand(1);
    c2ec:	81 e0       	ldi	r24, 0x01	; 1
    c2ee:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    else
    {

    }

	LCD_vidSendCommand(1);
    c2f2:	81 e0       	ldi	r24, 0x01	; 1
    c2f4:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <LCD_vidSendCommand>
    c2f8:	50 cb       	rjmp	.-2400   	; 0xb99a <main+0x1e>

0000c2fa <func_blue>:


}

void func_blue(void)
{
    c2fa:	df 93       	push	r29
    c2fc:	cf 93       	push	r28
    c2fe:	cd b7       	in	r28, 0x3d	; 61
    c300:	de b7       	in	r29, 0x3e	; 62
    c302:	2f 97       	sbiw	r28, 0x0f	; 15
    c304:	0f b6       	in	r0, 0x3f	; 63
    c306:	f8 94       	cli
    c308:	de bf       	out	0x3e, r29	; 62
    c30a:	0f be       	out	0x3f, r0	; 63
    c30c:	cd bf       	out	0x3d, r28	; 61
	uint8 res=0;
    c30e:	1f 86       	std	Y+15, r1	; 0x0f
	USART_Init();
    c310:	0e 94 02 14 	call	0x2804	; 0x2804 <USART_Init>


		res=USART_Receive();
    c314:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <USART_Receive>
    c318:	8f 87       	std	Y+15, r24	; 0x0f
		LCD_vidWriteCharacter(res);
    c31a:	8f 85       	ldd	r24, Y+15	; 0x0f
    c31c:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <LCD_vidWriteCharacter>
    c320:	80 e0       	ldi	r24, 0x00	; 0
    c322:	90 e0       	ldi	r25, 0x00	; 0
    c324:	aa ef       	ldi	r26, 0xFA	; 250
    c326:	b4 e4       	ldi	r27, 0x44	; 68
    c328:	8b 87       	std	Y+11, r24	; 0x0b
    c32a:	9c 87       	std	Y+12, r25	; 0x0c
    c32c:	ad 87       	std	Y+13, r26	; 0x0d
    c32e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    c330:	6b 85       	ldd	r22, Y+11	; 0x0b
    c332:	7c 85       	ldd	r23, Y+12	; 0x0c
    c334:	8d 85       	ldd	r24, Y+13	; 0x0d
    c336:	9e 85       	ldd	r25, Y+14	; 0x0e
    c338:	20 e0       	ldi	r18, 0x00	; 0
    c33a:	30 e0       	ldi	r19, 0x00	; 0
    c33c:	4a ef       	ldi	r20, 0xFA	; 250
    c33e:	54 e4       	ldi	r21, 0x44	; 68
    c340:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c344:	dc 01       	movw	r26, r24
    c346:	cb 01       	movw	r24, r22
    c348:	8f 83       	std	Y+7, r24	; 0x07
    c34a:	98 87       	std	Y+8, r25	; 0x08
    c34c:	a9 87       	std	Y+9, r26	; 0x09
    c34e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    c350:	6f 81       	ldd	r22, Y+7	; 0x07
    c352:	78 85       	ldd	r23, Y+8	; 0x08
    c354:	89 85       	ldd	r24, Y+9	; 0x09
    c356:	9a 85       	ldd	r25, Y+10	; 0x0a
    c358:	20 e0       	ldi	r18, 0x00	; 0
    c35a:	30 e0       	ldi	r19, 0x00	; 0
    c35c:	40 e8       	ldi	r20, 0x80	; 128
    c35e:	5f e3       	ldi	r21, 0x3F	; 63
    c360:	0e 94 a7 11 	call	0x234e	; 0x234e <__ltsf2>
    c364:	88 23       	and	r24, r24
    c366:	2c f4       	brge	.+10     	; 0xc372 <func_blue+0x78>
		__ticks = 1;
    c368:	81 e0       	ldi	r24, 0x01	; 1
    c36a:	90 e0       	ldi	r25, 0x00	; 0
    c36c:	9e 83       	std	Y+6, r25	; 0x06
    c36e:	8d 83       	std	Y+5, r24	; 0x05
    c370:	3f c0       	rjmp	.+126    	; 0xc3f0 <func_blue+0xf6>
	else if (__tmp > 65535)
    c372:	6f 81       	ldd	r22, Y+7	; 0x07
    c374:	78 85       	ldd	r23, Y+8	; 0x08
    c376:	89 85       	ldd	r24, Y+9	; 0x09
    c378:	9a 85       	ldd	r25, Y+10	; 0x0a
    c37a:	20 e0       	ldi	r18, 0x00	; 0
    c37c:	3f ef       	ldi	r19, 0xFF	; 255
    c37e:	4f e7       	ldi	r20, 0x7F	; 127
    c380:	57 e4       	ldi	r21, 0x47	; 71
    c382:	0e 94 47 11 	call	0x228e	; 0x228e <__gtsf2>
    c386:	18 16       	cp	r1, r24
    c388:	4c f5       	brge	.+82     	; 0xc3dc <func_blue+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    c38a:	6b 85       	ldd	r22, Y+11	; 0x0b
    c38c:	7c 85       	ldd	r23, Y+12	; 0x0c
    c38e:	8d 85       	ldd	r24, Y+13	; 0x0d
    c390:	9e 85       	ldd	r25, Y+14	; 0x0e
    c392:	20 e0       	ldi	r18, 0x00	; 0
    c394:	30 e0       	ldi	r19, 0x00	; 0
    c396:	40 e2       	ldi	r20, 0x20	; 32
    c398:	51 e4       	ldi	r21, 0x41	; 65
    c39a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__mulsf3>
    c39e:	dc 01       	movw	r26, r24
    c3a0:	cb 01       	movw	r24, r22
    c3a2:	bc 01       	movw	r22, r24
    c3a4:	cd 01       	movw	r24, r26
    c3a6:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c3aa:	dc 01       	movw	r26, r24
    c3ac:	cb 01       	movw	r24, r22
    c3ae:	9e 83       	std	Y+6, r25	; 0x06
    c3b0:	8d 83       	std	Y+5, r24	; 0x05
    c3b2:	0f c0       	rjmp	.+30     	; 0xc3d2 <func_blue+0xd8>
    c3b4:	88 ec       	ldi	r24, 0xC8	; 200
    c3b6:	90 e0       	ldi	r25, 0x00	; 0
    c3b8:	9c 83       	std	Y+4, r25	; 0x04
    c3ba:	8b 83       	std	Y+3, r24	; 0x03
    c3bc:	8b 81       	ldd	r24, Y+3	; 0x03
    c3be:	9c 81       	ldd	r25, Y+4	; 0x04
    c3c0:	01 97       	sbiw	r24, 0x01	; 1
    c3c2:	f1 f7       	brne	.-4      	; 0xc3c0 <func_blue+0xc6>
    c3c4:	9c 83       	std	Y+4, r25	; 0x04
    c3c6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    c3c8:	8d 81       	ldd	r24, Y+5	; 0x05
    c3ca:	9e 81       	ldd	r25, Y+6	; 0x06
    c3cc:	01 97       	sbiw	r24, 0x01	; 1
    c3ce:	9e 83       	std	Y+6, r25	; 0x06
    c3d0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    c3d2:	8d 81       	ldd	r24, Y+5	; 0x05
    c3d4:	9e 81       	ldd	r25, Y+6	; 0x06
    c3d6:	00 97       	sbiw	r24, 0x00	; 0
    c3d8:	69 f7       	brne	.-38     	; 0xc3b4 <func_blue+0xba>
    c3da:	14 c0       	rjmp	.+40     	; 0xc404 <func_blue+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    c3dc:	6f 81       	ldd	r22, Y+7	; 0x07
    c3de:	78 85       	ldd	r23, Y+8	; 0x08
    c3e0:	89 85       	ldd	r24, Y+9	; 0x09
    c3e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    c3e4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__fixunssfsi>
    c3e8:	dc 01       	movw	r26, r24
    c3ea:	cb 01       	movw	r24, r22
    c3ec:	9e 83       	std	Y+6, r25	; 0x06
    c3ee:	8d 83       	std	Y+5, r24	; 0x05
    c3f0:	8d 81       	ldd	r24, Y+5	; 0x05
    c3f2:	9e 81       	ldd	r25, Y+6	; 0x06
    c3f4:	9a 83       	std	Y+2, r25	; 0x02
    c3f6:	89 83       	std	Y+1, r24	; 0x01
    c3f8:	89 81       	ldd	r24, Y+1	; 0x01
    c3fa:	9a 81       	ldd	r25, Y+2	; 0x02
    c3fc:	01 97       	sbiw	r24, 0x01	; 1
    c3fe:	f1 f7       	brne	.-4      	; 0xc3fc <func_blue+0x102>
    c400:	9a 83       	std	Y+2, r25	; 0x02
    c402:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2000);
		if(res=='a')
    c404:	8f 85       	ldd	r24, Y+15	; 0x0f
    c406:	81 36       	cpi	r24, 0x61	; 97
    c408:	19 f4       	brne	.+6      	; 0xc410 <func_blue+0x116>
		{
			read_park_button=0;
    c40a:	10 92 7c 03 	sts	0x037C, r1
    c40e:	05 c0       	rjmp	.+10     	; 0xc41a <func_blue+0x120>

		}
		else if(res=='b')
    c410:	8f 85       	ldd	r24, Y+15	; 0x0f
    c412:	82 36       	cpi	r24, 0x62	; 98
    c414:	11 f4       	brne	.+4      	; 0xc41a <func_blue+0x120>
		{
		read_un_park_button=0;
    c416:	10 92 7d 03 	sts	0x037D, r1

		}


}
    c41a:	2f 96       	adiw	r28, 0x0f	; 15
    c41c:	0f b6       	in	r0, 0x3f	; 63
    c41e:	f8 94       	cli
    c420:	de bf       	out	0x3e, r29	; 62
    c422:	0f be       	out	0x3f, r0	; 63
    c424:	cd bf       	out	0x3d, r28	; 61
    c426:	cf 91       	pop	r28
    c428:	df 91       	pop	r29
    c42a:	08 95       	ret

0000c42c <__udivmodsi4>:
    c42c:	a1 e2       	ldi	r26, 0x21	; 33
    c42e:	1a 2e       	mov	r1, r26
    c430:	aa 1b       	sub	r26, r26
    c432:	bb 1b       	sub	r27, r27
    c434:	fd 01       	movw	r30, r26
    c436:	0d c0       	rjmp	.+26     	; 0xc452 <__udivmodsi4_ep>

0000c438 <__udivmodsi4_loop>:
    c438:	aa 1f       	adc	r26, r26
    c43a:	bb 1f       	adc	r27, r27
    c43c:	ee 1f       	adc	r30, r30
    c43e:	ff 1f       	adc	r31, r31
    c440:	a2 17       	cp	r26, r18
    c442:	b3 07       	cpc	r27, r19
    c444:	e4 07       	cpc	r30, r20
    c446:	f5 07       	cpc	r31, r21
    c448:	20 f0       	brcs	.+8      	; 0xc452 <__udivmodsi4_ep>
    c44a:	a2 1b       	sub	r26, r18
    c44c:	b3 0b       	sbc	r27, r19
    c44e:	e4 0b       	sbc	r30, r20
    c450:	f5 0b       	sbc	r31, r21

0000c452 <__udivmodsi4_ep>:
    c452:	66 1f       	adc	r22, r22
    c454:	77 1f       	adc	r23, r23
    c456:	88 1f       	adc	r24, r24
    c458:	99 1f       	adc	r25, r25
    c45a:	1a 94       	dec	r1
    c45c:	69 f7       	brne	.-38     	; 0xc438 <__udivmodsi4_loop>
    c45e:	60 95       	com	r22
    c460:	70 95       	com	r23
    c462:	80 95       	com	r24
    c464:	90 95       	com	r25
    c466:	9b 01       	movw	r18, r22
    c468:	ac 01       	movw	r20, r24
    c46a:	bd 01       	movw	r22, r26
    c46c:	cf 01       	movw	r24, r30
    c46e:	08 95       	ret

0000c470 <__mulsi3>:
    c470:	62 9f       	mul	r22, r18
    c472:	d0 01       	movw	r26, r0
    c474:	73 9f       	mul	r23, r19
    c476:	f0 01       	movw	r30, r0
    c478:	82 9f       	mul	r24, r18
    c47a:	e0 0d       	add	r30, r0
    c47c:	f1 1d       	adc	r31, r1
    c47e:	64 9f       	mul	r22, r20
    c480:	e0 0d       	add	r30, r0
    c482:	f1 1d       	adc	r31, r1
    c484:	92 9f       	mul	r25, r18
    c486:	f0 0d       	add	r31, r0
    c488:	83 9f       	mul	r24, r19
    c48a:	f0 0d       	add	r31, r0
    c48c:	74 9f       	mul	r23, r20
    c48e:	f0 0d       	add	r31, r0
    c490:	65 9f       	mul	r22, r21
    c492:	f0 0d       	add	r31, r0
    c494:	99 27       	eor	r25, r25
    c496:	72 9f       	mul	r23, r18
    c498:	b0 0d       	add	r27, r0
    c49a:	e1 1d       	adc	r30, r1
    c49c:	f9 1f       	adc	r31, r25
    c49e:	63 9f       	mul	r22, r19
    c4a0:	b0 0d       	add	r27, r0
    c4a2:	e1 1d       	adc	r30, r1
    c4a4:	f9 1f       	adc	r31, r25
    c4a6:	bd 01       	movw	r22, r26
    c4a8:	cf 01       	movw	r24, r30
    c4aa:	11 24       	eor	r1, r1
    c4ac:	08 95       	ret

0000c4ae <__prologue_saves__>:
    c4ae:	2f 92       	push	r2
    c4b0:	3f 92       	push	r3
    c4b2:	4f 92       	push	r4
    c4b4:	5f 92       	push	r5
    c4b6:	6f 92       	push	r6
    c4b8:	7f 92       	push	r7
    c4ba:	8f 92       	push	r8
    c4bc:	9f 92       	push	r9
    c4be:	af 92       	push	r10
    c4c0:	bf 92       	push	r11
    c4c2:	cf 92       	push	r12
    c4c4:	df 92       	push	r13
    c4c6:	ef 92       	push	r14
    c4c8:	ff 92       	push	r15
    c4ca:	0f 93       	push	r16
    c4cc:	1f 93       	push	r17
    c4ce:	cf 93       	push	r28
    c4d0:	df 93       	push	r29
    c4d2:	cd b7       	in	r28, 0x3d	; 61
    c4d4:	de b7       	in	r29, 0x3e	; 62
    c4d6:	ca 1b       	sub	r28, r26
    c4d8:	db 0b       	sbc	r29, r27
    c4da:	0f b6       	in	r0, 0x3f	; 63
    c4dc:	f8 94       	cli
    c4de:	de bf       	out	0x3e, r29	; 62
    c4e0:	0f be       	out	0x3f, r0	; 63
    c4e2:	cd bf       	out	0x3d, r28	; 61
    c4e4:	09 94       	ijmp

0000c4e6 <__epilogue_restores__>:
    c4e6:	2a 88       	ldd	r2, Y+18	; 0x12
    c4e8:	39 88       	ldd	r3, Y+17	; 0x11
    c4ea:	48 88       	ldd	r4, Y+16	; 0x10
    c4ec:	5f 84       	ldd	r5, Y+15	; 0x0f
    c4ee:	6e 84       	ldd	r6, Y+14	; 0x0e
    c4f0:	7d 84       	ldd	r7, Y+13	; 0x0d
    c4f2:	8c 84       	ldd	r8, Y+12	; 0x0c
    c4f4:	9b 84       	ldd	r9, Y+11	; 0x0b
    c4f6:	aa 84       	ldd	r10, Y+10	; 0x0a
    c4f8:	b9 84       	ldd	r11, Y+9	; 0x09
    c4fa:	c8 84       	ldd	r12, Y+8	; 0x08
    c4fc:	df 80       	ldd	r13, Y+7	; 0x07
    c4fe:	ee 80       	ldd	r14, Y+6	; 0x06
    c500:	fd 80       	ldd	r15, Y+5	; 0x05
    c502:	0c 81       	ldd	r16, Y+4	; 0x04
    c504:	1b 81       	ldd	r17, Y+3	; 0x03
    c506:	aa 81       	ldd	r26, Y+2	; 0x02
    c508:	b9 81       	ldd	r27, Y+1	; 0x01
    c50a:	ce 0f       	add	r28, r30
    c50c:	d1 1d       	adc	r29, r1
    c50e:	0f b6       	in	r0, 0x3f	; 63
    c510:	f8 94       	cli
    c512:	de bf       	out	0x3e, r29	; 62
    c514:	0f be       	out	0x3f, r0	; 63
    c516:	cd bf       	out	0x3d, r28	; 61
    c518:	ed 01       	movw	r28, r26
    c51a:	08 95       	ret

0000c51c <_exit>:
    c51c:	f8 94       	cli

0000c51e <__stop_program>:
    c51e:	ff cf       	rjmp	.-2      	; 0xc51e <__stop_program>
